// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/MapInstanceProto.proto

#ifndef PROTOBUF_CharLogin_2fMapInstanceProto_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fMapInstanceProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CharLogin/CharBaseInfo.pb.h"
#include "Map/SynchPath.pb.h"
// @@protoc_insertion_point(includes)

namespace MapInstanceProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

class ReqCreateInstance;
class RetCreateInstance;
class ReqInstanceQuit;
class RetInstanceQuit;
class SimInstanceUpdate;
class SimInstanceEnd;
class SimInstanceAward;
class ReqInstanceSweep;
class RetInstanceSweep;
class ReqInstanceSweepSpeedUp;
class RetInstanceSweepSpeedUp;
class OpenInstanceSweep;
class SimInstanceSweepEnd;
class ReqInstanceReset;
class RetInstanceReset;
class ReqResetAllInstances;
class RetResetAllInstances;
class ReqWSCreateInstance;
class ReqDeleteInstance;
class ReqGroupInstanceReady;
class RetGroupInstanceReady;
class ReqGroupEnterInstance;
class RetGroupEnterInstance;
class ReqMemberFlop;
class GMToClientMemberFlop;
class RetMemberFlop;
class ReqGetInstanceAward;
class ReqEnterInstance;
class ToGTGetInstanceTeamID;
class RetGetInstanceTeamID;
class InstanceTeamInfo;
class ToClientLeaveInstance;
class ToGTAwardInfo;
class ClientReqCreateInstance;
class GMReqWSCreateInstance;
class AckToGMCreateInstance;
class ClientReqWorldArenaInfo;
class ClientReqWarReport;
class ReqToWorldGetArenaInfo;
class OtherPlayerArenaInfo;
class ReqToWordGetWarReport;
class ReqToGameGetArenaInfo;
class ArenaHistoryReward;
class ReqArenaHistoryReward;
class RspArenaHistoryReward;
class WarReport;
class CancelAreanCDTime;
class ReturnCancelAreanCDTime;
class AddChallengeTimes;
class ReturnAddChallengeTimes;
class ClientReqAreanReward;
class GMToClientCompeteOver;
class SysRankingReward;
class ClientRegRankingName;
class WSToClientRankingName;
class ClientReqGroupInfo;
class GMToClentGroupInfo;
class GroupInfo;
class ClientReqAllTeamInfo;
class WSToClentAllTeamInfo;
class AllTeamInfo;
class ClientReqJoinTeam;
class WSToClentReqJoinTeam;
class TeammemberInfo;
class ClientReqQuickJoinTeam;
class ClientReqCreateTeam;
class WSToClentReqCreateTeam;
class ClientReqTeamReady;
class WSToClientReqTeamReady;
class WSToClientSimReady;
class ClientSimFindTeamMember;
class WSToClientFindTeamMember;
class ClientReqKickMember;
class WSToClientKickMember;
class WSToClientSimKick;
class ClientReqEnterTeamMap;
class WSToClientEnterTeamMap;
class WSToClientSimInstance;
class GMToClientSimHarmRank;
class HarmRank;
class WSToClientSimOnline;
class ClientReqExitTeam;
class WSToClientExitTeam;
class WSToClientSimExitTeam;
class GMToWSDelTeam;
class GMToClientLottery;
class SimSweepInstanceAward;
class SysInstanceRanking;
class AckInstanceRanking;
class RetInstanceRanking;
class GetInstanceRanking;
class ReturnInstanceRanking;
class GroupInstance;
class InstanceGroupList;
class ReqCostByGroupInstance;
class RetCostByGroupInstance;
class ReqArenaRefresh;
class RetArenaRefresh;
class ReqWSArenaChallPlayer;
class RetWSArenaChallPlayer;
class ReqWSArenaChallRank;
class GMToClientSweepAllInstance;
class EliteInstance;
class InstanceEliteList;
class CauchemarInstance;
class InstanceCauchemarList;
class ReqInviteMemberList;
class RetInviteMemberList;
class InviteMemberList;
class ReqInviteMember;
class RetInviteMember;
class RetInvitedMember;
class AckChallengeInfo;
class ReqLayerRank;
class AckLayerRank;
class AckSweep;
class ACkEndSweep;
class ReqExchange;
class AckExchange;
class PrizeItem;
class PassChallenge;
class GatherBox;
class AckGatherBox;
class AdvancedInstance;
class InstanceAdvancedList;
class ClientReqTeamChanceReady;
class WSToClientReqTeamChanceReady;
class WSToClientSimChanceReady;
class CommonInstanceInfo;
class CommonInstanceInfoList;
class VipInstance;
class VipInstanceList;
class ExpInstanceInfo;
class ExpInstanceInfoList;
class MoneyInstanceInfo;
class MoneyInstanceInfoList;

// ===================================================================

class ReqCreateInstance : public ::google::protobuf::Message {
 public:
  ReqCreateInstance();
  virtual ~ReqCreateInstance();

  ReqCreateInstance(const ReqCreateInstance& from);

  inline ReqCreateInstance& operator=(const ReqCreateInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCreateInstance& default_instance();

  void Swap(ReqCreateInstance* other);

  // implements Message ----------------------------------------------

  ReqCreateInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCreateInstance& from);
  void MergeFrom(const ReqCreateInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // required int32 InstanceType = 2;
  inline bool has_instancetype() const;
  inline void clear_instancetype();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 instancetype() const;
  inline void set_instancetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqCreateInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_instancetype();
  inline void clear_has_instancetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;
  ::google::protobuf::int32 instancetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqCreateInstance* default_instance_;
};
// -------------------------------------------------------------------

class RetCreateInstance : public ::google::protobuf::Message {
 public:
  RetCreateInstance();
  virtual ~RetCreateInstance();

  RetCreateInstance(const RetCreateInstance& from);

  inline RetCreateInstance& operator=(const RetCreateInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetCreateInstance& default_instance();

  void Swap(RetCreateInstance* other);

  // implements Message ----------------------------------------------

  RetCreateInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetCreateInstance& from);
  void MergeFrom(const RetCreateInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwErrorCode = 1;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // optional int64 NewInstanceId = 2;
  inline bool has_newinstanceid() const;
  inline void clear_newinstanceid();
  static const int kNewInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int64 newinstanceid() const;
  inline void set_newinstanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetCreateInstance)
 private:
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();
  inline void set_has_newinstanceid();
  inline void clear_has_newinstanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 newinstanceid_;
  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetCreateInstance* default_instance_;
};
// -------------------------------------------------------------------

class ReqInstanceQuit : public ::google::protobuf::Message {
 public:
  ReqInstanceQuit();
  virtual ~ReqInstanceQuit();

  ReqInstanceQuit(const ReqInstanceQuit& from);

  inline ReqInstanceQuit& operator=(const ReqInstanceQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInstanceQuit& default_instance();

  void Swap(ReqInstanceQuit* other);

  // implements Message ----------------------------------------------

  ReqInstanceQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInstanceQuit& from);
  void MergeFrom(const ReqInstanceQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqInstanceQuit)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInstanceQuit* default_instance_;
};
// -------------------------------------------------------------------

class RetInstanceQuit : public ::google::protobuf::Message {
 public:
  RetInstanceQuit();
  virtual ~RetInstanceQuit();

  RetInstanceQuit(const RetInstanceQuit& from);

  inline RetInstanceQuit& operator=(const RetInstanceQuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInstanceQuit& default_instance();

  void Swap(RetInstanceQuit* other);

  // implements Message ----------------------------------------------

  RetInstanceQuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInstanceQuit& from);
  void MergeFrom(const RetInstanceQuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInstanceQuit)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInstanceQuit* default_instance_;
};
// -------------------------------------------------------------------

class SimInstanceUpdate : public ::google::protobuf::Message {
 public:
  SimInstanceUpdate();
  virtual ~SimInstanceUpdate();

  SimInstanceUpdate(const SimInstanceUpdate& from);

  inline SimInstanceUpdate& operator=(const SimInstanceUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimInstanceUpdate& default_instance();

  void Swap(SimInstanceUpdate* other);

  // implements Message ----------------------------------------------

  SimInstanceUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimInstanceUpdate& from);
  void MergeFrom(const SimInstanceUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 remainMonsterID = 1;
  inline int remainmonsterid_size() const;
  inline void clear_remainmonsterid();
  static const int kRemainMonsterIDFieldNumber = 1;
  inline ::google::protobuf::int32 remainmonsterid(int index) const;
  inline void set_remainmonsterid(int index, ::google::protobuf::int32 value);
  inline void add_remainmonsterid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remainmonsterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remainmonsterid();

  // repeated int32 remainMonsterNum = 2;
  inline int remainmonsternum_size() const;
  inline void clear_remainmonsternum();
  static const int kRemainMonsterNumFieldNumber = 2;
  inline ::google::protobuf::int32 remainmonsternum(int index) const;
  inline void set_remainmonsternum(int index, ::google::protobuf::int32 value);
  inline void add_remainmonsternum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remainmonsternum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remainmonsternum();

  // optional double remaintime = 3;
  inline bool has_remaintime() const;
  inline void clear_remaintime();
  static const int kRemaintimeFieldNumber = 3;
  inline double remaintime() const;
  inline void set_remaintime(double value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SimInstanceUpdate)
 private:
  inline void set_has_remaintime();
  inline void clear_has_remaintime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remainmonsterid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remainmonsternum_;
  double remaintime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SimInstanceUpdate* default_instance_;
};
// -------------------------------------------------------------------

class SimInstanceEnd : public ::google::protobuf::Message {
 public:
  SimInstanceEnd();
  virtual ~SimInstanceEnd();

  SimInstanceEnd(const SimInstanceEnd& from);

  inline SimInstanceEnd& operator=(const SimInstanceEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimInstanceEnd& default_instance();

  void Swap(SimInstanceEnd* other);

  // implements Message ----------------------------------------------

  SimInstanceEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimInstanceEnd& from);
  void MergeFrom(const SimInstanceEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 IsSuccess = 2;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIsSuccessFieldNumber = 2;
  inline ::google::protobuf::int32 issuccess() const;
  inline void set_issuccess(::google::protobuf::int32 value);

  // optional .MapInstanceProto.SimInstanceAward Awards = 3;
  inline bool has_awards() const;
  inline void clear_awards();
  static const int kAwardsFieldNumber = 3;
  inline const ::MapInstanceProto::SimInstanceAward& awards() const;
  inline ::MapInstanceProto::SimInstanceAward* mutable_awards();
  inline ::MapInstanceProto::SimInstanceAward* release_awards();
  inline void set_allocated_awards(::MapInstanceProto::SimInstanceAward* awards);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SimInstanceEnd)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_awards();
  inline void clear_has_awards();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 issuccess_;
  ::MapInstanceProto::SimInstanceAward* awards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SimInstanceEnd* default_instance_;
};
// -------------------------------------------------------------------

class SimInstanceAward : public ::google::protobuf::Message {
 public:
  SimInstanceAward();
  virtual ~SimInstanceAward();

  SimInstanceAward(const SimInstanceAward& from);

  inline SimInstanceAward& operator=(const SimInstanceAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimInstanceAward& default_instance();

  void Swap(SimInstanceAward* other);

  // implements Message ----------------------------------------------

  SimInstanceAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimInstanceAward& from);
  void MergeFrom(const SimInstanceAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rewardStar = 1;
  inline bool has_rewardstar() const;
  inline void clear_rewardstar();
  static const int kRewardStarFieldNumber = 1;
  inline ::google::protobuf::int32 rewardstar() const;
  inline void set_rewardstar(::google::protobuf::int32 value);

  // optional int32 elapsedTime = 2;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 2;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);

  // optional int32 barrierPoints = 3;
  inline bool has_barrierpoints() const;
  inline void clear_barrierpoints();
  static const int kBarrierPointsFieldNumber = 3;
  inline ::google::protobuf::int32 barrierpoints() const;
  inline void set_barrierpoints(::google::protobuf::int32 value);

  // optional int32 personalPower = 4;
  inline bool has_personalpower() const;
  inline void clear_personalpower();
  static const int kPersonalPowerFieldNumber = 4;
  inline ::google::protobuf::int32 personalpower() const;
  inline void set_personalpower(::google::protobuf::int32 value);

  // optional int32 groupPower = 5;
  inline bool has_grouppower() const;
  inline void clear_grouppower();
  static const int kGroupPowerFieldNumber = 5;
  inline ::google::protobuf::int32 grouppower() const;
  inline void set_grouppower(::google::protobuf::int32 value);

  // optional int32 awardMoney = 6;
  inline bool has_awardmoney() const;
  inline void clear_awardmoney();
  static const int kAwardMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 awardmoney() const;
  inline void set_awardmoney(::google::protobuf::int32 value);

  // optional int32 awardExp = 7;
  inline bool has_awardexp() const;
  inline void clear_awardexp();
  static const int kAwardExpFieldNumber = 7;
  inline ::google::protobuf::int32 awardexp() const;
  inline void set_awardexp(::google::protobuf::int32 value);

  // optional int32 awardInfuriate = 8;
  inline bool has_awardinfuriate() const;
  inline void clear_awardinfuriate();
  static const int kAwardInfuriateFieldNumber = 8;
  inline ::google::protobuf::int32 awardinfuriate() const;
  inline void set_awardinfuriate(::google::protobuf::int32 value);

  // repeated .CharLogin.ClientItemInfo items = 9;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 9;
  inline const ::CharLogin::ClientItemInfo& items(int index) const;
  inline ::CharLogin::ClientItemInfo* mutable_items(int index);
  inline ::CharLogin::ClientItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SimInstanceAward)
 private:
  inline void set_has_rewardstar();
  inline void clear_has_rewardstar();
  inline void set_has_elapsedtime();
  inline void clear_has_elapsedtime();
  inline void set_has_barrierpoints();
  inline void clear_has_barrierpoints();
  inline void set_has_personalpower();
  inline void clear_has_personalpower();
  inline void set_has_grouppower();
  inline void clear_has_grouppower();
  inline void set_has_awardmoney();
  inline void clear_has_awardmoney();
  inline void set_has_awardexp();
  inline void clear_has_awardexp();
  inline void set_has_awardinfuriate();
  inline void clear_has_awardinfuriate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rewardstar_;
  ::google::protobuf::int32 elapsedtime_;
  ::google::protobuf::int32 barrierpoints_;
  ::google::protobuf::int32 personalpower_;
  ::google::protobuf::int32 grouppower_;
  ::google::protobuf::int32 awardmoney_;
  ::google::protobuf::int32 awardexp_;
  ::google::protobuf::int32 awardinfuriate_;
  ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SimInstanceAward* default_instance_;
};
// -------------------------------------------------------------------

class ReqInstanceSweep : public ::google::protobuf::Message {
 public:
  ReqInstanceSweep();
  virtual ~ReqInstanceSweep();

  ReqInstanceSweep(const ReqInstanceSweep& from);

  inline ReqInstanceSweep& operator=(const ReqInstanceSweep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInstanceSweep& default_instance();

  void Swap(ReqInstanceSweep* other);

  // implements Message ----------------------------------------------

  ReqInstanceSweep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInstanceSweep& from);
  void MergeFrom(const ReqInstanceSweep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqInstanceSweep)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInstanceSweep* default_instance_;
};
// -------------------------------------------------------------------

class RetInstanceSweep : public ::google::protobuf::Message {
 public:
  RetInstanceSweep();
  virtual ~RetInstanceSweep();

  RetInstanceSweep(const RetInstanceSweep& from);

  inline RetInstanceSweep& operator=(const RetInstanceSweep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInstanceSweep& default_instance();

  void Swap(RetInstanceSweep* other);

  // implements Message ----------------------------------------------

  RetInstanceSweep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInstanceSweep& from);
  void MergeFrom(const RetInstanceSweep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwErrorCode = 1;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // required int32 dwRemainTime = 2;
  inline bool has_dwremaintime() const;
  inline void clear_dwremaintime();
  static const int kDwRemainTimeFieldNumber = 2;
  inline ::google::protobuf::int32 dwremaintime() const;
  inline void set_dwremaintime(::google::protobuf::int32 value);

  // required int32 InstanceId = 3;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 3;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInstanceSweep)
 private:
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();
  inline void set_has_dwremaintime();
  inline void clear_has_dwremaintime();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwerrorcode_;
  ::google::protobuf::int32 dwremaintime_;
  ::google::protobuf::int32 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInstanceSweep* default_instance_;
};
// -------------------------------------------------------------------

class ReqInstanceSweepSpeedUp : public ::google::protobuf::Message {
 public:
  ReqInstanceSweepSpeedUp();
  virtual ~ReqInstanceSweepSpeedUp();

  ReqInstanceSweepSpeedUp(const ReqInstanceSweepSpeedUp& from);

  inline ReqInstanceSweepSpeedUp& operator=(const ReqInstanceSweepSpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInstanceSweepSpeedUp& default_instance();

  void Swap(ReqInstanceSweepSpeedUp* other);

  // implements Message ----------------------------------------------

  ReqInstanceSweepSpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInstanceSweepSpeedUp& from);
  void MergeFrom(const ReqInstanceSweepSpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // optional int32 moneytype = 2;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneytypeFieldNumber = 2;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqInstanceSweepSpeedUp)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;
  ::google::protobuf::int32 moneytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInstanceSweepSpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class RetInstanceSweepSpeedUp : public ::google::protobuf::Message {
 public:
  RetInstanceSweepSpeedUp();
  virtual ~RetInstanceSweepSpeedUp();

  RetInstanceSweepSpeedUp(const RetInstanceSweepSpeedUp& from);

  inline RetInstanceSweepSpeedUp& operator=(const RetInstanceSweepSpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInstanceSweepSpeedUp& default_instance();

  void Swap(RetInstanceSweepSpeedUp* other);

  // implements Message ----------------------------------------------

  RetInstanceSweepSpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInstanceSweepSpeedUp& from);
  void MergeFrom(const RetInstanceSweepSpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwErrorCode = 1;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // required int32 InstanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInstanceSweepSpeedUp)
 private:
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwerrorcode_;
  ::google::protobuf::int32 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInstanceSweepSpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class OpenInstanceSweep : public ::google::protobuf::Message {
 public:
  OpenInstanceSweep();
  virtual ~OpenInstanceSweep();

  OpenInstanceSweep(const OpenInstanceSweep& from);

  inline OpenInstanceSweep& operator=(const OpenInstanceSweep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenInstanceSweep& default_instance();

  void Swap(OpenInstanceSweep* other);

  // implements Message ----------------------------------------------

  OpenInstanceSweep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenInstanceSweep& from);
  void MergeFrom(const OpenInstanceSweep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.OpenInstanceSweep)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static OpenInstanceSweep* default_instance_;
};
// -------------------------------------------------------------------

class SimInstanceSweepEnd : public ::google::protobuf::Message {
 public:
  SimInstanceSweepEnd();
  virtual ~SimInstanceSweepEnd();

  SimInstanceSweepEnd(const SimInstanceSweepEnd& from);

  inline SimInstanceSweepEnd& operator=(const SimInstanceSweepEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimInstanceSweepEnd& default_instance();

  void Swap(SimInstanceSweepEnd* other);

  // implements Message ----------------------------------------------

  SimInstanceSweepEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimInstanceSweepEnd& from);
  void MergeFrom(const SimInstanceSweepEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SimInstanceSweepEnd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SimInstanceSweepEnd* default_instance_;
};
// -------------------------------------------------------------------

class ReqInstanceReset : public ::google::protobuf::Message {
 public:
  ReqInstanceReset();
  virtual ~ReqInstanceReset();

  ReqInstanceReset(const ReqInstanceReset& from);

  inline ReqInstanceReset& operator=(const ReqInstanceReset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInstanceReset& default_instance();

  void Swap(ReqInstanceReset* other);

  // implements Message ----------------------------------------------

  ReqInstanceReset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInstanceReset& from);
  void MergeFrom(const ReqInstanceReset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqInstanceReset)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInstanceReset* default_instance_;
};
// -------------------------------------------------------------------

class RetInstanceReset : public ::google::protobuf::Message {
 public:
  RetInstanceReset();
  virtual ~RetInstanceReset();

  RetInstanceReset(const RetInstanceReset& from);

  inline RetInstanceReset& operator=(const RetInstanceReset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInstanceReset& default_instance();

  void Swap(RetInstanceReset* other);

  // implements Message ----------------------------------------------

  RetInstanceReset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInstanceReset& from);
  void MergeFrom(const RetInstanceReset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwErrorCode = 1;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // required int32 InstanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInstanceReset)
 private:
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwerrorcode_;
  ::google::protobuf::int32 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInstanceReset* default_instance_;
};
// -------------------------------------------------------------------

class ReqResetAllInstances : public ::google::protobuf::Message {
 public:
  ReqResetAllInstances();
  virtual ~ReqResetAllInstances();

  ReqResetAllInstances(const ReqResetAllInstances& from);

  inline ReqResetAllInstances& operator=(const ReqResetAllInstances& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqResetAllInstances& default_instance();

  void Swap(ReqResetAllInstances* other);

  // implements Message ----------------------------------------------

  ReqResetAllInstances* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqResetAllInstances& from);
  void MergeFrom(const ReqResetAllInstances& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 InstanceIdList = 1;
  inline int instanceidlist_size() const;
  inline void clear_instanceidlist();
  static const int kInstanceIdListFieldNumber = 1;
  inline ::google::protobuf::int32 instanceidlist(int index) const;
  inline void set_instanceidlist(int index, ::google::protobuf::int32 value);
  inline void add_instanceidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      instanceidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_instanceidlist();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqResetAllInstances)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > instanceidlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqResetAllInstances* default_instance_;
};
// -------------------------------------------------------------------

class RetResetAllInstances : public ::google::protobuf::Message {
 public:
  RetResetAllInstances();
  virtual ~RetResetAllInstances();

  RetResetAllInstances(const RetResetAllInstances& from);

  inline RetResetAllInstances& operator=(const RetResetAllInstances& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetResetAllInstances& default_instance();

  void Swap(RetResetAllInstances* other);

  // implements Message ----------------------------------------------

  RetResetAllInstances* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetResetAllInstances& from);
  void MergeFrom(const RetResetAllInstances& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwErrorCode = 1;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // repeated int32 InstanceIdList = 2;
  inline int instanceidlist_size() const;
  inline void clear_instanceidlist();
  static const int kInstanceIdListFieldNumber = 2;
  inline ::google::protobuf::int32 instanceidlist(int index) const;
  inline void set_instanceidlist(int index, ::google::protobuf::int32 value);
  inline void add_instanceidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      instanceidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_instanceidlist();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetResetAllInstances)
 private:
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > instanceidlist_;
  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetResetAllInstances* default_instance_;
};
// -------------------------------------------------------------------

class ReqWSCreateInstance : public ::google::protobuf::Message {
 public:
  ReqWSCreateInstance();
  virtual ~ReqWSCreateInstance();

  ReqWSCreateInstance(const ReqWSCreateInstance& from);

  inline ReqWSCreateInstance& operator=(const ReqWSCreateInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWSCreateInstance& default_instance();

  void Swap(ReqWSCreateInstance* other);

  // implements Message ----------------------------------------------

  ReqWSCreateInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWSCreateInstance& from);
  void MergeFrom(const ReqWSCreateInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // required int32 InstanceType = 2;
  inline bool has_instancetype() const;
  inline void clear_instancetype();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 instancetype() const;
  inline void set_instancetype(::google::protobuf::int32 value);

  // required int32 localId = 3;
  inline bool has_localid() const;
  inline void clear_localid();
  static const int kLocalIdFieldNumber = 3;
  inline ::google::protobuf::int32 localid() const;
  inline void set_localid(::google::protobuf::int32 value);

  // required int32 romateId = 4;
  inline bool has_romateid() const;
  inline void clear_romateid();
  static const int kRomateIdFieldNumber = 4;
  inline ::google::protobuf::int32 romateid() const;
  inline void set_romateid(::google::protobuf::int32 value);

  // required int64 charid = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 5;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqWSCreateInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_instancetype();
  inline void clear_has_instancetype();
  inline void set_has_localid();
  inline void clear_has_localid();
  inline void set_has_romateid();
  inline void clear_has_romateid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;
  ::google::protobuf::int32 instancetype_;
  ::google::protobuf::int32 localid_;
  ::google::protobuf::int32 romateid_;
  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqWSCreateInstance* default_instance_;
};
// -------------------------------------------------------------------

class ReqDeleteInstance : public ::google::protobuf::Message {
 public:
  ReqDeleteInstance();
  virtual ~ReqDeleteInstance();

  ReqDeleteInstance(const ReqDeleteInstance& from);

  inline ReqDeleteInstance& operator=(const ReqDeleteInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqDeleteInstance& default_instance();

  void Swap(ReqDeleteInstance* other);

  // implements Message ----------------------------------------------

  ReqDeleteInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqDeleteInstance& from);
  void MergeFrom(const ReqDeleteInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqDeleteInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqDeleteInstance* default_instance_;
};
// -------------------------------------------------------------------

class ReqGroupInstanceReady : public ::google::protobuf::Message {
 public:
  ReqGroupInstanceReady();
  virtual ~ReqGroupInstanceReady();

  ReqGroupInstanceReady(const ReqGroupInstanceReady& from);

  inline ReqGroupInstanceReady& operator=(const ReqGroupInstanceReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGroupInstanceReady& default_instance();

  void Swap(ReqGroupInstanceReady* other);

  // implements Message ----------------------------------------------

  ReqGroupInstanceReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGroupInstanceReady& from);
  void MergeFrom(const ReqGroupInstanceReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqGroupInstanceReady)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqGroupInstanceReady* default_instance_;
};
// -------------------------------------------------------------------

class RetGroupInstanceReady : public ::google::protobuf::Message {
 public:
  RetGroupInstanceReady();
  virtual ~RetGroupInstanceReady();

  RetGroupInstanceReady(const RetGroupInstanceReady& from);

  inline RetGroupInstanceReady& operator=(const RetGroupInstanceReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGroupInstanceReady& default_instance();

  void Swap(RetGroupInstanceReady* other);

  // implements Message ----------------------------------------------

  RetGroupInstanceReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGroupInstanceReady& from);
  void MergeFrom(const RetGroupInstanceReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated int64 MemberID = 2;
  inline int memberid_size() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 2;
  inline ::google::protobuf::int64 memberid(int index) const;
  inline void set_memberid(int index, ::google::protobuf::int64 value);
  inline void add_memberid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      memberid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_memberid();

  // repeated int32 IsReady = 3;
  inline int isready_size() const;
  inline void clear_isready();
  static const int kIsReadyFieldNumber = 3;
  inline ::google::protobuf::int32 isready(int index) const;
  inline void set_isready(int index, ::google::protobuf::int32 value);
  inline void add_isready(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      isready() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_isready();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetGroupInstanceReady)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > memberid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > isready_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetGroupInstanceReady* default_instance_;
};
// -------------------------------------------------------------------

class ReqGroupEnterInstance : public ::google::protobuf::Message {
 public:
  ReqGroupEnterInstance();
  virtual ~ReqGroupEnterInstance();

  ReqGroupEnterInstance(const ReqGroupEnterInstance& from);

  inline ReqGroupEnterInstance& operator=(const ReqGroupEnterInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGroupEnterInstance& default_instance();

  void Swap(ReqGroupEnterInstance* other);

  // implements Message ----------------------------------------------

  ReqGroupEnterInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGroupEnterInstance& from);
  void MergeFrom(const ReqGroupEnterInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 InstanceID = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIDFieldNumber = 1;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqGroupEnterInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqGroupEnterInstance* default_instance_;
};
// -------------------------------------------------------------------

class RetGroupEnterInstance : public ::google::protobuf::Message {
 public:
  RetGroupEnterInstance();
  virtual ~RetGroupEnterInstance();

  RetGroupEnterInstance(const RetGroupEnterInstance& from);

  inline RetGroupEnterInstance& operator=(const RetGroupEnterInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGroupEnterInstance& default_instance();

  void Swap(RetGroupEnterInstance* other);

  // implements Message ----------------------------------------------

  RetGroupEnterInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGroupEnterInstance& from);
  void MergeFrom(const RetGroupEnterInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 InstanceID = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIDFieldNumber = 2;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetGroupEnterInstance)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetGroupEnterInstance* default_instance_;
};
// -------------------------------------------------------------------

class ReqMemberFlop : public ::google::protobuf::Message {
 public:
  ReqMemberFlop();
  virtual ~ReqMemberFlop();

  ReqMemberFlop(const ReqMemberFlop& from);

  inline ReqMemberFlop& operator=(const ReqMemberFlop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMemberFlop& default_instance();

  void Swap(ReqMemberFlop* other);

  // implements Message ----------------------------------------------

  ReqMemberFlop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMemberFlop& from);
  void MergeFrom(const ReqMemberFlop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 FlopID = 1;
  inline bool has_flopid() const;
  inline void clear_flopid();
  static const int kFlopIDFieldNumber = 1;
  inline ::google::protobuf::int32 flopid() const;
  inline void set_flopid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqMemberFlop)
 private:
  inline void set_has_flopid();
  inline void clear_has_flopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 flopid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqMemberFlop* default_instance_;
};
// -------------------------------------------------------------------

class GMToClientMemberFlop : public ::google::protobuf::Message {
 public:
  GMToClientMemberFlop();
  virtual ~GMToClientMemberFlop();

  GMToClientMemberFlop(const GMToClientMemberFlop& from);

  inline GMToClientMemberFlop& operator=(const GMToClientMemberFlop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToClientMemberFlop& default_instance();

  void Swap(GMToClientMemberFlop* other);

  // implements Message ----------------------------------------------

  GMToClientMemberFlop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToClientMemberFlop& from);
  void MergeFrom(const GMToClientMemberFlop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToClientMemberFlop)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToClientMemberFlop* default_instance_;
};
// -------------------------------------------------------------------

class RetMemberFlop : public ::google::protobuf::Message {
 public:
  RetMemberFlop();
  virtual ~RetMemberFlop();

  RetMemberFlop(const RetMemberFlop& from);

  inline RetMemberFlop& operator=(const RetMemberFlop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetMemberFlop& default_instance();

  void Swap(RetMemberFlop* other);

  // implements Message ----------------------------------------------

  RetMemberFlop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetMemberFlop& from);
  void MergeFrom(const RetMemberFlop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 FlopID = 1;
  inline bool has_flopid() const;
  inline void clear_flopid();
  static const int kFlopIDFieldNumber = 1;
  inline ::google::protobuf::int32 flopid() const;
  inline void set_flopid(::google::protobuf::int32 value);

  // required int32 ItemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required string FlopName = 3;
  inline bool has_flopname() const;
  inline void clear_flopname();
  static const int kFlopNameFieldNumber = 3;
  inline const ::std::string& flopname() const;
  inline void set_flopname(const ::std::string& value);
  inline void set_flopname(const char* value);
  inline void set_flopname(const char* value, size_t size);
  inline ::std::string* mutable_flopname();
  inline ::std::string* release_flopname();
  inline void set_allocated_flopname(::std::string* flopname);

  // optional int32 ItemNum = 4;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // optional int32 BindType = 5;
  inline bool has_bindtype() const;
  inline void clear_bindtype();
  static const int kBindTypeFieldNumber = 5;
  inline ::google::protobuf::int32 bindtype() const;
  inline void set_bindtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetMemberFlop)
 private:
  inline void set_has_flopid();
  inline void clear_has_flopid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_flopname();
  inline void clear_has_flopname();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_bindtype();
  inline void clear_has_bindtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 flopid_;
  ::google::protobuf::int32 itemid_;
  ::std::string* flopname_;
  ::google::protobuf::int32 itemnum_;
  ::google::protobuf::int32 bindtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetMemberFlop* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetInstanceAward : public ::google::protobuf::Message {
 public:
  ReqGetInstanceAward();
  virtual ~ReqGetInstanceAward();

  ReqGetInstanceAward(const ReqGetInstanceAward& from);

  inline ReqGetInstanceAward& operator=(const ReqGetInstanceAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetInstanceAward& default_instance();

  void Swap(ReqGetInstanceAward* other);

  // implements Message ----------------------------------------------

  ReqGetInstanceAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetInstanceAward& from);
  void MergeFrom(const ReqGetInstanceAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 instanceID = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIDFieldNumber = 1;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqGetInstanceAward)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqGetInstanceAward* default_instance_;
};
// -------------------------------------------------------------------

class ReqEnterInstance : public ::google::protobuf::Message {
 public:
  ReqEnterInstance();
  virtual ~ReqEnterInstance();

  ReqEnterInstance(const ReqEnterInstance& from);

  inline ReqEnterInstance& operator=(const ReqEnterInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnterInstance& default_instance();

  void Swap(ReqEnterInstance* other);

  // implements Message ----------------------------------------------

  ReqEnterInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnterInstance& from);
  void MergeFrom(const ReqEnterInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 instanceID = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIDFieldNumber = 1;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqEnterInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqEnterInstance* default_instance_;
};
// -------------------------------------------------------------------

class ToGTGetInstanceTeamID : public ::google::protobuf::Message {
 public:
  ToGTGetInstanceTeamID();
  virtual ~ToGTGetInstanceTeamID();

  ToGTGetInstanceTeamID(const ToGTGetInstanceTeamID& from);

  inline ToGTGetInstanceTeamID& operator=(const ToGTGetInstanceTeamID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTGetInstanceTeamID& default_instance();

  void Swap(ToGTGetInstanceTeamID* other);

  // implements Message ----------------------------------------------

  ToGTGetInstanceTeamID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTGetInstanceTeamID& from);
  void MergeFrom(const ToGTGetInstanceTeamID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ToGTGetInstanceTeamID)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ToGTGetInstanceTeamID* default_instance_;
};
// -------------------------------------------------------------------

class RetGetInstanceTeamID : public ::google::protobuf::Message {
 public:
  RetGetInstanceTeamID();
  virtual ~RetGetInstanceTeamID();

  RetGetInstanceTeamID(const RetGetInstanceTeamID& from);

  inline RetGetInstanceTeamID& operator=(const RetGetInstanceTeamID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGetInstanceTeamID& default_instance();

  void Swap(RetGetInstanceTeamID* other);

  // implements Message ----------------------------------------------

  RetGetInstanceTeamID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGetInstanceTeamID& from);
  void MergeFrom(const RetGetInstanceTeamID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.InstanceTeamInfo teamInfo = 1;
  inline int teaminfo_size() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 1;
  inline const ::MapInstanceProto::InstanceTeamInfo& teaminfo(int index) const;
  inline ::MapInstanceProto::InstanceTeamInfo* mutable_teaminfo(int index);
  inline ::MapInstanceProto::InstanceTeamInfo* add_teaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceTeamInfo >&
      teaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceTeamInfo >*
      mutable_teaminfo();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetGetInstanceTeamID)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceTeamInfo > teaminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetGetInstanceTeamID* default_instance_;
};
// -------------------------------------------------------------------

class InstanceTeamInfo : public ::google::protobuf::Message {
 public:
  InstanceTeamInfo();
  virtual ~InstanceTeamInfo();

  InstanceTeamInfo(const InstanceTeamInfo& from);

  inline InstanceTeamInfo& operator=(const InstanceTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceTeamInfo& default_instance();

  void Swap(InstanceTeamInfo* other);

  // implements Message ----------------------------------------------

  InstanceTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstanceTeamInfo& from);
  void MergeFrom(const InstanceTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwTeamID = 1;
  inline bool has_dwteamid() const;
  inline void clear_dwteamid();
  static const int kDwTeamIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwteamid() const;
  inline void set_dwteamid(::google::protobuf::int32 value);

  // optional int32 dwInstanceID = 2;
  inline bool has_dwinstanceid() const;
  inline void clear_dwinstanceid();
  static const int kDwInstanceIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwinstanceid() const;
  inline void set_dwinstanceid(::google::protobuf::int32 value);

  // optional int32 dwTeamPower = 3;
  inline bool has_dwteampower() const;
  inline void clear_dwteampower();
  static const int kDwTeamPowerFieldNumber = 3;
  inline ::google::protobuf::int32 dwteampower() const;
  inline void set_dwteampower(::google::protobuf::int32 value);

  // optional int32 dwTeamMembers = 4;
  inline bool has_dwteammembers() const;
  inline void clear_dwteammembers();
  static const int kDwTeamMembersFieldNumber = 4;
  inline ::google::protobuf::int32 dwteammembers() const;
  inline void set_dwteammembers(::google::protobuf::int32 value);

  // optional string dwLeaderName = 5;
  inline bool has_dwleadername() const;
  inline void clear_dwleadername();
  static const int kDwLeaderNameFieldNumber = 5;
  inline const ::std::string& dwleadername() const;
  inline void set_dwleadername(const ::std::string& value);
  inline void set_dwleadername(const char* value);
  inline void set_dwleadername(const char* value, size_t size);
  inline ::std::string* mutable_dwleadername();
  inline ::std::string* release_dwleadername();
  inline void set_allocated_dwleadername(::std::string* dwleadername);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.InstanceTeamInfo)
 private:
  inline void set_has_dwteamid();
  inline void clear_has_dwteamid();
  inline void set_has_dwinstanceid();
  inline void clear_has_dwinstanceid();
  inline void set_has_dwteampower();
  inline void clear_has_dwteampower();
  inline void set_has_dwteammembers();
  inline void clear_has_dwteammembers();
  inline void set_has_dwleadername();
  inline void clear_has_dwleadername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwteamid_;
  ::google::protobuf::int32 dwinstanceid_;
  ::google::protobuf::int32 dwteampower_;
  ::google::protobuf::int32 dwteammembers_;
  ::std::string* dwleadername_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static InstanceTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class ToClientLeaveInstance : public ::google::protobuf::Message {
 public:
  ToClientLeaveInstance();
  virtual ~ToClientLeaveInstance();

  ToClientLeaveInstance(const ToClientLeaveInstance& from);

  inline ToClientLeaveInstance& operator=(const ToClientLeaveInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClientLeaveInstance& default_instance();

  void Swap(ToClientLeaveInstance* other);

  // implements Message ----------------------------------------------

  ToClientLeaveInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClientLeaveInstance& from);
  void MergeFrom(const ToClientLeaveInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ToClientLeaveInstance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ToClientLeaveInstance* default_instance_;
};
// -------------------------------------------------------------------

class ToGTAwardInfo : public ::google::protobuf::Message {
 public:
  ToGTAwardInfo();
  virtual ~ToGTAwardInfo();

  ToGTAwardInfo(const ToGTAwardInfo& from);

  inline ToGTAwardInfo& operator=(const ToGTAwardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTAwardInfo& default_instance();

  void Swap(ToGTAwardInfo* other);

  // implements Message ----------------------------------------------

  ToGTAwardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTAwardInfo& from);
  void MergeFrom(const ToGTAwardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .MapInstanceProto.SimInstanceEnd awardInfo = 2;
  inline bool has_awardinfo() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::MapInstanceProto::SimInstanceEnd& awardinfo() const;
  inline ::MapInstanceProto::SimInstanceEnd* mutable_awardinfo();
  inline ::MapInstanceProto::SimInstanceEnd* release_awardinfo();
  inline void set_allocated_awardinfo(::MapInstanceProto::SimInstanceEnd* awardinfo);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ToGTAwardInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_awardinfo();
  inline void clear_has_awardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::MapInstanceProto::SimInstanceEnd* awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ToGTAwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqCreateInstance : public ::google::protobuf::Message {
 public:
  ClientReqCreateInstance();
  virtual ~ClientReqCreateInstance();

  ClientReqCreateInstance(const ClientReqCreateInstance& from);

  inline ClientReqCreateInstance& operator=(const ClientReqCreateInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqCreateInstance& default_instance();

  void Swap(ClientReqCreateInstance* other);

  // implements Message ----------------------------------------------

  ClientReqCreateInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqCreateInstance& from);
  void MergeFrom(const ClientReqCreateInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // required int32 InstanceType = 2;
  inline bool has_instancetype() const;
  inline void clear_instancetype();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 instancetype() const;
  inline void set_instancetype(::google::protobuf::int32 value);

  // optional int32 paramf = 3;
  inline bool has_paramf() const;
  inline void clear_paramf();
  static const int kParamfFieldNumber = 3;
  inline ::google::protobuf::int32 paramf() const;
  inline void set_paramf(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqCreateInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_instancetype();
  inline void clear_has_instancetype();
  inline void set_has_paramf();
  inline void clear_has_paramf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;
  ::google::protobuf::int32 instancetype_;
  ::google::protobuf::int32 paramf_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqCreateInstance* default_instance_;
};
// -------------------------------------------------------------------

class GMReqWSCreateInstance : public ::google::protobuf::Message {
 public:
  GMReqWSCreateInstance();
  virtual ~GMReqWSCreateInstance();

  GMReqWSCreateInstance(const GMReqWSCreateInstance& from);

  inline GMReqWSCreateInstance& operator=(const GMReqWSCreateInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMReqWSCreateInstance& default_instance();

  void Swap(GMReqWSCreateInstance* other);

  // implements Message ----------------------------------------------

  GMReqWSCreateInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMReqWSCreateInstance& from);
  void MergeFrom(const GMReqWSCreateInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // optional int32 InstanceType = 2;
  inline bool has_instancetype() const;
  inline void clear_instancetype();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 instancetype() const;
  inline void set_instancetype(::google::protobuf::int32 value);

  // optional int64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 paramf = 4;
  inline bool has_paramf() const;
  inline void clear_paramf();
  static const int kParamfFieldNumber = 4;
  inline ::google::protobuf::int32 paramf() const;
  inline void set_paramf(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMReqWSCreateInstance)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_instancetype();
  inline void clear_has_instancetype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_paramf();
  inline void clear_has_paramf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instanceid_;
  ::google::protobuf::int32 instancetype_;
  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 paramf_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMReqWSCreateInstance* default_instance_;
};
// -------------------------------------------------------------------

class AckToGMCreateInstance : public ::google::protobuf::Message {
 public:
  AckToGMCreateInstance();
  virtual ~AckToGMCreateInstance();

  AckToGMCreateInstance(const AckToGMCreateInstance& from);

  inline AckToGMCreateInstance& operator=(const AckToGMCreateInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckToGMCreateInstance& default_instance();

  void Swap(AckToGMCreateInstance* other);

  // implements Message ----------------------------------------------

  AckToGMCreateInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckToGMCreateInstance& from);
  void MergeFrom(const AckToGMCreateInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 instanceid = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceidFieldNumber = 2;
  inline ::google::protobuf::int64 instanceid() const;
  inline void set_instanceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckToGMCreateInstance)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instanceid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckToGMCreateInstance* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqWorldArenaInfo : public ::google::protobuf::Message {
 public:
  ClientReqWorldArenaInfo();
  virtual ~ClientReqWorldArenaInfo();

  ClientReqWorldArenaInfo(const ClientReqWorldArenaInfo& from);

  inline ClientReqWorldArenaInfo& operator=(const ClientReqWorldArenaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqWorldArenaInfo& default_instance();

  void Swap(ClientReqWorldArenaInfo* other);

  // implements Message ----------------------------------------------

  ClientReqWorldArenaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqWorldArenaInfo& from);
  void MergeFrom(const ClientReqWorldArenaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqWorldArenaInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqWorldArenaInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqWarReport : public ::google::protobuf::Message {
 public:
  ClientReqWarReport();
  virtual ~ClientReqWarReport();

  ClientReqWarReport(const ClientReqWarReport& from);

  inline ClientReqWarReport& operator=(const ClientReqWarReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqWarReport& default_instance();

  void Swap(ClientReqWarReport* other);

  // implements Message ----------------------------------------------

  ClientReqWarReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqWarReport& from);
  void MergeFrom(const ClientReqWarReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqWarReport)
 private:
  inline void set_has_page();
  inline void clear_has_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 page_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqWarReport* default_instance_;
};
// -------------------------------------------------------------------

class ReqToWorldGetArenaInfo : public ::google::protobuf::Message {
 public:
  ReqToWorldGetArenaInfo();
  virtual ~ReqToWorldGetArenaInfo();

  ReqToWorldGetArenaInfo(const ReqToWorldGetArenaInfo& from);

  inline ReqToWorldGetArenaInfo& operator=(const ReqToWorldGetArenaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqToWorldGetArenaInfo& default_instance();

  void Swap(ReqToWorldGetArenaInfo* other);

  // implements Message ----------------------------------------------

  ReqToWorldGetArenaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqToWorldGetArenaInfo& from);
  void MergeFrom(const ReqToWorldGetArenaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.OtherPlayerArenaInfo otherinfo = 5;
  inline int otherinfo_size() const;
  inline void clear_otherinfo();
  static const int kOtherinfoFieldNumber = 5;
  inline const ::MapInstanceProto::OtherPlayerArenaInfo& otherinfo(int index) const;
  inline ::MapInstanceProto::OtherPlayerArenaInfo* mutable_otherinfo(int index);
  inline ::MapInstanceProto::OtherPlayerArenaInfo* add_otherinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >&
      otherinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >*
      mutable_otherinfo();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqToWorldGetArenaInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo > otherinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqToWorldGetArenaInfo* default_instance_;
};
// -------------------------------------------------------------------

class OtherPlayerArenaInfo : public ::google::protobuf::Message {
 public:
  OtherPlayerArenaInfo();
  virtual ~OtherPlayerArenaInfo();

  OtherPlayerArenaInfo(const OtherPlayerArenaInfo& from);

  inline OtherPlayerArenaInfo& operator=(const OtherPlayerArenaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherPlayerArenaInfo& default_instance();

  void Swap(OtherPlayerArenaInfo* other);

  // implements Message ----------------------------------------------

  OtherPlayerArenaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherPlayerArenaInfo& from);
  void MergeFrom(const OtherPlayerArenaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 Ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // optional int32 profession = 4;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 4;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // optional int32 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional bool sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline bool sex() const;
  inline void set_sex(bool value);

  // optional int32 viplv = 7;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kViplvFieldNumber = 7;
  inline ::google::protobuf::int32 viplv() const;
  inline void set_viplv(::google::protobuf::int32 value);

  // optional int32 lv = 8;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 8;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.OtherPlayerArenaInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_viplv();
  inline void clear_has_viplv();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* charname_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::int32 fight_;
  bool sex_;
  ::google::protobuf::int32 viplv_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static OtherPlayerArenaInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqToWordGetWarReport : public ::google::protobuf::Message {
 public:
  ReqToWordGetWarReport();
  virtual ~ReqToWordGetWarReport();

  ReqToWordGetWarReport(const ReqToWordGetWarReport& from);

  inline ReqToWordGetWarReport& operator=(const ReqToWordGetWarReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqToWordGetWarReport& default_instance();

  void Swap(ReqToWordGetWarReport* other);

  // implements Message ----------------------------------------------

  ReqToWordGetWarReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqToWordGetWarReport& from);
  void MergeFrom(const ReqToWordGetWarReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsEnd = 1;
  inline bool has_isend() const;
  inline void clear_isend();
  static const int kIsEndFieldNumber = 1;
  inline bool isend() const;
  inline void set_isend(bool value);

  // repeated .MapInstanceProto.WarReport report = 2;
  inline int report_size() const;
  inline void clear_report();
  static const int kReportFieldNumber = 2;
  inline const ::MapInstanceProto::WarReport& report(int index) const;
  inline ::MapInstanceProto::WarReport* mutable_report(int index);
  inline ::MapInstanceProto::WarReport* add_report();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::WarReport >&
      report() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::WarReport >*
      mutable_report();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqToWordGetWarReport)
 private:
  inline void set_has_isend();
  inline void clear_has_isend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::WarReport > report_;
  bool isend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqToWordGetWarReport* default_instance_;
};
// -------------------------------------------------------------------

class ReqToGameGetArenaInfo : public ::google::protobuf::Message {
 public:
  ReqToGameGetArenaInfo();
  virtual ~ReqToGameGetArenaInfo();

  ReqToGameGetArenaInfo(const ReqToGameGetArenaInfo& from);

  inline ReqToGameGetArenaInfo& operator=(const ReqToGameGetArenaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqToGameGetArenaInfo& default_instance();

  void Swap(ReqToGameGetArenaInfo* other);

  // implements Message ----------------------------------------------

  ReqToGameGetArenaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqToGameGetArenaInfo& from);
  void MergeFrom(const ReqToGameGetArenaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 challengeTimes = 1;
  inline bool has_challengetimes() const;
  inline void clear_challengetimes();
  static const int kChallengeTimesFieldNumber = 1;
  inline ::google::protobuf::int32 challengetimes() const;
  inline void set_challengetimes(::google::protobuf::int32 value);

  // optional int32 alreadyRefresh = 2;
  inline bool has_alreadyrefresh() const;
  inline void clear_alreadyrefresh();
  static const int kAlreadyRefreshFieldNumber = 2;
  inline ::google::protobuf::int32 alreadyrefresh() const;
  inline void set_alreadyrefresh(::google::protobuf::int32 value);

  // optional int32 alreadyAddChall = 3;
  inline bool has_alreadyaddchall() const;
  inline void clear_alreadyaddchall();
  static const int kAlreadyAddChallFieldNumber = 3;
  inline ::google::protobuf::int32 alreadyaddchall() const;
  inline void set_alreadyaddchall(::google::protobuf::int32 value);

  // optional int32 Ranking = 4;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 4;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // optional int32 historyRank = 5;
  inline bool has_historyrank() const;
  inline void clear_historyrank();
  static const int kHistoryRankFieldNumber = 5;
  inline ::google::protobuf::int32 historyrank() const;
  inline void set_historyrank(::google::protobuf::int32 value);

  // optional .MapInstanceProto.ArenaHistoryReward historyReward = 6;
  inline bool has_historyreward() const;
  inline void clear_historyreward();
  static const int kHistoryRewardFieldNumber = 6;
  inline const ::MapInstanceProto::ArenaHistoryReward& historyreward() const;
  inline ::MapInstanceProto::ArenaHistoryReward* mutable_historyreward();
  inline ::MapInstanceProto::ArenaHistoryReward* release_historyreward();
  inline void set_allocated_historyreward(::MapInstanceProto::ArenaHistoryReward* historyreward);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqToGameGetArenaInfo)
 private:
  inline void set_has_challengetimes();
  inline void clear_has_challengetimes();
  inline void set_has_alreadyrefresh();
  inline void clear_has_alreadyrefresh();
  inline void set_has_alreadyaddchall();
  inline void clear_has_alreadyaddchall();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_historyrank();
  inline void clear_has_historyrank();
  inline void set_has_historyreward();
  inline void clear_has_historyreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 challengetimes_;
  ::google::protobuf::int32 alreadyrefresh_;
  ::google::protobuf::int32 alreadyaddchall_;
  ::google::protobuf::int32 ranking_;
  ::MapInstanceProto::ArenaHistoryReward* historyreward_;
  ::google::protobuf::int32 historyrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqToGameGetArenaInfo* default_instance_;
};
// -------------------------------------------------------------------

class ArenaHistoryReward : public ::google::protobuf::Message {
 public:
  ArenaHistoryReward();
  virtual ~ArenaHistoryReward();

  ArenaHistoryReward(const ArenaHistoryReward& from);

  inline ArenaHistoryReward& operator=(const ArenaHistoryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaHistoryReward& default_instance();

  void Swap(ArenaHistoryReward* other);

  // implements Message ----------------------------------------------

  ArenaHistoryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaHistoryReward& from);
  void MergeFrom(const ArenaHistoryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline ::google::protobuf::int32 reward(int index) const;
  inline void set_reward(int index, ::google::protobuf::int32 value);
  inline void add_reward(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward();

  // repeated int32 havaReward = 2;
  inline int havareward_size() const;
  inline void clear_havareward();
  static const int kHavaRewardFieldNumber = 2;
  inline ::google::protobuf::int32 havareward(int index) const;
  inline void set_havareward(int index, ::google::protobuf::int32 value);
  inline void add_havareward(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      havareward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_havareward();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ArenaHistoryReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > havareward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ArenaHistoryReward* default_instance_;
};
// -------------------------------------------------------------------

class ReqArenaHistoryReward : public ::google::protobuf::Message {
 public:
  ReqArenaHistoryReward();
  virtual ~ReqArenaHistoryReward();

  ReqArenaHistoryReward(const ReqArenaHistoryReward& from);

  inline ReqArenaHistoryReward& operator=(const ReqArenaHistoryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqArenaHistoryReward& default_instance();

  void Swap(ReqArenaHistoryReward* other);

  // implements Message ----------------------------------------------

  ReqArenaHistoryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqArenaHistoryReward& from);
  void MergeFrom(const ReqArenaHistoryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqArenaHistoryReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqArenaHistoryReward* default_instance_;
};
// -------------------------------------------------------------------

class RspArenaHistoryReward : public ::google::protobuf::Message {
 public:
  RspArenaHistoryReward();
  virtual ~RspArenaHistoryReward();

  RspArenaHistoryReward(const RspArenaHistoryReward& from);

  inline RspArenaHistoryReward& operator=(const RspArenaHistoryReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspArenaHistoryReward& default_instance();

  void Swap(RspArenaHistoryReward* other);

  // implements Message ----------------------------------------------

  RspArenaHistoryReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspArenaHistoryReward& from);
  void MergeFrom(const RspArenaHistoryReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RspArenaHistoryReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RspArenaHistoryReward* default_instance_;
};
// -------------------------------------------------------------------

class WarReport : public ::google::protobuf::Message {
 public:
  WarReport();
  virtual ~WarReport();

  WarReport(const WarReport& from);

  inline WarReport& operator=(const WarReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarReport& default_instance();

  void Swap(WarReport* other);

  // implements Message ----------------------------------------------

  WarReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarReport& from);
  void MergeFrom(const WarReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string charname = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 ranking = 2;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 2;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // optional bool iswin = 3;
  inline bool has_iswin() const;
  inline void clear_iswin();
  static const int kIswinFieldNumber = 3;
  inline bool iswin() const;
  inline void set_iswin(bool value);

  // optional bool ischallenger = 4;
  inline bool has_ischallenger() const;
  inline void clear_ischallenger();
  static const int kIschallengerFieldNumber = 4;
  inline bool ischallenger() const;
  inline void set_ischallenger(bool value);

  // optional int64 times = 5;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 5;
  inline ::google::protobuf::int64 times() const;
  inline void set_times(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WarReport)
 private:
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_iswin();
  inline void clear_has_iswin();
  inline void set_has_ischallenger();
  inline void clear_has_ischallenger();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* charname_;
  ::google::protobuf::int32 ranking_;
  bool iswin_;
  bool ischallenger_;
  ::google::protobuf::int64 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WarReport* default_instance_;
};
// -------------------------------------------------------------------

class CancelAreanCDTime : public ::google::protobuf::Message {
 public:
  CancelAreanCDTime();
  virtual ~CancelAreanCDTime();

  CancelAreanCDTime(const CancelAreanCDTime& from);

  inline CancelAreanCDTime& operator=(const CancelAreanCDTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelAreanCDTime& default_instance();

  void Swap(CancelAreanCDTime* other);

  // implements Message ----------------------------------------------

  CancelAreanCDTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelAreanCDTime& from);
  void MergeFrom(const CancelAreanCDTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.CancelAreanCDTime)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static CancelAreanCDTime* default_instance_;
};
// -------------------------------------------------------------------

class ReturnCancelAreanCDTime : public ::google::protobuf::Message {
 public:
  ReturnCancelAreanCDTime();
  virtual ~ReturnCancelAreanCDTime();

  ReturnCancelAreanCDTime(const ReturnCancelAreanCDTime& from);

  inline ReturnCancelAreanCDTime& operator=(const ReturnCancelAreanCDTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnCancelAreanCDTime& default_instance();

  void Swap(ReturnCancelAreanCDTime* other);

  // implements Message ----------------------------------------------

  ReturnCancelAreanCDTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnCancelAreanCDTime& from);
  void MergeFrom(const ReturnCancelAreanCDTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReturnCancelAreanCDTime)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReturnCancelAreanCDTime* default_instance_;
};
// -------------------------------------------------------------------

class AddChallengeTimes : public ::google::protobuf::Message {
 public:
  AddChallengeTimes();
  virtual ~AddChallengeTimes();

  AddChallengeTimes(const AddChallengeTimes& from);

  inline AddChallengeTimes& operator=(const AddChallengeTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddChallengeTimes& default_instance();

  void Swap(AddChallengeTimes* other);

  // implements Message ----------------------------------------------

  AddChallengeTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddChallengeTimes& from);
  void MergeFrom(const AddChallengeTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 times = 1;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 1;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AddChallengeTimes)
 private:
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AddChallengeTimes* default_instance_;
};
// -------------------------------------------------------------------

class ReturnAddChallengeTimes : public ::google::protobuf::Message {
 public:
  ReturnAddChallengeTimes();
  virtual ~ReturnAddChallengeTimes();

  ReturnAddChallengeTimes(const ReturnAddChallengeTimes& from);

  inline ReturnAddChallengeTimes& operator=(const ReturnAddChallengeTimes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnAddChallengeTimes& default_instance();

  void Swap(ReturnAddChallengeTimes* other);

  // implements Message ----------------------------------------------

  ReturnAddChallengeTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnAddChallengeTimes& from);
  void MergeFrom(const ReturnAddChallengeTimes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 alreadyAddChall = 3;
  inline bool has_alreadyaddchall() const;
  inline void clear_alreadyaddchall();
  static const int kAlreadyAddChallFieldNumber = 3;
  inline ::google::protobuf::int32 alreadyaddchall() const;
  inline void set_alreadyaddchall(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReturnAddChallengeTimes)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_alreadyaddchall();
  inline void clear_has_alreadyaddchall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 alreadyaddchall_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReturnAddChallengeTimes* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqAreanReward : public ::google::protobuf::Message {
 public:
  ClientReqAreanReward();
  virtual ~ClientReqAreanReward();

  ClientReqAreanReward(const ClientReqAreanReward& from);

  inline ClientReqAreanReward& operator=(const ClientReqAreanReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqAreanReward& default_instance();

  void Swap(ClientReqAreanReward* other);

  // implements Message ----------------------------------------------

  ClientReqAreanReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqAreanReward& from);
  void MergeFrom(const ClientReqAreanReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqAreanReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqAreanReward* default_instance_;
};
// -------------------------------------------------------------------

class GMToClientCompeteOver : public ::google::protobuf::Message {
 public:
  GMToClientCompeteOver();
  virtual ~GMToClientCompeteOver();

  GMToClientCompeteOver(const GMToClientCompeteOver& from);

  inline GMToClientCompeteOver& operator=(const GMToClientCompeteOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToClientCompeteOver& default_instance();

  void Swap(GMToClientCompeteOver* other);

  // implements Message ----------------------------------------------

  GMToClientCompeteOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToClientCompeteOver& from);
  void MergeFrom(const GMToClientCompeteOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 credit = 3;
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 3;
  inline ::google::protobuf::int32 credit() const;
  inline void set_credit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToClientCompeteOver)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_credit();
  inline void clear_has_credit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool issuccess_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 credit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToClientCompeteOver* default_instance_;
};
// -------------------------------------------------------------------

class SysRankingReward : public ::google::protobuf::Message {
 public:
  SysRankingReward();
  virtual ~SysRankingReward();

  SysRankingReward(const SysRankingReward& from);

  inline SysRankingReward& operator=(const SysRankingReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysRankingReward& default_instance();

  void Swap(SysRankingReward* other);

  // implements Message ----------------------------------------------

  SysRankingReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysRankingReward& from);
  void MergeFrom(const SysRankingReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int64 ret() const;
  inline void set_ret(::google::protobuf::int64 value);

  // optional int32 retf = 2;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 2;
  inline ::google::protobuf::int32 retf() const;
  inline void set_retf(::google::protobuf::int32 value);

  // optional int32 rets = 3;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 3;
  inline ::google::protobuf::int32 rets() const;
  inline void set_rets(::google::protobuf::int32 value);

  // optional int32 Ranking = 4;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 4;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // optional int32 historyRank = 5;
  inline bool has_historyrank() const;
  inline void clear_historyrank();
  static const int kHistoryRankFieldNumber = 5;
  inline ::google::protobuf::int32 historyrank() const;
  inline void set_historyrank(::google::protobuf::int32 value);

  // optional .MapInstanceProto.ArenaHistoryReward historyReward = 6;
  inline bool has_historyreward() const;
  inline void clear_historyreward();
  static const int kHistoryRewardFieldNumber = 6;
  inline const ::MapInstanceProto::ArenaHistoryReward& historyreward() const;
  inline ::MapInstanceProto::ArenaHistoryReward* mutable_historyreward();
  inline ::MapInstanceProto::ArenaHistoryReward* release_historyreward();
  inline void set_allocated_historyreward(::MapInstanceProto::ArenaHistoryReward* historyreward);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SysRankingReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_rets();
  inline void clear_has_rets();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_historyrank();
  inline void clear_has_historyrank();
  inline void set_has_historyreward();
  inline void clear_has_historyreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 ret_;
  ::google::protobuf::int32 retf_;
  ::google::protobuf::int32 rets_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 historyrank_;
  ::MapInstanceProto::ArenaHistoryReward* historyreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SysRankingReward* default_instance_;
};
// -------------------------------------------------------------------

class ClientRegRankingName : public ::google::protobuf::Message {
 public:
  ClientRegRankingName();
  virtual ~ClientRegRankingName();

  ClientRegRankingName(const ClientRegRankingName& from);

  inline ClientRegRankingName& operator=(const ClientRegRankingName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientRegRankingName& default_instance();

  void Swap(ClientRegRankingName* other);

  // implements Message ----------------------------------------------

  ClientRegRankingName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientRegRankingName& from);
  void MergeFrom(const ClientRegRankingName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientRegRankingName)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientRegRankingName* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientRankingName : public ::google::protobuf::Message {
 public:
  WSToClientRankingName();
  virtual ~WSToClientRankingName();

  WSToClientRankingName(const WSToClientRankingName& from);

  inline WSToClientRankingName& operator=(const WSToClientRankingName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientRankingName& default_instance();

  void Swap(WSToClientRankingName* other);

  // implements Message ----------------------------------------------

  WSToClientRankingName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientRankingName& from);
  void MergeFrom(const WSToClientRankingName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string charname = 1;
  inline int charname_size() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 1;
  inline const ::std::string& charname(int index) const;
  inline ::std::string* mutable_charname(int index);
  inline void set_charname(int index, const ::std::string& value);
  inline void set_charname(int index, const char* value);
  inline void set_charname(int index, const char* value, size_t size);
  inline ::std::string* add_charname();
  inline void add_charname(const ::std::string& value);
  inline void add_charname(const char* value);
  inline void add_charname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& charname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_charname();

  // repeated int32 viplv = 2;
  inline int viplv_size() const;
  inline void clear_viplv();
  static const int kViplvFieldNumber = 2;
  inline ::google::protobuf::int32 viplv(int index) const;
  inline void set_viplv(int index, ::google::protobuf::int32 value);
  inline void add_viplv(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      viplv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_viplv();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientRankingName)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> charname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > viplv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientRankingName* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqGroupInfo : public ::google::protobuf::Message {
 public:
  ClientReqGroupInfo();
  virtual ~ClientReqGroupInfo();

  ClientReqGroupInfo(const ClientReqGroupInfo& from);

  inline ClientReqGroupInfo& operator=(const ClientReqGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqGroupInfo& default_instance();

  void Swap(ClientReqGroupInfo* other);

  // implements Message ----------------------------------------------

  ClientReqGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqGroupInfo& from);
  void MergeFrom(const ClientReqGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqGroupInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class GMToClentGroupInfo : public ::google::protobuf::Message {
 public:
  GMToClentGroupInfo();
  virtual ~GMToClentGroupInfo();

  GMToClentGroupInfo(const GMToClentGroupInfo& from);

  inline GMToClentGroupInfo& operator=(const GMToClentGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToClentGroupInfo& default_instance();

  void Swap(GMToClentGroupInfo* other);

  // implements Message ----------------------------------------------

  GMToClentGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToClentGroupInfo& from);
  void MergeFrom(const GMToClentGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.GroupInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::MapInstanceProto::GroupInfo& info(int index) const;
  inline ::MapInstanceProto::GroupInfo* mutable_info(int index);
  inline ::MapInstanceProto::GroupInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::GroupInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::GroupInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToClentGroupInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::GroupInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToClentGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class GroupInfo : public ::google::protobuf::Message {
 public:
  GroupInfo();
  virtual ~GroupInfo();

  GroupInfo(const GroupInfo& from);

  inline GroupInfo& operator=(const GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupInfo& default_instance();

  void Swap(GroupInfo* other);

  // implements Message ----------------------------------------------

  GroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupInfo& from);
  void MergeFrom(const GroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GroupInfo)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqAllTeamInfo : public ::google::protobuf::Message {
 public:
  ClientReqAllTeamInfo();
  virtual ~ClientReqAllTeamInfo();

  ClientReqAllTeamInfo(const ClientReqAllTeamInfo& from);

  inline ClientReqAllTeamInfo& operator=(const ClientReqAllTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqAllTeamInfo& default_instance();

  void Swap(ClientReqAllTeamInfo* other);

  // implements Message ----------------------------------------------

  ClientReqAllTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqAllTeamInfo& from);
  void MergeFrom(const ClientReqAllTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqAllTeamInfo)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqAllTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class WSToClentAllTeamInfo : public ::google::protobuf::Message {
 public:
  WSToClentAllTeamInfo();
  virtual ~WSToClentAllTeamInfo();

  WSToClentAllTeamInfo(const WSToClentAllTeamInfo& from);

  inline WSToClentAllTeamInfo& operator=(const WSToClentAllTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClentAllTeamInfo& default_instance();

  void Swap(WSToClentAllTeamInfo* other);

  // implements Message ----------------------------------------------

  WSToClentAllTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClentAllTeamInfo& from);
  void MergeFrom(const WSToClentAllTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 page = 2;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 2;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.AllTeamInfo allteaminfo = 3;
  inline int allteaminfo_size() const;
  inline void clear_allteaminfo();
  static const int kAllteaminfoFieldNumber = 3;
  inline const ::MapInstanceProto::AllTeamInfo& allteaminfo(int index) const;
  inline ::MapInstanceProto::AllTeamInfo* mutable_allteaminfo(int index);
  inline ::MapInstanceProto::AllTeamInfo* add_allteaminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::AllTeamInfo >&
      allteaminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::AllTeamInfo >*
      mutable_allteaminfo();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClentAllTeamInfo)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_page();
  inline void clear_has_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 page_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::AllTeamInfo > allteaminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClentAllTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllTeamInfo : public ::google::protobuf::Message {
 public:
  AllTeamInfo();
  virtual ~AllTeamInfo();

  AllTeamInfo(const AllTeamInfo& from);

  inline AllTeamInfo& operator=(const AllTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllTeamInfo& default_instance();

  void Swap(AllTeamInfo* other);

  // implements Message ----------------------------------------------

  AllTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllTeamInfo& from);
  void MergeFrom(const AllTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 fight = 4;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 4;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional bool code = 5;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 5;
  inline bool code() const;
  inline void set_code(bool value);

  // optional int32 vip = 6;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 6;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // optional int32 sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);

  // optional int32 job = 8;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 8;
  inline ::google::protobuf::int32 job() const;
  inline void set_job(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AllTeamInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;
  ::std::string* charname_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 fight_;
  bool code_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 job_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AllTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqJoinTeam : public ::google::protobuf::Message {
 public:
  ClientReqJoinTeam();
  virtual ~ClientReqJoinTeam();

  ClientReqJoinTeam(const ClientReqJoinTeam& from);

  inline ClientReqJoinTeam& operator=(const ClientReqJoinTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqJoinTeam& default_instance();

  void Swap(ClientReqJoinTeam* other);

  // implements Message ----------------------------------------------

  ClientReqJoinTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqJoinTeam& from);
  void MergeFrom(const ClientReqJoinTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional int32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqJoinTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;
  ::std::string* password_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqJoinTeam* default_instance_;
};
// -------------------------------------------------------------------

class WSToClentReqJoinTeam : public ::google::protobuf::Message {
 public:
  WSToClentReqJoinTeam();
  virtual ~WSToClentReqJoinTeam();

  WSToClentReqJoinTeam(const WSToClentReqJoinTeam& from);

  inline WSToClentReqJoinTeam& operator=(const WSToClentReqJoinTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClentReqJoinTeam& default_instance();

  void Swap(WSToClentReqJoinTeam* other);

  // implements Message ----------------------------------------------

  WSToClentReqJoinTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClentReqJoinTeam& from);
  void MergeFrom(const WSToClentReqJoinTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int64 teamid = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional int32 fight = 4;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 4;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional bool flag = 5;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 5;
  inline bool flag() const;
  inline void set_flag(bool value);

  // repeated .MapInstanceProto.TeammemberInfo memberifno = 6;
  inline int memberifno_size() const;
  inline void clear_memberifno();
  static const int kMemberifnoFieldNumber = 6;
  inline const ::MapInstanceProto::TeammemberInfo& memberifno(int index) const;
  inline ::MapInstanceProto::TeammemberInfo* mutable_memberifno(int index);
  inline ::MapInstanceProto::TeammemberInfo* add_memberifno();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::TeammemberInfo >&
      memberifno() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::TeammemberInfo >*
      mutable_memberifno();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClentReqJoinTeam)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int64 teamid_;
  ::google::protobuf::int32 fight_;
  bool flag_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::TeammemberInfo > memberifno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClentReqJoinTeam* default_instance_;
};
// -------------------------------------------------------------------

class TeammemberInfo : public ::google::protobuf::Message {
 public:
  TeammemberInfo();
  virtual ~TeammemberInfo();

  TeammemberInfo(const TeammemberInfo& from);

  inline TeammemberInfo& operator=(const TeammemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeammemberInfo& default_instance();

  void Swap(TeammemberInfo* other);

  // implements Message ----------------------------------------------

  TeammemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeammemberInfo& from);
  void MergeFrom(const TeammemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 fight = 3;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 3;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional bool captain = 4;
  inline bool has_captain() const;
  inline void clear_captain();
  static const int kCaptainFieldNumber = 4;
  inline bool captain() const;
  inline void set_captain(bool value);

  // optional bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);

  // optional int32 job = 6;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 6;
  inline ::google::protobuf::int32 job() const;
  inline void set_job(::google::protobuf::int32 value);

  // optional bool sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline bool sex() const;
  inline void set_sex(bool value);

  // optional int32 vip = 8;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 8;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.TeammemberInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_captain();
  inline void clear_has_captain();
  inline void set_has_ready();
  inline void clear_has_ready();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* charname_;
  ::google::protobuf::int32 fight_;
  bool captain_;
  bool ready_;
  bool sex_;
  ::google::protobuf::int32 job_;
  ::google::protobuf::int32 vip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static TeammemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqQuickJoinTeam : public ::google::protobuf::Message {
 public:
  ClientReqQuickJoinTeam();
  virtual ~ClientReqQuickJoinTeam();

  ClientReqQuickJoinTeam(const ClientReqQuickJoinTeam& from);

  inline ClientReqQuickJoinTeam& operator=(const ClientReqQuickJoinTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqQuickJoinTeam& default_instance();

  void Swap(ClientReqQuickJoinTeam* other);

  // implements Message ----------------------------------------------

  ClientReqQuickJoinTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqQuickJoinTeam& from);
  void MergeFrom(const ClientReqQuickJoinTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqQuickJoinTeam)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqQuickJoinTeam* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqCreateTeam : public ::google::protobuf::Message {
 public:
  ClientReqCreateTeam();
  virtual ~ClientReqCreateTeam();

  ClientReqCreateTeam(const ClientReqCreateTeam& from);

  inline ClientReqCreateTeam& operator=(const ClientReqCreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqCreateTeam& default_instance();

  void Swap(ClientReqCreateTeam* other);

  // implements Message ----------------------------------------------

  ClientReqCreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqCreateTeam& from);
  void MergeFrom(const ClientReqCreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 fight = 2;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 2;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional bool flag = 4;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 4;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqCreateTeam)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 fight_;
  ::std::string* password_;
  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqCreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class WSToClentReqCreateTeam : public ::google::protobuf::Message {
 public:
  WSToClentReqCreateTeam();
  virtual ~WSToClentReqCreateTeam();

  WSToClentReqCreateTeam(const WSToClentReqCreateTeam& from);

  inline WSToClentReqCreateTeam& operator=(const WSToClentReqCreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClentReqCreateTeam& default_instance();

  void Swap(WSToClentReqCreateTeam* other);

  // implements Message ----------------------------------------------

  WSToClentReqCreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClentReqCreateTeam& from);
  void MergeFrom(const WSToClentReqCreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int64 teamid = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional bool flag = 4;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 4;
  inline bool flag() const;
  inline void set_flag(bool value);

  // optional bool code = 5;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 5;
  inline bool code() const;
  inline void set_code(bool value);

  // optional int32 fight = 6;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 6;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClentReqCreateTeam)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_fight();
  inline void clear_has_fight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int64 teamid_;
  bool flag_;
  bool code_;
  ::google::protobuf::int32 fight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClentReqCreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqTeamReady : public ::google::protobuf::Message {
 public:
  ClientReqTeamReady();
  virtual ~ClientReqTeamReady();

  ClientReqTeamReady(const ClientReqTeamReady& from);

  inline ClientReqTeamReady& operator=(const ClientReqTeamReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqTeamReady& default_instance();

  void Swap(ClientReqTeamReady* other);

  // implements Message ----------------------------------------------

  ClientReqTeamReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqTeamReady& from);
  void MergeFrom(const ClientReqTeamReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqTeamReady)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqTeamReady* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientReqTeamReady : public ::google::protobuf::Message {
 public:
  WSToClientReqTeamReady();
  virtual ~WSToClientReqTeamReady();

  WSToClientReqTeamReady(const WSToClientReqTeamReady& from);

  inline WSToClientReqTeamReady& operator=(const WSToClientReqTeamReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientReqTeamReady& default_instance();

  void Swap(WSToClientReqTeamReady* other);

  // implements Message ----------------------------------------------

  WSToClientReqTeamReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientReqTeamReady& from);
  void MergeFrom(const WSToClientReqTeamReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientReqTeamReady)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientReqTeamReady* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientSimReady : public ::google::protobuf::Message {
 public:
  WSToClientSimReady();
  virtual ~WSToClientSimReady();

  WSToClientSimReady(const WSToClientSimReady& from);

  inline WSToClientSimReady& operator=(const WSToClientSimReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientSimReady& default_instance();

  void Swap(WSToClientSimReady* other);

  // implements Message ----------------------------------------------

  WSToClientSimReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientSimReady& from);
  void MergeFrom(const WSToClientSimReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientSimReady)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientSimReady* default_instance_;
};
// -------------------------------------------------------------------

class ClientSimFindTeamMember : public ::google::protobuf::Message {
 public:
  ClientSimFindTeamMember();
  virtual ~ClientSimFindTeamMember();

  ClientSimFindTeamMember(const ClientSimFindTeamMember& from);

  inline ClientSimFindTeamMember& operator=(const ClientSimFindTeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSimFindTeamMember& default_instance();

  void Swap(ClientSimFindTeamMember* other);

  // implements Message ----------------------------------------------

  ClientSimFindTeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientSimFindTeamMember& from);
  void MergeFrom(const ClientSimFindTeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientSimFindTeamMember)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientSimFindTeamMember* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientFindTeamMember : public ::google::protobuf::Message {
 public:
  WSToClientFindTeamMember();
  virtual ~WSToClientFindTeamMember();

  WSToClientFindTeamMember(const WSToClientFindTeamMember& from);

  inline WSToClientFindTeamMember& operator=(const WSToClientFindTeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientFindTeamMember& default_instance();

  void Swap(WSToClientFindTeamMember* other);

  // implements Message ----------------------------------------------

  WSToClientFindTeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientFindTeamMember& from);
  void MergeFrom(const WSToClientFindTeamMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional bool code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline bool code() const;
  inline void set_code(bool value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientFindTeamMember)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;
  ::google::protobuf::int32 mapid_;
  bool code_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientFindTeamMember* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqKickMember : public ::google::protobuf::Message {
 public:
  ClientReqKickMember();
  virtual ~ClientReqKickMember();

  ClientReqKickMember(const ClientReqKickMember& from);

  inline ClientReqKickMember& operator=(const ClientReqKickMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqKickMember& default_instance();

  void Swap(ClientReqKickMember* other);

  // implements Message ----------------------------------------------

  ClientReqKickMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqKickMember& from);
  void MergeFrom(const ClientReqKickMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqKickMember)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqKickMember* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientKickMember : public ::google::protobuf::Message {
 public:
  WSToClientKickMember();
  virtual ~WSToClientKickMember();

  WSToClientKickMember(const WSToClientKickMember& from);

  inline WSToClientKickMember& operator=(const WSToClientKickMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientKickMember& default_instance();

  void Swap(WSToClientKickMember* other);

  // implements Message ----------------------------------------------

  WSToClientKickMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientKickMember& from);
  void MergeFrom(const WSToClientKickMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientKickMember)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientKickMember* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientSimKick : public ::google::protobuf::Message {
 public:
  WSToClientSimKick();
  virtual ~WSToClientSimKick();

  WSToClientSimKick(const WSToClientSimKick& from);

  inline WSToClientSimKick& operator=(const WSToClientSimKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientSimKick& default_instance();

  void Swap(WSToClientSimKick* other);

  // implements Message ----------------------------------------------

  WSToClientSimKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientSimKick& from);
  void MergeFrom(const WSToClientSimKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientSimKick)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientSimKick* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqEnterTeamMap : public ::google::protobuf::Message {
 public:
  ClientReqEnterTeamMap();
  virtual ~ClientReqEnterTeamMap();

  ClientReqEnterTeamMap(const ClientReqEnterTeamMap& from);

  inline ClientReqEnterTeamMap& operator=(const ClientReqEnterTeamMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqEnterTeamMap& default_instance();

  void Swap(ClientReqEnterTeamMap* other);

  // implements Message ----------------------------------------------

  ClientReqEnterTeamMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqEnterTeamMap& from);
  void MergeFrom(const ClientReqEnterTeamMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqEnterTeamMap)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqEnterTeamMap* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientEnterTeamMap : public ::google::protobuf::Message {
 public:
  WSToClientEnterTeamMap();
  virtual ~WSToClientEnterTeamMap();

  WSToClientEnterTeamMap(const WSToClientEnterTeamMap& from);

  inline WSToClientEnterTeamMap& operator=(const WSToClientEnterTeamMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientEnterTeamMap& default_instance();

  void Swap(WSToClientEnterTeamMap* other);

  // implements Message ----------------------------------------------

  WSToClientEnterTeamMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientEnterTeamMap& from);
  void MergeFrom(const WSToClientEnterTeamMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 instance = 2;
  inline bool has_instance() const;
  inline void clear_instance();
  static const int kInstanceFieldNumber = 2;
  inline ::google::protobuf::int64 instance() const;
  inline void set_instance(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientEnterTeamMap)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_instance();
  inline void clear_has_instance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instance_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientEnterTeamMap* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientSimInstance : public ::google::protobuf::Message {
 public:
  WSToClientSimInstance();
  virtual ~WSToClientSimInstance();

  WSToClientSimInstance(const WSToClientSimInstance& from);

  inline WSToClientSimInstance& operator=(const WSToClientSimInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientSimInstance& default_instance();

  void Swap(WSToClientSimInstance* other);

  // implements Message ----------------------------------------------

  WSToClientSimInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientSimInstance& from);
  void MergeFrom(const WSToClientSimInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 instance = 1;
  inline bool has_instance() const;
  inline void clear_instance();
  static const int kInstanceFieldNumber = 1;
  inline ::google::protobuf::int64 instance() const;
  inline void set_instance(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientSimInstance)
 private:
  inline void set_has_instance();
  inline void clear_has_instance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 instance_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientSimInstance* default_instance_;
};
// -------------------------------------------------------------------

class GMToClientSimHarmRank : public ::google::protobuf::Message {
 public:
  GMToClientSimHarmRank();
  virtual ~GMToClientSimHarmRank();

  GMToClientSimHarmRank(const GMToClientSimHarmRank& from);

  inline GMToClientSimHarmRank& operator=(const GMToClientSimHarmRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToClientSimHarmRank& default_instance();

  void Swap(GMToClientSimHarmRank* other);

  // implements Message ----------------------------------------------

  GMToClientSimHarmRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToClientSimHarmRank& from);
  void MergeFrom(const GMToClientSimHarmRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.HarmRank harminfo = 1;
  inline int harminfo_size() const;
  inline void clear_harminfo();
  static const int kHarminfoFieldNumber = 1;
  inline const ::MapInstanceProto::HarmRank& harminfo(int index) const;
  inline ::MapInstanceProto::HarmRank* mutable_harminfo(int index);
  inline ::MapInstanceProto::HarmRank* add_harminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::HarmRank >&
      harminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::HarmRank >*
      mutable_harminfo();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToClientSimHarmRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::HarmRank > harminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToClientSimHarmRank* default_instance_;
};
// -------------------------------------------------------------------

class HarmRank : public ::google::protobuf::Message {
 public:
  HarmRank();
  virtual ~HarmRank();

  HarmRank(const HarmRank& from);

  inline HarmRank& operator=(const HarmRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarmRank& default_instance();

  void Swap(HarmRank* other);

  // implements Message ----------------------------------------------

  HarmRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HarmRank& from);
  void MergeFrom(const HarmRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional float harm = 3;
  inline bool has_harm() const;
  inline void clear_harm();
  static const int kHarmFieldNumber = 3;
  inline float harm() const;
  inline void set_harm(float value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.HarmRank)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_harm();
  inline void clear_has_harm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* charname_;
  float harm_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static HarmRank* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientSimOnline : public ::google::protobuf::Message {
 public:
  WSToClientSimOnline();
  virtual ~WSToClientSimOnline();

  WSToClientSimOnline(const WSToClientSimOnline& from);

  inline WSToClientSimOnline& operator=(const WSToClientSimOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientSimOnline& default_instance();

  void Swap(WSToClientSimOnline* other);

  // implements Message ----------------------------------------------

  WSToClientSimOnline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientSimOnline& from);
  void MergeFrom(const WSToClientSimOnline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional bool online = 2;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 2;
  inline bool online() const;
  inline void set_online(bool value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientSimOnline)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_online();
  inline void clear_has_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  bool online_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientSimOnline* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqExitTeam : public ::google::protobuf::Message {
 public:
  ClientReqExitTeam();
  virtual ~ClientReqExitTeam();

  ClientReqExitTeam(const ClientReqExitTeam& from);

  inline ClientReqExitTeam& operator=(const ClientReqExitTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqExitTeam& default_instance();

  void Swap(ClientReqExitTeam* other);

  // implements Message ----------------------------------------------

  ClientReqExitTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqExitTeam& from);
  void MergeFrom(const ClientReqExitTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqExitTeam)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqExitTeam* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientExitTeam : public ::google::protobuf::Message {
 public:
  WSToClientExitTeam();
  virtual ~WSToClientExitTeam();

  WSToClientExitTeam(const WSToClientExitTeam& from);

  inline WSToClientExitTeam& operator=(const WSToClientExitTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientExitTeam& default_instance();

  void Swap(WSToClientExitTeam* other);

  // implements Message ----------------------------------------------

  WSToClientExitTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientExitTeam& from);
  void MergeFrom(const WSToClientExitTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientExitTeam)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientExitTeam* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientSimExitTeam : public ::google::protobuf::Message {
 public:
  WSToClientSimExitTeam();
  virtual ~WSToClientSimExitTeam();

  WSToClientSimExitTeam(const WSToClientSimExitTeam& from);

  inline WSToClientSimExitTeam& operator=(const WSToClientSimExitTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientSimExitTeam& default_instance();

  void Swap(WSToClientSimExitTeam* other);

  // implements Message ----------------------------------------------

  WSToClientSimExitTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientSimExitTeam& from);
  void MergeFrom(const WSToClientSimExitTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int64 captain = 2;
  inline bool has_captain() const;
  inline void clear_captain();
  static const int kCaptainFieldNumber = 2;
  inline ::google::protobuf::int64 captain() const;
  inline void set_captain(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientSimExitTeam)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_captain();
  inline void clear_has_captain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 captain_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientSimExitTeam* default_instance_;
};
// -------------------------------------------------------------------

class GMToWSDelTeam : public ::google::protobuf::Message {
 public:
  GMToWSDelTeam();
  virtual ~GMToWSDelTeam();

  GMToWSDelTeam(const GMToWSDelTeam& from);

  inline GMToWSDelTeam& operator=(const GMToWSDelTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToWSDelTeam& default_instance();

  void Swap(GMToWSDelTeam* other);

  // implements Message ----------------------------------------------

  GMToWSDelTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToWSDelTeam& from);
  void MergeFrom(const GMToWSDelTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToWSDelTeam)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToWSDelTeam* default_instance_;
};
// -------------------------------------------------------------------

class GMToClientLottery : public ::google::protobuf::Message {
 public:
  GMToClientLottery();
  virtual ~GMToClientLottery();

  GMToClientLottery(const GMToClientLottery& from);

  inline GMToClientLottery& operator=(const GMToClientLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToClientLottery& default_instance();

  void Swap(GMToClientLottery* other);

  // implements Message ----------------------------------------------

  GMToClientLottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToClientLottery& from);
  void MergeFrom(const GMToClientLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 FlopID = 2;
  inline bool has_flopid() const;
  inline void clear_flopid();
  static const int kFlopIDFieldNumber = 2;
  inline ::google::protobuf::int32 flopid() const;
  inline void set_flopid(::google::protobuf::int32 value);

  // optional int32 ItemID = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 ItemNum = 4;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // optional int32 BindType = 5;
  inline bool has_bindtype() const;
  inline void clear_bindtype();
  static const int kBindTypeFieldNumber = 5;
  inline ::google::protobuf::int32 bindtype() const;
  inline void set_bindtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToClientLottery)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_flopid();
  inline void clear_has_flopid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_bindtype();
  inline void clear_has_bindtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 flopid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemnum_;
  ::google::protobuf::int32 bindtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToClientLottery* default_instance_;
};
// -------------------------------------------------------------------

class SimSweepInstanceAward : public ::google::protobuf::Message {
 public:
  SimSweepInstanceAward();
  virtual ~SimSweepInstanceAward();

  SimSweepInstanceAward(const SimSweepInstanceAward& from);

  inline SimSweepInstanceAward& operator=(const SimSweepInstanceAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimSweepInstanceAward& default_instance();

  void Swap(SimSweepInstanceAward* other);

  // implements Message ----------------------------------------------

  SimSweepInstanceAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimSweepInstanceAward& from);
  void MergeFrom(const SimSweepInstanceAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // required int32 elapsedTime = 2;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 2;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);

  // required int32 awardMoney = 3;
  inline bool has_awardmoney() const;
  inline void clear_awardmoney();
  static const int kAwardMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 awardmoney() const;
  inline void set_awardmoney(::google::protobuf::int32 value);

  // required int32 awardExp = 4;
  inline bool has_awardexp() const;
  inline void clear_awardexp();
  static const int kAwardExpFieldNumber = 4;
  inline ::google::protobuf::int32 awardexp() const;
  inline void set_awardexp(::google::protobuf::int32 value);

  // required int32 awardInfuriate = 5;
  inline bool has_awardinfuriate() const;
  inline void clear_awardinfuriate();
  static const int kAwardInfuriateFieldNumber = 5;
  inline ::google::protobuf::int32 awardinfuriate() const;
  inline void set_awardinfuriate(::google::protobuf::int32 value);

  // repeated .CharLogin.ClientItemInfo items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::CharLogin::ClientItemInfo& items(int index) const;
  inline ::CharLogin::ClientItemInfo* mutable_items(int index);
  inline ::CharLogin::ClientItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SimSweepInstanceAward)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_elapsedtime();
  inline void clear_has_elapsedtime();
  inline void set_has_awardmoney();
  inline void clear_has_awardmoney();
  inline void set_has_awardexp();
  inline void clear_has_awardexp();
  inline void set_has_awardinfuriate();
  inline void clear_has_awardinfuriate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 elapsedtime_;
  ::google::protobuf::int32 awardmoney_;
  ::google::protobuf::int32 awardexp_;
  ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo > items_;
  ::google::protobuf::int32 awardinfuriate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SimSweepInstanceAward* default_instance_;
};
// -------------------------------------------------------------------

class SysInstanceRanking : public ::google::protobuf::Message {
 public:
  SysInstanceRanking();
  virtual ~SysInstanceRanking();

  SysInstanceRanking(const SysInstanceRanking& from);

  inline SysInstanceRanking& operator=(const SysInstanceRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysInstanceRanking& default_instance();

  void Swap(SysInstanceRanking* other);

  // implements Message ----------------------------------------------

  SysInstanceRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysInstanceRanking& from);
  void MergeFrom(const SysInstanceRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 elapsedTime = 2;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 2;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 charId = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 4;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.SysInstanceRanking)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_elapsedtime();
  inline void clear_has_elapsedtime();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 elapsedtime_;
  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static SysInstanceRanking* default_instance_;
};
// -------------------------------------------------------------------

class AckInstanceRanking : public ::google::protobuf::Message {
 public:
  AckInstanceRanking();
  virtual ~AckInstanceRanking();

  AckInstanceRanking(const AckInstanceRanking& from);

  inline AckInstanceRanking& operator=(const AckInstanceRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckInstanceRanking& default_instance();

  void Swap(AckInstanceRanking* other);

  // implements Message ----------------------------------------------

  AckInstanceRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckInstanceRanking& from);
  void MergeFrom(const AckInstanceRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckInstanceRanking)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckInstanceRanking* default_instance_;
};
// -------------------------------------------------------------------

class RetInstanceRanking : public ::google::protobuf::Message {
 public:
  RetInstanceRanking();
  virtual ~RetInstanceRanking();

  RetInstanceRanking(const RetInstanceRanking& from);

  inline RetInstanceRanking& operator=(const RetInstanceRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInstanceRanking& default_instance();

  void Swap(RetInstanceRanking* other);

  // implements Message ----------------------------------------------

  RetInstanceRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInstanceRanking& from);
  void MergeFrom(const RetInstanceRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 elapsedTime = 2;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 2;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);

  // optional string charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInstanceRanking)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_elapsedtime();
  inline void clear_has_elapsedtime();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 elapsedtime_;
  ::std::string* charname_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInstanceRanking* default_instance_;
};
// -------------------------------------------------------------------

class GetInstanceRanking : public ::google::protobuf::Message {
 public:
  GetInstanceRanking();
  virtual ~GetInstanceRanking();

  GetInstanceRanking(const GetInstanceRanking& from);

  inline GetInstanceRanking& operator=(const GetInstanceRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInstanceRanking& default_instance();

  void Swap(GetInstanceRanking* other);

  // implements Message ----------------------------------------------

  GetInstanceRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetInstanceRanking& from);
  void MergeFrom(const GetInstanceRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GetInstanceRanking)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GetInstanceRanking* default_instance_;
};
// -------------------------------------------------------------------

class ReturnInstanceRanking : public ::google::protobuf::Message {
 public:
  ReturnInstanceRanking();
  virtual ~ReturnInstanceRanking();

  ReturnInstanceRanking(const ReturnInstanceRanking& from);

  inline ReturnInstanceRanking& operator=(const ReturnInstanceRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnInstanceRanking& default_instance();

  void Swap(ReturnInstanceRanking* other);

  // implements Message ----------------------------------------------

  ReturnInstanceRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnInstanceRanking& from);
  void MergeFrom(const ReturnInstanceRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 elapsedTime = 2;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 2;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReturnInstanceRanking)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_elapsedtime();
  inline void clear_has_elapsedtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 elapsedtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReturnInstanceRanking* default_instance_;
};
// -------------------------------------------------------------------

class GroupInstance : public ::google::protobuf::Message {
 public:
  GroupInstance();
  virtual ~GroupInstance();

  GroupInstance(const GroupInstance& from);

  inline GroupInstance& operator=(const GroupInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupInstance& default_instance();

  void Swap(GroupInstance* other);

  // implements Message ----------------------------------------------

  GroupInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupInstance& from);
  void MergeFrom(const GroupInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.InstanceGroupList groupList = 1;
  inline int grouplist_size() const;
  inline void clear_grouplist();
  static const int kGroupListFieldNumber = 1;
  inline const ::MapInstanceProto::InstanceGroupList& grouplist(int index) const;
  inline ::MapInstanceProto::InstanceGroupList* mutable_grouplist(int index);
  inline ::MapInstanceProto::InstanceGroupList* add_grouplist();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceGroupList >&
      grouplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceGroupList >*
      mutable_grouplist();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GroupInstance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceGroupList > grouplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GroupInstance* default_instance_;
};
// -------------------------------------------------------------------

class InstanceGroupList : public ::google::protobuf::Message {
 public:
  InstanceGroupList();
  virtual ~InstanceGroupList();

  InstanceGroupList(const InstanceGroupList& from);

  inline InstanceGroupList& operator=(const InstanceGroupList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceGroupList& default_instance();

  void Swap(InstanceGroupList* other);

  // implements Message ----------------------------------------------

  InstanceGroupList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstanceGroupList& from);
  void MergeFrom(const InstanceGroupList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 buynum = 3;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuynumFieldNumber = 3;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.InstanceGroupList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 buynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static InstanceGroupList* default_instance_;
};
// -------------------------------------------------------------------

class ReqCostByGroupInstance : public ::google::protobuf::Message {
 public:
  ReqCostByGroupInstance();
  virtual ~ReqCostByGroupInstance();

  ReqCostByGroupInstance(const ReqCostByGroupInstance& from);

  inline ReqCostByGroupInstance& operator=(const ReqCostByGroupInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCostByGroupInstance& default_instance();

  void Swap(ReqCostByGroupInstance* other);

  // implements Message ----------------------------------------------

  ReqCostByGroupInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCostByGroupInstance& from);
  void MergeFrom(const ReqCostByGroupInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqCostByGroupInstance)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqCostByGroupInstance* default_instance_;
};
// -------------------------------------------------------------------

class RetCostByGroupInstance : public ::google::protobuf::Message {
 public:
  RetCostByGroupInstance();
  virtual ~RetCostByGroupInstance();

  RetCostByGroupInstance(const RetCostByGroupInstance& from);

  inline RetCostByGroupInstance& operator=(const RetCostByGroupInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetCostByGroupInstance& default_instance();

  void Swap(RetCostByGroupInstance* other);

  // implements Message ----------------------------------------------

  RetCostByGroupInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetCostByGroupInstance& from);
  void MergeFrom(const RetCostByGroupInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 buynum = 4;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuynumFieldNumber = 4;
  inline ::google::protobuf::int32 buynum() const;
  inline void set_buynum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetCostByGroupInstance)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 buynum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetCostByGroupInstance* default_instance_;
};
// -------------------------------------------------------------------

class ReqArenaRefresh : public ::google::protobuf::Message {
 public:
  ReqArenaRefresh();
  virtual ~ReqArenaRefresh();

  ReqArenaRefresh(const ReqArenaRefresh& from);

  inline ReqArenaRefresh& operator=(const ReqArenaRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqArenaRefresh& default_instance();

  void Swap(ReqArenaRefresh* other);

  // implements Message ----------------------------------------------

  ReqArenaRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqArenaRefresh& from);
  void MergeFrom(const ReqArenaRefresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqArenaRefresh)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqArenaRefresh* default_instance_;
};
// -------------------------------------------------------------------

class RetArenaRefresh : public ::google::protobuf::Message {
 public:
  RetArenaRefresh();
  virtual ~RetArenaRefresh();

  RetArenaRefresh(const RetArenaRefresh& from);

  inline RetArenaRefresh& operator=(const RetArenaRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetArenaRefresh& default_instance();

  void Swap(RetArenaRefresh* other);

  // implements Message ----------------------------------------------

  RetArenaRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetArenaRefresh& from);
  void MergeFrom(const RetArenaRefresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // required int32 alreadyRefresh = 2;
  inline bool has_alreadyrefresh() const;
  inline void clear_alreadyrefresh();
  static const int kAlreadyRefreshFieldNumber = 2;
  inline ::google::protobuf::int32 alreadyrefresh() const;
  inline void set_alreadyrefresh(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.OtherPlayerArenaInfo otherInfo = 3;
  inline int otherinfo_size() const;
  inline void clear_otherinfo();
  static const int kOtherInfoFieldNumber = 3;
  inline const ::MapInstanceProto::OtherPlayerArenaInfo& otherinfo(int index) const;
  inline ::MapInstanceProto::OtherPlayerArenaInfo* mutable_otherinfo(int index);
  inline ::MapInstanceProto::OtherPlayerArenaInfo* add_otherinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >&
      otherinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >*
      mutable_otherinfo();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetArenaRefresh)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_alreadyrefresh();
  inline void clear_has_alreadyrefresh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 alreadyrefresh_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo > otherinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetArenaRefresh* default_instance_;
};
// -------------------------------------------------------------------

class ReqWSArenaChallPlayer : public ::google::protobuf::Message {
 public:
  ReqWSArenaChallPlayer();
  virtual ~ReqWSArenaChallPlayer();

  ReqWSArenaChallPlayer(const ReqWSArenaChallPlayer& from);

  inline ReqWSArenaChallPlayer& operator=(const ReqWSArenaChallPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWSArenaChallPlayer& default_instance();

  void Swap(ReqWSArenaChallPlayer* other);

  // implements Message ----------------------------------------------

  ReqWSArenaChallPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWSArenaChallPlayer& from);
  void MergeFrom(const ReqWSArenaChallPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rankings = 1;
  inline int rankings_size() const;
  inline void clear_rankings();
  static const int kRankingsFieldNumber = 1;
  inline ::google::protobuf::int32 rankings(int index) const;
  inline void set_rankings(int index, ::google::protobuf::int32 value);
  inline void add_rankings(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rankings() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rankings();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqWSArenaChallPlayer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rankings_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqWSArenaChallPlayer* default_instance_;
};
// -------------------------------------------------------------------

class RetWSArenaChallPlayer : public ::google::protobuf::Message {
 public:
  RetWSArenaChallPlayer();
  virtual ~RetWSArenaChallPlayer();

  RetWSArenaChallPlayer(const RetWSArenaChallPlayer& from);

  inline RetWSArenaChallPlayer& operator=(const RetWSArenaChallPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetWSArenaChallPlayer& default_instance();

  void Swap(RetWSArenaChallPlayer* other);

  // implements Message ----------------------------------------------

  RetWSArenaChallPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetWSArenaChallPlayer& from);
  void MergeFrom(const RetWSArenaChallPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.OtherPlayerArenaInfo playerInfo = 1;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::MapInstanceProto::OtherPlayerArenaInfo& playerinfo(int index) const;
  inline ::MapInstanceProto::OtherPlayerArenaInfo* mutable_playerinfo(int index);
  inline ::MapInstanceProto::OtherPlayerArenaInfo* add_playerinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >&
      playerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >*
      mutable_playerinfo();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetWSArenaChallPlayer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo > playerinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetWSArenaChallPlayer* default_instance_;
};
// -------------------------------------------------------------------

class ReqWSArenaChallRank : public ::google::protobuf::Message {
 public:
  ReqWSArenaChallRank();
  virtual ~ReqWSArenaChallRank();

  ReqWSArenaChallRank(const ReqWSArenaChallRank& from);

  inline ReqWSArenaChallRank& operator=(const ReqWSArenaChallRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWSArenaChallRank& default_instance();

  void Swap(ReqWSArenaChallRank* other);

  // implements Message ----------------------------------------------

  ReqWSArenaChallRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWSArenaChallRank& from);
  void MergeFrom(const ReqWSArenaChallRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rankings = 1;
  inline int rankings_size() const;
  inline void clear_rankings();
  static const int kRankingsFieldNumber = 1;
  inline ::google::protobuf::int32 rankings(int index) const;
  inline void set_rankings(int index, ::google::protobuf::int32 value);
  inline void add_rankings(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rankings() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rankings();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqWSArenaChallRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rankings_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqWSArenaChallRank* default_instance_;
};
// -------------------------------------------------------------------

class GMToClientSweepAllInstance : public ::google::protobuf::Message {
 public:
  GMToClientSweepAllInstance();
  virtual ~GMToClientSweepAllInstance();

  GMToClientSweepAllInstance(const GMToClientSweepAllInstance& from);

  inline GMToClientSweepAllInstance& operator=(const GMToClientSweepAllInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToClientSweepAllInstance& default_instance();

  void Swap(GMToClientSweepAllInstance* other);

  // implements Message ----------------------------------------------

  GMToClientSweepAllInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToClientSweepAllInstance& from);
  void MergeFrom(const GMToClientSweepAllInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.SimSweepInstanceAward ssia = 2;
  inline int ssia_size() const;
  inline void clear_ssia();
  static const int kSsiaFieldNumber = 2;
  inline const ::MapInstanceProto::SimSweepInstanceAward& ssia(int index) const;
  inline ::MapInstanceProto::SimSweepInstanceAward* mutable_ssia(int index);
  inline ::MapInstanceProto::SimSweepInstanceAward* add_ssia();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::SimSweepInstanceAward >&
      ssia() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::SimSweepInstanceAward >*
      mutable_ssia();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GMToClientSweepAllInstance)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::SimSweepInstanceAward > ssia_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GMToClientSweepAllInstance* default_instance_;
};
// -------------------------------------------------------------------

class EliteInstance : public ::google::protobuf::Message {
 public:
  EliteInstance();
  virtual ~EliteInstance();

  EliteInstance(const EliteInstance& from);

  inline EliteInstance& operator=(const EliteInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EliteInstance& default_instance();

  void Swap(EliteInstance* other);

  // implements Message ----------------------------------------------

  EliteInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EliteInstance& from);
  void MergeFrom(const EliteInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 reset = 2;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 2;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.InstanceEliteList list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::MapInstanceProto::InstanceEliteList& list(int index) const;
  inline ::MapInstanceProto::InstanceEliteList* mutable_list(int index);
  inline ::MapInstanceProto::InstanceEliteList* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceEliteList >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceEliteList >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.EliteInstance)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 reset_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceEliteList > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static EliteInstance* default_instance_;
};
// -------------------------------------------------------------------

class InstanceEliteList : public ::google::protobuf::Message {
 public:
  InstanceEliteList();
  virtual ~InstanceEliteList();

  InstanceEliteList(const InstanceEliteList& from);

  inline InstanceEliteList& operator=(const InstanceEliteList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceEliteList& default_instance();

  void Swap(InstanceEliteList* other);

  // implements Message ----------------------------------------------

  InstanceEliteList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstanceEliteList& from);
  void MergeFrom(const InstanceEliteList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.InstanceEliteList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static InstanceEliteList* default_instance_;
};
// -------------------------------------------------------------------

class CauchemarInstance : public ::google::protobuf::Message {
 public:
  CauchemarInstance();
  virtual ~CauchemarInstance();

  CauchemarInstance(const CauchemarInstance& from);

  inline CauchemarInstance& operator=(const CauchemarInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CauchemarInstance& default_instance();

  void Swap(CauchemarInstance* other);

  // implements Message ----------------------------------------------

  CauchemarInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CauchemarInstance& from);
  void MergeFrom(const CauchemarInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 reset = 2;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 2;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.InstanceCauchemarList list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline const ::MapInstanceProto::InstanceCauchemarList& list(int index) const;
  inline ::MapInstanceProto::InstanceCauchemarList* mutable_list(int index);
  inline ::MapInstanceProto::InstanceCauchemarList* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceCauchemarList >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceCauchemarList >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.CauchemarInstance)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 reset_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceCauchemarList > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static CauchemarInstance* default_instance_;
};
// -------------------------------------------------------------------

class InstanceCauchemarList : public ::google::protobuf::Message {
 public:
  InstanceCauchemarList();
  virtual ~InstanceCauchemarList();

  InstanceCauchemarList(const InstanceCauchemarList& from);

  inline InstanceCauchemarList& operator=(const InstanceCauchemarList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceCauchemarList& default_instance();

  void Swap(InstanceCauchemarList* other);

  // implements Message ----------------------------------------------

  InstanceCauchemarList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstanceCauchemarList& from);
  void MergeFrom(const InstanceCauchemarList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.InstanceCauchemarList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static InstanceCauchemarList* default_instance_;
};
// -------------------------------------------------------------------

class ReqInviteMemberList : public ::google::protobuf::Message {
 public:
  ReqInviteMemberList();
  virtual ~ReqInviteMemberList();

  ReqInviteMemberList(const ReqInviteMemberList& from);

  inline ReqInviteMemberList& operator=(const ReqInviteMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInviteMemberList& default_instance();

  void Swap(ReqInviteMemberList* other);

  // implements Message ----------------------------------------------

  ReqInviteMemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInviteMemberList& from);
  void MergeFrom(const ReqInviteMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 ntype = 2;
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNtypeFieldNumber = 2;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqInviteMemberList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_ntype();
  inline void clear_has_ntype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 ntype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInviteMemberList* default_instance_;
};
// -------------------------------------------------------------------

class RetInviteMemberList : public ::google::protobuf::Message {
 public:
  RetInviteMemberList();
  virtual ~RetInviteMemberList();

  RetInviteMemberList(const RetInviteMemberList& from);

  inline RetInviteMemberList& operator=(const RetInviteMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInviteMemberList& default_instance();

  void Swap(RetInviteMemberList* other);

  // implements Message ----------------------------------------------

  RetInviteMemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInviteMemberList& from);
  void MergeFrom(const RetInviteMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ntype = 1;
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNtypeFieldNumber = 1;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.InviteMemberList memberlist = 2;
  inline int memberlist_size() const;
  inline void clear_memberlist();
  static const int kMemberlistFieldNumber = 2;
  inline const ::MapInstanceProto::InviteMemberList& memberlist(int index) const;
  inline ::MapInstanceProto::InviteMemberList* mutable_memberlist(int index);
  inline ::MapInstanceProto::InviteMemberList* add_memberlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InviteMemberList >&
      memberlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InviteMemberList >*
      mutable_memberlist();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInviteMemberList)
 private:
  inline void set_has_ntype();
  inline void clear_has_ntype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InviteMemberList > memberlist_;
  ::google::protobuf::int32 ntype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInviteMemberList* default_instance_;
};
// -------------------------------------------------------------------

class InviteMemberList : public ::google::protobuf::Message {
 public:
  InviteMemberList();
  virtual ~InviteMemberList();

  InviteMemberList(const InviteMemberList& from);

  inline InviteMemberList& operator=(const InviteMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteMemberList& default_instance();

  void Swap(InviteMemberList* other);

  // implements Message ----------------------------------------------

  InviteMemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteMemberList& from);
  void MergeFrom(const InviteMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 fight = 4;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 4;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.InviteMemberList)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_fight();
  inline void clear_has_fight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* name_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 fight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static InviteMemberList* default_instance_;
};
// -------------------------------------------------------------------

class ReqInviteMember : public ::google::protobuf::Message {
 public:
  ReqInviteMember();
  virtual ~ReqInviteMember();

  ReqInviteMember(const ReqInviteMember& from);

  inline ReqInviteMember& operator=(const ReqInviteMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInviteMember& default_instance();

  void Swap(ReqInviteMember* other);

  // implements Message ----------------------------------------------

  ReqInviteMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInviteMember& from);
  void MergeFrom(const ReqInviteMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqInviteMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInviteMember* default_instance_;
};
// -------------------------------------------------------------------

class RetInviteMember : public ::google::protobuf::Message {
 public:
  RetInviteMember();
  virtual ~RetInviteMember();

  RetInviteMember(const RetInviteMember& from);

  inline RetInviteMember& operator=(const RetInviteMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInviteMember& default_instance();

  void Swap(RetInviteMember* other);

  // implements Message ----------------------------------------------

  RetInviteMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInviteMember& from);
  void MergeFrom(const RetInviteMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInviteMember)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInviteMember* default_instance_;
};
// -------------------------------------------------------------------

class RetInvitedMember : public ::google::protobuf::Message {
 public:
  RetInvitedMember();
  virtual ~RetInvitedMember();

  RetInvitedMember(const RetInvitedMember& from);

  inline RetInvitedMember& operator=(const RetInvitedMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetInvitedMember& default_instance();

  void Swap(RetInvitedMember* other);

  // implements Message ----------------------------------------------

  RetInvitedMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetInvitedMember& from);
  void MergeFrom(const RetInvitedMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.RetInvitedMember)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;
  ::std::string* name_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static RetInvitedMember* default_instance_;
};
// -------------------------------------------------------------------

class AckChallengeInfo : public ::google::protobuf::Message {
 public:
  AckChallengeInfo();
  virtual ~AckChallengeInfo();

  AckChallengeInfo(const AckChallengeInfo& from);

  inline AckChallengeInfo& operator=(const AckChallengeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckChallengeInfo& default_instance();

  void Swap(AckChallengeInfo* other);

  // implements Message ----------------------------------------------

  AckChallengeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckChallengeInfo& from);
  void MergeFrom(const AckChallengeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 maxlayer = 2;
  inline bool has_maxlayer() const;
  inline void clear_maxlayer();
  static const int kMaxlayerFieldNumber = 2;
  inline ::google::protobuf::int32 maxlayer() const;
  inline void set_maxlayer(::google::protobuf::int32 value);

  // optional bool issweep = 3;
  inline bool has_issweep() const;
  inline void clear_issweep();
  static const int kIssweepFieldNumber = 3;
  inline bool issweep() const;
  inline void set_issweep(bool value);

  // optional int32 sweeptime = 4;
  inline bool has_sweeptime() const;
  inline void clear_sweeptime();
  static const int kSweeptimeFieldNumber = 4;
  inline ::google::protobuf::int32 sweeptime() const;
  inline void set_sweeptime(::google::protobuf::int32 value);

  // optional int32 totaltime = 5;
  inline bool has_totaltime() const;
  inline void clear_totaltime();
  static const int kTotaltimeFieldNumber = 5;
  inline ::google::protobuf::int32 totaltime() const;
  inline void set_totaltime(::google::protobuf::int32 value);

  // optional int32 reset = 6;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 6;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckChallengeInfo)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_maxlayer();
  inline void clear_has_maxlayer();
  inline void set_has_issweep();
  inline void clear_has_issweep();
  inline void set_has_sweeptime();
  inline void clear_has_sweeptime();
  inline void set_has_totaltime();
  inline void clear_has_totaltime();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 maxlayer_;
  bool issweep_;
  ::google::protobuf::int32 sweeptime_;
  ::google::protobuf::int32 totaltime_;
  ::google::protobuf::int32 reset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckChallengeInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqLayerRank : public ::google::protobuf::Message {
 public:
  ReqLayerRank();
  virtual ~ReqLayerRank();

  ReqLayerRank(const ReqLayerRank& from);

  inline ReqLayerRank& operator=(const ReqLayerRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLayerRank& default_instance();

  void Swap(ReqLayerRank* other);

  // implements Message ----------------------------------------------

  ReqLayerRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLayerRank& from);
  void MergeFrom(const ReqLayerRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqLayerRank)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqLayerRank* default_instance_;
};
// -------------------------------------------------------------------

class AckLayerRank : public ::google::protobuf::Message {
 public:
  AckLayerRank();
  virtual ~AckLayerRank();

  AckLayerRank(const AckLayerRank& from);

  inline AckLayerRank& operator=(const AckLayerRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckLayerRank& default_instance();

  void Swap(AckLayerRank* other);

  // implements Message ----------------------------------------------

  AckLayerRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckLayerRank& from);
  void MergeFrom(const AckLayerRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional bytes firstname = 2;
  inline bool has_firstname() const;
  inline void clear_firstname();
  static const int kFirstnameFieldNumber = 2;
  inline const ::std::string& firstname() const;
  inline void set_firstname(const ::std::string& value);
  inline void set_firstname(const char* value);
  inline void set_firstname(const void* value, size_t size);
  inline ::std::string* mutable_firstname();
  inline ::std::string* release_firstname();
  inline void set_allocated_firstname(::std::string* firstname);

  // optional int32 firstlevel = 3;
  inline bool has_firstlevel() const;
  inline void clear_firstlevel();
  static const int kFirstlevelFieldNumber = 3;
  inline ::google::protobuf::int32 firstlevel() const;
  inline void set_firstlevel(::google::protobuf::int32 value);

  // optional int32 firstfight = 4;
  inline bool has_firstfight() const;
  inline void clear_firstfight();
  static const int kFirstfightFieldNumber = 4;
  inline ::google::protobuf::int32 firstfight() const;
  inline void set_firstfight(::google::protobuf::int32 value);

  // optional bytes lastname = 5;
  inline bool has_lastname() const;
  inline void clear_lastname();
  static const int kLastnameFieldNumber = 5;
  inline const ::std::string& lastname() const;
  inline void set_lastname(const ::std::string& value);
  inline void set_lastname(const char* value);
  inline void set_lastname(const void* value, size_t size);
  inline ::std::string* mutable_lastname();
  inline ::std::string* release_lastname();
  inline void set_allocated_lastname(::std::string* lastname);

  // optional int32 lastlevel = 6;
  inline bool has_lastlevel() const;
  inline void clear_lastlevel();
  static const int kLastlevelFieldNumber = 6;
  inline ::google::protobuf::int32 lastlevel() const;
  inline void set_lastlevel(::google::protobuf::int32 value);

  // optional int32 lastfight = 7;
  inline bool has_lastfight() const;
  inline void clear_lastfight();
  static const int kLastfightFieldNumber = 7;
  inline ::google::protobuf::int32 lastfight() const;
  inline void set_lastfight(::google::protobuf::int32 value);

  // optional bytes famousname = 8;
  inline bool has_famousname() const;
  inline void clear_famousname();
  static const int kFamousnameFieldNumber = 8;
  inline const ::std::string& famousname() const;
  inline void set_famousname(const ::std::string& value);
  inline void set_famousname(const char* value);
  inline void set_famousname(const void* value, size_t size);
  inline ::std::string* mutable_famousname();
  inline ::std::string* release_famousname();
  inline void set_allocated_famousname(::std::string* famousname);

  // optional int32 famouslevel = 9;
  inline bool has_famouslevel() const;
  inline void clear_famouslevel();
  static const int kFamouslevelFieldNumber = 9;
  inline ::google::protobuf::int32 famouslevel() const;
  inline void set_famouslevel(::google::protobuf::int32 value);

  // optional int32 famousfight = 10;
  inline bool has_famousfight() const;
  inline void clear_famousfight();
  static const int kFamousfightFieldNumber = 10;
  inline ::google::protobuf::int32 famousfight() const;
  inline void set_famousfight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckLayerRank)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_firstname();
  inline void clear_has_firstname();
  inline void set_has_firstlevel();
  inline void clear_has_firstlevel();
  inline void set_has_firstfight();
  inline void clear_has_firstfight();
  inline void set_has_lastname();
  inline void clear_has_lastname();
  inline void set_has_lastlevel();
  inline void clear_has_lastlevel();
  inline void set_has_lastfight();
  inline void clear_has_lastfight();
  inline void set_has_famousname();
  inline void clear_has_famousname();
  inline void set_has_famouslevel();
  inline void clear_has_famouslevel();
  inline void set_has_famousfight();
  inline void clear_has_famousfight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* firstname_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 firstlevel_;
  ::std::string* lastname_;
  ::google::protobuf::int32 firstfight_;
  ::google::protobuf::int32 lastlevel_;
  ::std::string* famousname_;
  ::google::protobuf::int32 lastfight_;
  ::google::protobuf::int32 famouslevel_;
  ::google::protobuf::int32 famousfight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckLayerRank* default_instance_;
};
// -------------------------------------------------------------------

class AckSweep : public ::google::protobuf::Message {
 public:
  AckSweep();
  virtual ~AckSweep();

  AckSweep(const AckSweep& from);

  inline AckSweep& operator=(const AckSweep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckSweep& default_instance();

  void Swap(AckSweep* other);

  // implements Message ----------------------------------------------

  AckSweep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckSweep& from);
  void MergeFrom(const AckSweep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int32 elapsedTime = 2;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 2;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckSweep)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_elapsedtime();
  inline void clear_has_elapsedtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 elapsedtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckSweep* default_instance_;
};
// -------------------------------------------------------------------

class ACkEndSweep : public ::google::protobuf::Message {
 public:
  ACkEndSweep();
  virtual ~ACkEndSweep();

  ACkEndSweep(const ACkEndSweep& from);

  inline ACkEndSweep& operator=(const ACkEndSweep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACkEndSweep& default_instance();

  void Swap(ACkEndSweep* other);

  // implements Message ----------------------------------------------

  ACkEndSweep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACkEndSweep& from);
  void MergeFrom(const ACkEndSweep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int32 startlayer = 2;
  inline bool has_startlayer() const;
  inline void clear_startlayer();
  static const int kStartlayerFieldNumber = 2;
  inline ::google::protobuf::int32 startlayer() const;
  inline void set_startlayer(::google::protobuf::int32 value);

  // optional int32 endlayer = 3;
  inline bool has_endlayer() const;
  inline void clear_endlayer();
  static const int kEndlayerFieldNumber = 3;
  inline ::google::protobuf::int32 endlayer() const;
  inline void set_endlayer(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.PrizeItem prize = 4;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 4;
  inline const ::MapInstanceProto::PrizeItem& prize(int index) const;
  inline ::MapInstanceProto::PrizeItem* mutable_prize(int index);
  inline ::MapInstanceProto::PrizeItem* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ACkEndSweep)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_startlayer();
  inline void clear_has_startlayer();
  inline void set_has_endlayer();
  inline void clear_has_endlayer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 startlayer_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem > prize_;
  ::google::protobuf::int32 endlayer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ACkEndSweep* default_instance_;
};
// -------------------------------------------------------------------

class ReqExchange : public ::google::protobuf::Message {
 public:
  ReqExchange();
  virtual ~ReqExchange();

  ReqExchange(const ReqExchange& from);

  inline ReqExchange& operator=(const ReqExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqExchange& default_instance();

  void Swap(ReqExchange* other);

  // implements Message ----------------------------------------------

  ReqExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqExchange& from);
  void MergeFrom(const ReqExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ReqExchange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ReqExchange* default_instance_;
};
// -------------------------------------------------------------------

class AckExchange : public ::google::protobuf::Message {
 public:
  AckExchange();
  virtual ~AckExchange();

  AckExchange(const AckExchange& from);

  inline AckExchange& operator=(const AckExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckExchange& default_instance();

  void Swap(AckExchange* other);

  // implements Message ----------------------------------------------

  AckExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckExchange& from);
  void MergeFrom(const AckExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckExchange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckExchange* default_instance_;
};
// -------------------------------------------------------------------

class PrizeItem : public ::google::protobuf::Message {
 public:
  PrizeItem();
  virtual ~PrizeItem();

  PrizeItem(const PrizeItem& from);

  inline PrizeItem& operator=(const PrizeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrizeItem& default_instance();

  void Swap(PrizeItem* other);

  // implements Message ----------------------------------------------

  PrizeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrizeItem& from);
  void MergeFrom(const PrizeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.PrizeItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static PrizeItem* default_instance_;
};
// -------------------------------------------------------------------

class PassChallenge : public ::google::protobuf::Message {
 public:
  PassChallenge();
  virtual ~PassChallenge();

  PassChallenge(const PassChallenge& from);

  inline PassChallenge& operator=(const PassChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassChallenge& default_instance();

  void Swap(PassChallenge* other);

  // implements Message ----------------------------------------------

  PassChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassChallenge& from);
  void MergeFrom(const PassChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 layer = 3;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 3;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // optional int32 fight = 4;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 4;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 vip = 6;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 6;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.PassChallenge)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* name_;
  ::google::protobuf::int32 layer_;
  ::google::protobuf::int32 fight_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 vip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static PassChallenge* default_instance_;
};
// -------------------------------------------------------------------

class GatherBox : public ::google::protobuf::Message {
 public:
  GatherBox();
  virtual ~GatherBox();

  GatherBox(const GatherBox& from);

  inline GatherBox& operator=(const GatherBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GatherBox& default_instance();

  void Swap(GatherBox* other);

  // implements Message ----------------------------------------------

  GatherBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GatherBox& from);
  void MergeFrom(const GatherBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.GatherBox)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static GatherBox* default_instance_;
};
// -------------------------------------------------------------------

class AckGatherBox : public ::google::protobuf::Message {
 public:
  AckGatherBox();
  virtual ~AckGatherBox();

  AckGatherBox(const AckGatherBox& from);

  inline AckGatherBox& operator=(const AckGatherBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGatherBox& default_instance();

  void Swap(AckGatherBox* other);

  // implements Message ----------------------------------------------

  AckGatherBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGatherBox& from);
  void MergeFrom(const AckGatherBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.PrizeItem items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::MapInstanceProto::PrizeItem& items(int index) const;
  inline ::MapInstanceProto::PrizeItem* mutable_items(int index);
  inline ::MapInstanceProto::PrizeItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AckGatherBox)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AckGatherBox* default_instance_;
};
// -------------------------------------------------------------------

class AdvancedInstance : public ::google::protobuf::Message {
 public:
  AdvancedInstance();
  virtual ~AdvancedInstance();

  AdvancedInstance(const AdvancedInstance& from);

  inline AdvancedInstance& operator=(const AdvancedInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvancedInstance& default_instance();

  void Swap(AdvancedInstance* other);

  // implements Message ----------------------------------------------

  AdvancedInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvancedInstance& from);
  void MergeFrom(const AdvancedInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.InstanceAdvancedList list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::MapInstanceProto::InstanceAdvancedList& list(int index) const;
  inline ::MapInstanceProto::InstanceAdvancedList* mutable_list(int index);
  inline ::MapInstanceProto::InstanceAdvancedList* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceAdvancedList >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceAdvancedList >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.AdvancedInstance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceAdvancedList > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static AdvancedInstance* default_instance_;
};
// -------------------------------------------------------------------

class InstanceAdvancedList : public ::google::protobuf::Message {
 public:
  InstanceAdvancedList();
  virtual ~InstanceAdvancedList();

  InstanceAdvancedList(const InstanceAdvancedList& from);

  inline InstanceAdvancedList& operator=(const InstanceAdvancedList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceAdvancedList& default_instance();

  void Swap(InstanceAdvancedList* other);

  // implements Message ----------------------------------------------

  InstanceAdvancedList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstanceAdvancedList& from);
  void MergeFrom(const InstanceAdvancedList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 reset = 5;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 5;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.InstanceAdvancedList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 reset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static InstanceAdvancedList* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqTeamChanceReady : public ::google::protobuf::Message {
 public:
  ClientReqTeamChanceReady();
  virtual ~ClientReqTeamChanceReady();

  ClientReqTeamChanceReady(const ClientReqTeamChanceReady& from);

  inline ClientReqTeamChanceReady& operator=(const ClientReqTeamChanceReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqTeamChanceReady& default_instance();

  void Swap(ClientReqTeamChanceReady* other);

  // implements Message ----------------------------------------------

  ClientReqTeamChanceReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqTeamChanceReady& from);
  void MergeFrom(const ClientReqTeamChanceReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ClientReqTeamChanceReady)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ClientReqTeamChanceReady* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientReqTeamChanceReady : public ::google::protobuf::Message {
 public:
  WSToClientReqTeamChanceReady();
  virtual ~WSToClientReqTeamChanceReady();

  WSToClientReqTeamChanceReady(const WSToClientReqTeamChanceReady& from);

  inline WSToClientReqTeamChanceReady& operator=(const WSToClientReqTeamChanceReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientReqTeamChanceReady& default_instance();

  void Swap(WSToClientReqTeamChanceReady* other);

  // implements Message ----------------------------------------------

  WSToClientReqTeamChanceReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientReqTeamChanceReady& from);
  void MergeFrom(const WSToClientReqTeamChanceReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientReqTeamChanceReady)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientReqTeamChanceReady* default_instance_;
};
// -------------------------------------------------------------------

class WSToClientSimChanceReady : public ::google::protobuf::Message {
 public:
  WSToClientSimChanceReady();
  virtual ~WSToClientSimChanceReady();

  WSToClientSimChanceReady(const WSToClientSimChanceReady& from);

  inline WSToClientSimChanceReady& operator=(const WSToClientSimChanceReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToClientSimChanceReady& default_instance();

  void Swap(WSToClientSimChanceReady* other);

  // implements Message ----------------------------------------------

  WSToClientSimChanceReady* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToClientSimChanceReady& from);
  void MergeFrom(const WSToClientSimChanceReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.WSToClientSimChanceReady)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static WSToClientSimChanceReady* default_instance_;
};
// -------------------------------------------------------------------

class CommonInstanceInfo : public ::google::protobuf::Message {
 public:
  CommonInstanceInfo();
  virtual ~CommonInstanceInfo();

  CommonInstanceInfo(const CommonInstanceInfo& from);

  inline CommonInstanceInfo& operator=(const CommonInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonInstanceInfo& default_instance();

  void Swap(CommonInstanceInfo* other);

  // implements Message ----------------------------------------------

  CommonInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonInstanceInfo& from);
  void MergeFrom(const CommonInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 reset = 2;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 2;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.CommonInstanceInfoList info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::MapInstanceProto::CommonInstanceInfoList& info(int index) const;
  inline ::MapInstanceProto::CommonInstanceInfoList* mutable_info(int index);
  inline ::MapInstanceProto::CommonInstanceInfoList* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::CommonInstanceInfoList >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::CommonInstanceInfoList >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.CommonInstanceInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 reset_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::CommonInstanceInfoList > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static CommonInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CommonInstanceInfoList : public ::google::protobuf::Message {
 public:
  CommonInstanceInfoList();
  virtual ~CommonInstanceInfoList();

  CommonInstanceInfoList(const CommonInstanceInfoList& from);

  inline CommonInstanceInfoList& operator=(const CommonInstanceInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonInstanceInfoList& default_instance();

  void Swap(CommonInstanceInfoList* other);

  // implements Message ----------------------------------------------

  CommonInstanceInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonInstanceInfoList& from);
  void MergeFrom(const CommonInstanceInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.CommonInstanceInfoList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static CommonInstanceInfoList* default_instance_;
};
// -------------------------------------------------------------------

class VipInstance : public ::google::protobuf::Message {
 public:
  VipInstance();
  virtual ~VipInstance();

  VipInstance(const VipInstance& from);

  inline VipInstance& operator=(const VipInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipInstance& default_instance();

  void Swap(VipInstance* other);

  // implements Message ----------------------------------------------

  VipInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipInstance& from);
  void MergeFrom(const VipInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapInstanceProto.VipInstanceList info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::MapInstanceProto::VipInstanceList& info(int index) const;
  inline ::MapInstanceProto::VipInstanceList* mutable_info(int index);
  inline ::MapInstanceProto::VipInstanceList* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::VipInstanceList >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::VipInstanceList >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.VipInstance)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::VipInstanceList > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static VipInstance* default_instance_;
};
// -------------------------------------------------------------------

class VipInstanceList : public ::google::protobuf::Message {
 public:
  VipInstanceList();
  virtual ~VipInstanceList();

  VipInstanceList(const VipInstanceList& from);

  inline VipInstanceList& operator=(const VipInstanceList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipInstanceList& default_instance();

  void Swap(VipInstanceList* other);

  // implements Message ----------------------------------------------

  VipInstanceList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipInstanceList& from);
  void MergeFrom(const VipInstanceList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int64 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.VipInstanceList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static VipInstanceList* default_instance_;
};
// -------------------------------------------------------------------

class ExpInstanceInfo : public ::google::protobuf::Message {
 public:
  ExpInstanceInfo();
  virtual ~ExpInstanceInfo();

  ExpInstanceInfo(const ExpInstanceInfo& from);

  inline ExpInstanceInfo& operator=(const ExpInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpInstanceInfo& default_instance();

  void Swap(ExpInstanceInfo* other);

  // implements Message ----------------------------------------------

  ExpInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpInstanceInfo& from);
  void MergeFrom(const ExpInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 reset = 2;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 2;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.ExpInstanceInfoList info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::MapInstanceProto::ExpInstanceInfoList& info(int index) const;
  inline ::MapInstanceProto::ExpInstanceInfoList* mutable_info(int index);
  inline ::MapInstanceProto::ExpInstanceInfoList* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::ExpInstanceInfoList >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::ExpInstanceInfoList >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ExpInstanceInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 reset_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::ExpInstanceInfoList > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ExpInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class ExpInstanceInfoList : public ::google::protobuf::Message {
 public:
  ExpInstanceInfoList();
  virtual ~ExpInstanceInfoList();

  ExpInstanceInfoList(const ExpInstanceInfoList& from);

  inline ExpInstanceInfoList& operator=(const ExpInstanceInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpInstanceInfoList& default_instance();

  void Swap(ExpInstanceInfoList* other);

  // implements Message ----------------------------------------------

  ExpInstanceInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpInstanceInfoList& from);
  void MergeFrom(const ExpInstanceInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.ExpInstanceInfoList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static ExpInstanceInfoList* default_instance_;
};
// -------------------------------------------------------------------

class MoneyInstanceInfo : public ::google::protobuf::Message {
 public:
  MoneyInstanceInfo();
  virtual ~MoneyInstanceInfo();

  MoneyInstanceInfo(const MoneyInstanceInfo& from);

  inline MoneyInstanceInfo& operator=(const MoneyInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyInstanceInfo& default_instance();

  void Swap(MoneyInstanceInfo* other);

  // implements Message ----------------------------------------------

  MoneyInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyInstanceInfo& from);
  void MergeFrom(const MoneyInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 reset = 2;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 2;
  inline ::google::protobuf::int32 reset() const;
  inline void set_reset(::google::protobuf::int32 value);

  // repeated .MapInstanceProto.MoneyInstanceInfoList info = 3;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::MapInstanceProto::MoneyInstanceInfoList& info(int index) const;
  inline ::MapInstanceProto::MoneyInstanceInfoList* mutable_info(int index);
  inline ::MapInstanceProto::MoneyInstanceInfoList* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::MoneyInstanceInfoList >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::MoneyInstanceInfoList >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:MapInstanceProto.MoneyInstanceInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 reset_;
  ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::MoneyInstanceInfoList > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static MoneyInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class MoneyInstanceInfoList : public ::google::protobuf::Message {
 public:
  MoneyInstanceInfoList();
  virtual ~MoneyInstanceInfoList();

  MoneyInstanceInfoList(const MoneyInstanceInfoList& from);

  inline MoneyInstanceInfoList& operator=(const MoneyInstanceInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyInstanceInfoList& default_instance();

  void Swap(MoneyInstanceInfoList* other);

  // implements Message ----------------------------------------------

  MoneyInstanceInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyInstanceInfoList& from);
  void MergeFrom(const MoneyInstanceInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 pass = 2;
  inline bool has_pass() const;
  inline void clear_pass();
  static const int kPassFieldNumber = 2;
  inline ::google::protobuf::int32 pass() const;
  inline void set_pass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MapInstanceProto.MoneyInstanceInfoList)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_pass();
  inline void clear_has_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 pass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMapInstanceProto_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMapInstanceProto_2eproto();

  void InitAsDefaultInstance();
  static MoneyInstanceInfoList* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqCreateInstance

// required int32 InstanceId = 1;
inline bool ReqCreateInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCreateInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCreateInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCreateInstance::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 ReqCreateInstance::instanceid() const {
  return instanceid_;
}
inline void ReqCreateInstance::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// required int32 InstanceType = 2;
inline bool ReqCreateInstance::has_instancetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqCreateInstance::set_has_instancetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqCreateInstance::clear_has_instancetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqCreateInstance::clear_instancetype() {
  instancetype_ = 0;
  clear_has_instancetype();
}
inline ::google::protobuf::int32 ReqCreateInstance::instancetype() const {
  return instancetype_;
}
inline void ReqCreateInstance::set_instancetype(::google::protobuf::int32 value) {
  set_has_instancetype();
  instancetype_ = value;
}

// -------------------------------------------------------------------

// RetCreateInstance

// required int32 dwErrorCode = 1;
inline bool RetCreateInstance::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetCreateInstance::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetCreateInstance::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetCreateInstance::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 RetCreateInstance::dwerrorcode() const {
  return dwerrorcode_;
}
inline void RetCreateInstance::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// optional int64 NewInstanceId = 2;
inline bool RetCreateInstance::has_newinstanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetCreateInstance::set_has_newinstanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetCreateInstance::clear_has_newinstanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetCreateInstance::clear_newinstanceid() {
  newinstanceid_ = GOOGLE_LONGLONG(0);
  clear_has_newinstanceid();
}
inline ::google::protobuf::int64 RetCreateInstance::newinstanceid() const {
  return newinstanceid_;
}
inline void RetCreateInstance::set_newinstanceid(::google::protobuf::int64 value) {
  set_has_newinstanceid();
  newinstanceid_ = value;
}

// -------------------------------------------------------------------

// ReqInstanceQuit

// required int64 InstanceId = 1;
inline bool ReqInstanceQuit::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInstanceQuit::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInstanceQuit::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInstanceQuit::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 ReqInstanceQuit::instanceid() const {
  return instanceid_;
}
inline void ReqInstanceQuit::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// RetInstanceQuit

// required int32 MapID = 1;
inline bool RetInstanceQuit::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInstanceQuit::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInstanceQuit::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInstanceQuit::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 RetInstanceQuit::mapid() const {
  return mapid_;
}
inline void RetInstanceQuit::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// SimInstanceUpdate

// repeated int32 remainMonsterID = 1;
inline int SimInstanceUpdate::remainmonsterid_size() const {
  return remainmonsterid_.size();
}
inline void SimInstanceUpdate::clear_remainmonsterid() {
  remainmonsterid_.Clear();
}
inline ::google::protobuf::int32 SimInstanceUpdate::remainmonsterid(int index) const {
  return remainmonsterid_.Get(index);
}
inline void SimInstanceUpdate::set_remainmonsterid(int index, ::google::protobuf::int32 value) {
  remainmonsterid_.Set(index, value);
}
inline void SimInstanceUpdate::add_remainmonsterid(::google::protobuf::int32 value) {
  remainmonsterid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SimInstanceUpdate::remainmonsterid() const {
  return remainmonsterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SimInstanceUpdate::mutable_remainmonsterid() {
  return &remainmonsterid_;
}

// repeated int32 remainMonsterNum = 2;
inline int SimInstanceUpdate::remainmonsternum_size() const {
  return remainmonsternum_.size();
}
inline void SimInstanceUpdate::clear_remainmonsternum() {
  remainmonsternum_.Clear();
}
inline ::google::protobuf::int32 SimInstanceUpdate::remainmonsternum(int index) const {
  return remainmonsternum_.Get(index);
}
inline void SimInstanceUpdate::set_remainmonsternum(int index, ::google::protobuf::int32 value) {
  remainmonsternum_.Set(index, value);
}
inline void SimInstanceUpdate::add_remainmonsternum(::google::protobuf::int32 value) {
  remainmonsternum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SimInstanceUpdate::remainmonsternum() const {
  return remainmonsternum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SimInstanceUpdate::mutable_remainmonsternum() {
  return &remainmonsternum_;
}

// optional double remaintime = 3;
inline bool SimInstanceUpdate::has_remaintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimInstanceUpdate::set_has_remaintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimInstanceUpdate::clear_has_remaintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimInstanceUpdate::clear_remaintime() {
  remaintime_ = 0;
  clear_has_remaintime();
}
inline double SimInstanceUpdate::remaintime() const {
  return remaintime_;
}
inline void SimInstanceUpdate::set_remaintime(double value) {
  set_has_remaintime();
  remaintime_ = value;
}

// -------------------------------------------------------------------

// SimInstanceEnd

// required int32 mapid = 1;
inline bool SimInstanceEnd::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimInstanceEnd::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimInstanceEnd::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimInstanceEnd::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SimInstanceEnd::mapid() const {
  return mapid_;
}
inline void SimInstanceEnd::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 IsSuccess = 2;
inline bool SimInstanceEnd::has_issuccess() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimInstanceEnd::set_has_issuccess() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimInstanceEnd::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimInstanceEnd::clear_issuccess() {
  issuccess_ = 0;
  clear_has_issuccess();
}
inline ::google::protobuf::int32 SimInstanceEnd::issuccess() const {
  return issuccess_;
}
inline void SimInstanceEnd::set_issuccess(::google::protobuf::int32 value) {
  set_has_issuccess();
  issuccess_ = value;
}

// optional .MapInstanceProto.SimInstanceAward Awards = 3;
inline bool SimInstanceEnd::has_awards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimInstanceEnd::set_has_awards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimInstanceEnd::clear_has_awards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimInstanceEnd::clear_awards() {
  if (awards_ != NULL) awards_->::MapInstanceProto::SimInstanceAward::Clear();
  clear_has_awards();
}
inline const ::MapInstanceProto::SimInstanceAward& SimInstanceEnd::awards() const {
  return awards_ != NULL ? *awards_ : *default_instance_->awards_;
}
inline ::MapInstanceProto::SimInstanceAward* SimInstanceEnd::mutable_awards() {
  set_has_awards();
  if (awards_ == NULL) awards_ = new ::MapInstanceProto::SimInstanceAward;
  return awards_;
}
inline ::MapInstanceProto::SimInstanceAward* SimInstanceEnd::release_awards() {
  clear_has_awards();
  ::MapInstanceProto::SimInstanceAward* temp = awards_;
  awards_ = NULL;
  return temp;
}
inline void SimInstanceEnd::set_allocated_awards(::MapInstanceProto::SimInstanceAward* awards) {
  delete awards_;
  awards_ = awards;
  if (awards) {
    set_has_awards();
  } else {
    clear_has_awards();
  }
}

// -------------------------------------------------------------------

// SimInstanceAward

// optional int32 rewardStar = 1;
inline bool SimInstanceAward::has_rewardstar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimInstanceAward::set_has_rewardstar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimInstanceAward::clear_has_rewardstar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimInstanceAward::clear_rewardstar() {
  rewardstar_ = 0;
  clear_has_rewardstar();
}
inline ::google::protobuf::int32 SimInstanceAward::rewardstar() const {
  return rewardstar_;
}
inline void SimInstanceAward::set_rewardstar(::google::protobuf::int32 value) {
  set_has_rewardstar();
  rewardstar_ = value;
}

// optional int32 elapsedTime = 2;
inline bool SimInstanceAward::has_elapsedtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimInstanceAward::set_has_elapsedtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimInstanceAward::clear_has_elapsedtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimInstanceAward::clear_elapsedtime() {
  elapsedtime_ = 0;
  clear_has_elapsedtime();
}
inline ::google::protobuf::int32 SimInstanceAward::elapsedtime() const {
  return elapsedtime_;
}
inline void SimInstanceAward::set_elapsedtime(::google::protobuf::int32 value) {
  set_has_elapsedtime();
  elapsedtime_ = value;
}

// optional int32 barrierPoints = 3;
inline bool SimInstanceAward::has_barrierpoints() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimInstanceAward::set_has_barrierpoints() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimInstanceAward::clear_has_barrierpoints() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimInstanceAward::clear_barrierpoints() {
  barrierpoints_ = 0;
  clear_has_barrierpoints();
}
inline ::google::protobuf::int32 SimInstanceAward::barrierpoints() const {
  return barrierpoints_;
}
inline void SimInstanceAward::set_barrierpoints(::google::protobuf::int32 value) {
  set_has_barrierpoints();
  barrierpoints_ = value;
}

// optional int32 personalPower = 4;
inline bool SimInstanceAward::has_personalpower() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SimInstanceAward::set_has_personalpower() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SimInstanceAward::clear_has_personalpower() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SimInstanceAward::clear_personalpower() {
  personalpower_ = 0;
  clear_has_personalpower();
}
inline ::google::protobuf::int32 SimInstanceAward::personalpower() const {
  return personalpower_;
}
inline void SimInstanceAward::set_personalpower(::google::protobuf::int32 value) {
  set_has_personalpower();
  personalpower_ = value;
}

// optional int32 groupPower = 5;
inline bool SimInstanceAward::has_grouppower() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SimInstanceAward::set_has_grouppower() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SimInstanceAward::clear_has_grouppower() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SimInstanceAward::clear_grouppower() {
  grouppower_ = 0;
  clear_has_grouppower();
}
inline ::google::protobuf::int32 SimInstanceAward::grouppower() const {
  return grouppower_;
}
inline void SimInstanceAward::set_grouppower(::google::protobuf::int32 value) {
  set_has_grouppower();
  grouppower_ = value;
}

// optional int32 awardMoney = 6;
inline bool SimInstanceAward::has_awardmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SimInstanceAward::set_has_awardmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SimInstanceAward::clear_has_awardmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SimInstanceAward::clear_awardmoney() {
  awardmoney_ = 0;
  clear_has_awardmoney();
}
inline ::google::protobuf::int32 SimInstanceAward::awardmoney() const {
  return awardmoney_;
}
inline void SimInstanceAward::set_awardmoney(::google::protobuf::int32 value) {
  set_has_awardmoney();
  awardmoney_ = value;
}

// optional int32 awardExp = 7;
inline bool SimInstanceAward::has_awardexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SimInstanceAward::set_has_awardexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SimInstanceAward::clear_has_awardexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SimInstanceAward::clear_awardexp() {
  awardexp_ = 0;
  clear_has_awardexp();
}
inline ::google::protobuf::int32 SimInstanceAward::awardexp() const {
  return awardexp_;
}
inline void SimInstanceAward::set_awardexp(::google::protobuf::int32 value) {
  set_has_awardexp();
  awardexp_ = value;
}

// optional int32 awardInfuriate = 8;
inline bool SimInstanceAward::has_awardinfuriate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SimInstanceAward::set_has_awardinfuriate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SimInstanceAward::clear_has_awardinfuriate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SimInstanceAward::clear_awardinfuriate() {
  awardinfuriate_ = 0;
  clear_has_awardinfuriate();
}
inline ::google::protobuf::int32 SimInstanceAward::awardinfuriate() const {
  return awardinfuriate_;
}
inline void SimInstanceAward::set_awardinfuriate(::google::protobuf::int32 value) {
  set_has_awardinfuriate();
  awardinfuriate_ = value;
}

// repeated .CharLogin.ClientItemInfo items = 9;
inline int SimInstanceAward::items_size() const {
  return items_.size();
}
inline void SimInstanceAward::clear_items() {
  items_.Clear();
}
inline const ::CharLogin::ClientItemInfo& SimInstanceAward::items(int index) const {
  return items_.Get(index);
}
inline ::CharLogin::ClientItemInfo* SimInstanceAward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CharLogin::ClientItemInfo* SimInstanceAward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
SimInstanceAward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
SimInstanceAward::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// ReqInstanceSweep

// required int32 InstanceId = 1;
inline bool ReqInstanceSweep::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInstanceSweep::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInstanceSweep::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInstanceSweep::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 ReqInstanceSweep::instanceid() const {
  return instanceid_;
}
inline void ReqInstanceSweep::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// RetInstanceSweep

// required int32 dwErrorCode = 1;
inline bool RetInstanceSweep::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInstanceSweep::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInstanceSweep::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInstanceSweep::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 RetInstanceSweep::dwerrorcode() const {
  return dwerrorcode_;
}
inline void RetInstanceSweep::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// required int32 dwRemainTime = 2;
inline bool RetInstanceSweep::has_dwremaintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetInstanceSweep::set_has_dwremaintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetInstanceSweep::clear_has_dwremaintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetInstanceSweep::clear_dwremaintime() {
  dwremaintime_ = 0;
  clear_has_dwremaintime();
}
inline ::google::protobuf::int32 RetInstanceSweep::dwremaintime() const {
  return dwremaintime_;
}
inline void RetInstanceSweep::set_dwremaintime(::google::protobuf::int32 value) {
  set_has_dwremaintime();
  dwremaintime_ = value;
}

// required int32 InstanceId = 3;
inline bool RetInstanceSweep::has_instanceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetInstanceSweep::set_has_instanceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetInstanceSweep::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetInstanceSweep::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 RetInstanceSweep::instanceid() const {
  return instanceid_;
}
inline void RetInstanceSweep::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ReqInstanceSweepSpeedUp

// required int32 InstanceId = 1;
inline bool ReqInstanceSweepSpeedUp::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInstanceSweepSpeedUp::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInstanceSweepSpeedUp::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInstanceSweepSpeedUp::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 ReqInstanceSweepSpeedUp::instanceid() const {
  return instanceid_;
}
inline void ReqInstanceSweepSpeedUp::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// optional int32 moneytype = 2;
inline bool ReqInstanceSweepSpeedUp::has_moneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqInstanceSweepSpeedUp::set_has_moneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqInstanceSweepSpeedUp::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqInstanceSweepSpeedUp::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 ReqInstanceSweepSpeedUp::moneytype() const {
  return moneytype_;
}
inline void ReqInstanceSweepSpeedUp::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// -------------------------------------------------------------------

// RetInstanceSweepSpeedUp

// required int32 dwErrorCode = 1;
inline bool RetInstanceSweepSpeedUp::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInstanceSweepSpeedUp::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInstanceSweepSpeedUp::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInstanceSweepSpeedUp::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 RetInstanceSweepSpeedUp::dwerrorcode() const {
  return dwerrorcode_;
}
inline void RetInstanceSweepSpeedUp::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// required int32 InstanceId = 2;
inline bool RetInstanceSweepSpeedUp::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetInstanceSweepSpeedUp::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetInstanceSweepSpeedUp::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetInstanceSweepSpeedUp::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 RetInstanceSweepSpeedUp::instanceid() const {
  return instanceid_;
}
inline void RetInstanceSweepSpeedUp::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// OpenInstanceSweep

// -------------------------------------------------------------------

// SimInstanceSweepEnd

// -------------------------------------------------------------------

// ReqInstanceReset

// required int32 InstanceId = 1;
inline bool ReqInstanceReset::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInstanceReset::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInstanceReset::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInstanceReset::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 ReqInstanceReset::instanceid() const {
  return instanceid_;
}
inline void ReqInstanceReset::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// RetInstanceReset

// required int32 dwErrorCode = 1;
inline bool RetInstanceReset::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInstanceReset::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInstanceReset::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInstanceReset::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 RetInstanceReset::dwerrorcode() const {
  return dwerrorcode_;
}
inline void RetInstanceReset::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// required int32 InstanceId = 2;
inline bool RetInstanceReset::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetInstanceReset::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetInstanceReset::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetInstanceReset::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 RetInstanceReset::instanceid() const {
  return instanceid_;
}
inline void RetInstanceReset::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ReqResetAllInstances

// repeated int32 InstanceIdList = 1;
inline int ReqResetAllInstances::instanceidlist_size() const {
  return instanceidlist_.size();
}
inline void ReqResetAllInstances::clear_instanceidlist() {
  instanceidlist_.Clear();
}
inline ::google::protobuf::int32 ReqResetAllInstances::instanceidlist(int index) const {
  return instanceidlist_.Get(index);
}
inline void ReqResetAllInstances::set_instanceidlist(int index, ::google::protobuf::int32 value) {
  instanceidlist_.Set(index, value);
}
inline void ReqResetAllInstances::add_instanceidlist(::google::protobuf::int32 value) {
  instanceidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReqResetAllInstances::instanceidlist() const {
  return instanceidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReqResetAllInstances::mutable_instanceidlist() {
  return &instanceidlist_;
}

// -------------------------------------------------------------------

// RetResetAllInstances

// required int32 dwErrorCode = 1;
inline bool RetResetAllInstances::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetResetAllInstances::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetResetAllInstances::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetResetAllInstances::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 RetResetAllInstances::dwerrorcode() const {
  return dwerrorcode_;
}
inline void RetResetAllInstances::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// repeated int32 InstanceIdList = 2;
inline int RetResetAllInstances::instanceidlist_size() const {
  return instanceidlist_.size();
}
inline void RetResetAllInstances::clear_instanceidlist() {
  instanceidlist_.Clear();
}
inline ::google::protobuf::int32 RetResetAllInstances::instanceidlist(int index) const {
  return instanceidlist_.Get(index);
}
inline void RetResetAllInstances::set_instanceidlist(int index, ::google::protobuf::int32 value) {
  instanceidlist_.Set(index, value);
}
inline void RetResetAllInstances::add_instanceidlist(::google::protobuf::int32 value) {
  instanceidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RetResetAllInstances::instanceidlist() const {
  return instanceidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RetResetAllInstances::mutable_instanceidlist() {
  return &instanceidlist_;
}

// -------------------------------------------------------------------

// ReqWSCreateInstance

// required int32 InstanceId = 1;
inline bool ReqWSCreateInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqWSCreateInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqWSCreateInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqWSCreateInstance::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 ReqWSCreateInstance::instanceid() const {
  return instanceid_;
}
inline void ReqWSCreateInstance::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// required int32 InstanceType = 2;
inline bool ReqWSCreateInstance::has_instancetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqWSCreateInstance::set_has_instancetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqWSCreateInstance::clear_has_instancetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqWSCreateInstance::clear_instancetype() {
  instancetype_ = 0;
  clear_has_instancetype();
}
inline ::google::protobuf::int32 ReqWSCreateInstance::instancetype() const {
  return instancetype_;
}
inline void ReqWSCreateInstance::set_instancetype(::google::protobuf::int32 value) {
  set_has_instancetype();
  instancetype_ = value;
}

// required int32 localId = 3;
inline bool ReqWSCreateInstance::has_localid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqWSCreateInstance::set_has_localid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqWSCreateInstance::clear_has_localid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqWSCreateInstance::clear_localid() {
  localid_ = 0;
  clear_has_localid();
}
inline ::google::protobuf::int32 ReqWSCreateInstance::localid() const {
  return localid_;
}
inline void ReqWSCreateInstance::set_localid(::google::protobuf::int32 value) {
  set_has_localid();
  localid_ = value;
}

// required int32 romateId = 4;
inline bool ReqWSCreateInstance::has_romateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqWSCreateInstance::set_has_romateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqWSCreateInstance::clear_has_romateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqWSCreateInstance::clear_romateid() {
  romateid_ = 0;
  clear_has_romateid();
}
inline ::google::protobuf::int32 ReqWSCreateInstance::romateid() const {
  return romateid_;
}
inline void ReqWSCreateInstance::set_romateid(::google::protobuf::int32 value) {
  set_has_romateid();
  romateid_ = value;
}

// required int64 charid = 5;
inline bool ReqWSCreateInstance::has_charid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqWSCreateInstance::set_has_charid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqWSCreateInstance::clear_has_charid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqWSCreateInstance::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqWSCreateInstance::charid() const {
  return charid_;
}
inline void ReqWSCreateInstance::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// ReqDeleteInstance

// required int64 InstanceId = 1;
inline bool ReqDeleteInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqDeleteInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqDeleteInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqDeleteInstance::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 ReqDeleteInstance::instanceid() const {
  return instanceid_;
}
inline void ReqDeleteInstance::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ReqGroupInstanceReady

// -------------------------------------------------------------------

// RetGroupInstanceReady

// required int32 ret = 1;
inline bool RetGroupInstanceReady::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGroupInstanceReady::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGroupInstanceReady::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGroupInstanceReady::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGroupInstanceReady::ret() const {
  return ret_;
}
inline void RetGroupInstanceReady::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated int64 MemberID = 2;
inline int RetGroupInstanceReady::memberid_size() const {
  return memberid_.size();
}
inline void RetGroupInstanceReady::clear_memberid() {
  memberid_.Clear();
}
inline ::google::protobuf::int64 RetGroupInstanceReady::memberid(int index) const {
  return memberid_.Get(index);
}
inline void RetGroupInstanceReady::set_memberid(int index, ::google::protobuf::int64 value) {
  memberid_.Set(index, value);
}
inline void RetGroupInstanceReady::add_memberid(::google::protobuf::int64 value) {
  memberid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
RetGroupInstanceReady::memberid() const {
  return memberid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
RetGroupInstanceReady::mutable_memberid() {
  return &memberid_;
}

// repeated int32 IsReady = 3;
inline int RetGroupInstanceReady::isready_size() const {
  return isready_.size();
}
inline void RetGroupInstanceReady::clear_isready() {
  isready_.Clear();
}
inline ::google::protobuf::int32 RetGroupInstanceReady::isready(int index) const {
  return isready_.Get(index);
}
inline void RetGroupInstanceReady::set_isready(int index, ::google::protobuf::int32 value) {
  isready_.Set(index, value);
}
inline void RetGroupInstanceReady::add_isready(::google::protobuf::int32 value) {
  isready_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RetGroupInstanceReady::isready() const {
  return isready_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RetGroupInstanceReady::mutable_isready() {
  return &isready_;
}

// -------------------------------------------------------------------

// ReqGroupEnterInstance

// required int64 InstanceID = 1;
inline bool ReqGroupEnterInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGroupEnterInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGroupEnterInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGroupEnterInstance::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 ReqGroupEnterInstance::instanceid() const {
  return instanceid_;
}
inline void ReqGroupEnterInstance::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// RetGroupEnterInstance

// required int32 ret = 1;
inline bool RetGroupEnterInstance::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGroupEnterInstance::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGroupEnterInstance::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGroupEnterInstance::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGroupEnterInstance::ret() const {
  return ret_;
}
inline void RetGroupEnterInstance::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 InstanceID = 2;
inline bool RetGroupEnterInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetGroupEnterInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetGroupEnterInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetGroupEnterInstance::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 RetGroupEnterInstance::instanceid() const {
  return instanceid_;
}
inline void RetGroupEnterInstance::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ReqMemberFlop

// required int32 FlopID = 1;
inline bool ReqMemberFlop::has_flopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMemberFlop::set_has_flopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMemberFlop::clear_has_flopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMemberFlop::clear_flopid() {
  flopid_ = 0;
  clear_has_flopid();
}
inline ::google::protobuf::int32 ReqMemberFlop::flopid() const {
  return flopid_;
}
inline void ReqMemberFlop::set_flopid(::google::protobuf::int32 value) {
  set_has_flopid();
  flopid_ = value;
}

// -------------------------------------------------------------------

// GMToClientMemberFlop

// required int32 ret = 1;
inline bool GMToClientMemberFlop::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToClientMemberFlop::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToClientMemberFlop::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToClientMemberFlop::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GMToClientMemberFlop::ret() const {
  return ret_;
}
inline void GMToClientMemberFlop::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// RetMemberFlop

// required int32 FlopID = 1;
inline bool RetMemberFlop::has_flopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetMemberFlop::set_has_flopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetMemberFlop::clear_has_flopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetMemberFlop::clear_flopid() {
  flopid_ = 0;
  clear_has_flopid();
}
inline ::google::protobuf::int32 RetMemberFlop::flopid() const {
  return flopid_;
}
inline void RetMemberFlop::set_flopid(::google::protobuf::int32 value) {
  set_has_flopid();
  flopid_ = value;
}

// required int32 ItemID = 2;
inline bool RetMemberFlop::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetMemberFlop::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetMemberFlop::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetMemberFlop::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 RetMemberFlop::itemid() const {
  return itemid_;
}
inline void RetMemberFlop::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required string FlopName = 3;
inline bool RetMemberFlop::has_flopname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetMemberFlop::set_has_flopname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetMemberFlop::clear_has_flopname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetMemberFlop::clear_flopname() {
  if (flopname_ != &::google::protobuf::internal::kEmptyString) {
    flopname_->clear();
  }
  clear_has_flopname();
}
inline const ::std::string& RetMemberFlop::flopname() const {
  return *flopname_;
}
inline void RetMemberFlop::set_flopname(const ::std::string& value) {
  set_has_flopname();
  if (flopname_ == &::google::protobuf::internal::kEmptyString) {
    flopname_ = new ::std::string;
  }
  flopname_->assign(value);
}
inline void RetMemberFlop::set_flopname(const char* value) {
  set_has_flopname();
  if (flopname_ == &::google::protobuf::internal::kEmptyString) {
    flopname_ = new ::std::string;
  }
  flopname_->assign(value);
}
inline void RetMemberFlop::set_flopname(const char* value, size_t size) {
  set_has_flopname();
  if (flopname_ == &::google::protobuf::internal::kEmptyString) {
    flopname_ = new ::std::string;
  }
  flopname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RetMemberFlop::mutable_flopname() {
  set_has_flopname();
  if (flopname_ == &::google::protobuf::internal::kEmptyString) {
    flopname_ = new ::std::string;
  }
  return flopname_;
}
inline ::std::string* RetMemberFlop::release_flopname() {
  clear_has_flopname();
  if (flopname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = flopname_;
    flopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RetMemberFlop::set_allocated_flopname(::std::string* flopname) {
  if (flopname_ != &::google::protobuf::internal::kEmptyString) {
    delete flopname_;
  }
  if (flopname) {
    set_has_flopname();
    flopname_ = flopname;
  } else {
    clear_has_flopname();
    flopname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 ItemNum = 4;
inline bool RetMemberFlop::has_itemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetMemberFlop::set_has_itemnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetMemberFlop::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetMemberFlop::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 RetMemberFlop::itemnum() const {
  return itemnum_;
}
inline void RetMemberFlop::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// optional int32 BindType = 5;
inline bool RetMemberFlop::has_bindtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RetMemberFlop::set_has_bindtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RetMemberFlop::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RetMemberFlop::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 RetMemberFlop::bindtype() const {
  return bindtype_;
}
inline void RetMemberFlop::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
}

// -------------------------------------------------------------------

// ReqGetInstanceAward

// required int64 instanceID = 1;
inline bool ReqGetInstanceAward::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetInstanceAward::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetInstanceAward::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetInstanceAward::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 ReqGetInstanceAward::instanceid() const {
  return instanceid_;
}
inline void ReqGetInstanceAward::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ReqEnterInstance

// required int64 instanceID = 1;
inline bool ReqEnterInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqEnterInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqEnterInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqEnterInstance::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 ReqEnterInstance::instanceid() const {
  return instanceid_;
}
inline void ReqEnterInstance::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ToGTGetInstanceTeamID

// -------------------------------------------------------------------

// RetGetInstanceTeamID

// repeated .MapInstanceProto.InstanceTeamInfo teamInfo = 1;
inline int RetGetInstanceTeamID::teaminfo_size() const {
  return teaminfo_.size();
}
inline void RetGetInstanceTeamID::clear_teaminfo() {
  teaminfo_.Clear();
}
inline const ::MapInstanceProto::InstanceTeamInfo& RetGetInstanceTeamID::teaminfo(int index) const {
  return teaminfo_.Get(index);
}
inline ::MapInstanceProto::InstanceTeamInfo* RetGetInstanceTeamID::mutable_teaminfo(int index) {
  return teaminfo_.Mutable(index);
}
inline ::MapInstanceProto::InstanceTeamInfo* RetGetInstanceTeamID::add_teaminfo() {
  return teaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceTeamInfo >&
RetGetInstanceTeamID::teaminfo() const {
  return teaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceTeamInfo >*
RetGetInstanceTeamID::mutable_teaminfo() {
  return &teaminfo_;
}

// -------------------------------------------------------------------

// InstanceTeamInfo

// required int32 dwTeamID = 1;
inline bool InstanceTeamInfo::has_dwteamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstanceTeamInfo::set_has_dwteamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstanceTeamInfo::clear_has_dwteamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstanceTeamInfo::clear_dwteamid() {
  dwteamid_ = 0;
  clear_has_dwteamid();
}
inline ::google::protobuf::int32 InstanceTeamInfo::dwteamid() const {
  return dwteamid_;
}
inline void InstanceTeamInfo::set_dwteamid(::google::protobuf::int32 value) {
  set_has_dwteamid();
  dwteamid_ = value;
}

// optional int32 dwInstanceID = 2;
inline bool InstanceTeamInfo::has_dwinstanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstanceTeamInfo::set_has_dwinstanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstanceTeamInfo::clear_has_dwinstanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstanceTeamInfo::clear_dwinstanceid() {
  dwinstanceid_ = 0;
  clear_has_dwinstanceid();
}
inline ::google::protobuf::int32 InstanceTeamInfo::dwinstanceid() const {
  return dwinstanceid_;
}
inline void InstanceTeamInfo::set_dwinstanceid(::google::protobuf::int32 value) {
  set_has_dwinstanceid();
  dwinstanceid_ = value;
}

// optional int32 dwTeamPower = 3;
inline bool InstanceTeamInfo::has_dwteampower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstanceTeamInfo::set_has_dwteampower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstanceTeamInfo::clear_has_dwteampower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstanceTeamInfo::clear_dwteampower() {
  dwteampower_ = 0;
  clear_has_dwteampower();
}
inline ::google::protobuf::int32 InstanceTeamInfo::dwteampower() const {
  return dwteampower_;
}
inline void InstanceTeamInfo::set_dwteampower(::google::protobuf::int32 value) {
  set_has_dwteampower();
  dwteampower_ = value;
}

// optional int32 dwTeamMembers = 4;
inline bool InstanceTeamInfo::has_dwteammembers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstanceTeamInfo::set_has_dwteammembers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstanceTeamInfo::clear_has_dwteammembers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstanceTeamInfo::clear_dwteammembers() {
  dwteammembers_ = 0;
  clear_has_dwteammembers();
}
inline ::google::protobuf::int32 InstanceTeamInfo::dwteammembers() const {
  return dwteammembers_;
}
inline void InstanceTeamInfo::set_dwteammembers(::google::protobuf::int32 value) {
  set_has_dwteammembers();
  dwteammembers_ = value;
}

// optional string dwLeaderName = 5;
inline bool InstanceTeamInfo::has_dwleadername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstanceTeamInfo::set_has_dwleadername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstanceTeamInfo::clear_has_dwleadername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstanceTeamInfo::clear_dwleadername() {
  if (dwleadername_ != &::google::protobuf::internal::kEmptyString) {
    dwleadername_->clear();
  }
  clear_has_dwleadername();
}
inline const ::std::string& InstanceTeamInfo::dwleadername() const {
  return *dwleadername_;
}
inline void InstanceTeamInfo::set_dwleadername(const ::std::string& value) {
  set_has_dwleadername();
  if (dwleadername_ == &::google::protobuf::internal::kEmptyString) {
    dwleadername_ = new ::std::string;
  }
  dwleadername_->assign(value);
}
inline void InstanceTeamInfo::set_dwleadername(const char* value) {
  set_has_dwleadername();
  if (dwleadername_ == &::google::protobuf::internal::kEmptyString) {
    dwleadername_ = new ::std::string;
  }
  dwleadername_->assign(value);
}
inline void InstanceTeamInfo::set_dwleadername(const char* value, size_t size) {
  set_has_dwleadername();
  if (dwleadername_ == &::google::protobuf::internal::kEmptyString) {
    dwleadername_ = new ::std::string;
  }
  dwleadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InstanceTeamInfo::mutable_dwleadername() {
  set_has_dwleadername();
  if (dwleadername_ == &::google::protobuf::internal::kEmptyString) {
    dwleadername_ = new ::std::string;
  }
  return dwleadername_;
}
inline ::std::string* InstanceTeamInfo::release_dwleadername() {
  clear_has_dwleadername();
  if (dwleadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dwleadername_;
    dwleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void InstanceTeamInfo::set_allocated_dwleadername(::std::string* dwleadername) {
  if (dwleadername_ != &::google::protobuf::internal::kEmptyString) {
    delete dwleadername_;
  }
  if (dwleadername) {
    set_has_dwleadername();
    dwleadername_ = dwleadername;
  } else {
    clear_has_dwleadername();
    dwleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ToClientLeaveInstance

// -------------------------------------------------------------------

// ToGTAwardInfo

// required int64 charid = 1;
inline bool ToGTAwardInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTAwardInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTAwardInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTAwardInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTAwardInfo::charid() const {
  return charid_;
}
inline void ToGTAwardInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .MapInstanceProto.SimInstanceEnd awardInfo = 2;
inline bool ToGTAwardInfo::has_awardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTAwardInfo::set_has_awardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTAwardInfo::clear_has_awardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTAwardInfo::clear_awardinfo() {
  if (awardinfo_ != NULL) awardinfo_->::MapInstanceProto::SimInstanceEnd::Clear();
  clear_has_awardinfo();
}
inline const ::MapInstanceProto::SimInstanceEnd& ToGTAwardInfo::awardinfo() const {
  return awardinfo_ != NULL ? *awardinfo_ : *default_instance_->awardinfo_;
}
inline ::MapInstanceProto::SimInstanceEnd* ToGTAwardInfo::mutable_awardinfo() {
  set_has_awardinfo();
  if (awardinfo_ == NULL) awardinfo_ = new ::MapInstanceProto::SimInstanceEnd;
  return awardinfo_;
}
inline ::MapInstanceProto::SimInstanceEnd* ToGTAwardInfo::release_awardinfo() {
  clear_has_awardinfo();
  ::MapInstanceProto::SimInstanceEnd* temp = awardinfo_;
  awardinfo_ = NULL;
  return temp;
}
inline void ToGTAwardInfo::set_allocated_awardinfo(::MapInstanceProto::SimInstanceEnd* awardinfo) {
  delete awardinfo_;
  awardinfo_ = awardinfo;
  if (awardinfo) {
    set_has_awardinfo();
  } else {
    clear_has_awardinfo();
  }
}

// -------------------------------------------------------------------

// ClientReqCreateInstance

// required int32 InstanceId = 1;
inline bool ClientReqCreateInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqCreateInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqCreateInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqCreateInstance::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 ClientReqCreateInstance::instanceid() const {
  return instanceid_;
}
inline void ClientReqCreateInstance::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// required int32 InstanceType = 2;
inline bool ClientReqCreateInstance::has_instancetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqCreateInstance::set_has_instancetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqCreateInstance::clear_has_instancetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqCreateInstance::clear_instancetype() {
  instancetype_ = 0;
  clear_has_instancetype();
}
inline ::google::protobuf::int32 ClientReqCreateInstance::instancetype() const {
  return instancetype_;
}
inline void ClientReqCreateInstance::set_instancetype(::google::protobuf::int32 value) {
  set_has_instancetype();
  instancetype_ = value;
}

// optional int32 paramf = 3;
inline bool ClientReqCreateInstance::has_paramf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqCreateInstance::set_has_paramf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqCreateInstance::clear_has_paramf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqCreateInstance::clear_paramf() {
  paramf_ = 0;
  clear_has_paramf();
}
inline ::google::protobuf::int32 ClientReqCreateInstance::paramf() const {
  return paramf_;
}
inline void ClientReqCreateInstance::set_paramf(::google::protobuf::int32 value) {
  set_has_paramf();
  paramf_ = value;
}

// -------------------------------------------------------------------

// GMReqWSCreateInstance

// required int32 InstanceId = 1;
inline bool GMReqWSCreateInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMReqWSCreateInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMReqWSCreateInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMReqWSCreateInstance::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 GMReqWSCreateInstance::instanceid() const {
  return instanceid_;
}
inline void GMReqWSCreateInstance::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// optional int32 InstanceType = 2;
inline bool GMReqWSCreateInstance::has_instancetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMReqWSCreateInstance::set_has_instancetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMReqWSCreateInstance::clear_has_instancetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMReqWSCreateInstance::clear_instancetype() {
  instancetype_ = 0;
  clear_has_instancetype();
}
inline ::google::protobuf::int32 GMReqWSCreateInstance::instancetype() const {
  return instancetype_;
}
inline void GMReqWSCreateInstance::set_instancetype(::google::protobuf::int32 value) {
  set_has_instancetype();
  instancetype_ = value;
}

// optional int64 charid = 3;
inline bool GMReqWSCreateInstance::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMReqWSCreateInstance::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMReqWSCreateInstance::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMReqWSCreateInstance::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GMReqWSCreateInstance::charid() const {
  return charid_;
}
inline void GMReqWSCreateInstance::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 paramf = 4;
inline bool GMReqWSCreateInstance::has_paramf() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMReqWSCreateInstance::set_has_paramf() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMReqWSCreateInstance::clear_has_paramf() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMReqWSCreateInstance::clear_paramf() {
  paramf_ = 0;
  clear_has_paramf();
}
inline ::google::protobuf::int32 GMReqWSCreateInstance::paramf() const {
  return paramf_;
}
inline void GMReqWSCreateInstance::set_paramf(::google::protobuf::int32 value) {
  set_has_paramf();
  paramf_ = value;
}

// -------------------------------------------------------------------

// AckToGMCreateInstance

// required int32 ret = 1;
inline bool AckToGMCreateInstance::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckToGMCreateInstance::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckToGMCreateInstance::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckToGMCreateInstance::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AckToGMCreateInstance::ret() const {
  return ret_;
}
inline void AckToGMCreateInstance::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 instanceid = 2;
inline bool AckToGMCreateInstance::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckToGMCreateInstance::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckToGMCreateInstance::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckToGMCreateInstance::clear_instanceid() {
  instanceid_ = GOOGLE_LONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::int64 AckToGMCreateInstance::instanceid() const {
  return instanceid_;
}
inline void AckToGMCreateInstance::set_instanceid(::google::protobuf::int64 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// ClientReqWorldArenaInfo

// -------------------------------------------------------------------

// ClientReqWarReport

// optional int32 page = 1;
inline bool ClientReqWarReport::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqWarReport::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqWarReport::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqWarReport::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 ClientReqWarReport::page() const {
  return page_;
}
inline void ClientReqWarReport::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// -------------------------------------------------------------------

// ReqToWorldGetArenaInfo

// repeated .MapInstanceProto.OtherPlayerArenaInfo otherinfo = 5;
inline int ReqToWorldGetArenaInfo::otherinfo_size() const {
  return otherinfo_.size();
}
inline void ReqToWorldGetArenaInfo::clear_otherinfo() {
  otherinfo_.Clear();
}
inline const ::MapInstanceProto::OtherPlayerArenaInfo& ReqToWorldGetArenaInfo::otherinfo(int index) const {
  return otherinfo_.Get(index);
}
inline ::MapInstanceProto::OtherPlayerArenaInfo* ReqToWorldGetArenaInfo::mutable_otherinfo(int index) {
  return otherinfo_.Mutable(index);
}
inline ::MapInstanceProto::OtherPlayerArenaInfo* ReqToWorldGetArenaInfo::add_otherinfo() {
  return otherinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >&
ReqToWorldGetArenaInfo::otherinfo() const {
  return otherinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >*
ReqToWorldGetArenaInfo::mutable_otherinfo() {
  return &otherinfo_;
}

// -------------------------------------------------------------------

// OtherPlayerArenaInfo

// required int64 charid = 1;
inline bool OtherPlayerArenaInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherPlayerArenaInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherPlayerArenaInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 OtherPlayerArenaInfo::charid() const {
  return charid_;
}
inline void OtherPlayerArenaInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string charname = 2;
inline bool OtherPlayerArenaInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OtherPlayerArenaInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OtherPlayerArenaInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& OtherPlayerArenaInfo::charname() const {
  return *charname_;
}
inline void OtherPlayerArenaInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void OtherPlayerArenaInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void OtherPlayerArenaInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OtherPlayerArenaInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* OtherPlayerArenaInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OtherPlayerArenaInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 Ranking = 3;
inline bool OtherPlayerArenaInfo::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OtherPlayerArenaInfo::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OtherPlayerArenaInfo::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 OtherPlayerArenaInfo::ranking() const {
  return ranking_;
}
inline void OtherPlayerArenaInfo::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// optional int32 profession = 4;
inline bool OtherPlayerArenaInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OtherPlayerArenaInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OtherPlayerArenaInfo::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 OtherPlayerArenaInfo::profession() const {
  return profession_;
}
inline void OtherPlayerArenaInfo::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// optional int32 fight = 5;
inline bool OtherPlayerArenaInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OtherPlayerArenaInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OtherPlayerArenaInfo::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 OtherPlayerArenaInfo::fight() const {
  return fight_;
}
inline void OtherPlayerArenaInfo::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional bool sex = 6;
inline bool OtherPlayerArenaInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OtherPlayerArenaInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OtherPlayerArenaInfo::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool OtherPlayerArenaInfo::sex() const {
  return sex_;
}
inline void OtherPlayerArenaInfo::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 viplv = 7;
inline bool OtherPlayerArenaInfo::has_viplv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_viplv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OtherPlayerArenaInfo::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OtherPlayerArenaInfo::clear_viplv() {
  viplv_ = 0;
  clear_has_viplv();
}
inline ::google::protobuf::int32 OtherPlayerArenaInfo::viplv() const {
  return viplv_;
}
inline void OtherPlayerArenaInfo::set_viplv(::google::protobuf::int32 value) {
  set_has_viplv();
  viplv_ = value;
}

// optional int32 lv = 8;
inline bool OtherPlayerArenaInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OtherPlayerArenaInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OtherPlayerArenaInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OtherPlayerArenaInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 OtherPlayerArenaInfo::lv() const {
  return lv_;
}
inline void OtherPlayerArenaInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// ReqToWordGetWarReport

// optional bool IsEnd = 1;
inline bool ReqToWordGetWarReport::has_isend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqToWordGetWarReport::set_has_isend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqToWordGetWarReport::clear_has_isend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqToWordGetWarReport::clear_isend() {
  isend_ = false;
  clear_has_isend();
}
inline bool ReqToWordGetWarReport::isend() const {
  return isend_;
}
inline void ReqToWordGetWarReport::set_isend(bool value) {
  set_has_isend();
  isend_ = value;
}

// repeated .MapInstanceProto.WarReport report = 2;
inline int ReqToWordGetWarReport::report_size() const {
  return report_.size();
}
inline void ReqToWordGetWarReport::clear_report() {
  report_.Clear();
}
inline const ::MapInstanceProto::WarReport& ReqToWordGetWarReport::report(int index) const {
  return report_.Get(index);
}
inline ::MapInstanceProto::WarReport* ReqToWordGetWarReport::mutable_report(int index) {
  return report_.Mutable(index);
}
inline ::MapInstanceProto::WarReport* ReqToWordGetWarReport::add_report() {
  return report_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::WarReport >&
ReqToWordGetWarReport::report() const {
  return report_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::WarReport >*
ReqToWordGetWarReport::mutable_report() {
  return &report_;
}

// -------------------------------------------------------------------

// ReqToGameGetArenaInfo

// optional int32 challengeTimes = 1;
inline bool ReqToGameGetArenaInfo::has_challengetimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqToGameGetArenaInfo::set_has_challengetimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqToGameGetArenaInfo::clear_has_challengetimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqToGameGetArenaInfo::clear_challengetimes() {
  challengetimes_ = 0;
  clear_has_challengetimes();
}
inline ::google::protobuf::int32 ReqToGameGetArenaInfo::challengetimes() const {
  return challengetimes_;
}
inline void ReqToGameGetArenaInfo::set_challengetimes(::google::protobuf::int32 value) {
  set_has_challengetimes();
  challengetimes_ = value;
}

// optional int32 alreadyRefresh = 2;
inline bool ReqToGameGetArenaInfo::has_alreadyrefresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqToGameGetArenaInfo::set_has_alreadyrefresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqToGameGetArenaInfo::clear_has_alreadyrefresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqToGameGetArenaInfo::clear_alreadyrefresh() {
  alreadyrefresh_ = 0;
  clear_has_alreadyrefresh();
}
inline ::google::protobuf::int32 ReqToGameGetArenaInfo::alreadyrefresh() const {
  return alreadyrefresh_;
}
inline void ReqToGameGetArenaInfo::set_alreadyrefresh(::google::protobuf::int32 value) {
  set_has_alreadyrefresh();
  alreadyrefresh_ = value;
}

// optional int32 alreadyAddChall = 3;
inline bool ReqToGameGetArenaInfo::has_alreadyaddchall() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqToGameGetArenaInfo::set_has_alreadyaddchall() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqToGameGetArenaInfo::clear_has_alreadyaddchall() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqToGameGetArenaInfo::clear_alreadyaddchall() {
  alreadyaddchall_ = 0;
  clear_has_alreadyaddchall();
}
inline ::google::protobuf::int32 ReqToGameGetArenaInfo::alreadyaddchall() const {
  return alreadyaddchall_;
}
inline void ReqToGameGetArenaInfo::set_alreadyaddchall(::google::protobuf::int32 value) {
  set_has_alreadyaddchall();
  alreadyaddchall_ = value;
}

// optional int32 Ranking = 4;
inline bool ReqToGameGetArenaInfo::has_ranking() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqToGameGetArenaInfo::set_has_ranking() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqToGameGetArenaInfo::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqToGameGetArenaInfo::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 ReqToGameGetArenaInfo::ranking() const {
  return ranking_;
}
inline void ReqToGameGetArenaInfo::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// optional int32 historyRank = 5;
inline bool ReqToGameGetArenaInfo::has_historyrank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqToGameGetArenaInfo::set_has_historyrank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqToGameGetArenaInfo::clear_has_historyrank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqToGameGetArenaInfo::clear_historyrank() {
  historyrank_ = 0;
  clear_has_historyrank();
}
inline ::google::protobuf::int32 ReqToGameGetArenaInfo::historyrank() const {
  return historyrank_;
}
inline void ReqToGameGetArenaInfo::set_historyrank(::google::protobuf::int32 value) {
  set_has_historyrank();
  historyrank_ = value;
}

// optional .MapInstanceProto.ArenaHistoryReward historyReward = 6;
inline bool ReqToGameGetArenaInfo::has_historyreward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqToGameGetArenaInfo::set_has_historyreward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqToGameGetArenaInfo::clear_has_historyreward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqToGameGetArenaInfo::clear_historyreward() {
  if (historyreward_ != NULL) historyreward_->::MapInstanceProto::ArenaHistoryReward::Clear();
  clear_has_historyreward();
}
inline const ::MapInstanceProto::ArenaHistoryReward& ReqToGameGetArenaInfo::historyreward() const {
  return historyreward_ != NULL ? *historyreward_ : *default_instance_->historyreward_;
}
inline ::MapInstanceProto::ArenaHistoryReward* ReqToGameGetArenaInfo::mutable_historyreward() {
  set_has_historyreward();
  if (historyreward_ == NULL) historyreward_ = new ::MapInstanceProto::ArenaHistoryReward;
  return historyreward_;
}
inline ::MapInstanceProto::ArenaHistoryReward* ReqToGameGetArenaInfo::release_historyreward() {
  clear_has_historyreward();
  ::MapInstanceProto::ArenaHistoryReward* temp = historyreward_;
  historyreward_ = NULL;
  return temp;
}
inline void ReqToGameGetArenaInfo::set_allocated_historyreward(::MapInstanceProto::ArenaHistoryReward* historyreward) {
  delete historyreward_;
  historyreward_ = historyreward;
  if (historyreward) {
    set_has_historyreward();
  } else {
    clear_has_historyreward();
  }
}

// -------------------------------------------------------------------

// ArenaHistoryReward

// repeated int32 reward = 1;
inline int ArenaHistoryReward::reward_size() const {
  return reward_.size();
}
inline void ArenaHistoryReward::clear_reward() {
  reward_.Clear();
}
inline ::google::protobuf::int32 ArenaHistoryReward::reward(int index) const {
  return reward_.Get(index);
}
inline void ArenaHistoryReward::set_reward(int index, ::google::protobuf::int32 value) {
  reward_.Set(index, value);
}
inline void ArenaHistoryReward::add_reward(::google::protobuf::int32 value) {
  reward_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ArenaHistoryReward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ArenaHistoryReward::mutable_reward() {
  return &reward_;
}

// repeated int32 havaReward = 2;
inline int ArenaHistoryReward::havareward_size() const {
  return havareward_.size();
}
inline void ArenaHistoryReward::clear_havareward() {
  havareward_.Clear();
}
inline ::google::protobuf::int32 ArenaHistoryReward::havareward(int index) const {
  return havareward_.Get(index);
}
inline void ArenaHistoryReward::set_havareward(int index, ::google::protobuf::int32 value) {
  havareward_.Set(index, value);
}
inline void ArenaHistoryReward::add_havareward(::google::protobuf::int32 value) {
  havareward_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ArenaHistoryReward::havareward() const {
  return havareward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ArenaHistoryReward::mutable_havareward() {
  return &havareward_;
}

// -------------------------------------------------------------------

// ReqArenaHistoryReward

// required int32 id = 1;
inline bool ReqArenaHistoryReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqArenaHistoryReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqArenaHistoryReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqArenaHistoryReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReqArenaHistoryReward::id() const {
  return id_;
}
inline void ReqArenaHistoryReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// RspArenaHistoryReward

// required int32 ret = 1;
inline bool RspArenaHistoryReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspArenaHistoryReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspArenaHistoryReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspArenaHistoryReward::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RspArenaHistoryReward::ret() const {
  return ret_;
}
inline void RspArenaHistoryReward::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool RspArenaHistoryReward::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspArenaHistoryReward::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspArenaHistoryReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspArenaHistoryReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RspArenaHistoryReward::id() const {
  return id_;
}
inline void RspArenaHistoryReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// WarReport

// optional string charname = 1;
inline bool WarReport::has_charname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarReport::set_has_charname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarReport::clear_has_charname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarReport::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& WarReport::charname() const {
  return *charname_;
}
inline void WarReport::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void WarReport::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void WarReport::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WarReport::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* WarReport::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WarReport::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 ranking = 2;
inline bool WarReport::has_ranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarReport::set_has_ranking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarReport::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarReport::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 WarReport::ranking() const {
  return ranking_;
}
inline void WarReport::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// optional bool iswin = 3;
inline bool WarReport::has_iswin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarReport::set_has_iswin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarReport::clear_has_iswin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarReport::clear_iswin() {
  iswin_ = false;
  clear_has_iswin();
}
inline bool WarReport::iswin() const {
  return iswin_;
}
inline void WarReport::set_iswin(bool value) {
  set_has_iswin();
  iswin_ = value;
}

// optional bool ischallenger = 4;
inline bool WarReport::has_ischallenger() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarReport::set_has_ischallenger() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarReport::clear_has_ischallenger() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarReport::clear_ischallenger() {
  ischallenger_ = false;
  clear_has_ischallenger();
}
inline bool WarReport::ischallenger() const {
  return ischallenger_;
}
inline void WarReport::set_ischallenger(bool value) {
  set_has_ischallenger();
  ischallenger_ = value;
}

// optional int64 times = 5;
inline bool WarReport::has_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarReport::set_has_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarReport::clear_has_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarReport::clear_times() {
  times_ = GOOGLE_LONGLONG(0);
  clear_has_times();
}
inline ::google::protobuf::int64 WarReport::times() const {
  return times_;
}
inline void WarReport::set_times(::google::protobuf::int64 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// CancelAreanCDTime

// -------------------------------------------------------------------

// ReturnCancelAreanCDTime

// optional int32 ret = 1;
inline bool ReturnCancelAreanCDTime::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnCancelAreanCDTime::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnCancelAreanCDTime::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnCancelAreanCDTime::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ReturnCancelAreanCDTime::ret() const {
  return ret_;
}
inline void ReturnCancelAreanCDTime::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// AddChallengeTimes

// required int32 times = 1;
inline bool AddChallengeTimes::has_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddChallengeTimes::set_has_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddChallengeTimes::clear_has_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddChallengeTimes::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 AddChallengeTimes::times() const {
  return times_;
}
inline void AddChallengeTimes::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// ReturnAddChallengeTimes

// optional int32 ret = 1;
inline bool ReturnAddChallengeTimes::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnAddChallengeTimes::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnAddChallengeTimes::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnAddChallengeTimes::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ReturnAddChallengeTimes::ret() const {
  return ret_;
}
inline void ReturnAddChallengeTimes::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 count = 2;
inline bool ReturnAddChallengeTimes::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnAddChallengeTimes::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnAddChallengeTimes::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnAddChallengeTimes::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ReturnAddChallengeTimes::count() const {
  return count_;
}
inline void ReturnAddChallengeTimes::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 alreadyAddChall = 3;
inline bool ReturnAddChallengeTimes::has_alreadyaddchall() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnAddChallengeTimes::set_has_alreadyaddchall() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnAddChallengeTimes::clear_has_alreadyaddchall() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnAddChallengeTimes::clear_alreadyaddchall() {
  alreadyaddchall_ = 0;
  clear_has_alreadyaddchall();
}
inline ::google::protobuf::int32 ReturnAddChallengeTimes::alreadyaddchall() const {
  return alreadyaddchall_;
}
inline void ReturnAddChallengeTimes::set_alreadyaddchall(::google::protobuf::int32 value) {
  set_has_alreadyaddchall();
  alreadyaddchall_ = value;
}

// -------------------------------------------------------------------

// ClientReqAreanReward

// -------------------------------------------------------------------

// GMToClientCompeteOver

// required bool issuccess = 1;
inline bool GMToClientCompeteOver::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToClientCompeteOver::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToClientCompeteOver::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToClientCompeteOver::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool GMToClientCompeteOver::issuccess() const {
  return issuccess_;
}
inline void GMToClientCompeteOver::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
}

// optional int32 exp = 2;
inline bool GMToClientCompeteOver::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMToClientCompeteOver::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMToClientCompeteOver::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMToClientCompeteOver::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GMToClientCompeteOver::exp() const {
  return exp_;
}
inline void GMToClientCompeteOver::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 credit = 3;
inline bool GMToClientCompeteOver::has_credit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMToClientCompeteOver::set_has_credit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMToClientCompeteOver::clear_has_credit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMToClientCompeteOver::clear_credit() {
  credit_ = 0;
  clear_has_credit();
}
inline ::google::protobuf::int32 GMToClientCompeteOver::credit() const {
  return credit_;
}
inline void GMToClientCompeteOver::set_credit(::google::protobuf::int32 value) {
  set_has_credit();
  credit_ = value;
}

// -------------------------------------------------------------------

// SysRankingReward

// required int64 ret = 1;
inline bool SysRankingReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysRankingReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysRankingReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysRankingReward::clear_ret() {
  ret_ = GOOGLE_LONGLONG(0);
  clear_has_ret();
}
inline ::google::protobuf::int64 SysRankingReward::ret() const {
  return ret_;
}
inline void SysRankingReward::set_ret(::google::protobuf::int64 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 retf = 2;
inline bool SysRankingReward::has_retf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SysRankingReward::set_has_retf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SysRankingReward::clear_has_retf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SysRankingReward::clear_retf() {
  retf_ = 0;
  clear_has_retf();
}
inline ::google::protobuf::int32 SysRankingReward::retf() const {
  return retf_;
}
inline void SysRankingReward::set_retf(::google::protobuf::int32 value) {
  set_has_retf();
  retf_ = value;
}

// optional int32 rets = 3;
inline bool SysRankingReward::has_rets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SysRankingReward::set_has_rets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SysRankingReward::clear_has_rets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SysRankingReward::clear_rets() {
  rets_ = 0;
  clear_has_rets();
}
inline ::google::protobuf::int32 SysRankingReward::rets() const {
  return rets_;
}
inline void SysRankingReward::set_rets(::google::protobuf::int32 value) {
  set_has_rets();
  rets_ = value;
}

// optional int32 Ranking = 4;
inline bool SysRankingReward::has_ranking() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SysRankingReward::set_has_ranking() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SysRankingReward::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SysRankingReward::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 SysRankingReward::ranking() const {
  return ranking_;
}
inline void SysRankingReward::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// optional int32 historyRank = 5;
inline bool SysRankingReward::has_historyrank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SysRankingReward::set_has_historyrank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SysRankingReward::clear_has_historyrank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SysRankingReward::clear_historyrank() {
  historyrank_ = 0;
  clear_has_historyrank();
}
inline ::google::protobuf::int32 SysRankingReward::historyrank() const {
  return historyrank_;
}
inline void SysRankingReward::set_historyrank(::google::protobuf::int32 value) {
  set_has_historyrank();
  historyrank_ = value;
}

// optional .MapInstanceProto.ArenaHistoryReward historyReward = 6;
inline bool SysRankingReward::has_historyreward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SysRankingReward::set_has_historyreward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SysRankingReward::clear_has_historyreward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SysRankingReward::clear_historyreward() {
  if (historyreward_ != NULL) historyreward_->::MapInstanceProto::ArenaHistoryReward::Clear();
  clear_has_historyreward();
}
inline const ::MapInstanceProto::ArenaHistoryReward& SysRankingReward::historyreward() const {
  return historyreward_ != NULL ? *historyreward_ : *default_instance_->historyreward_;
}
inline ::MapInstanceProto::ArenaHistoryReward* SysRankingReward::mutable_historyreward() {
  set_has_historyreward();
  if (historyreward_ == NULL) historyreward_ = new ::MapInstanceProto::ArenaHistoryReward;
  return historyreward_;
}
inline ::MapInstanceProto::ArenaHistoryReward* SysRankingReward::release_historyreward() {
  clear_has_historyreward();
  ::MapInstanceProto::ArenaHistoryReward* temp = historyreward_;
  historyreward_ = NULL;
  return temp;
}
inline void SysRankingReward::set_allocated_historyreward(::MapInstanceProto::ArenaHistoryReward* historyreward) {
  delete historyreward_;
  historyreward_ = historyreward;
  if (historyreward) {
    set_has_historyreward();
  } else {
    clear_has_historyreward();
  }
}

// -------------------------------------------------------------------

// ClientRegRankingName

// -------------------------------------------------------------------

// WSToClientRankingName

// repeated string charname = 1;
inline int WSToClientRankingName::charname_size() const {
  return charname_.size();
}
inline void WSToClientRankingName::clear_charname() {
  charname_.Clear();
}
inline const ::std::string& WSToClientRankingName::charname(int index) const {
  return charname_.Get(index);
}
inline ::std::string* WSToClientRankingName::mutable_charname(int index) {
  return charname_.Mutable(index);
}
inline void WSToClientRankingName::set_charname(int index, const ::std::string& value) {
  charname_.Mutable(index)->assign(value);
}
inline void WSToClientRankingName::set_charname(int index, const char* value) {
  charname_.Mutable(index)->assign(value);
}
inline void WSToClientRankingName::set_charname(int index, const char* value, size_t size) {
  charname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WSToClientRankingName::add_charname() {
  return charname_.Add();
}
inline void WSToClientRankingName::add_charname(const ::std::string& value) {
  charname_.Add()->assign(value);
}
inline void WSToClientRankingName::add_charname(const char* value) {
  charname_.Add()->assign(value);
}
inline void WSToClientRankingName::add_charname(const char* value, size_t size) {
  charname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WSToClientRankingName::charname() const {
  return charname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WSToClientRankingName::mutable_charname() {
  return &charname_;
}

// repeated int32 viplv = 2;
inline int WSToClientRankingName::viplv_size() const {
  return viplv_.size();
}
inline void WSToClientRankingName::clear_viplv() {
  viplv_.Clear();
}
inline ::google::protobuf::int32 WSToClientRankingName::viplv(int index) const {
  return viplv_.Get(index);
}
inline void WSToClientRankingName::set_viplv(int index, ::google::protobuf::int32 value) {
  viplv_.Set(index, value);
}
inline void WSToClientRankingName::add_viplv(::google::protobuf::int32 value) {
  viplv_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WSToClientRankingName::viplv() const {
  return viplv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WSToClientRankingName::mutable_viplv() {
  return &viplv_;
}

// -------------------------------------------------------------------

// ClientReqGroupInfo

// -------------------------------------------------------------------

// GMToClentGroupInfo

// repeated .MapInstanceProto.GroupInfo info = 1;
inline int GMToClentGroupInfo::info_size() const {
  return info_.size();
}
inline void GMToClentGroupInfo::clear_info() {
  info_.Clear();
}
inline const ::MapInstanceProto::GroupInfo& GMToClentGroupInfo::info(int index) const {
  return info_.Get(index);
}
inline ::MapInstanceProto::GroupInfo* GMToClentGroupInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::MapInstanceProto::GroupInfo* GMToClentGroupInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::GroupInfo >&
GMToClentGroupInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::GroupInfo >*
GMToClentGroupInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GroupInfo

// required int32 mapid = 1;
inline bool GroupInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 GroupInfo::mapid() const {
  return mapid_;
}
inline void GroupInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 num = 2;
inline bool GroupInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GroupInfo::num() const {
  return num_;
}
inline void GroupInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// ClientReqAllTeamInfo

// required int32 mapid = 1;
inline bool ClientReqAllTeamInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqAllTeamInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqAllTeamInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqAllTeamInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqAllTeamInfo::mapid() const {
  return mapid_;
}
inline void ClientReqAllTeamInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClentAllTeamInfo

// required int32 mapid = 1;
inline bool WSToClentAllTeamInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClentAllTeamInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClentAllTeamInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClentAllTeamInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 WSToClentAllTeamInfo::mapid() const {
  return mapid_;
}
inline void WSToClentAllTeamInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 page = 2;
inline bool WSToClentAllTeamInfo::has_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClentAllTeamInfo::set_has_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClentAllTeamInfo::clear_has_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClentAllTeamInfo::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 WSToClentAllTeamInfo::page() const {
  return page_;
}
inline void WSToClentAllTeamInfo::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// repeated .MapInstanceProto.AllTeamInfo allteaminfo = 3;
inline int WSToClentAllTeamInfo::allteaminfo_size() const {
  return allteaminfo_.size();
}
inline void WSToClentAllTeamInfo::clear_allteaminfo() {
  allteaminfo_.Clear();
}
inline const ::MapInstanceProto::AllTeamInfo& WSToClentAllTeamInfo::allteaminfo(int index) const {
  return allteaminfo_.Get(index);
}
inline ::MapInstanceProto::AllTeamInfo* WSToClentAllTeamInfo::mutable_allteaminfo(int index) {
  return allteaminfo_.Mutable(index);
}
inline ::MapInstanceProto::AllTeamInfo* WSToClentAllTeamInfo::add_allteaminfo() {
  return allteaminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::AllTeamInfo >&
WSToClentAllTeamInfo::allteaminfo() const {
  return allteaminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::AllTeamInfo >*
WSToClentAllTeamInfo::mutable_allteaminfo() {
  return &allteaminfo_;
}

// -------------------------------------------------------------------

// AllTeamInfo

// required int64 teamid = 1;
inline bool AllTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 AllTeamInfo::teamid() const {
  return teamid_;
}
inline void AllTeamInfo::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional string charname = 2;
inline bool AllTeamInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllTeamInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllTeamInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllTeamInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& AllTeamInfo::charname() const {
  return *charname_;
}
inline void AllTeamInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void AllTeamInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void AllTeamInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AllTeamInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* AllTeamInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AllTeamInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 num = 3;
inline bool AllTeamInfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllTeamInfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllTeamInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllTeamInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 AllTeamInfo::num() const {
  return num_;
}
inline void AllTeamInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 fight = 4;
inline bool AllTeamInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllTeamInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllTeamInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllTeamInfo::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 AllTeamInfo::fight() const {
  return fight_;
}
inline void AllTeamInfo::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional bool code = 5;
inline bool AllTeamInfo::has_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllTeamInfo::set_has_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllTeamInfo::clear_has_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllTeamInfo::clear_code() {
  code_ = false;
  clear_has_code();
}
inline bool AllTeamInfo::code() const {
  return code_;
}
inline void AllTeamInfo::set_code(bool value) {
  set_has_code();
  code_ = value;
}

// optional int32 vip = 6;
inline bool AllTeamInfo::has_vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllTeamInfo::set_has_vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllTeamInfo::clear_has_vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllTeamInfo::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 AllTeamInfo::vip() const {
  return vip_;
}
inline void AllTeamInfo::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional int32 sex = 7;
inline bool AllTeamInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AllTeamInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AllTeamInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AllTeamInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 AllTeamInfo::sex() const {
  return sex_;
}
inline void AllTeamInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 job = 8;
inline bool AllTeamInfo::has_job() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AllTeamInfo::set_has_job() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AllTeamInfo::clear_has_job() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AllTeamInfo::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 AllTeamInfo::job() const {
  return job_;
}
inline void AllTeamInfo::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
}

// -------------------------------------------------------------------

// ClientReqJoinTeam

// required int64 teamid = 1;
inline bool ClientReqJoinTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqJoinTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqJoinTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqJoinTeam::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 ClientReqJoinTeam::teamid() const {
  return teamid_;
}
inline void ClientReqJoinTeam::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional string password = 2;
inline bool ClientReqJoinTeam::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqJoinTeam::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqJoinTeam::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqJoinTeam::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ClientReqJoinTeam::password() const {
  return *password_;
}
inline void ClientReqJoinTeam::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ClientReqJoinTeam::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ClientReqJoinTeam::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientReqJoinTeam::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ClientReqJoinTeam::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientReqJoinTeam::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 mapid = 3;
inline bool ClientReqJoinTeam::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqJoinTeam::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqJoinTeam::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqJoinTeam::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqJoinTeam::mapid() const {
  return mapid_;
}
inline void ClientReqJoinTeam::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClentReqJoinTeam

// required int32 ret = 1;
inline bool WSToClentReqJoinTeam::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClentReqJoinTeam::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClentReqJoinTeam::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClentReqJoinTeam::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClentReqJoinTeam::ret() const {
  return ret_;
}
inline void WSToClentReqJoinTeam::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 mapid = 2;
inline bool WSToClentReqJoinTeam::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClentReqJoinTeam::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClentReqJoinTeam::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClentReqJoinTeam::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 WSToClentReqJoinTeam::mapid() const {
  return mapid_;
}
inline void WSToClentReqJoinTeam::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int64 teamid = 3;
inline bool WSToClentReqJoinTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSToClentReqJoinTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSToClentReqJoinTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSToClentReqJoinTeam::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 WSToClentReqJoinTeam::teamid() const {
  return teamid_;
}
inline void WSToClentReqJoinTeam::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 fight = 4;
inline bool WSToClentReqJoinTeam::has_fight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WSToClentReqJoinTeam::set_has_fight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WSToClentReqJoinTeam::clear_has_fight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WSToClentReqJoinTeam::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 WSToClentReqJoinTeam::fight() const {
  return fight_;
}
inline void WSToClentReqJoinTeam::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional bool flag = 5;
inline bool WSToClentReqJoinTeam::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WSToClentReqJoinTeam::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WSToClentReqJoinTeam::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WSToClentReqJoinTeam::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WSToClentReqJoinTeam::flag() const {
  return flag_;
}
inline void WSToClentReqJoinTeam::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// repeated .MapInstanceProto.TeammemberInfo memberifno = 6;
inline int WSToClentReqJoinTeam::memberifno_size() const {
  return memberifno_.size();
}
inline void WSToClentReqJoinTeam::clear_memberifno() {
  memberifno_.Clear();
}
inline const ::MapInstanceProto::TeammemberInfo& WSToClentReqJoinTeam::memberifno(int index) const {
  return memberifno_.Get(index);
}
inline ::MapInstanceProto::TeammemberInfo* WSToClentReqJoinTeam::mutable_memberifno(int index) {
  return memberifno_.Mutable(index);
}
inline ::MapInstanceProto::TeammemberInfo* WSToClentReqJoinTeam::add_memberifno() {
  return memberifno_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::TeammemberInfo >&
WSToClentReqJoinTeam::memberifno() const {
  return memberifno_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::TeammemberInfo >*
WSToClentReqJoinTeam::mutable_memberifno() {
  return &memberifno_;
}

// -------------------------------------------------------------------

// TeammemberInfo

// optional int64 charid = 1;
inline bool TeammemberInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeammemberInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeammemberInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeammemberInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 TeammemberInfo::charid() const {
  return charid_;
}
inline void TeammemberInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string charname = 2;
inline bool TeammemberInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeammemberInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeammemberInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeammemberInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& TeammemberInfo::charname() const {
  return *charname_;
}
inline void TeammemberInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void TeammemberInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void TeammemberInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TeammemberInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* TeammemberInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TeammemberInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 fight = 3;
inline bool TeammemberInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeammemberInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeammemberInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeammemberInfo::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 TeammemberInfo::fight() const {
  return fight_;
}
inline void TeammemberInfo::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional bool captain = 4;
inline bool TeammemberInfo::has_captain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeammemberInfo::set_has_captain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeammemberInfo::clear_has_captain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeammemberInfo::clear_captain() {
  captain_ = false;
  clear_has_captain();
}
inline bool TeammemberInfo::captain() const {
  return captain_;
}
inline void TeammemberInfo::set_captain(bool value) {
  set_has_captain();
  captain_ = value;
}

// optional bool ready = 5;
inline bool TeammemberInfo::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeammemberInfo::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeammemberInfo::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeammemberInfo::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool TeammemberInfo::ready() const {
  return ready_;
}
inline void TeammemberInfo::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// optional int32 job = 6;
inline bool TeammemberInfo::has_job() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeammemberInfo::set_has_job() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeammemberInfo::clear_has_job() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeammemberInfo::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 TeammemberInfo::job() const {
  return job_;
}
inline void TeammemberInfo::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
}

// optional bool sex = 7;
inline bool TeammemberInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeammemberInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeammemberInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeammemberInfo::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool TeammemberInfo::sex() const {
  return sex_;
}
inline void TeammemberInfo::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 vip = 8;
inline bool TeammemberInfo::has_vip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TeammemberInfo::set_has_vip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TeammemberInfo::clear_has_vip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TeammemberInfo::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 TeammemberInfo::vip() const {
  return vip_;
}
inline void TeammemberInfo::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// -------------------------------------------------------------------

// ClientReqQuickJoinTeam

// required int32 mapid = 1;
inline bool ClientReqQuickJoinTeam::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqQuickJoinTeam::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqQuickJoinTeam::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqQuickJoinTeam::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqQuickJoinTeam::mapid() const {
  return mapid_;
}
inline void ClientReqQuickJoinTeam::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// ClientReqCreateTeam

// required int32 mapid = 1;
inline bool ClientReqCreateTeam::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqCreateTeam::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqCreateTeam::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqCreateTeam::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqCreateTeam::mapid() const {
  return mapid_;
}
inline void ClientReqCreateTeam::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 fight = 2;
inline bool ClientReqCreateTeam::has_fight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqCreateTeam::set_has_fight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqCreateTeam::clear_has_fight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqCreateTeam::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 ClientReqCreateTeam::fight() const {
  return fight_;
}
inline void ClientReqCreateTeam::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional string password = 3;
inline bool ClientReqCreateTeam::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqCreateTeam::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqCreateTeam::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqCreateTeam::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ClientReqCreateTeam::password() const {
  return *password_;
}
inline void ClientReqCreateTeam::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ClientReqCreateTeam::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ClientReqCreateTeam::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientReqCreateTeam::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ClientReqCreateTeam::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientReqCreateTeam::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool flag = 4;
inline bool ClientReqCreateTeam::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientReqCreateTeam::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientReqCreateTeam::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientReqCreateTeam::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool ClientReqCreateTeam::flag() const {
  return flag_;
}
inline void ClientReqCreateTeam::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// WSToClentReqCreateTeam

// required int32 ret = 1;
inline bool WSToClentReqCreateTeam::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClentReqCreateTeam::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClentReqCreateTeam::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClentReqCreateTeam::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClentReqCreateTeam::ret() const {
  return ret_;
}
inline void WSToClentReqCreateTeam::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 mapid = 2;
inline bool WSToClentReqCreateTeam::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClentReqCreateTeam::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClentReqCreateTeam::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClentReqCreateTeam::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 WSToClentReqCreateTeam::mapid() const {
  return mapid_;
}
inline void WSToClentReqCreateTeam::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int64 teamid = 3;
inline bool WSToClentReqCreateTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSToClentReqCreateTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSToClentReqCreateTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSToClentReqCreateTeam::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 WSToClentReqCreateTeam::teamid() const {
  return teamid_;
}
inline void WSToClentReqCreateTeam::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional bool flag = 4;
inline bool WSToClentReqCreateTeam::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WSToClentReqCreateTeam::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WSToClentReqCreateTeam::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WSToClentReqCreateTeam::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WSToClentReqCreateTeam::flag() const {
  return flag_;
}
inline void WSToClentReqCreateTeam::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// optional bool code = 5;
inline bool WSToClentReqCreateTeam::has_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WSToClentReqCreateTeam::set_has_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WSToClentReqCreateTeam::clear_has_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WSToClentReqCreateTeam::clear_code() {
  code_ = false;
  clear_has_code();
}
inline bool WSToClentReqCreateTeam::code() const {
  return code_;
}
inline void WSToClentReqCreateTeam::set_code(bool value) {
  set_has_code();
  code_ = value;
}

// optional int32 fight = 6;
inline bool WSToClentReqCreateTeam::has_fight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WSToClentReqCreateTeam::set_has_fight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WSToClentReqCreateTeam::clear_has_fight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WSToClentReqCreateTeam::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 WSToClentReqCreateTeam::fight() const {
  return fight_;
}
inline void WSToClentReqCreateTeam::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// -------------------------------------------------------------------

// ClientReqTeamReady

// required int32 mapid = 1;
inline bool ClientReqTeamReady::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqTeamReady::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqTeamReady::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqTeamReady::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqTeamReady::mapid() const {
  return mapid_;
}
inline void ClientReqTeamReady::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClientReqTeamReady

// required int32 ret = 1;
inline bool WSToClientReqTeamReady::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientReqTeamReady::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientReqTeamReady::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientReqTeamReady::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClientReqTeamReady::ret() const {
  return ret_;
}
inline void WSToClientReqTeamReady::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WSToClientSimReady

// required int64 charid = 1;
inline bool WSToClientSimReady::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientSimReady::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientSimReady::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientSimReady::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToClientSimReady::charid() const {
  return charid_;
}
inline void WSToClientSimReady::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// ClientSimFindTeamMember

// required int32 mapid = 1;
inline bool ClientSimFindTeamMember::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSimFindTeamMember::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSimFindTeamMember::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSimFindTeamMember::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientSimFindTeamMember::mapid() const {
  return mapid_;
}
inline void ClientSimFindTeamMember::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClientFindTeamMember

// required int64 teamid = 1;
inline bool WSToClientFindTeamMember::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientFindTeamMember::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientFindTeamMember::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientFindTeamMember::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 WSToClientFindTeamMember::teamid() const {
  return teamid_;
}
inline void WSToClientFindTeamMember::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 mapid = 2;
inline bool WSToClientFindTeamMember::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClientFindTeamMember::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClientFindTeamMember::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClientFindTeamMember::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 WSToClientFindTeamMember::mapid() const {
  return mapid_;
}
inline void WSToClientFindTeamMember::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional bool code = 3;
inline bool WSToClientFindTeamMember::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSToClientFindTeamMember::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSToClientFindTeamMember::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSToClientFindTeamMember::clear_code() {
  code_ = false;
  clear_has_code();
}
inline bool WSToClientFindTeamMember::code() const {
  return code_;
}
inline void WSToClientFindTeamMember::set_code(bool value) {
  set_has_code();
  code_ = value;
}

// optional string name = 4;
inline bool WSToClientFindTeamMember::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WSToClientFindTeamMember::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WSToClientFindTeamMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WSToClientFindTeamMember::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& WSToClientFindTeamMember::name() const {
  return *name_;
}
inline void WSToClientFindTeamMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void WSToClientFindTeamMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void WSToClientFindTeamMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WSToClientFindTeamMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* WSToClientFindTeamMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WSToClientFindTeamMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ClientReqKickMember

// required int32 mapid = 1;
inline bool ClientReqKickMember::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqKickMember::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqKickMember::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqKickMember::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqKickMember::mapid() const {
  return mapid_;
}
inline void ClientReqKickMember::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int64 charid = 2;
inline bool ClientReqKickMember::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqKickMember::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqKickMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqKickMember::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ClientReqKickMember::charid() const {
  return charid_;
}
inline void ClientReqKickMember::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// WSToClientKickMember

// required int32 ret = 1;
inline bool WSToClientKickMember::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientKickMember::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientKickMember::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientKickMember::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClientKickMember::ret() const {
  return ret_;
}
inline void WSToClientKickMember::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 charid = 2;
inline bool WSToClientKickMember::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClientKickMember::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClientKickMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClientKickMember::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToClientKickMember::charid() const {
  return charid_;
}
inline void WSToClientKickMember::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// WSToClientSimKick

// optional int64 charid = 1;
inline bool WSToClientSimKick::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientSimKick::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientSimKick::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientSimKick::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToClientSimKick::charid() const {
  return charid_;
}
inline void WSToClientSimKick::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// ClientReqEnterTeamMap

// required int32 mapid = 1;
inline bool ClientReqEnterTeamMap::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqEnterTeamMap::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqEnterTeamMap::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqEnterTeamMap::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqEnterTeamMap::mapid() const {
  return mapid_;
}
inline void ClientReqEnterTeamMap::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClientEnterTeamMap

// required int32 ret = 1;
inline bool WSToClientEnterTeamMap::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientEnterTeamMap::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientEnterTeamMap::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientEnterTeamMap::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClientEnterTeamMap::ret() const {
  return ret_;
}
inline void WSToClientEnterTeamMap::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 instance = 2;
inline bool WSToClientEnterTeamMap::has_instance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClientEnterTeamMap::set_has_instance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClientEnterTeamMap::clear_has_instance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClientEnterTeamMap::clear_instance() {
  instance_ = GOOGLE_LONGLONG(0);
  clear_has_instance();
}
inline ::google::protobuf::int64 WSToClientEnterTeamMap::instance() const {
  return instance_;
}
inline void WSToClientEnterTeamMap::set_instance(::google::protobuf::int64 value) {
  set_has_instance();
  instance_ = value;
}

// -------------------------------------------------------------------

// WSToClientSimInstance

// optional int64 instance = 1;
inline bool WSToClientSimInstance::has_instance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientSimInstance::set_has_instance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientSimInstance::clear_has_instance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientSimInstance::clear_instance() {
  instance_ = GOOGLE_LONGLONG(0);
  clear_has_instance();
}
inline ::google::protobuf::int64 WSToClientSimInstance::instance() const {
  return instance_;
}
inline void WSToClientSimInstance::set_instance(::google::protobuf::int64 value) {
  set_has_instance();
  instance_ = value;
}

// -------------------------------------------------------------------

// GMToClientSimHarmRank

// repeated .MapInstanceProto.HarmRank harminfo = 1;
inline int GMToClientSimHarmRank::harminfo_size() const {
  return harminfo_.size();
}
inline void GMToClientSimHarmRank::clear_harminfo() {
  harminfo_.Clear();
}
inline const ::MapInstanceProto::HarmRank& GMToClientSimHarmRank::harminfo(int index) const {
  return harminfo_.Get(index);
}
inline ::MapInstanceProto::HarmRank* GMToClientSimHarmRank::mutable_harminfo(int index) {
  return harminfo_.Mutable(index);
}
inline ::MapInstanceProto::HarmRank* GMToClientSimHarmRank::add_harminfo() {
  return harminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::HarmRank >&
GMToClientSimHarmRank::harminfo() const {
  return harminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::HarmRank >*
GMToClientSimHarmRank::mutable_harminfo() {
  return &harminfo_;
}

// -------------------------------------------------------------------

// HarmRank

// required int64 charid = 1;
inline bool HarmRank::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HarmRank::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HarmRank::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HarmRank::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 HarmRank::charid() const {
  return charid_;
}
inline void HarmRank::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string charname = 2;
inline bool HarmRank::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HarmRank::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HarmRank::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HarmRank::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& HarmRank::charname() const {
  return *charname_;
}
inline void HarmRank::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void HarmRank::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void HarmRank::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HarmRank::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* HarmRank::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HarmRank::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional float harm = 3;
inline bool HarmRank::has_harm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HarmRank::set_has_harm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HarmRank::clear_has_harm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HarmRank::clear_harm() {
  harm_ = 0;
  clear_has_harm();
}
inline float HarmRank::harm() const {
  return harm_;
}
inline void HarmRank::set_harm(float value) {
  set_has_harm();
  harm_ = value;
}

// -------------------------------------------------------------------

// WSToClientSimOnline

// required int64 charid = 1;
inline bool WSToClientSimOnline::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientSimOnline::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientSimOnline::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientSimOnline::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToClientSimOnline::charid() const {
  return charid_;
}
inline void WSToClientSimOnline::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional bool online = 2;
inline bool WSToClientSimOnline::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClientSimOnline::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClientSimOnline::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClientSimOnline::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool WSToClientSimOnline::online() const {
  return online_;
}
inline void WSToClientSimOnline::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// -------------------------------------------------------------------

// ClientReqExitTeam

// required int32 mapid = 1;
inline bool ClientReqExitTeam::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqExitTeam::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqExitTeam::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqExitTeam::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqExitTeam::mapid() const {
  return mapid_;
}
inline void ClientReqExitTeam::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClientExitTeam

// required int32 ret = 1;
inline bool WSToClientExitTeam::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientExitTeam::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientExitTeam::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientExitTeam::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClientExitTeam::ret() const {
  return ret_;
}
inline void WSToClientExitTeam::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WSToClientSimExitTeam

// required int64 charid = 1;
inline bool WSToClientSimExitTeam::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientSimExitTeam::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientSimExitTeam::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientSimExitTeam::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToClientSimExitTeam::charid() const {
  return charid_;
}
inline void WSToClientSimExitTeam::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int64 captain = 2;
inline bool WSToClientSimExitTeam::has_captain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToClientSimExitTeam::set_has_captain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToClientSimExitTeam::clear_has_captain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToClientSimExitTeam::clear_captain() {
  captain_ = GOOGLE_LONGLONG(0);
  clear_has_captain();
}
inline ::google::protobuf::int64 WSToClientSimExitTeam::captain() const {
  return captain_;
}
inline void WSToClientSimExitTeam::set_captain(::google::protobuf::int64 value) {
  set_has_captain();
  captain_ = value;
}

// -------------------------------------------------------------------

// GMToWSDelTeam

// required int64 teamid = 1;
inline bool GMToWSDelTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToWSDelTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToWSDelTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToWSDelTeam::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 GMToWSDelTeam::teamid() const {
  return teamid_;
}
inline void GMToWSDelTeam::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// GMToClientLottery

// required int32 ret = 1;
inline bool GMToClientLottery::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToClientLottery::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToClientLottery::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToClientLottery::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GMToClientLottery::ret() const {
  return ret_;
}
inline void GMToClientLottery::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 FlopID = 2;
inline bool GMToClientLottery::has_flopid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMToClientLottery::set_has_flopid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMToClientLottery::clear_has_flopid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMToClientLottery::clear_flopid() {
  flopid_ = 0;
  clear_has_flopid();
}
inline ::google::protobuf::int32 GMToClientLottery::flopid() const {
  return flopid_;
}
inline void GMToClientLottery::set_flopid(::google::protobuf::int32 value) {
  set_has_flopid();
  flopid_ = value;
}

// optional int32 ItemID = 3;
inline bool GMToClientLottery::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMToClientLottery::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMToClientLottery::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMToClientLottery::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 GMToClientLottery::itemid() const {
  return itemid_;
}
inline void GMToClientLottery::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 ItemNum = 4;
inline bool GMToClientLottery::has_itemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMToClientLottery::set_has_itemnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMToClientLottery::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMToClientLottery::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 GMToClientLottery::itemnum() const {
  return itemnum_;
}
inline void GMToClientLottery::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// optional int32 BindType = 5;
inline bool GMToClientLottery::has_bindtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMToClientLottery::set_has_bindtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMToClientLottery::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMToClientLottery::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 GMToClientLottery::bindtype() const {
  return bindtype_;
}
inline void GMToClientLottery::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
}

// -------------------------------------------------------------------

// SimSweepInstanceAward

// required int32 mapid = 1;
inline bool SimSweepInstanceAward::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimSweepInstanceAward::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimSweepInstanceAward::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimSweepInstanceAward::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SimSweepInstanceAward::mapid() const {
  return mapid_;
}
inline void SimSweepInstanceAward::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required int32 elapsedTime = 2;
inline bool SimSweepInstanceAward::has_elapsedtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimSweepInstanceAward::set_has_elapsedtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimSweepInstanceAward::clear_has_elapsedtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimSweepInstanceAward::clear_elapsedtime() {
  elapsedtime_ = 0;
  clear_has_elapsedtime();
}
inline ::google::protobuf::int32 SimSweepInstanceAward::elapsedtime() const {
  return elapsedtime_;
}
inline void SimSweepInstanceAward::set_elapsedtime(::google::protobuf::int32 value) {
  set_has_elapsedtime();
  elapsedtime_ = value;
}

// required int32 awardMoney = 3;
inline bool SimSweepInstanceAward::has_awardmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimSweepInstanceAward::set_has_awardmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimSweepInstanceAward::clear_has_awardmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimSweepInstanceAward::clear_awardmoney() {
  awardmoney_ = 0;
  clear_has_awardmoney();
}
inline ::google::protobuf::int32 SimSweepInstanceAward::awardmoney() const {
  return awardmoney_;
}
inline void SimSweepInstanceAward::set_awardmoney(::google::protobuf::int32 value) {
  set_has_awardmoney();
  awardmoney_ = value;
}

// required int32 awardExp = 4;
inline bool SimSweepInstanceAward::has_awardexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SimSweepInstanceAward::set_has_awardexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SimSweepInstanceAward::clear_has_awardexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SimSweepInstanceAward::clear_awardexp() {
  awardexp_ = 0;
  clear_has_awardexp();
}
inline ::google::protobuf::int32 SimSweepInstanceAward::awardexp() const {
  return awardexp_;
}
inline void SimSweepInstanceAward::set_awardexp(::google::protobuf::int32 value) {
  set_has_awardexp();
  awardexp_ = value;
}

// required int32 awardInfuriate = 5;
inline bool SimSweepInstanceAward::has_awardinfuriate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SimSweepInstanceAward::set_has_awardinfuriate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SimSweepInstanceAward::clear_has_awardinfuriate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SimSweepInstanceAward::clear_awardinfuriate() {
  awardinfuriate_ = 0;
  clear_has_awardinfuriate();
}
inline ::google::protobuf::int32 SimSweepInstanceAward::awardinfuriate() const {
  return awardinfuriate_;
}
inline void SimSweepInstanceAward::set_awardinfuriate(::google::protobuf::int32 value) {
  set_has_awardinfuriate();
  awardinfuriate_ = value;
}

// repeated .CharLogin.ClientItemInfo items = 6;
inline int SimSweepInstanceAward::items_size() const {
  return items_.size();
}
inline void SimSweepInstanceAward::clear_items() {
  items_.Clear();
}
inline const ::CharLogin::ClientItemInfo& SimSweepInstanceAward::items(int index) const {
  return items_.Get(index);
}
inline ::CharLogin::ClientItemInfo* SimSweepInstanceAward::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CharLogin::ClientItemInfo* SimSweepInstanceAward::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
SimSweepInstanceAward::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
SimSweepInstanceAward::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// SysInstanceRanking

// required int32 mapid = 1;
inline bool SysInstanceRanking::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysInstanceRanking::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysInstanceRanking::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysInstanceRanking::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 SysInstanceRanking::mapid() const {
  return mapid_;
}
inline void SysInstanceRanking::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 elapsedTime = 2;
inline bool SysInstanceRanking::has_elapsedtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SysInstanceRanking::set_has_elapsedtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SysInstanceRanking::clear_has_elapsedtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SysInstanceRanking::clear_elapsedtime() {
  elapsedtime_ = 0;
  clear_has_elapsedtime();
}
inline ::google::protobuf::int32 SysInstanceRanking::elapsedtime() const {
  return elapsedtime_;
}
inline void SysInstanceRanking::set_elapsedtime(::google::protobuf::int32 value) {
  set_has_elapsedtime();
  elapsedtime_ = value;
}

// optional int32 type = 3;
inline bool SysInstanceRanking::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SysInstanceRanking::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SysInstanceRanking::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SysInstanceRanking::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SysInstanceRanking::type() const {
  return type_;
}
inline void SysInstanceRanking::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 charId = 4;
inline bool SysInstanceRanking::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SysInstanceRanking::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SysInstanceRanking::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SysInstanceRanking::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SysInstanceRanking::charid() const {
  return charid_;
}
inline void SysInstanceRanking::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// AckInstanceRanking

// required int32 mapid = 1;
inline bool AckInstanceRanking::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckInstanceRanking::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckInstanceRanking::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckInstanceRanking::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 AckInstanceRanking::mapid() const {
  return mapid_;
}
inline void AckInstanceRanking::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// RetInstanceRanking

// required int32 ret = 1;
inline bool RetInstanceRanking::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInstanceRanking::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInstanceRanking::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInstanceRanking::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetInstanceRanking::ret() const {
  return ret_;
}
inline void RetInstanceRanking::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 elapsedTime = 2;
inline bool RetInstanceRanking::has_elapsedtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetInstanceRanking::set_has_elapsedtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetInstanceRanking::clear_has_elapsedtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetInstanceRanking::clear_elapsedtime() {
  elapsedtime_ = 0;
  clear_has_elapsedtime();
}
inline ::google::protobuf::int32 RetInstanceRanking::elapsedtime() const {
  return elapsedtime_;
}
inline void RetInstanceRanking::set_elapsedtime(::google::protobuf::int32 value) {
  set_has_elapsedtime();
  elapsedtime_ = value;
}

// optional string charname = 3;
inline bool RetInstanceRanking::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetInstanceRanking::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetInstanceRanking::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetInstanceRanking::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RetInstanceRanking::charname() const {
  return *charname_;
}
inline void RetInstanceRanking::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void RetInstanceRanking::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void RetInstanceRanking::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RetInstanceRanking::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* RetInstanceRanking::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RetInstanceRanking::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 mapid = 4;
inline bool RetInstanceRanking::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetInstanceRanking::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetInstanceRanking::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetInstanceRanking::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 RetInstanceRanking::mapid() const {
  return mapid_;
}
inline void RetInstanceRanking::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// GetInstanceRanking

// required int32 mapid = 1;
inline bool GetInstanceRanking::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInstanceRanking::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInstanceRanking::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInstanceRanking::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 GetInstanceRanking::mapid() const {
  return mapid_;
}
inline void GetInstanceRanking::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// ReturnInstanceRanking

// required int32 mapid = 1;
inline bool ReturnInstanceRanking::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnInstanceRanking::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnInstanceRanking::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnInstanceRanking::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ReturnInstanceRanking::mapid() const {
  return mapid_;
}
inline void ReturnInstanceRanking::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 elapsedTime = 2;
inline bool ReturnInstanceRanking::has_elapsedtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnInstanceRanking::set_has_elapsedtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnInstanceRanking::clear_has_elapsedtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnInstanceRanking::clear_elapsedtime() {
  elapsedtime_ = 0;
  clear_has_elapsedtime();
}
inline ::google::protobuf::int32 ReturnInstanceRanking::elapsedtime() const {
  return elapsedtime_;
}
inline void ReturnInstanceRanking::set_elapsedtime(::google::protobuf::int32 value) {
  set_has_elapsedtime();
  elapsedtime_ = value;
}

// -------------------------------------------------------------------

// GroupInstance

// repeated .MapInstanceProto.InstanceGroupList groupList = 1;
inline int GroupInstance::grouplist_size() const {
  return grouplist_.size();
}
inline void GroupInstance::clear_grouplist() {
  grouplist_.Clear();
}
inline const ::MapInstanceProto::InstanceGroupList& GroupInstance::grouplist(int index) const {
  return grouplist_.Get(index);
}
inline ::MapInstanceProto::InstanceGroupList* GroupInstance::mutable_grouplist(int index) {
  return grouplist_.Mutable(index);
}
inline ::MapInstanceProto::InstanceGroupList* GroupInstance::add_grouplist() {
  return grouplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceGroupList >&
GroupInstance::grouplist() const {
  return grouplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceGroupList >*
GroupInstance::mutable_grouplist() {
  return &grouplist_;
}

// -------------------------------------------------------------------

// InstanceGroupList

// required int32 mapId = 1;
inline bool InstanceGroupList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstanceGroupList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstanceGroupList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstanceGroupList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 InstanceGroupList::mapid() const {
  return mapid_;
}
inline void InstanceGroupList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 num = 2;
inline bool InstanceGroupList::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstanceGroupList::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstanceGroupList::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstanceGroupList::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 InstanceGroupList::num() const {
  return num_;
}
inline void InstanceGroupList::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 buynum = 3;
inline bool InstanceGroupList::has_buynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstanceGroupList::set_has_buynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstanceGroupList::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstanceGroupList::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 InstanceGroupList::buynum() const {
  return buynum_;
}
inline void InstanceGroupList::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
}

// -------------------------------------------------------------------

// ReqCostByGroupInstance

// required int32 mapId = 1;
inline bool ReqCostByGroupInstance::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCostByGroupInstance::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCostByGroupInstance::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCostByGroupInstance::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ReqCostByGroupInstance::mapid() const {
  return mapid_;
}
inline void ReqCostByGroupInstance::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// RetCostByGroupInstance

// required int32 ret = 1;
inline bool RetCostByGroupInstance::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetCostByGroupInstance::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetCostByGroupInstance::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetCostByGroupInstance::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetCostByGroupInstance::ret() const {
  return ret_;
}
inline void RetCostByGroupInstance::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 mapId = 2;
inline bool RetCostByGroupInstance::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetCostByGroupInstance::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetCostByGroupInstance::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetCostByGroupInstance::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 RetCostByGroupInstance::mapid() const {
  return mapid_;
}
inline void RetCostByGroupInstance::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 num = 3;
inline bool RetCostByGroupInstance::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetCostByGroupInstance::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetCostByGroupInstance::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetCostByGroupInstance::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 RetCostByGroupInstance::num() const {
  return num_;
}
inline void RetCostByGroupInstance::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 buynum = 4;
inline bool RetCostByGroupInstance::has_buynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetCostByGroupInstance::set_has_buynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetCostByGroupInstance::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetCostByGroupInstance::clear_buynum() {
  buynum_ = 0;
  clear_has_buynum();
}
inline ::google::protobuf::int32 RetCostByGroupInstance::buynum() const {
  return buynum_;
}
inline void RetCostByGroupInstance::set_buynum(::google::protobuf::int32 value) {
  set_has_buynum();
  buynum_ = value;
}

// -------------------------------------------------------------------

// ReqArenaRefresh

// -------------------------------------------------------------------

// RetArenaRefresh

// required int32 err = 1;
inline bool RetArenaRefresh::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetArenaRefresh::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetArenaRefresh::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetArenaRefresh::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 RetArenaRefresh::err() const {
  return err_;
}
inline void RetArenaRefresh::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// required int32 alreadyRefresh = 2;
inline bool RetArenaRefresh::has_alreadyrefresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetArenaRefresh::set_has_alreadyrefresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetArenaRefresh::clear_has_alreadyrefresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetArenaRefresh::clear_alreadyrefresh() {
  alreadyrefresh_ = 0;
  clear_has_alreadyrefresh();
}
inline ::google::protobuf::int32 RetArenaRefresh::alreadyrefresh() const {
  return alreadyrefresh_;
}
inline void RetArenaRefresh::set_alreadyrefresh(::google::protobuf::int32 value) {
  set_has_alreadyrefresh();
  alreadyrefresh_ = value;
}

// repeated .MapInstanceProto.OtherPlayerArenaInfo otherInfo = 3;
inline int RetArenaRefresh::otherinfo_size() const {
  return otherinfo_.size();
}
inline void RetArenaRefresh::clear_otherinfo() {
  otherinfo_.Clear();
}
inline const ::MapInstanceProto::OtherPlayerArenaInfo& RetArenaRefresh::otherinfo(int index) const {
  return otherinfo_.Get(index);
}
inline ::MapInstanceProto::OtherPlayerArenaInfo* RetArenaRefresh::mutable_otherinfo(int index) {
  return otherinfo_.Mutable(index);
}
inline ::MapInstanceProto::OtherPlayerArenaInfo* RetArenaRefresh::add_otherinfo() {
  return otherinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >&
RetArenaRefresh::otherinfo() const {
  return otherinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >*
RetArenaRefresh::mutable_otherinfo() {
  return &otherinfo_;
}

// -------------------------------------------------------------------

// ReqWSArenaChallPlayer

// repeated int32 rankings = 1;
inline int ReqWSArenaChallPlayer::rankings_size() const {
  return rankings_.size();
}
inline void ReqWSArenaChallPlayer::clear_rankings() {
  rankings_.Clear();
}
inline ::google::protobuf::int32 ReqWSArenaChallPlayer::rankings(int index) const {
  return rankings_.Get(index);
}
inline void ReqWSArenaChallPlayer::set_rankings(int index, ::google::protobuf::int32 value) {
  rankings_.Set(index, value);
}
inline void ReqWSArenaChallPlayer::add_rankings(::google::protobuf::int32 value) {
  rankings_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReqWSArenaChallPlayer::rankings() const {
  return rankings_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReqWSArenaChallPlayer::mutable_rankings() {
  return &rankings_;
}

// -------------------------------------------------------------------

// RetWSArenaChallPlayer

// repeated .MapInstanceProto.OtherPlayerArenaInfo playerInfo = 1;
inline int RetWSArenaChallPlayer::playerinfo_size() const {
  return playerinfo_.size();
}
inline void RetWSArenaChallPlayer::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::MapInstanceProto::OtherPlayerArenaInfo& RetWSArenaChallPlayer::playerinfo(int index) const {
  return playerinfo_.Get(index);
}
inline ::MapInstanceProto::OtherPlayerArenaInfo* RetWSArenaChallPlayer::mutable_playerinfo(int index) {
  return playerinfo_.Mutable(index);
}
inline ::MapInstanceProto::OtherPlayerArenaInfo* RetWSArenaChallPlayer::add_playerinfo() {
  return playerinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >&
RetWSArenaChallPlayer::playerinfo() const {
  return playerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::OtherPlayerArenaInfo >*
RetWSArenaChallPlayer::mutable_playerinfo() {
  return &playerinfo_;
}

// -------------------------------------------------------------------

// ReqWSArenaChallRank

// repeated int32 rankings = 1;
inline int ReqWSArenaChallRank::rankings_size() const {
  return rankings_.size();
}
inline void ReqWSArenaChallRank::clear_rankings() {
  rankings_.Clear();
}
inline ::google::protobuf::int32 ReqWSArenaChallRank::rankings(int index) const {
  return rankings_.Get(index);
}
inline void ReqWSArenaChallRank::set_rankings(int index, ::google::protobuf::int32 value) {
  rankings_.Set(index, value);
}
inline void ReqWSArenaChallRank::add_rankings(::google::protobuf::int32 value) {
  rankings_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReqWSArenaChallRank::rankings() const {
  return rankings_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReqWSArenaChallRank::mutable_rankings() {
  return &rankings_;
}

// -------------------------------------------------------------------

// GMToClientSweepAllInstance

// required int32 ret = 1;
inline bool GMToClientSweepAllInstance::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToClientSweepAllInstance::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToClientSweepAllInstance::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToClientSweepAllInstance::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GMToClientSweepAllInstance::ret() const {
  return ret_;
}
inline void GMToClientSweepAllInstance::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .MapInstanceProto.SimSweepInstanceAward ssia = 2;
inline int GMToClientSweepAllInstance::ssia_size() const {
  return ssia_.size();
}
inline void GMToClientSweepAllInstance::clear_ssia() {
  ssia_.Clear();
}
inline const ::MapInstanceProto::SimSweepInstanceAward& GMToClientSweepAllInstance::ssia(int index) const {
  return ssia_.Get(index);
}
inline ::MapInstanceProto::SimSweepInstanceAward* GMToClientSweepAllInstance::mutable_ssia(int index) {
  return ssia_.Mutable(index);
}
inline ::MapInstanceProto::SimSweepInstanceAward* GMToClientSweepAllInstance::add_ssia() {
  return ssia_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::SimSweepInstanceAward >&
GMToClientSweepAllInstance::ssia() const {
  return ssia_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::SimSweepInstanceAward >*
GMToClientSweepAllInstance::mutable_ssia() {
  return &ssia_;
}

// -------------------------------------------------------------------

// EliteInstance

// optional int32 num = 1;
inline bool EliteInstance::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EliteInstance::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EliteInstance::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EliteInstance::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 EliteInstance::num() const {
  return num_;
}
inline void EliteInstance::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 reset = 2;
inline bool EliteInstance::has_reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EliteInstance::set_has_reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EliteInstance::clear_has_reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EliteInstance::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 EliteInstance::reset() const {
  return reset_;
}
inline void EliteInstance::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// repeated .MapInstanceProto.InstanceEliteList list = 3;
inline int EliteInstance::list_size() const {
  return list_.size();
}
inline void EliteInstance::clear_list() {
  list_.Clear();
}
inline const ::MapInstanceProto::InstanceEliteList& EliteInstance::list(int index) const {
  return list_.Get(index);
}
inline ::MapInstanceProto::InstanceEliteList* EliteInstance::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::MapInstanceProto::InstanceEliteList* EliteInstance::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceEliteList >&
EliteInstance::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceEliteList >*
EliteInstance::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// InstanceEliteList

// required int32 mapId = 1;
inline bool InstanceEliteList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstanceEliteList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstanceEliteList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstanceEliteList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 InstanceEliteList::mapid() const {
  return mapid_;
}
inline void InstanceEliteList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool InstanceEliteList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstanceEliteList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstanceEliteList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstanceEliteList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 InstanceEliteList::pass() const {
  return pass_;
}
inline void InstanceEliteList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}

// -------------------------------------------------------------------

// CauchemarInstance

// optional int32 num = 1;
inline bool CauchemarInstance::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CauchemarInstance::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CauchemarInstance::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CauchemarInstance::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CauchemarInstance::num() const {
  return num_;
}
inline void CauchemarInstance::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 reset = 2;
inline bool CauchemarInstance::has_reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CauchemarInstance::set_has_reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CauchemarInstance::clear_has_reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CauchemarInstance::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 CauchemarInstance::reset() const {
  return reset_;
}
inline void CauchemarInstance::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// repeated .MapInstanceProto.InstanceCauchemarList list = 3;
inline int CauchemarInstance::list_size() const {
  return list_.size();
}
inline void CauchemarInstance::clear_list() {
  list_.Clear();
}
inline const ::MapInstanceProto::InstanceCauchemarList& CauchemarInstance::list(int index) const {
  return list_.Get(index);
}
inline ::MapInstanceProto::InstanceCauchemarList* CauchemarInstance::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::MapInstanceProto::InstanceCauchemarList* CauchemarInstance::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceCauchemarList >&
CauchemarInstance::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceCauchemarList >*
CauchemarInstance::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// InstanceCauchemarList

// required int32 mapId = 1;
inline bool InstanceCauchemarList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstanceCauchemarList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstanceCauchemarList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstanceCauchemarList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 InstanceCauchemarList::mapid() const {
  return mapid_;
}
inline void InstanceCauchemarList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool InstanceCauchemarList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstanceCauchemarList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstanceCauchemarList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstanceCauchemarList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 InstanceCauchemarList::pass() const {
  return pass_;
}
inline void InstanceCauchemarList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}

// -------------------------------------------------------------------

// ReqInviteMemberList

// required int32 mapId = 1;
inline bool ReqInviteMemberList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInviteMemberList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInviteMemberList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInviteMemberList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ReqInviteMemberList::mapid() const {
  return mapid_;
}
inline void ReqInviteMemberList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 ntype = 2;
inline bool ReqInviteMemberList::has_ntype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqInviteMemberList::set_has_ntype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqInviteMemberList::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqInviteMemberList::clear_ntype() {
  ntype_ = 0;
  clear_has_ntype();
}
inline ::google::protobuf::int32 ReqInviteMemberList::ntype() const {
  return ntype_;
}
inline void ReqInviteMemberList::set_ntype(::google::protobuf::int32 value) {
  set_has_ntype();
  ntype_ = value;
}

// -------------------------------------------------------------------

// RetInviteMemberList

// required int32 ntype = 1;
inline bool RetInviteMemberList::has_ntype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInviteMemberList::set_has_ntype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInviteMemberList::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInviteMemberList::clear_ntype() {
  ntype_ = 0;
  clear_has_ntype();
}
inline ::google::protobuf::int32 RetInviteMemberList::ntype() const {
  return ntype_;
}
inline void RetInviteMemberList::set_ntype(::google::protobuf::int32 value) {
  set_has_ntype();
  ntype_ = value;
}

// repeated .MapInstanceProto.InviteMemberList memberlist = 2;
inline int RetInviteMemberList::memberlist_size() const {
  return memberlist_.size();
}
inline void RetInviteMemberList::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::MapInstanceProto::InviteMemberList& RetInviteMemberList::memberlist(int index) const {
  return memberlist_.Get(index);
}
inline ::MapInstanceProto::InviteMemberList* RetInviteMemberList::mutable_memberlist(int index) {
  return memberlist_.Mutable(index);
}
inline ::MapInstanceProto::InviteMemberList* RetInviteMemberList::add_memberlist() {
  return memberlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InviteMemberList >&
RetInviteMemberList::memberlist() const {
  return memberlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InviteMemberList >*
RetInviteMemberList::mutable_memberlist() {
  return &memberlist_;
}

// -------------------------------------------------------------------

// InviteMemberList

// required int64 charId = 1;
inline bool InviteMemberList::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteMemberList::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteMemberList::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteMemberList::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 InviteMemberList::charid() const {
  return charid_;
}
inline void InviteMemberList::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 2;
inline bool InviteMemberList::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteMemberList::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteMemberList::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteMemberList::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& InviteMemberList::name() const {
  return *name_;
}
inline void InviteMemberList::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void InviteMemberList::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void InviteMemberList::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InviteMemberList::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* InviteMemberList::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void InviteMemberList::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 lv = 3;
inline bool InviteMemberList::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteMemberList::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteMemberList::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteMemberList::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 InviteMemberList::lv() const {
  return lv_;
}
inline void InviteMemberList::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 fight = 4;
inline bool InviteMemberList::has_fight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteMemberList::set_has_fight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteMemberList::clear_has_fight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteMemberList::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 InviteMemberList::fight() const {
  return fight_;
}
inline void InviteMemberList::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// -------------------------------------------------------------------

// ReqInviteMember

// required int64 charId = 1;
inline bool ReqInviteMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInviteMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInviteMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInviteMember::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqInviteMember::charid() const {
  return charid_;
}
inline void ReqInviteMember::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 mapId = 2;
inline bool ReqInviteMember::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqInviteMember::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqInviteMember::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqInviteMember::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ReqInviteMember::mapid() const {
  return mapid_;
}
inline void ReqInviteMember::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// RetInviteMember

// required int32 ret = 1;
inline bool RetInviteMember::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInviteMember::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInviteMember::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInviteMember::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetInviteMember::ret() const {
  return ret_;
}
inline void RetInviteMember::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 charId = 2;
inline bool RetInviteMember::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetInviteMember::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetInviteMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetInviteMember::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 RetInviteMember::charid() const {
  return charid_;
}
inline void RetInviteMember::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// RetInvitedMember

// required int64 teamid = 1;
inline bool RetInvitedMember::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetInvitedMember::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetInvitedMember::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetInvitedMember::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::int64 RetInvitedMember::teamid() const {
  return teamid_;
}
inline void RetInvitedMember::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional int32 mapid = 2;
inline bool RetInvitedMember::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetInvitedMember::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetInvitedMember::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetInvitedMember::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 RetInvitedMember::mapid() const {
  return mapid_;
}
inline void RetInvitedMember::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional string name = 3;
inline bool RetInvitedMember::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetInvitedMember::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetInvitedMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetInvitedMember::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RetInvitedMember::name() const {
  return *name_;
}
inline void RetInvitedMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RetInvitedMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RetInvitedMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RetInvitedMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RetInvitedMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RetInvitedMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AckChallengeInfo

// required int32 layer = 1;
inline bool AckChallengeInfo::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckChallengeInfo::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckChallengeInfo::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckChallengeInfo::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 AckChallengeInfo::layer() const {
  return layer_;
}
inline void AckChallengeInfo::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 maxlayer = 2;
inline bool AckChallengeInfo::has_maxlayer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckChallengeInfo::set_has_maxlayer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckChallengeInfo::clear_has_maxlayer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckChallengeInfo::clear_maxlayer() {
  maxlayer_ = 0;
  clear_has_maxlayer();
}
inline ::google::protobuf::int32 AckChallengeInfo::maxlayer() const {
  return maxlayer_;
}
inline void AckChallengeInfo::set_maxlayer(::google::protobuf::int32 value) {
  set_has_maxlayer();
  maxlayer_ = value;
}

// optional bool issweep = 3;
inline bool AckChallengeInfo::has_issweep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckChallengeInfo::set_has_issweep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckChallengeInfo::clear_has_issweep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckChallengeInfo::clear_issweep() {
  issweep_ = false;
  clear_has_issweep();
}
inline bool AckChallengeInfo::issweep() const {
  return issweep_;
}
inline void AckChallengeInfo::set_issweep(bool value) {
  set_has_issweep();
  issweep_ = value;
}

// optional int32 sweeptime = 4;
inline bool AckChallengeInfo::has_sweeptime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckChallengeInfo::set_has_sweeptime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckChallengeInfo::clear_has_sweeptime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckChallengeInfo::clear_sweeptime() {
  sweeptime_ = 0;
  clear_has_sweeptime();
}
inline ::google::protobuf::int32 AckChallengeInfo::sweeptime() const {
  return sweeptime_;
}
inline void AckChallengeInfo::set_sweeptime(::google::protobuf::int32 value) {
  set_has_sweeptime();
  sweeptime_ = value;
}

// optional int32 totaltime = 5;
inline bool AckChallengeInfo::has_totaltime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckChallengeInfo::set_has_totaltime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckChallengeInfo::clear_has_totaltime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckChallengeInfo::clear_totaltime() {
  totaltime_ = 0;
  clear_has_totaltime();
}
inline ::google::protobuf::int32 AckChallengeInfo::totaltime() const {
  return totaltime_;
}
inline void AckChallengeInfo::set_totaltime(::google::protobuf::int32 value) {
  set_has_totaltime();
  totaltime_ = value;
}

// optional int32 reset = 6;
inline bool AckChallengeInfo::has_reset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AckChallengeInfo::set_has_reset() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AckChallengeInfo::clear_has_reset() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AckChallengeInfo::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 AckChallengeInfo::reset() const {
  return reset_;
}
inline void AckChallengeInfo::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// -------------------------------------------------------------------

// ReqLayerRank

// required int32 layer = 1;
inline bool ReqLayerRank::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLayerRank::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLayerRank::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLayerRank::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 ReqLayerRank::layer() const {
  return layer_;
}
inline void ReqLayerRank::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// AckLayerRank

// required int32 layer = 1;
inline bool AckLayerRank::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckLayerRank::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckLayerRank::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckLayerRank::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 AckLayerRank::layer() const {
  return layer_;
}
inline void AckLayerRank::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional bytes firstname = 2;
inline bool AckLayerRank::has_firstname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckLayerRank::set_has_firstname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckLayerRank::clear_has_firstname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckLayerRank::clear_firstname() {
  if (firstname_ != &::google::protobuf::internal::kEmptyString) {
    firstname_->clear();
  }
  clear_has_firstname();
}
inline const ::std::string& AckLayerRank::firstname() const {
  return *firstname_;
}
inline void AckLayerRank::set_firstname(const ::std::string& value) {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::kEmptyString) {
    firstname_ = new ::std::string;
  }
  firstname_->assign(value);
}
inline void AckLayerRank::set_firstname(const char* value) {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::kEmptyString) {
    firstname_ = new ::std::string;
  }
  firstname_->assign(value);
}
inline void AckLayerRank::set_firstname(const void* value, size_t size) {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::kEmptyString) {
    firstname_ = new ::std::string;
  }
  firstname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AckLayerRank::mutable_firstname() {
  set_has_firstname();
  if (firstname_ == &::google::protobuf::internal::kEmptyString) {
    firstname_ = new ::std::string;
  }
  return firstname_;
}
inline ::std::string* AckLayerRank::release_firstname() {
  clear_has_firstname();
  if (firstname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = firstname_;
    firstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AckLayerRank::set_allocated_firstname(::std::string* firstname) {
  if (firstname_ != &::google::protobuf::internal::kEmptyString) {
    delete firstname_;
  }
  if (firstname) {
    set_has_firstname();
    firstname_ = firstname;
  } else {
    clear_has_firstname();
    firstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 firstlevel = 3;
inline bool AckLayerRank::has_firstlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckLayerRank::set_has_firstlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckLayerRank::clear_has_firstlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckLayerRank::clear_firstlevel() {
  firstlevel_ = 0;
  clear_has_firstlevel();
}
inline ::google::protobuf::int32 AckLayerRank::firstlevel() const {
  return firstlevel_;
}
inline void AckLayerRank::set_firstlevel(::google::protobuf::int32 value) {
  set_has_firstlevel();
  firstlevel_ = value;
}

// optional int32 firstfight = 4;
inline bool AckLayerRank::has_firstfight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckLayerRank::set_has_firstfight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckLayerRank::clear_has_firstfight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckLayerRank::clear_firstfight() {
  firstfight_ = 0;
  clear_has_firstfight();
}
inline ::google::protobuf::int32 AckLayerRank::firstfight() const {
  return firstfight_;
}
inline void AckLayerRank::set_firstfight(::google::protobuf::int32 value) {
  set_has_firstfight();
  firstfight_ = value;
}

// optional bytes lastname = 5;
inline bool AckLayerRank::has_lastname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckLayerRank::set_has_lastname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckLayerRank::clear_has_lastname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckLayerRank::clear_lastname() {
  if (lastname_ != &::google::protobuf::internal::kEmptyString) {
    lastname_->clear();
  }
  clear_has_lastname();
}
inline const ::std::string& AckLayerRank::lastname() const {
  return *lastname_;
}
inline void AckLayerRank::set_lastname(const ::std::string& value) {
  set_has_lastname();
  if (lastname_ == &::google::protobuf::internal::kEmptyString) {
    lastname_ = new ::std::string;
  }
  lastname_->assign(value);
}
inline void AckLayerRank::set_lastname(const char* value) {
  set_has_lastname();
  if (lastname_ == &::google::protobuf::internal::kEmptyString) {
    lastname_ = new ::std::string;
  }
  lastname_->assign(value);
}
inline void AckLayerRank::set_lastname(const void* value, size_t size) {
  set_has_lastname();
  if (lastname_ == &::google::protobuf::internal::kEmptyString) {
    lastname_ = new ::std::string;
  }
  lastname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AckLayerRank::mutable_lastname() {
  set_has_lastname();
  if (lastname_ == &::google::protobuf::internal::kEmptyString) {
    lastname_ = new ::std::string;
  }
  return lastname_;
}
inline ::std::string* AckLayerRank::release_lastname() {
  clear_has_lastname();
  if (lastname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lastname_;
    lastname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AckLayerRank::set_allocated_lastname(::std::string* lastname) {
  if (lastname_ != &::google::protobuf::internal::kEmptyString) {
    delete lastname_;
  }
  if (lastname) {
    set_has_lastname();
    lastname_ = lastname;
  } else {
    clear_has_lastname();
    lastname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 lastlevel = 6;
inline bool AckLayerRank::has_lastlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AckLayerRank::set_has_lastlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AckLayerRank::clear_has_lastlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AckLayerRank::clear_lastlevel() {
  lastlevel_ = 0;
  clear_has_lastlevel();
}
inline ::google::protobuf::int32 AckLayerRank::lastlevel() const {
  return lastlevel_;
}
inline void AckLayerRank::set_lastlevel(::google::protobuf::int32 value) {
  set_has_lastlevel();
  lastlevel_ = value;
}

// optional int32 lastfight = 7;
inline bool AckLayerRank::has_lastfight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AckLayerRank::set_has_lastfight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AckLayerRank::clear_has_lastfight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AckLayerRank::clear_lastfight() {
  lastfight_ = 0;
  clear_has_lastfight();
}
inline ::google::protobuf::int32 AckLayerRank::lastfight() const {
  return lastfight_;
}
inline void AckLayerRank::set_lastfight(::google::protobuf::int32 value) {
  set_has_lastfight();
  lastfight_ = value;
}

// optional bytes famousname = 8;
inline bool AckLayerRank::has_famousname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AckLayerRank::set_has_famousname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AckLayerRank::clear_has_famousname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AckLayerRank::clear_famousname() {
  if (famousname_ != &::google::protobuf::internal::kEmptyString) {
    famousname_->clear();
  }
  clear_has_famousname();
}
inline const ::std::string& AckLayerRank::famousname() const {
  return *famousname_;
}
inline void AckLayerRank::set_famousname(const ::std::string& value) {
  set_has_famousname();
  if (famousname_ == &::google::protobuf::internal::kEmptyString) {
    famousname_ = new ::std::string;
  }
  famousname_->assign(value);
}
inline void AckLayerRank::set_famousname(const char* value) {
  set_has_famousname();
  if (famousname_ == &::google::protobuf::internal::kEmptyString) {
    famousname_ = new ::std::string;
  }
  famousname_->assign(value);
}
inline void AckLayerRank::set_famousname(const void* value, size_t size) {
  set_has_famousname();
  if (famousname_ == &::google::protobuf::internal::kEmptyString) {
    famousname_ = new ::std::string;
  }
  famousname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AckLayerRank::mutable_famousname() {
  set_has_famousname();
  if (famousname_ == &::google::protobuf::internal::kEmptyString) {
    famousname_ = new ::std::string;
  }
  return famousname_;
}
inline ::std::string* AckLayerRank::release_famousname() {
  clear_has_famousname();
  if (famousname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = famousname_;
    famousname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AckLayerRank::set_allocated_famousname(::std::string* famousname) {
  if (famousname_ != &::google::protobuf::internal::kEmptyString) {
    delete famousname_;
  }
  if (famousname) {
    set_has_famousname();
    famousname_ = famousname;
  } else {
    clear_has_famousname();
    famousname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 famouslevel = 9;
inline bool AckLayerRank::has_famouslevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AckLayerRank::set_has_famouslevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AckLayerRank::clear_has_famouslevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AckLayerRank::clear_famouslevel() {
  famouslevel_ = 0;
  clear_has_famouslevel();
}
inline ::google::protobuf::int32 AckLayerRank::famouslevel() const {
  return famouslevel_;
}
inline void AckLayerRank::set_famouslevel(::google::protobuf::int32 value) {
  set_has_famouslevel();
  famouslevel_ = value;
}

// optional int32 famousfight = 10;
inline bool AckLayerRank::has_famousfight() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AckLayerRank::set_has_famousfight() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AckLayerRank::clear_has_famousfight() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AckLayerRank::clear_famousfight() {
  famousfight_ = 0;
  clear_has_famousfight();
}
inline ::google::protobuf::int32 AckLayerRank::famousfight() const {
  return famousfight_;
}
inline void AckLayerRank::set_famousfight(::google::protobuf::int32 value) {
  set_has_famousfight();
  famousfight_ = value;
}

// -------------------------------------------------------------------

// AckSweep

// required int32 code = 1;
inline bool AckSweep::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckSweep::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckSweep::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckSweep::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckSweep::code() const {
  return code_;
}
inline void AckSweep::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int32 elapsedTime = 2;
inline bool AckSweep::has_elapsedtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckSweep::set_has_elapsedtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckSweep::clear_has_elapsedtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckSweep::clear_elapsedtime() {
  elapsedtime_ = 0;
  clear_has_elapsedtime();
}
inline ::google::protobuf::int32 AckSweep::elapsedtime() const {
  return elapsedtime_;
}
inline void AckSweep::set_elapsedtime(::google::protobuf::int32 value) {
  set_has_elapsedtime();
  elapsedtime_ = value;
}

// -------------------------------------------------------------------

// ACkEndSweep

// required int32 code = 1;
inline bool ACkEndSweep::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACkEndSweep::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACkEndSweep::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACkEndSweep::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ACkEndSweep::code() const {
  return code_;
}
inline void ACkEndSweep::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int32 startlayer = 2;
inline bool ACkEndSweep::has_startlayer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ACkEndSweep::set_has_startlayer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ACkEndSweep::clear_has_startlayer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ACkEndSweep::clear_startlayer() {
  startlayer_ = 0;
  clear_has_startlayer();
}
inline ::google::protobuf::int32 ACkEndSweep::startlayer() const {
  return startlayer_;
}
inline void ACkEndSweep::set_startlayer(::google::protobuf::int32 value) {
  set_has_startlayer();
  startlayer_ = value;
}

// optional int32 endlayer = 3;
inline bool ACkEndSweep::has_endlayer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ACkEndSweep::set_has_endlayer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ACkEndSweep::clear_has_endlayer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ACkEndSweep::clear_endlayer() {
  endlayer_ = 0;
  clear_has_endlayer();
}
inline ::google::protobuf::int32 ACkEndSweep::endlayer() const {
  return endlayer_;
}
inline void ACkEndSweep::set_endlayer(::google::protobuf::int32 value) {
  set_has_endlayer();
  endlayer_ = value;
}

// repeated .MapInstanceProto.PrizeItem prize = 4;
inline int ACkEndSweep::prize_size() const {
  return prize_.size();
}
inline void ACkEndSweep::clear_prize() {
  prize_.Clear();
}
inline const ::MapInstanceProto::PrizeItem& ACkEndSweep::prize(int index) const {
  return prize_.Get(index);
}
inline ::MapInstanceProto::PrizeItem* ACkEndSweep::mutable_prize(int index) {
  return prize_.Mutable(index);
}
inline ::MapInstanceProto::PrizeItem* ACkEndSweep::add_prize() {
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >&
ACkEndSweep::prize() const {
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >*
ACkEndSweep::mutable_prize() {
  return &prize_;
}

// -------------------------------------------------------------------

// ReqExchange

// required int32 id = 1;
inline bool ReqExchange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqExchange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqExchange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqExchange::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReqExchange::id() const {
  return id_;
}
inline void ReqExchange::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 2;
inline bool ReqExchange::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqExchange::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqExchange::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqExchange::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ReqExchange::num() const {
  return num_;
}
inline void ReqExchange::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// AckExchange

// required int32 id = 1;
inline bool AckExchange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckExchange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckExchange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckExchange::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AckExchange::id() const {
  return id_;
}
inline void AckExchange::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 code = 2;
inline bool AckExchange::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckExchange::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckExchange::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckExchange::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckExchange::code() const {
  return code_;
}
inline void AckExchange::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// PrizeItem

// required int32 id = 1;
inline bool PrizeItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrizeItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrizeItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrizeItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PrizeItem::id() const {
  return id_;
}
inline void PrizeItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 2;
inline bool PrizeItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrizeItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrizeItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrizeItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PrizeItem::num() const {
  return num_;
}
inline void PrizeItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// PassChallenge

// required int64 charid = 1;
inline bool PassChallenge::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassChallenge::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassChallenge::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassChallenge::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 PassChallenge::charid() const {
  return charid_;
}
inline void PassChallenge::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional bytes name = 2;
inline bool PassChallenge::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassChallenge::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassChallenge::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassChallenge::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PassChallenge::name() const {
  return *name_;
}
inline void PassChallenge::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PassChallenge::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PassChallenge::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PassChallenge::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PassChallenge::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PassChallenge::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 layer = 3;
inline bool PassChallenge::has_layer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PassChallenge::set_has_layer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PassChallenge::clear_has_layer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PassChallenge::clear_layer() {
  layer_ = 0;
  clear_has_layer();
}
inline ::google::protobuf::int32 PassChallenge::layer() const {
  return layer_;
}
inline void PassChallenge::set_layer(::google::protobuf::int32 value) {
  set_has_layer();
  layer_ = value;
}

// optional int32 fight = 4;
inline bool PassChallenge::has_fight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PassChallenge::set_has_fight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PassChallenge::clear_has_fight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PassChallenge::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 PassChallenge::fight() const {
  return fight_;
}
inline void PassChallenge::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional int32 level = 5;
inline bool PassChallenge::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PassChallenge::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PassChallenge::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PassChallenge::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PassChallenge::level() const {
  return level_;
}
inline void PassChallenge::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 vip = 6;
inline bool PassChallenge::has_vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PassChallenge::set_has_vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PassChallenge::clear_has_vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PassChallenge::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 PassChallenge::vip() const {
  return vip_;
}
inline void PassChallenge::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// -------------------------------------------------------------------

// GatherBox

// required int32 key = 1;
inline bool GatherBox::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GatherBox::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GatherBox::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GatherBox::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 GatherBox::key() const {
  return key_;
}
inline void GatherBox::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// AckGatherBox

// required int32 key = 1;
inline bool AckGatherBox::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGatherBox::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGatherBox::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGatherBox::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 AckGatherBox::key() const {
  return key_;
}
inline void AckGatherBox::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// optional int32 code = 2;
inline bool AckGatherBox::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGatherBox::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGatherBox::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGatherBox::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckGatherBox::code() const {
  return code_;
}
inline void AckGatherBox::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// repeated .MapInstanceProto.PrizeItem items = 3;
inline int AckGatherBox::items_size() const {
  return items_.size();
}
inline void AckGatherBox::clear_items() {
  items_.Clear();
}
inline const ::MapInstanceProto::PrizeItem& AckGatherBox::items(int index) const {
  return items_.Get(index);
}
inline ::MapInstanceProto::PrizeItem* AckGatherBox::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::MapInstanceProto::PrizeItem* AckGatherBox::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >&
AckGatherBox::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::PrizeItem >*
AckGatherBox::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// AdvancedInstance

// repeated .MapInstanceProto.InstanceAdvancedList list = 1;
inline int AdvancedInstance::list_size() const {
  return list_.size();
}
inline void AdvancedInstance::clear_list() {
  list_.Clear();
}
inline const ::MapInstanceProto::InstanceAdvancedList& AdvancedInstance::list(int index) const {
  return list_.Get(index);
}
inline ::MapInstanceProto::InstanceAdvancedList* AdvancedInstance::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::MapInstanceProto::InstanceAdvancedList* AdvancedInstance::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceAdvancedList >&
AdvancedInstance::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::InstanceAdvancedList >*
AdvancedInstance::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// InstanceAdvancedList

// required int32 mapId = 1;
inline bool InstanceAdvancedList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstanceAdvancedList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstanceAdvancedList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstanceAdvancedList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 InstanceAdvancedList::mapid() const {
  return mapid_;
}
inline void InstanceAdvancedList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool InstanceAdvancedList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstanceAdvancedList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstanceAdvancedList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstanceAdvancedList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 InstanceAdvancedList::pass() const {
  return pass_;
}
inline void InstanceAdvancedList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}

// optional int32 num = 3;
inline bool InstanceAdvancedList::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstanceAdvancedList::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstanceAdvancedList::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstanceAdvancedList::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 InstanceAdvancedList::num() const {
  return num_;
}
inline void InstanceAdvancedList::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 time = 4;
inline bool InstanceAdvancedList::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstanceAdvancedList::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstanceAdvancedList::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstanceAdvancedList::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 InstanceAdvancedList::time() const {
  return time_;
}
inline void InstanceAdvancedList::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 reset = 5;
inline bool InstanceAdvancedList::has_reset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstanceAdvancedList::set_has_reset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstanceAdvancedList::clear_has_reset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstanceAdvancedList::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 InstanceAdvancedList::reset() const {
  return reset_;
}
inline void InstanceAdvancedList::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// -------------------------------------------------------------------

// ClientReqTeamChanceReady

// required int32 mapid = 1;
inline bool ClientReqTeamChanceReady::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqTeamChanceReady::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqTeamChanceReady::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqTeamChanceReady::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ClientReqTeamChanceReady::mapid() const {
  return mapid_;
}
inline void ClientReqTeamChanceReady::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// WSToClientReqTeamChanceReady

// required int32 ret = 1;
inline bool WSToClientReqTeamChanceReady::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientReqTeamChanceReady::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientReqTeamChanceReady::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientReqTeamChanceReady::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 WSToClientReqTeamChanceReady::ret() const {
  return ret_;
}
inline void WSToClientReqTeamChanceReady::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WSToClientSimChanceReady

// required int64 charid = 1;
inline bool WSToClientSimChanceReady::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToClientSimChanceReady::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToClientSimChanceReady::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToClientSimChanceReady::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToClientSimChanceReady::charid() const {
  return charid_;
}
inline void WSToClientSimChanceReady::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// CommonInstanceInfo

// optional int32 num = 1;
inline bool CommonInstanceInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonInstanceInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonInstanceInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonInstanceInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CommonInstanceInfo::num() const {
  return num_;
}
inline void CommonInstanceInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 reset = 2;
inline bool CommonInstanceInfo::has_reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonInstanceInfo::set_has_reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonInstanceInfo::clear_has_reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonInstanceInfo::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 CommonInstanceInfo::reset() const {
  return reset_;
}
inline void CommonInstanceInfo::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// repeated .MapInstanceProto.CommonInstanceInfoList info = 3;
inline int CommonInstanceInfo::info_size() const {
  return info_.size();
}
inline void CommonInstanceInfo::clear_info() {
  info_.Clear();
}
inline const ::MapInstanceProto::CommonInstanceInfoList& CommonInstanceInfo::info(int index) const {
  return info_.Get(index);
}
inline ::MapInstanceProto::CommonInstanceInfoList* CommonInstanceInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::MapInstanceProto::CommonInstanceInfoList* CommonInstanceInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::CommonInstanceInfoList >&
CommonInstanceInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::CommonInstanceInfoList >*
CommonInstanceInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// CommonInstanceInfoList

// required int32 mapId = 1;
inline bool CommonInstanceInfoList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonInstanceInfoList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonInstanceInfoList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonInstanceInfoList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 CommonInstanceInfoList::mapid() const {
  return mapid_;
}
inline void CommonInstanceInfoList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool CommonInstanceInfoList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonInstanceInfoList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonInstanceInfoList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonInstanceInfoList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 CommonInstanceInfoList::pass() const {
  return pass_;
}
inline void CommonInstanceInfoList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}

// -------------------------------------------------------------------

// VipInstance

// repeated .MapInstanceProto.VipInstanceList info = 1;
inline int VipInstance::info_size() const {
  return info_.size();
}
inline void VipInstance::clear_info() {
  info_.Clear();
}
inline const ::MapInstanceProto::VipInstanceList& VipInstance::info(int index) const {
  return info_.Get(index);
}
inline ::MapInstanceProto::VipInstanceList* VipInstance::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::MapInstanceProto::VipInstanceList* VipInstance::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::VipInstanceList >&
VipInstance::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::VipInstanceList >*
VipInstance::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// VipInstanceList

// required int32 mapId = 1;
inline bool VipInstanceList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipInstanceList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipInstanceList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipInstanceList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 VipInstanceList::mapid() const {
  return mapid_;
}
inline void VipInstanceList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool VipInstanceList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipInstanceList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipInstanceList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipInstanceList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 VipInstanceList::pass() const {
  return pass_;
}
inline void VipInstanceList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}

// optional int32 num = 3;
inline bool VipInstanceList::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipInstanceList::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipInstanceList::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipInstanceList::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 VipInstanceList::num() const {
  return num_;
}
inline void VipInstanceList::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int64 time = 4;
inline bool VipInstanceList::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VipInstanceList::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VipInstanceList::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VipInstanceList::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 VipInstanceList::time() const {
  return time_;
}
inline void VipInstanceList::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ExpInstanceInfo

// optional int32 num = 1;
inline bool ExpInstanceInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpInstanceInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpInstanceInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpInstanceInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ExpInstanceInfo::num() const {
  return num_;
}
inline void ExpInstanceInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 reset = 2;
inline bool ExpInstanceInfo::has_reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpInstanceInfo::set_has_reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpInstanceInfo::clear_has_reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpInstanceInfo::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 ExpInstanceInfo::reset() const {
  return reset_;
}
inline void ExpInstanceInfo::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// repeated .MapInstanceProto.ExpInstanceInfoList info = 3;
inline int ExpInstanceInfo::info_size() const {
  return info_.size();
}
inline void ExpInstanceInfo::clear_info() {
  info_.Clear();
}
inline const ::MapInstanceProto::ExpInstanceInfoList& ExpInstanceInfo::info(int index) const {
  return info_.Get(index);
}
inline ::MapInstanceProto::ExpInstanceInfoList* ExpInstanceInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::MapInstanceProto::ExpInstanceInfoList* ExpInstanceInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::ExpInstanceInfoList >&
ExpInstanceInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::ExpInstanceInfoList >*
ExpInstanceInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// ExpInstanceInfoList

// required int32 mapId = 1;
inline bool ExpInstanceInfoList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpInstanceInfoList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpInstanceInfoList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpInstanceInfoList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ExpInstanceInfoList::mapid() const {
  return mapid_;
}
inline void ExpInstanceInfoList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool ExpInstanceInfoList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpInstanceInfoList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpInstanceInfoList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpInstanceInfoList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 ExpInstanceInfoList::pass() const {
  return pass_;
}
inline void ExpInstanceInfoList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}

// -------------------------------------------------------------------

// MoneyInstanceInfo

// optional int32 num = 1;
inline bool MoneyInstanceInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyInstanceInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyInstanceInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyInstanceInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 MoneyInstanceInfo::num() const {
  return num_;
}
inline void MoneyInstanceInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 reset = 2;
inline bool MoneyInstanceInfo::has_reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyInstanceInfo::set_has_reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyInstanceInfo::clear_has_reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyInstanceInfo::clear_reset() {
  reset_ = 0;
  clear_has_reset();
}
inline ::google::protobuf::int32 MoneyInstanceInfo::reset() const {
  return reset_;
}
inline void MoneyInstanceInfo::set_reset(::google::protobuf::int32 value) {
  set_has_reset();
  reset_ = value;
}

// repeated .MapInstanceProto.MoneyInstanceInfoList info = 3;
inline int MoneyInstanceInfo::info_size() const {
  return info_.size();
}
inline void MoneyInstanceInfo::clear_info() {
  info_.Clear();
}
inline const ::MapInstanceProto::MoneyInstanceInfoList& MoneyInstanceInfo::info(int index) const {
  return info_.Get(index);
}
inline ::MapInstanceProto::MoneyInstanceInfoList* MoneyInstanceInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::MapInstanceProto::MoneyInstanceInfoList* MoneyInstanceInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::MoneyInstanceInfoList >&
MoneyInstanceInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapInstanceProto::MoneyInstanceInfoList >*
MoneyInstanceInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// MoneyInstanceInfoList

// required int32 mapId = 1;
inline bool MoneyInstanceInfoList::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyInstanceInfoList::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyInstanceInfoList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyInstanceInfoList::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MoneyInstanceInfoList::mapid() const {
  return mapid_;
}
inline void MoneyInstanceInfoList::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 pass = 2;
inline bool MoneyInstanceInfoList::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyInstanceInfoList::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyInstanceInfoList::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyInstanceInfoList::clear_pass() {
  pass_ = 0;
  clear_has_pass();
}
inline ::google::protobuf::int32 MoneyInstanceInfoList::pass() const {
  return pass_;
}
inline void MoneyInstanceInfoList::set_pass(::google::protobuf::int32 value) {
  set_has_pass();
  pass_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MapInstanceProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fMapInstanceProto_2eproto__INCLUDED
