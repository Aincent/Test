// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Escort/EscortProto.proto

#ifndef PROTOBUF_Escort_2fEscortProto_2eproto__INCLUDED
#define PROTOBUF_Escort_2fEscortProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace EscortProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

class RqGetQuality;
class RtGetQuality;
class RqFreshTreature;
class RtFreshTreature;
class RqStartEscort;
class RtStartEscort;
class RqImediaComplete;
class RqSpeedUp;
class RtSpeedUp;
class RqAbandon;
class RtAbandon;
class RqGetPrize;
class RtGetPrize;
class RqOpenEscort;
class RtOpenEscort;
class EscortStateInfo;
class EscortResult;
class WSToGMDoubleEscort;

// ===================================================================

class RqGetQuality : public ::google::protobuf::Message {
 public:
  RqGetQuality();
  virtual ~RqGetQuality();

  RqGetQuality(const RqGetQuality& from);

  inline RqGetQuality& operator=(const RqGetQuality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqGetQuality& default_instance();

  void Swap(RqGetQuality* other);

  // implements Message ----------------------------------------------

  RqGetQuality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqGetQuality& from);
  void MergeFrom(const RqGetQuality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 quality = 1;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 1;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RqGetQuality)
 private:
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqGetQuality* default_instance_;
};
// -------------------------------------------------------------------

class RtGetQuality : public ::google::protobuf::Message {
 public:
  RtGetQuality();
  virtual ~RtGetQuality();

  RtGetQuality(const RtGetQuality& from);

  inline RtGetQuality& operator=(const RtGetQuality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtGetQuality& default_instance();

  void Swap(RtGetQuality* other);

  // implements Message ----------------------------------------------

  RtGetQuality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtGetQuality& from);
  void MergeFrom(const RtGetQuality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // required int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RtGetQuality)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtGetQuality* default_instance_;
};
// -------------------------------------------------------------------

class RqFreshTreature : public ::google::protobuf::Message {
 public:
  RqFreshTreature();
  virtual ~RqFreshTreature();

  RqFreshTreature(const RqFreshTreature& from);

  inline RqFreshTreature& operator=(const RqFreshTreature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqFreshTreature& default_instance();

  void Swap(RqFreshTreature* other);

  // implements Message ----------------------------------------------

  RqFreshTreature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqFreshTreature& from);
  void MergeFrom(const RqFreshTreature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 escortId = 1;
  inline bool has_escortid() const;
  inline void clear_escortid();
  static const int kEscortIdFieldNumber = 1;
  inline ::google::protobuf::int32 escortid() const;
  inline void set_escortid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RqFreshTreature)
 private:
  inline void set_has_escortid();
  inline void clear_has_escortid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 escortid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqFreshTreature* default_instance_;
};
// -------------------------------------------------------------------

class RtFreshTreature : public ::google::protobuf::Message {
 public:
  RtFreshTreature();
  virtual ~RtFreshTreature();

  RtFreshTreature(const RtFreshTreature& from);

  inline RtFreshTreature& operator=(const RtFreshTreature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtFreshTreature& default_instance();

  void Swap(RtFreshTreature* other);

  // implements Message ----------------------------------------------

  RtFreshTreature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtFreshTreature& from);
  void MergeFrom(const RtFreshTreature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 quality = 1;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 1;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // required int32 freshtimes = 3;
  inline bool has_freshtimes() const;
  inline void clear_freshtimes();
  static const int kFreshtimesFieldNumber = 3;
  inline ::google::protobuf::int32 freshtimes() const;
  inline void set_freshtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RtFreshTreature)
 private:
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_freshtimes();
  inline void clear_has_freshtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 freshtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtFreshTreature* default_instance_;
};
// -------------------------------------------------------------------

class RqStartEscort : public ::google::protobuf::Message {
 public:
  RqStartEscort();
  virtual ~RqStartEscort();

  RqStartEscort(const RqStartEscort& from);

  inline RqStartEscort& operator=(const RqStartEscort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqStartEscort& default_instance();

  void Swap(RqStartEscort* other);

  // implements Message ----------------------------------------------

  RqStartEscort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqStartEscort& from);
  void MergeFrom(const RqStartEscort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RqStartEscort)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqStartEscort* default_instance_;
};
// -------------------------------------------------------------------

class RtStartEscort : public ::google::protobuf::Message {
 public:
  RtStartEscort();
  virtual ~RtStartEscort();

  RtStartEscort(const RtStartEscort& from);

  inline RtStartEscort& operator=(const RtStartEscort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtStartEscort& default_instance();

  void Swap(RtStartEscort* other);

  // implements Message ----------------------------------------------

  RtStartEscort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtStartEscort& from);
  void MergeFrom(const RtStartEscort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 line = 3;
  inline bool has_line() const;
  inline void clear_line();
  static const int kLineFieldNumber = 3;
  inline ::google::protobuf::int32 line() const;
  inline void set_line(::google::protobuf::int32 value);

  // optional int32 money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RtStartEscort)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_line();
  inline void clear_has_line();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 line_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtStartEscort* default_instance_;
};
// -------------------------------------------------------------------

class RqImediaComplete : public ::google::protobuf::Message {
 public:
  RqImediaComplete();
  virtual ~RqImediaComplete();

  RqImediaComplete(const RqImediaComplete& from);

  inline RqImediaComplete& operator=(const RqImediaComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqImediaComplete& default_instance();

  void Swap(RqImediaComplete* other);

  // implements Message ----------------------------------------------

  RqImediaComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqImediaComplete& from);
  void MergeFrom(const RqImediaComplete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RqImediaComplete)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqImediaComplete* default_instance_;
};
// -------------------------------------------------------------------

class RqSpeedUp : public ::google::protobuf::Message {
 public:
  RqSpeedUp();
  virtual ~RqSpeedUp();

  RqSpeedUp(const RqSpeedUp& from);

  inline RqSpeedUp& operator=(const RqSpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqSpeedUp& default_instance();

  void Swap(RqSpeedUp* other);

  // implements Message ----------------------------------------------

  RqSpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqSpeedUp& from);
  void MergeFrom(const RqSpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RqSpeedUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqSpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class RtSpeedUp : public ::google::protobuf::Message {
 public:
  RtSpeedUp();
  virtual ~RtSpeedUp();

  RtSpeedUp(const RtSpeedUp& from);

  inline RtSpeedUp& operator=(const RtSpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtSpeedUp& default_instance();

  void Swap(RtSpeedUp* other);

  // implements Message ----------------------------------------------

  RtSpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtSpeedUp& from);
  void MergeFrom(const RtSpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RtSpeedUp)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtSpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class RqAbandon : public ::google::protobuf::Message {
 public:
  RqAbandon();
  virtual ~RqAbandon();

  RqAbandon(const RqAbandon& from);

  inline RqAbandon& operator=(const RqAbandon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqAbandon& default_instance();

  void Swap(RqAbandon* other);

  // implements Message ----------------------------------------------

  RqAbandon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqAbandon& from);
  void MergeFrom(const RqAbandon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RqAbandon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqAbandon* default_instance_;
};
// -------------------------------------------------------------------

class RtAbandon : public ::google::protobuf::Message {
 public:
  RtAbandon();
  virtual ~RtAbandon();

  RtAbandon(const RtAbandon& from);

  inline RtAbandon& operator=(const RtAbandon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtAbandon& default_instance();

  void Swap(RtAbandon* other);

  // implements Message ----------------------------------------------

  RtAbandon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtAbandon& from);
  void MergeFrom(const RtAbandon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RtAbandon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtAbandon* default_instance_;
};
// -------------------------------------------------------------------

class RqGetPrize : public ::google::protobuf::Message {
 public:
  RqGetPrize();
  virtual ~RqGetPrize();

  RqGetPrize(const RqGetPrize& from);

  inline RqGetPrize& operator=(const RqGetPrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqGetPrize& default_instance();

  void Swap(RqGetPrize* other);

  // implements Message ----------------------------------------------

  RqGetPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqGetPrize& from);
  void MergeFrom(const RqGetPrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RqGetPrize)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqGetPrize* default_instance_;
};
// -------------------------------------------------------------------

class RtGetPrize : public ::google::protobuf::Message {
 public:
  RtGetPrize();
  virtual ~RtGetPrize();

  RtGetPrize(const RtGetPrize& from);

  inline RtGetPrize& operator=(const RtGetPrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtGetPrize& default_instance();

  void Swap(RtGetPrize* other);

  // implements Message ----------------------------------------------

  RtGetPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtGetPrize& from);
  void MergeFrom(const RtGetPrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RtGetPrize)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtGetPrize* default_instance_;
};
// -------------------------------------------------------------------

class RqOpenEscort : public ::google::protobuf::Message {
 public:
  RqOpenEscort();
  virtual ~RqOpenEscort();

  RqOpenEscort(const RqOpenEscort& from);

  inline RqOpenEscort& operator=(const RqOpenEscort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqOpenEscort& default_instance();

  void Swap(RqOpenEscort* other);

  // implements Message ----------------------------------------------

  RqOpenEscort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqOpenEscort& from);
  void MergeFrom(const RqOpenEscort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EscortProto.RqOpenEscort)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RqOpenEscort* default_instance_;
};
// -------------------------------------------------------------------

class RtOpenEscort : public ::google::protobuf::Message {
 public:
  RtOpenEscort();
  virtual ~RtOpenEscort();

  RtOpenEscort(const RtOpenEscort& from);

  inline RtOpenEscort& operator=(const RtOpenEscort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtOpenEscort& default_instance();

  void Swap(RtOpenEscort* other);

  // implements Message ----------------------------------------------

  RtOpenEscort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtOpenEscort& from);
  void MergeFrom(const RtOpenEscort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 freshtimes = 1;
  inline bool has_freshtimes() const;
  inline void clear_freshtimes();
  static const int kFreshtimesFieldNumber = 1;
  inline ::google::protobuf::int32 freshtimes() const;
  inline void set_freshtimes(::google::protobuf::int32 value);

  // required int32 dotimes = 2;
  inline bool has_dotimes() const;
  inline void clear_dotimes();
  static const int kDotimesFieldNumber = 2;
  inline ::google::protobuf::int32 dotimes() const;
  inline void set_dotimes(::google::protobuf::int32 value);

  // required int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.RtOpenEscort)
 private:
  inline void set_has_freshtimes();
  inline void clear_has_freshtimes();
  inline void set_has_dotimes();
  inline void clear_has_dotimes();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 freshtimes_;
  ::google::protobuf::int32 dotimes_;
  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static RtOpenEscort* default_instance_;
};
// -------------------------------------------------------------------

class EscortStateInfo : public ::google::protobuf::Message {
 public:
  EscortStateInfo();
  virtual ~EscortStateInfo();

  EscortStateInfo(const EscortStateInfo& from);

  inline EscortStateInfo& operator=(const EscortStateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EscortStateInfo& default_instance();

  void Swap(EscortStateInfo* other);

  // implements Message ----------------------------------------------

  EscortStateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EscortStateInfo& from);
  void MergeFrom(const EscortStateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 line = 1;
  inline bool has_line() const;
  inline void clear_line();
  static const int kLineFieldNumber = 1;
  inline ::google::protobuf::int32 line() const;
  inline void set_line(::google::protobuf::int32 value);

  // optional int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 robTimes = 3;
  inline bool has_robtimes() const;
  inline void clear_robtimes();
  static const int kRobTimesFieldNumber = 3;
  inline ::google::protobuf::int32 robtimes() const;
  inline void set_robtimes(::google::protobuf::int32 value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 mapid = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 xpos = 6;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 6;
  inline ::google::protobuf::int32 xpos() const;
  inline void set_xpos(::google::protobuf::int32 value);

  // optional int32 ypos = 7;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 7;
  inline ::google::protobuf::int32 ypos() const;
  inline void set_ypos(::google::protobuf::int32 value);

  // optional int32 speedtime = 8;
  inline bool has_speedtime() const;
  inline void clear_speedtime();
  static const int kSpeedtimeFieldNumber = 8;
  inline ::google::protobuf::int32 speedtime() const;
  inline void set_speedtime(::google::protobuf::int32 value);

  // optional int32 money = 9;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 9;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 exp = 10;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 10;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EscortProto.EscortStateInfo)
 private:
  inline void set_has_line();
  inline void clear_has_line();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_robtimes();
  inline void clear_has_robtimes();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_speedtime();
  inline void clear_has_speedtime();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 line_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 robtimes_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 xpos_;
  ::google::protobuf::int32 ypos_;
  ::google::protobuf::int32 speedtime_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static EscortStateInfo* default_instance_;
};
// -------------------------------------------------------------------

class EscortResult : public ::google::protobuf::Message {
 public:
  EscortResult();
  virtual ~EscortResult();

  EscortResult(const EscortResult& from);

  inline EscortResult& operator=(const EscortResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EscortResult& default_instance();

  void Swap(EscortResult* other);

  // implements Message ----------------------------------------------

  EscortResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EscortResult& from);
  void MergeFrom(const EscortResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::int32 res() const;
  inline void set_res(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:EscortProto.EscortResult)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 res_;
  ::google::protobuf::int32 exp_;
  ::std::string* name_;
  ::google::protobuf::int32 money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static EscortResult* default_instance_;
};
// -------------------------------------------------------------------

class WSToGMDoubleEscort : public ::google::protobuf::Message {
 public:
  WSToGMDoubleEscort();
  virtual ~WSToGMDoubleEscort();

  WSToGMDoubleEscort(const WSToGMDoubleEscort& from);

  inline WSToGMDoubleEscort& operator=(const WSToGMDoubleEscort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToGMDoubleEscort& default_instance();

  void Swap(WSToGMDoubleEscort* other);

  // implements Message ----------------------------------------------

  WSToGMDoubleEscort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToGMDoubleEscort& from);
  void MergeFrom(const WSToGMDoubleEscort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:EscortProto.WSToGMDoubleEscort)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_AssignDesc_Escort_2fEscortProto_2eproto();
  friend void protobuf_ShutdownFile_Escort_2fEscortProto_2eproto();

  void InitAsDefaultInstance();
  static WSToGMDoubleEscort* default_instance_;
};
// ===================================================================


// ===================================================================

// RqGetQuality

// required int32 quality = 1;
inline bool RqGetQuality::has_quality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RqGetQuality::set_has_quality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RqGetQuality::clear_has_quality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RqGetQuality::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RqGetQuality::quality() const {
  return quality_;
}
inline void RqGetQuality::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// RtGetQuality

// required int32 error = 1;
inline bool RtGetQuality::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtGetQuality::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtGetQuality::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtGetQuality::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RtGetQuality::error() const {
  return error_;
}
inline void RtGetQuality::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// required int32 quality = 2;
inline bool RtGetQuality::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtGetQuality::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtGetQuality::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtGetQuality::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RtGetQuality::quality() const {
  return quality_;
}
inline void RtGetQuality::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// RqFreshTreature

// required int32 escortId = 1;
inline bool RqFreshTreature::has_escortid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RqFreshTreature::set_has_escortid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RqFreshTreature::clear_has_escortid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RqFreshTreature::clear_escortid() {
  escortid_ = 0;
  clear_has_escortid();
}
inline ::google::protobuf::int32 RqFreshTreature::escortid() const {
  return escortid_;
}
inline void RqFreshTreature::set_escortid(::google::protobuf::int32 value) {
  set_has_escortid();
  escortid_ = value;
}

// -------------------------------------------------------------------

// RtFreshTreature

// required int32 quality = 1;
inline bool RtFreshTreature::has_quality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtFreshTreature::set_has_quality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtFreshTreature::clear_has_quality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtFreshTreature::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RtFreshTreature::quality() const {
  return quality_;
}
inline void RtFreshTreature::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// required int32 error = 2;
inline bool RtFreshTreature::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtFreshTreature::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtFreshTreature::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtFreshTreature::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RtFreshTreature::error() const {
  return error_;
}
inline void RtFreshTreature::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// required int32 freshtimes = 3;
inline bool RtFreshTreature::has_freshtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtFreshTreature::set_has_freshtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtFreshTreature::clear_has_freshtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtFreshTreature::clear_freshtimes() {
  freshtimes_ = 0;
  clear_has_freshtimes();
}
inline ::google::protobuf::int32 RtFreshTreature::freshtimes() const {
  return freshtimes_;
}
inline void RtFreshTreature::set_freshtimes(::google::protobuf::int32 value) {
  set_has_freshtimes();
  freshtimes_ = value;
}

// -------------------------------------------------------------------

// RqStartEscort

// -------------------------------------------------------------------

// RtStartEscort

// required int32 error = 1;
inline bool RtStartEscort::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtStartEscort::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtStartEscort::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtStartEscort::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RtStartEscort::error() const {
  return error_;
}
inline void RtStartEscort::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 quality = 2;
inline bool RtStartEscort::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtStartEscort::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtStartEscort::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtStartEscort::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RtStartEscort::quality() const {
  return quality_;
}
inline void RtStartEscort::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 line = 3;
inline bool RtStartEscort::has_line() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtStartEscort::set_has_line() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtStartEscort::clear_has_line() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtStartEscort::clear_line() {
  line_ = 0;
  clear_has_line();
}
inline ::google::protobuf::int32 RtStartEscort::line() const {
  return line_;
}
inline void RtStartEscort::set_line(::google::protobuf::int32 value) {
  set_has_line();
  line_ = value;
}

// optional int32 money = 4;
inline bool RtStartEscort::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RtStartEscort::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RtStartEscort::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RtStartEscort::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 RtStartEscort::money() const {
  return money_;
}
inline void RtStartEscort::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 exp = 5;
inline bool RtStartEscort::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RtStartEscort::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RtStartEscort::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RtStartEscort::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 RtStartEscort::exp() const {
  return exp_;
}
inline void RtStartEscort::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// RqImediaComplete

// -------------------------------------------------------------------

// RqSpeedUp

// -------------------------------------------------------------------

// RtSpeedUp

// required int32 error = 1;
inline bool RtSpeedUp::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtSpeedUp::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtSpeedUp::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtSpeedUp::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RtSpeedUp::error() const {
  return error_;
}
inline void RtSpeedUp::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// RqAbandon

// -------------------------------------------------------------------

// RtAbandon

// -------------------------------------------------------------------

// RqGetPrize

// -------------------------------------------------------------------

// RtGetPrize

// -------------------------------------------------------------------

// RqOpenEscort

// -------------------------------------------------------------------

// RtOpenEscort

// required int32 freshtimes = 1;
inline bool RtOpenEscort::has_freshtimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtOpenEscort::set_has_freshtimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtOpenEscort::clear_has_freshtimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtOpenEscort::clear_freshtimes() {
  freshtimes_ = 0;
  clear_has_freshtimes();
}
inline ::google::protobuf::int32 RtOpenEscort::freshtimes() const {
  return freshtimes_;
}
inline void RtOpenEscort::set_freshtimes(::google::protobuf::int32 value) {
  set_has_freshtimes();
  freshtimes_ = value;
}

// required int32 dotimes = 2;
inline bool RtOpenEscort::has_dotimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtOpenEscort::set_has_dotimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtOpenEscort::clear_has_dotimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtOpenEscort::clear_dotimes() {
  dotimes_ = 0;
  clear_has_dotimes();
}
inline ::google::protobuf::int32 RtOpenEscort::dotimes() const {
  return dotimes_;
}
inline void RtOpenEscort::set_dotimes(::google::protobuf::int32 value) {
  set_has_dotimes();
  dotimes_ = value;
}

// required int32 quality = 3;
inline bool RtOpenEscort::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtOpenEscort::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtOpenEscort::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtOpenEscort::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RtOpenEscort::quality() const {
  return quality_;
}
inline void RtOpenEscort::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// EscortStateInfo

// required int32 line = 1;
inline bool EscortStateInfo::has_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EscortStateInfo::set_has_line() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EscortStateInfo::clear_has_line() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EscortStateInfo::clear_line() {
  line_ = 0;
  clear_has_line();
}
inline ::google::protobuf::int32 EscortStateInfo::line() const {
  return line_;
}
inline void EscortStateInfo::set_line(::google::protobuf::int32 value) {
  set_has_line();
  line_ = value;
}

// optional int32 quality = 2;
inline bool EscortStateInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EscortStateInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EscortStateInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EscortStateInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 EscortStateInfo::quality() const {
  return quality_;
}
inline void EscortStateInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 robTimes = 3;
inline bool EscortStateInfo::has_robtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EscortStateInfo::set_has_robtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EscortStateInfo::clear_has_robtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EscortStateInfo::clear_robtimes() {
  robtimes_ = 0;
  clear_has_robtimes();
}
inline ::google::protobuf::int32 EscortStateInfo::robtimes() const {
  return robtimes_;
}
inline void EscortStateInfo::set_robtimes(::google::protobuf::int32 value) {
  set_has_robtimes();
  robtimes_ = value;
}

// optional int32 time = 4;
inline bool EscortStateInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EscortStateInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EscortStateInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EscortStateInfo::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 EscortStateInfo::time() const {
  return time_;
}
inline void EscortStateInfo::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 mapid = 5;
inline bool EscortStateInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EscortStateInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EscortStateInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EscortStateInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 EscortStateInfo::mapid() const {
  return mapid_;
}
inline void EscortStateInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 xpos = 6;
inline bool EscortStateInfo::has_xpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EscortStateInfo::set_has_xpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EscortStateInfo::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EscortStateInfo::clear_xpos() {
  xpos_ = 0;
  clear_has_xpos();
}
inline ::google::protobuf::int32 EscortStateInfo::xpos() const {
  return xpos_;
}
inline void EscortStateInfo::set_xpos(::google::protobuf::int32 value) {
  set_has_xpos();
  xpos_ = value;
}

// optional int32 ypos = 7;
inline bool EscortStateInfo::has_ypos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EscortStateInfo::set_has_ypos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EscortStateInfo::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EscortStateInfo::clear_ypos() {
  ypos_ = 0;
  clear_has_ypos();
}
inline ::google::protobuf::int32 EscortStateInfo::ypos() const {
  return ypos_;
}
inline void EscortStateInfo::set_ypos(::google::protobuf::int32 value) {
  set_has_ypos();
  ypos_ = value;
}

// optional int32 speedtime = 8;
inline bool EscortStateInfo::has_speedtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EscortStateInfo::set_has_speedtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EscortStateInfo::clear_has_speedtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EscortStateInfo::clear_speedtime() {
  speedtime_ = 0;
  clear_has_speedtime();
}
inline ::google::protobuf::int32 EscortStateInfo::speedtime() const {
  return speedtime_;
}
inline void EscortStateInfo::set_speedtime(::google::protobuf::int32 value) {
  set_has_speedtime();
  speedtime_ = value;
}

// optional int32 money = 9;
inline bool EscortStateInfo::has_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EscortStateInfo::set_has_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EscortStateInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EscortStateInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 EscortStateInfo::money() const {
  return money_;
}
inline void EscortStateInfo::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 exp = 10;
inline bool EscortStateInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EscortStateInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EscortStateInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EscortStateInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 EscortStateInfo::exp() const {
  return exp_;
}
inline void EscortStateInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// EscortResult

// required int32 res = 1;
inline bool EscortResult::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EscortResult::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EscortResult::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EscortResult::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::google::protobuf::int32 EscortResult::res() const {
  return res_;
}
inline void EscortResult::set_res(::google::protobuf::int32 value) {
  set_has_res();
  res_ = value;
}

// optional int32 exp = 2;
inline bool EscortResult::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EscortResult::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EscortResult::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EscortResult::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 EscortResult::exp() const {
  return exp_;
}
inline void EscortResult::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 money = 3;
inline bool EscortResult::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EscortResult::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EscortResult::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EscortResult::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 EscortResult::money() const {
  return money_;
}
inline void EscortResult::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional bytes name = 4;
inline bool EscortResult::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EscortResult::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EscortResult::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EscortResult::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& EscortResult::name() const {
  return *name_;
}
inline void EscortResult::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void EscortResult::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void EscortResult::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EscortResult::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* EscortResult::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EscortResult::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WSToGMDoubleEscort

// required bool flag = 1;
inline bool WSToGMDoubleEscort::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToGMDoubleEscort::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToGMDoubleEscort::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToGMDoubleEscort::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WSToGMDoubleEscort::flag() const {
  return flag_;
}
inline void WSToGMDoubleEscort::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EscortProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Escort_2fEscortProto_2eproto__INCLUDED
