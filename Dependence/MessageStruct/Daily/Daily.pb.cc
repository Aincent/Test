// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Daily/Daily.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Daily/Daily.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Daily {

namespace {

const ::google::protobuf::Descriptor* DailyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GMReqDailyPracticeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GMReqDailyPracticeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GMReqPracticeReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GMReqPracticeReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GMReqGetRecoverResourceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GMReqGetRecoverResourceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecoverResourceItemReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecoverResourceItemReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecoverResourceReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecoverResourceReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecoverResourceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecoverResourceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecoverResourceInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecoverResourceInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GMReqRecoverResource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GMReqRecoverResource_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GMReqDailyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GMReqDailyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyToDoInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyToDoInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyToDoInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyToDoInfoList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Daily_2fDaily_2eproto() {
  protobuf_AddDesc_Daily_2fDaily_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Daily/Daily.proto");
  GOOGLE_CHECK(file != NULL);
  DailyInfo_descriptor_ = file->message_type(0);
  static const int DailyInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyInfo, havetodocount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyInfo, havetodostate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyInfo, activitiesfinish_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyInfo, activitiesaward_),
  };
  DailyInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyInfo_descriptor_,
      DailyInfo::default_instance_,
      DailyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyInfo));
  C2GMReqDailyPracticeInfo_descriptor_ = file->message_type(1);
  static const int C2GMReqDailyPracticeInfo_offsets_[1] = {
  };
  C2GMReqDailyPracticeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GMReqDailyPracticeInfo_descriptor_,
      C2GMReqDailyPracticeInfo::default_instance_,
      C2GMReqDailyPracticeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqDailyPracticeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqDailyPracticeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GMReqDailyPracticeInfo));
  C2GMReqPracticeReward_descriptor_ = file->message_type(2);
  static const int C2GMReqPracticeReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqPracticeReward, type_),
  };
  C2GMReqPracticeReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GMReqPracticeReward_descriptor_,
      C2GMReqPracticeReward::default_instance_,
      C2GMReqPracticeReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqPracticeReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqPracticeReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GMReqPracticeReward));
  C2GMReqGetRecoverResourceInfo_descriptor_ = file->message_type(3);
  static const int C2GMReqGetRecoverResourceInfo_offsets_[1] = {
  };
  C2GMReqGetRecoverResourceInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GMReqGetRecoverResourceInfo_descriptor_,
      C2GMReqGetRecoverResourceInfo::default_instance_,
      C2GMReqGetRecoverResourceInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqGetRecoverResourceInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqGetRecoverResourceInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GMReqGetRecoverResourceInfo));
  RecoverResourceItemReward_descriptor_ = file->message_type(4);
  static const int RecoverResourceItemReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceItemReward, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceItemReward, itemcount_),
  };
  RecoverResourceItemReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecoverResourceItemReward_descriptor_,
      RecoverResourceItemReward::default_instance_,
      RecoverResourceItemReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceItemReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceItemReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecoverResourceItemReward));
  RecoverResourceReward_descriptor_ = file->message_type(5);
  static const int RecoverResourceReward_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, clancontri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, campcontri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, item_),
  };
  RecoverResourceReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecoverResourceReward_descriptor_,
      RecoverResourceReward::default_instance_,
      RecoverResourceReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecoverResourceReward));
  RecoverResourceInfo_descriptor_ = file->message_type(6);
  static const int RecoverResourceInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfo, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfo, restcount_),
  };
  RecoverResourceInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecoverResourceInfo_descriptor_,
      RecoverResourceInfo::default_instance_,
      RecoverResourceInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecoverResourceInfo));
  RecoverResourceInfoList_descriptor_ = file->message_type(7);
  static const int RecoverResourceInfoList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfoList, ishaverecover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfoList, infolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfoList, golden_),
  };
  RecoverResourceInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecoverResourceInfoList_descriptor_,
      RecoverResourceInfoList::default_instance_,
      RecoverResourceInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverResourceInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecoverResourceInfoList));
  C2GMReqRecoverResource_descriptor_ = file->message_type(8);
  static const int C2GMReqRecoverResource_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqRecoverResource, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqRecoverResource, id_),
  };
  C2GMReqRecoverResource_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GMReqRecoverResource_descriptor_,
      C2GMReqRecoverResource::default_instance_,
      C2GMReqRecoverResource_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqRecoverResource, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqRecoverResource, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GMReqRecoverResource));
  C2GMReqDailyInfo_descriptor_ = file->message_type(9);
  static const int C2GMReqDailyInfo_offsets_[1] = {
  };
  C2GMReqDailyInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GMReqDailyInfo_descriptor_,
      C2GMReqDailyInfo::default_instance_,
      C2GMReqDailyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqDailyInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GMReqDailyInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GMReqDailyInfo));
  DailyToDoInfo_descriptor_ = file->message_type(10);
  static const int DailyToDoInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfo, count_),
  };
  DailyToDoInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyToDoInfo_descriptor_,
      DailyToDoInfo::default_instance_,
      DailyToDoInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyToDoInfo));
  DailyToDoInfoList_descriptor_ = file->message_type(11);
  static const int DailyToDoInfoList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfoList, infolist_),
  };
  DailyToDoInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyToDoInfoList_descriptor_,
      DailyToDoInfoList::default_instance_,
      DailyToDoInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyToDoInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyToDoInfoList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Daily_2fDaily_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyInfo_descriptor_, &DailyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GMReqDailyPracticeInfo_descriptor_, &C2GMReqDailyPracticeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GMReqPracticeReward_descriptor_, &C2GMReqPracticeReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GMReqGetRecoverResourceInfo_descriptor_, &C2GMReqGetRecoverResourceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecoverResourceItemReward_descriptor_, &RecoverResourceItemReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecoverResourceReward_descriptor_, &RecoverResourceReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecoverResourceInfo_descriptor_, &RecoverResourceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecoverResourceInfoList_descriptor_, &RecoverResourceInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GMReqRecoverResource_descriptor_, &C2GMReqRecoverResource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GMReqDailyInfo_descriptor_, &C2GMReqDailyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyToDoInfo_descriptor_, &DailyToDoInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyToDoInfoList_descriptor_, &DailyToDoInfoList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Daily_2fDaily_2eproto() {
  delete DailyInfo::default_instance_;
  delete DailyInfo_reflection_;
  delete C2GMReqDailyPracticeInfo::default_instance_;
  delete C2GMReqDailyPracticeInfo_reflection_;
  delete C2GMReqPracticeReward::default_instance_;
  delete C2GMReqPracticeReward_reflection_;
  delete C2GMReqGetRecoverResourceInfo::default_instance_;
  delete C2GMReqGetRecoverResourceInfo_reflection_;
  delete RecoverResourceItemReward::default_instance_;
  delete RecoverResourceItemReward_reflection_;
  delete RecoverResourceReward::default_instance_;
  delete RecoverResourceReward_reflection_;
  delete RecoverResourceInfo::default_instance_;
  delete RecoverResourceInfo_reflection_;
  delete RecoverResourceInfoList::default_instance_;
  delete RecoverResourceInfoList_reflection_;
  delete C2GMReqRecoverResource::default_instance_;
  delete C2GMReqRecoverResource_reflection_;
  delete C2GMReqDailyInfo::default_instance_;
  delete C2GMReqDailyInfo_reflection_;
  delete DailyToDoInfo::default_instance_;
  delete DailyToDoInfo_reflection_;
  delete DailyToDoInfoList::default_instance_;
  delete DailyToDoInfoList_reflection_;
}

void protobuf_AddDesc_Daily_2fDaily_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021Daily/Daily.proto\022\005Daily\"l\n\tDailyInfo\022"
    "\025\n\rhavetodocount\030\001 \003(\005\022\025\n\rhavetodostate\030"
    "\002 \003(\010\022\030\n\020activitiesfinish\030\003 \003(\010\022\027\n\017activ"
    "itiesaward\030\004 \003(\010\"\032\n\030C2GMReqDailyPractice"
    "Info\"%\n\025C2GMReqPracticeReward\022\014\n\004type\030\001 "
    "\002(\005\"\037\n\035C2GMReqGetRecoverResourceInfo\">\n\031"
    "RecoverResourceItemReward\022\016\n\006itemid\030\001 \002("
    "\005\022\021\n\titemcount\030\002 \002(\005\"\232\001\n\025RecoverResource"
    "Reward\022\013\n\003exp\030\001 \001(\005\022\r\n\005money\030\002 \001(\005\022\r\n\005fo"
    "rce\030\003 \001(\005\022\022\n\nclancontri\030\004 \001(\005\022\022\n\ncampcon"
    "tri\030\005 \001(\005\022.\n\004item\030\006 \003(\0132 .Daily.RecoverR"
    "esourceItemReward\"b\n\023RecoverResourceInfo"
    "\022\n\n\002id\030\001 \002(\005\022,\n\006reward\030\002 \002(\0132\034.Daily.Rec"
    "overResourceReward\022\021\n\trestcount\030\003 \002(\005\"n\n"
    "\027RecoverResourceInfoList\022\025\n\risHaveRecove"
    "r\030\001 \002(\005\022,\n\010infolist\030\002 \003(\0132\032.Daily.Recove"
    "rResourceInfo\022\016\n\006golden\030\003 \001(\005\"0\n\026C2GMReq"
    "RecoverResource\022\n\n\002op\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\""
    "\022\n\020C2GMReqDailyInfo\"*\n\rDailyToDoInfo\022\n\n\002"
    "id\030\001 \002(\005\022\r\n\005count\030\002 \002(\005\";\n\021DailyToDoInfo"
    "List\022&\n\010infolist\030\001 \003(\0132\024.Daily.DailyToDo"
    "Info", 844);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Daily/Daily.proto", &protobuf_RegisterTypes);
  DailyInfo::default_instance_ = new DailyInfo();
  C2GMReqDailyPracticeInfo::default_instance_ = new C2GMReqDailyPracticeInfo();
  C2GMReqPracticeReward::default_instance_ = new C2GMReqPracticeReward();
  C2GMReqGetRecoverResourceInfo::default_instance_ = new C2GMReqGetRecoverResourceInfo();
  RecoverResourceItemReward::default_instance_ = new RecoverResourceItemReward();
  RecoverResourceReward::default_instance_ = new RecoverResourceReward();
  RecoverResourceInfo::default_instance_ = new RecoverResourceInfo();
  RecoverResourceInfoList::default_instance_ = new RecoverResourceInfoList();
  C2GMReqRecoverResource::default_instance_ = new C2GMReqRecoverResource();
  C2GMReqDailyInfo::default_instance_ = new C2GMReqDailyInfo();
  DailyToDoInfo::default_instance_ = new DailyToDoInfo();
  DailyToDoInfoList::default_instance_ = new DailyToDoInfoList();
  DailyInfo::default_instance_->InitAsDefaultInstance();
  C2GMReqDailyPracticeInfo::default_instance_->InitAsDefaultInstance();
  C2GMReqPracticeReward::default_instance_->InitAsDefaultInstance();
  C2GMReqGetRecoverResourceInfo::default_instance_->InitAsDefaultInstance();
  RecoverResourceItemReward::default_instance_->InitAsDefaultInstance();
  RecoverResourceReward::default_instance_->InitAsDefaultInstance();
  RecoverResourceInfo::default_instance_->InitAsDefaultInstance();
  RecoverResourceInfoList::default_instance_->InitAsDefaultInstance();
  C2GMReqRecoverResource::default_instance_->InitAsDefaultInstance();
  C2GMReqDailyInfo::default_instance_->InitAsDefaultInstance();
  DailyToDoInfo::default_instance_->InitAsDefaultInstance();
  DailyToDoInfoList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Daily_2fDaily_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Daily_2fDaily_2eproto {
  StaticDescriptorInitializer_Daily_2fDaily_2eproto() {
    protobuf_AddDesc_Daily_2fDaily_2eproto();
  }
} static_descriptor_initializer_Daily_2fDaily_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DailyInfo::kHavetodocountFieldNumber;
const int DailyInfo::kHavetodostateFieldNumber;
const int DailyInfo::kActivitiesfinishFieldNumber;
const int DailyInfo::kActivitiesawardFieldNumber;
#endif  // !_MSC_VER

DailyInfo::DailyInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyInfo::InitAsDefaultInstance() {
}

DailyInfo::DailyInfo(const DailyInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyInfo::~DailyInfo() {
  SharedDtor();
}

void DailyInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyInfo_descriptor_;
}

const DailyInfo& DailyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

DailyInfo* DailyInfo::default_instance_ = NULL;

DailyInfo* DailyInfo::New() const {
  return new DailyInfo;
}

void DailyInfo::Clear() {
  havetodocount_.Clear();
  havetodostate_.Clear();
  activitiesfinish_.Clear();
  activitiesaward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 havetodocount = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_havetodocount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_havetodocount())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_havetodocount())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_havetodocount;
        if (input->ExpectTag(16)) goto parse_havetodostate;
        break;
      }

      // repeated bool havetodostate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_havetodostate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 16, input, this->mutable_havetodostate())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_havetodostate())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_havetodostate;
        if (input->ExpectTag(24)) goto parse_activitiesfinish;
        break;
      }

      // repeated bool activitiesfinish = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activitiesfinish:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 24, input, this->mutable_activitiesfinish())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_activitiesfinish())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_activitiesfinish;
        if (input->ExpectTag(32)) goto parse_activitiesaward;
        break;
      }

      // repeated bool activitiesaward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activitiesaward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 32, input, this->mutable_activitiesaward())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_activitiesaward())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_activitiesaward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 havetodocount = 1;
  for (int i = 0; i < this->havetodocount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->havetodocount(i), output);
  }

  // repeated bool havetodostate = 2;
  for (int i = 0; i < this->havetodostate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      2, this->havetodostate(i), output);
  }

  // repeated bool activitiesfinish = 3;
  for (int i = 0; i < this->activitiesfinish_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      3, this->activitiesfinish(i), output);
  }

  // repeated bool activitiesaward = 4;
  for (int i = 0; i < this->activitiesaward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      4, this->activitiesaward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 havetodocount = 1;
  for (int i = 0; i < this->havetodocount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->havetodocount(i), target);
  }

  // repeated bool havetodostate = 2;
  for (int i = 0; i < this->havetodostate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(2, this->havetodostate(i), target);
  }

  // repeated bool activitiesfinish = 3;
  for (int i = 0; i < this->activitiesfinish_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(3, this->activitiesfinish(i), target);
  }

  // repeated bool activitiesaward = 4;
  for (int i = 0; i < this->activitiesaward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(4, this->activitiesaward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyInfo::ByteSize() const {
  int total_size = 0;

  // repeated int32 havetodocount = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->havetodocount_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->havetodocount(i));
    }
    total_size += 1 * this->havetodocount_size() + data_size;
  }

  // repeated bool havetodostate = 2;
  {
    int data_size = 0;
    data_size = 1 * this->havetodostate_size();
    total_size += 1 * this->havetodostate_size() + data_size;
  }

  // repeated bool activitiesfinish = 3;
  {
    int data_size = 0;
    data_size = 1 * this->activitiesfinish_size();
    total_size += 1 * this->activitiesfinish_size() + data_size;
  }

  // repeated bool activitiesaward = 4;
  {
    int data_size = 0;
    data_size = 1 * this->activitiesaward_size();
    total_size += 1 * this->activitiesaward_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyInfo::MergeFrom(const DailyInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  havetodocount_.MergeFrom(from.havetodocount_);
  havetodostate_.MergeFrom(from.havetodostate_);
  activitiesfinish_.MergeFrom(from.activitiesfinish_);
  activitiesaward_.MergeFrom(from.activitiesaward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyInfo::CopyFrom(const DailyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyInfo::IsInitialized() const {

  return true;
}

void DailyInfo::Swap(DailyInfo* other) {
  if (other != this) {
    havetodocount_.Swap(&other->havetodocount_);
    havetodostate_.Swap(&other->havetodostate_);
    activitiesfinish_.Swap(&other->activitiesfinish_);
    activitiesaward_.Swap(&other->activitiesaward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyInfo_descriptor_;
  metadata.reflection = DailyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

C2GMReqDailyPracticeInfo::C2GMReqDailyPracticeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GMReqDailyPracticeInfo::InitAsDefaultInstance() {
}

C2GMReqDailyPracticeInfo::C2GMReqDailyPracticeInfo(const C2GMReqDailyPracticeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GMReqDailyPracticeInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GMReqDailyPracticeInfo::~C2GMReqDailyPracticeInfo() {
  SharedDtor();
}

void C2GMReqDailyPracticeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GMReqDailyPracticeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GMReqDailyPracticeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GMReqDailyPracticeInfo_descriptor_;
}

const C2GMReqDailyPracticeInfo& C2GMReqDailyPracticeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

C2GMReqDailyPracticeInfo* C2GMReqDailyPracticeInfo::default_instance_ = NULL;

C2GMReqDailyPracticeInfo* C2GMReqDailyPracticeInfo::New() const {
  return new C2GMReqDailyPracticeInfo;
}

void C2GMReqDailyPracticeInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GMReqDailyPracticeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void C2GMReqDailyPracticeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GMReqDailyPracticeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GMReqDailyPracticeInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GMReqDailyPracticeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GMReqDailyPracticeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GMReqDailyPracticeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GMReqDailyPracticeInfo::MergeFrom(const C2GMReqDailyPracticeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GMReqDailyPracticeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GMReqDailyPracticeInfo::CopyFrom(const C2GMReqDailyPracticeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GMReqDailyPracticeInfo::IsInitialized() const {

  return true;
}

void C2GMReqDailyPracticeInfo::Swap(C2GMReqDailyPracticeInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GMReqDailyPracticeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GMReqDailyPracticeInfo_descriptor_;
  metadata.reflection = C2GMReqDailyPracticeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GMReqPracticeReward::kTypeFieldNumber;
#endif  // !_MSC_VER

C2GMReqPracticeReward::C2GMReqPracticeReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GMReqPracticeReward::InitAsDefaultInstance() {
}

C2GMReqPracticeReward::C2GMReqPracticeReward(const C2GMReqPracticeReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GMReqPracticeReward::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GMReqPracticeReward::~C2GMReqPracticeReward() {
  SharedDtor();
}

void C2GMReqPracticeReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GMReqPracticeReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GMReqPracticeReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GMReqPracticeReward_descriptor_;
}

const C2GMReqPracticeReward& C2GMReqPracticeReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

C2GMReqPracticeReward* C2GMReqPracticeReward::default_instance_ = NULL;

C2GMReqPracticeReward* C2GMReqPracticeReward::New() const {
  return new C2GMReqPracticeReward;
}

void C2GMReqPracticeReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GMReqPracticeReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GMReqPracticeReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GMReqPracticeReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GMReqPracticeReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GMReqPracticeReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GMReqPracticeReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GMReqPracticeReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GMReqPracticeReward::MergeFrom(const C2GMReqPracticeReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GMReqPracticeReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GMReqPracticeReward::CopyFrom(const C2GMReqPracticeReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GMReqPracticeReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GMReqPracticeReward::Swap(C2GMReqPracticeReward* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GMReqPracticeReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GMReqPracticeReward_descriptor_;
  metadata.reflection = C2GMReqPracticeReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

C2GMReqGetRecoverResourceInfo::C2GMReqGetRecoverResourceInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GMReqGetRecoverResourceInfo::InitAsDefaultInstance() {
}

C2GMReqGetRecoverResourceInfo::C2GMReqGetRecoverResourceInfo(const C2GMReqGetRecoverResourceInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GMReqGetRecoverResourceInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GMReqGetRecoverResourceInfo::~C2GMReqGetRecoverResourceInfo() {
  SharedDtor();
}

void C2GMReqGetRecoverResourceInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GMReqGetRecoverResourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GMReqGetRecoverResourceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GMReqGetRecoverResourceInfo_descriptor_;
}

const C2GMReqGetRecoverResourceInfo& C2GMReqGetRecoverResourceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

C2GMReqGetRecoverResourceInfo* C2GMReqGetRecoverResourceInfo::default_instance_ = NULL;

C2GMReqGetRecoverResourceInfo* C2GMReqGetRecoverResourceInfo::New() const {
  return new C2GMReqGetRecoverResourceInfo;
}

void C2GMReqGetRecoverResourceInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GMReqGetRecoverResourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void C2GMReqGetRecoverResourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GMReqGetRecoverResourceInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GMReqGetRecoverResourceInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GMReqGetRecoverResourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GMReqGetRecoverResourceInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GMReqGetRecoverResourceInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GMReqGetRecoverResourceInfo::MergeFrom(const C2GMReqGetRecoverResourceInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GMReqGetRecoverResourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GMReqGetRecoverResourceInfo::CopyFrom(const C2GMReqGetRecoverResourceInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GMReqGetRecoverResourceInfo::IsInitialized() const {

  return true;
}

void C2GMReqGetRecoverResourceInfo::Swap(C2GMReqGetRecoverResourceInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GMReqGetRecoverResourceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GMReqGetRecoverResourceInfo_descriptor_;
  metadata.reflection = C2GMReqGetRecoverResourceInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecoverResourceItemReward::kItemidFieldNumber;
const int RecoverResourceItemReward::kItemcountFieldNumber;
#endif  // !_MSC_VER

RecoverResourceItemReward::RecoverResourceItemReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RecoverResourceItemReward::InitAsDefaultInstance() {
}

RecoverResourceItemReward::RecoverResourceItemReward(const RecoverResourceItemReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RecoverResourceItemReward::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  itemcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecoverResourceItemReward::~RecoverResourceItemReward() {
  SharedDtor();
}

void RecoverResourceItemReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecoverResourceItemReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverResourceItemReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecoverResourceItemReward_descriptor_;
}

const RecoverResourceItemReward& RecoverResourceItemReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

RecoverResourceItemReward* RecoverResourceItemReward::default_instance_ = NULL;

RecoverResourceItemReward* RecoverResourceItemReward::New() const {
  return new RecoverResourceItemReward;
}

void RecoverResourceItemReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
    itemcount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecoverResourceItemReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemcount;
        break;
      }

      // required int32 itemcount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RecoverResourceItemReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // required int32 itemcount = 2;
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RecoverResourceItemReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // required int32 itemcount = 2;
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RecoverResourceItemReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // required int32 itemcount = 2;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverResourceItemReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecoverResourceItemReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecoverResourceItemReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecoverResourceItemReward::MergeFrom(const RecoverResourceItemReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecoverResourceItemReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverResourceItemReward::CopyFrom(const RecoverResourceItemReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverResourceItemReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RecoverResourceItemReward::Swap(RecoverResourceItemReward* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecoverResourceItemReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecoverResourceItemReward_descriptor_;
  metadata.reflection = RecoverResourceItemReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecoverResourceReward::kExpFieldNumber;
const int RecoverResourceReward::kMoneyFieldNumber;
const int RecoverResourceReward::kForceFieldNumber;
const int RecoverResourceReward::kClancontriFieldNumber;
const int RecoverResourceReward::kCampcontriFieldNumber;
const int RecoverResourceReward::kItemFieldNumber;
#endif  // !_MSC_VER

RecoverResourceReward::RecoverResourceReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RecoverResourceReward::InitAsDefaultInstance() {
}

RecoverResourceReward::RecoverResourceReward(const RecoverResourceReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RecoverResourceReward::SharedCtor() {
  _cached_size_ = 0;
  exp_ = 0;
  money_ = 0;
  force_ = 0;
  clancontri_ = 0;
  campcontri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecoverResourceReward::~RecoverResourceReward() {
  SharedDtor();
}

void RecoverResourceReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecoverResourceReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverResourceReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecoverResourceReward_descriptor_;
}

const RecoverResourceReward& RecoverResourceReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

RecoverResourceReward* RecoverResourceReward::default_instance_ = NULL;

RecoverResourceReward* RecoverResourceReward::New() const {
  return new RecoverResourceReward;
}

void RecoverResourceReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exp_ = 0;
    money_ = 0;
    force_ = 0;
    clancontri_ = 0;
    campcontri_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecoverResourceReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }

      // optional int32 money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_force;
        break;
      }

      // optional int32 force = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_clancontri;
        break;
      }

      // optional int32 clancontri = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clancontri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clancontri_)));
          set_has_clancontri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_campcontri;
        break;
      }

      // optional int32 campcontri = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_campcontri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &campcontri_)));
          set_has_campcontri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        break;
      }

      // repeated .Daily.RecoverResourceItemReward item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RecoverResourceReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exp(), output);
  }

  // optional int32 money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  // optional int32 force = 3;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->force(), output);
  }

  // optional int32 clancontri = 4;
  if (has_clancontri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clancontri(), output);
  }

  // optional int32 campcontri = 5;
  if (has_campcontri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->campcontri(), output);
  }

  // repeated .Daily.RecoverResourceItemReward item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RecoverResourceReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exp(), target);
  }

  // optional int32 money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  // optional int32 force = 3;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->force(), target);
  }

  // optional int32 clancontri = 4;
  if (has_clancontri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clancontri(), target);
  }

  // optional int32 campcontri = 5;
  if (has_campcontri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->campcontri(), target);
  }

  // repeated .Daily.RecoverResourceItemReward item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RecoverResourceReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exp = 1;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 force = 3;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }

    // optional int32 clancontri = 4;
    if (has_clancontri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clancontri());
    }

    // optional int32 campcontri = 5;
    if (has_campcontri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->campcontri());
    }

  }
  // repeated .Daily.RecoverResourceItemReward item = 6;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverResourceReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecoverResourceReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecoverResourceReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecoverResourceReward::MergeFrom(const RecoverResourceReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_clancontri()) {
      set_clancontri(from.clancontri());
    }
    if (from.has_campcontri()) {
      set_campcontri(from.campcontri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecoverResourceReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverResourceReward::CopyFrom(const RecoverResourceReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverResourceReward::IsInitialized() const {

  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

void RecoverResourceReward::Swap(RecoverResourceReward* other) {
  if (other != this) {
    std::swap(exp_, other->exp_);
    std::swap(money_, other->money_);
    std::swap(force_, other->force_);
    std::swap(clancontri_, other->clancontri_);
    std::swap(campcontri_, other->campcontri_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecoverResourceReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecoverResourceReward_descriptor_;
  metadata.reflection = RecoverResourceReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecoverResourceInfo::kIdFieldNumber;
const int RecoverResourceInfo::kRewardFieldNumber;
const int RecoverResourceInfo::kRestcountFieldNumber;
#endif  // !_MSC_VER

RecoverResourceInfo::RecoverResourceInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RecoverResourceInfo::InitAsDefaultInstance() {
  reward_ = const_cast< ::Daily::RecoverResourceReward*>(&::Daily::RecoverResourceReward::default_instance());
}

RecoverResourceInfo::RecoverResourceInfo(const RecoverResourceInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RecoverResourceInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  reward_ = NULL;
  restcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecoverResourceInfo::~RecoverResourceInfo() {
  SharedDtor();
}

void RecoverResourceInfo::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void RecoverResourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverResourceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecoverResourceInfo_descriptor_;
}

const RecoverResourceInfo& RecoverResourceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

RecoverResourceInfo* RecoverResourceInfo::default_instance_ = NULL;

RecoverResourceInfo* RecoverResourceInfo::New() const {
  return new RecoverResourceInfo;
}

void RecoverResourceInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_reward()) {
      if (reward_ != NULL) reward_->::Daily::RecoverResourceReward::Clear();
    }
    restcount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecoverResourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward;
        break;
      }

      // required .Daily.RecoverResourceReward reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_restcount;
        break;
      }

      // required int32 restcount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_restcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restcount_)));
          set_has_restcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RecoverResourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .Daily.RecoverResourceReward reward = 2;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward(), output);
  }

  // required int32 restcount = 3;
  if (has_restcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->restcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RecoverResourceInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .Daily.RecoverResourceReward reward = 2;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward(), target);
  }

  // required int32 restcount = 3;
  if (has_restcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->restcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RecoverResourceInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required .Daily.RecoverResourceReward reward = 2;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // required int32 restcount = 3;
    if (has_restcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->restcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverResourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecoverResourceInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecoverResourceInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecoverResourceInfo::MergeFrom(const RecoverResourceInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_reward()) {
      mutable_reward()->::Daily::RecoverResourceReward::MergeFrom(from.reward());
    }
    if (from.has_restcount()) {
      set_restcount(from.restcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecoverResourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverResourceInfo::CopyFrom(const RecoverResourceInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverResourceInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_reward()) {
    if (!this->reward().IsInitialized()) return false;
  }
  return true;
}

void RecoverResourceInfo::Swap(RecoverResourceInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(reward_, other->reward_);
    std::swap(restcount_, other->restcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecoverResourceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecoverResourceInfo_descriptor_;
  metadata.reflection = RecoverResourceInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecoverResourceInfoList::kIsHaveRecoverFieldNumber;
const int RecoverResourceInfoList::kInfolistFieldNumber;
const int RecoverResourceInfoList::kGoldenFieldNumber;
#endif  // !_MSC_VER

RecoverResourceInfoList::RecoverResourceInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RecoverResourceInfoList::InitAsDefaultInstance() {
}

RecoverResourceInfoList::RecoverResourceInfoList(const RecoverResourceInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RecoverResourceInfoList::SharedCtor() {
  _cached_size_ = 0;
  ishaverecover_ = 0;
  golden_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecoverResourceInfoList::~RecoverResourceInfoList() {
  SharedDtor();
}

void RecoverResourceInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecoverResourceInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverResourceInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecoverResourceInfoList_descriptor_;
}

const RecoverResourceInfoList& RecoverResourceInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

RecoverResourceInfoList* RecoverResourceInfoList::default_instance_ = NULL;

RecoverResourceInfoList* RecoverResourceInfoList::New() const {
  return new RecoverResourceInfoList;
}

void RecoverResourceInfoList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ishaverecover_ = 0;
    golden_ = 0;
  }
  infolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecoverResourceInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 isHaveRecover = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ishaverecover_)));
          set_has_ishaverecover();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_infolist;
        break;
      }

      // repeated .Daily.RecoverResourceInfo infolist = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_infolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infolist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_infolist;
        if (input->ExpectTag(24)) goto parse_golden;
        break;
      }

      // optional int32 golden = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_golden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &golden_)));
          set_has_golden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RecoverResourceInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 isHaveRecover = 1;
  if (has_ishaverecover()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ishaverecover(), output);
  }

  // repeated .Daily.RecoverResourceInfo infolist = 2;
  for (int i = 0; i < this->infolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infolist(i), output);
  }

  // optional int32 golden = 3;
  if (has_golden()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->golden(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RecoverResourceInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 isHaveRecover = 1;
  if (has_ishaverecover()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ishaverecover(), target);
  }

  // repeated .Daily.RecoverResourceInfo infolist = 2;
  for (int i = 0; i < this->infolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->infolist(i), target);
  }

  // optional int32 golden = 3;
  if (has_golden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->golden(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RecoverResourceInfoList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 isHaveRecover = 1;
    if (has_ishaverecover()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ishaverecover());
    }

    // optional int32 golden = 3;
    if (has_golden()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->golden());
    }

  }
  // repeated .Daily.RecoverResourceInfo infolist = 2;
  total_size += 1 * this->infolist_size();
  for (int i = 0; i < this->infolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infolist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverResourceInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecoverResourceInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecoverResourceInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecoverResourceInfoList::MergeFrom(const RecoverResourceInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  infolist_.MergeFrom(from.infolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ishaverecover()) {
      set_ishaverecover(from.ishaverecover());
    }
    if (from.has_golden()) {
      set_golden(from.golden());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecoverResourceInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverResourceInfoList::CopyFrom(const RecoverResourceInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverResourceInfoList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < infolist_size(); i++) {
    if (!this->infolist(i).IsInitialized()) return false;
  }
  return true;
}

void RecoverResourceInfoList::Swap(RecoverResourceInfoList* other) {
  if (other != this) {
    std::swap(ishaverecover_, other->ishaverecover_);
    infolist_.Swap(&other->infolist_);
    std::swap(golden_, other->golden_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecoverResourceInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecoverResourceInfoList_descriptor_;
  metadata.reflection = RecoverResourceInfoList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GMReqRecoverResource::kOpFieldNumber;
const int C2GMReqRecoverResource::kIdFieldNumber;
#endif  // !_MSC_VER

C2GMReqRecoverResource::C2GMReqRecoverResource()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GMReqRecoverResource::InitAsDefaultInstance() {
}

C2GMReqRecoverResource::C2GMReqRecoverResource(const C2GMReqRecoverResource& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GMReqRecoverResource::SharedCtor() {
  _cached_size_ = 0;
  op_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GMReqRecoverResource::~C2GMReqRecoverResource() {
  SharedDtor();
}

void C2GMReqRecoverResource::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GMReqRecoverResource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GMReqRecoverResource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GMReqRecoverResource_descriptor_;
}

const C2GMReqRecoverResource& C2GMReqRecoverResource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

C2GMReqRecoverResource* C2GMReqRecoverResource::default_instance_ = NULL;

C2GMReqRecoverResource* C2GMReqRecoverResource::New() const {
  return new C2GMReqRecoverResource;
}

void C2GMReqRecoverResource::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    op_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GMReqRecoverResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 op = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_)));
          set_has_op();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GMReqRecoverResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 op = 1;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->op(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GMReqRecoverResource::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 op = 1;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->op(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GMReqRecoverResource::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 op = 1;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->op());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GMReqRecoverResource::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GMReqRecoverResource* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GMReqRecoverResource*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GMReqRecoverResource::MergeFrom(const C2GMReqRecoverResource& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GMReqRecoverResource::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GMReqRecoverResource::CopyFrom(const C2GMReqRecoverResource& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GMReqRecoverResource::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GMReqRecoverResource::Swap(C2GMReqRecoverResource* other) {
  if (other != this) {
    std::swap(op_, other->op_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GMReqRecoverResource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GMReqRecoverResource_descriptor_;
  metadata.reflection = C2GMReqRecoverResource_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

C2GMReqDailyInfo::C2GMReqDailyInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GMReqDailyInfo::InitAsDefaultInstance() {
}

C2GMReqDailyInfo::C2GMReqDailyInfo(const C2GMReqDailyInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GMReqDailyInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GMReqDailyInfo::~C2GMReqDailyInfo() {
  SharedDtor();
}

void C2GMReqDailyInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GMReqDailyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GMReqDailyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GMReqDailyInfo_descriptor_;
}

const C2GMReqDailyInfo& C2GMReqDailyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

C2GMReqDailyInfo* C2GMReqDailyInfo::default_instance_ = NULL;

C2GMReqDailyInfo* C2GMReqDailyInfo::New() const {
  return new C2GMReqDailyInfo;
}

void C2GMReqDailyInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GMReqDailyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void C2GMReqDailyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GMReqDailyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GMReqDailyInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GMReqDailyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GMReqDailyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GMReqDailyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GMReqDailyInfo::MergeFrom(const C2GMReqDailyInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GMReqDailyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GMReqDailyInfo::CopyFrom(const C2GMReqDailyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GMReqDailyInfo::IsInitialized() const {

  return true;
}

void C2GMReqDailyInfo::Swap(C2GMReqDailyInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GMReqDailyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GMReqDailyInfo_descriptor_;
  metadata.reflection = C2GMReqDailyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyToDoInfo::kIdFieldNumber;
const int DailyToDoInfo::kCountFieldNumber;
#endif  // !_MSC_VER

DailyToDoInfo::DailyToDoInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyToDoInfo::InitAsDefaultInstance() {
}

DailyToDoInfo::DailyToDoInfo(const DailyToDoInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyToDoInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyToDoInfo::~DailyToDoInfo() {
  SharedDtor();
}

void DailyToDoInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyToDoInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyToDoInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyToDoInfo_descriptor_;
}

const DailyToDoInfo& DailyToDoInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

DailyToDoInfo* DailyToDoInfo::default_instance_ = NULL;

DailyToDoInfo* DailyToDoInfo::New() const {
  return new DailyToDoInfo;
}

void DailyToDoInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyToDoInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyToDoInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyToDoInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyToDoInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyToDoInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyToDoInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyToDoInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyToDoInfo::MergeFrom(const DailyToDoInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyToDoInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyToDoInfo::CopyFrom(const DailyToDoInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyToDoInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DailyToDoInfo::Swap(DailyToDoInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyToDoInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyToDoInfo_descriptor_;
  metadata.reflection = DailyToDoInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyToDoInfoList::kInfolistFieldNumber;
#endif  // !_MSC_VER

DailyToDoInfoList::DailyToDoInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyToDoInfoList::InitAsDefaultInstance() {
}

DailyToDoInfoList::DailyToDoInfoList(const DailyToDoInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyToDoInfoList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyToDoInfoList::~DailyToDoInfoList() {
  SharedDtor();
}

void DailyToDoInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyToDoInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyToDoInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyToDoInfoList_descriptor_;
}

const DailyToDoInfoList& DailyToDoInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Daily_2fDaily_2eproto();
  return *default_instance_;
}

DailyToDoInfoList* DailyToDoInfoList::default_instance_ = NULL;

DailyToDoInfoList* DailyToDoInfoList::New() const {
  return new DailyToDoInfoList;
}

void DailyToDoInfoList::Clear() {
  infolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyToDoInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Daily.DailyToDoInfo infolist = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_infolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infolist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_infolist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyToDoInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Daily.DailyToDoInfo infolist = 1;
  for (int i = 0; i < this->infolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infolist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyToDoInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Daily.DailyToDoInfo infolist = 1;
  for (int i = 0; i < this->infolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->infolist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyToDoInfoList::ByteSize() const {
  int total_size = 0;

  // repeated .Daily.DailyToDoInfo infolist = 1;
  total_size += 1 * this->infolist_size();
  for (int i = 0; i < this->infolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infolist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyToDoInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyToDoInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyToDoInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyToDoInfoList::MergeFrom(const DailyToDoInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  infolist_.MergeFrom(from.infolist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyToDoInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyToDoInfoList::CopyFrom(const DailyToDoInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyToDoInfoList::IsInitialized() const {

  for (int i = 0; i < infolist_size(); i++) {
    if (!this->infolist(i).IsInitialized()) return false;
  }
  return true;
}

void DailyToDoInfoList::Swap(DailyToDoInfoList* other) {
  if (other != this) {
    infolist_.Swap(&other->infolist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyToDoInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyToDoInfoList_descriptor_;
  metadata.reflection = DailyToDoInfoList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Daily

// @@protoc_insertion_point(global_scope)
