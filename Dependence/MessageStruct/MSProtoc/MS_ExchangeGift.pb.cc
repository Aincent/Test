// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_ExchangeGift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSProtoc/MS_ExchangeGift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MS_ExchangeGift {

namespace {

const ::google::protobuf::Descriptor* Admin_ExchangeGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_ExchangeGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_GiftCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_GiftCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_ExchangeGiftRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_ExchangeGiftRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_ExchangeGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_ExchangeGiftInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto() {
  protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSProtoc/MS_ExchangeGift.proto");
  GOOGLE_CHECK(file != NULL);
  Admin_ExchangeGift_descriptor_ = file->message_type(0);
  static const int Admin_ExchangeGift_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGift, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGift, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGift, mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGift, code_),
  };
  Admin_ExchangeGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_ExchangeGift_descriptor_,
      Admin_ExchangeGift::default_instance_,
      Admin_ExchangeGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_ExchangeGift));
  Admin_GiftCode_descriptor_ = file->message_type(1);
  static const int Admin_GiftCode_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GiftCode, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GiftCode, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GiftCode, name_),
  };
  Admin_GiftCode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_GiftCode_descriptor_,
      Admin_GiftCode::default_instance_,
      Admin_GiftCode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GiftCode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GiftCode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_GiftCode));
  Admin_ExchangeGiftRet_descriptor_ = file->message_type(2);
  static const int Admin_ExchangeGiftRet_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftRet, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftRet, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftRet, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftRet, serverid_),
  };
  Admin_ExchangeGiftRet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_ExchangeGiftRet_descriptor_,
      Admin_ExchangeGiftRet::default_instance_,
      Admin_ExchangeGiftRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftRet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftRet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_ExchangeGiftRet));
  Admin_ExchangeGiftInfo_descriptor_ = file->message_type(3);
  static const int Admin_ExchangeGiftInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftInfo, mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftInfo, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftInfo, charid_),
  };
  Admin_ExchangeGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_ExchangeGiftInfo_descriptor_,
      Admin_ExchangeGiftInfo::default_instance_,
      Admin_ExchangeGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ExchangeGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_ExchangeGiftInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_ExchangeGift_descriptor_, &Admin_ExchangeGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_GiftCode_descriptor_, &Admin_GiftCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_ExchangeGiftRet_descriptor_, &Admin_ExchangeGiftRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_ExchangeGiftInfo_descriptor_, &Admin_ExchangeGiftInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto() {
  delete Admin_ExchangeGift::default_instance_;
  delete Admin_ExchangeGift_reflection_;
  delete Admin_GiftCode::default_instance_;
  delete Admin_GiftCode_reflection_;
  delete Admin_ExchangeGiftRet::default_instance_;
  delete Admin_ExchangeGiftRet_reflection_;
  delete Admin_ExchangeGiftInfo::default_instance_;
  delete Admin_ExchangeGiftInfo_reflection_;
}

void protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MS_MailInfo::protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036MSProtoc/MS_ExchangeGift.proto\022\017MS_Exc"
    "hangeGift\032\026MSProtoc/MS_Mail.proto\"k\n\022Adm"
    "in_ExchangeGift\022\013\n\003ret\030\001 \002(\005\022\016\n\006charID\030\002"
    " \002(\003\022*\n\004mail\030\003 \001(\0132\034.MS_MailInfo.MSSimDB"
    "SendMail\022\014\n\004code\030\004 \001(\t\"<\n\016Admin_GiftCode"
    "\022\014\n\004code\030\001 \002(\t\022\016\n\006charid\030\002 \001(\003\022\014\n\004name\030\003"
    " \001(\t\"T\n\025Admin_ExchangeGiftRet\022\013\n\003ret\030\001 \002"
    "(\005\022\016\n\006charID\030\002 \001(\003\022\014\n\004code\030\003 \001(\t\022\020\n\010serv"
    "erID\030\004 \001(\005\"a\n\026Admin_ExchangeGiftInfo\022*\n\004"
    "mail\030\001 \001(\0132\034.MS_MailInfo.MSSimDBSendMail"
    "\022\013\n\003ret\030\002 \001(\005\022\016\n\006charID\030\003 \001(\003", 429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSProtoc/MS_ExchangeGift.proto", &protobuf_RegisterTypes);
  Admin_ExchangeGift::default_instance_ = new Admin_ExchangeGift();
  Admin_GiftCode::default_instance_ = new Admin_GiftCode();
  Admin_ExchangeGiftRet::default_instance_ = new Admin_ExchangeGiftRet();
  Admin_ExchangeGiftInfo::default_instance_ = new Admin_ExchangeGiftInfo();
  Admin_ExchangeGift::default_instance_->InitAsDefaultInstance();
  Admin_GiftCode::default_instance_->InitAsDefaultInstance();
  Admin_ExchangeGiftRet::default_instance_->InitAsDefaultInstance();
  Admin_ExchangeGiftInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSProtoc_2fMS_5fExchangeGift_2eproto {
  StaticDescriptorInitializer_MSProtoc_2fMS_5fExchangeGift_2eproto() {
    protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  }
} static_descriptor_initializer_MSProtoc_2fMS_5fExchangeGift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Admin_ExchangeGift::kRetFieldNumber;
const int Admin_ExchangeGift::kCharIDFieldNumber;
const int Admin_ExchangeGift::kMailFieldNumber;
const int Admin_ExchangeGift::kCodeFieldNumber;
#endif  // !_MSC_VER

Admin_ExchangeGift::Admin_ExchangeGift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_ExchangeGift::InitAsDefaultInstance() {
  mail_ = const_cast< ::MS_MailInfo::MSSimDBSendMail*>(&::MS_MailInfo::MSSimDBSendMail::default_instance());
}

Admin_ExchangeGift::Admin_ExchangeGift(const Admin_ExchangeGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_ExchangeGift::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  mail_ = NULL;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_ExchangeGift::~Admin_ExchangeGift() {
  SharedDtor();
}

void Admin_ExchangeGift::SharedDtor() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (this != default_instance_) {
    delete mail_;
  }
}

void Admin_ExchangeGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_ExchangeGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_ExchangeGift_descriptor_;
}

const Admin_ExchangeGift& Admin_ExchangeGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  return *default_instance_;
}

Admin_ExchangeGift* Admin_ExchangeGift::default_instance_ = NULL;

Admin_ExchangeGift* Admin_ExchangeGift::New() const {
  return new Admin_ExchangeGift;
}

void Admin_ExchangeGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    charid_ = GOOGLE_LONGLONG(0);
    if (has_mail()) {
      if (mail_ != NULL) mail_->::MS_MailInfo::MSSimDBSendMail::Clear();
    }
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_ExchangeGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_charID;
        break;
      }

      // required int64 charID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_mail;
        break;
      }

      // optional .MS_MailInfo.MSSimDBSendMail mail = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_code;
        break;
      }

      // optional string code = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_ExchangeGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // required int64 charID = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->charid(), output);
  }

  // optional .MS_MailInfo.MSSimDBSendMail mail = 3;
  if (has_mail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail(), output);
  }

  // optional string code = 4;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_ExchangeGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // required int64 charID = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->charid(), target);
  }

  // optional .MS_MailInfo.MSSimDBSendMail mail = 3;
  if (has_mail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail(), target);
  }

  // optional string code = 4;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_ExchangeGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // required int64 charID = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional .MS_MailInfo.MSSimDBSendMail mail = 3;
    if (has_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mail());
    }

    // optional string code = 4;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_ExchangeGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_ExchangeGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_ExchangeGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_ExchangeGift::MergeFrom(const Admin_ExchangeGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_mail()) {
      mutable_mail()->::MS_MailInfo::MSSimDBSendMail::MergeFrom(from.mail());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_ExchangeGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_ExchangeGift::CopyFrom(const Admin_ExchangeGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_ExchangeGift::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_mail()) {
    if (!this->mail().IsInitialized()) return false;
  }
  return true;
}

void Admin_ExchangeGift::Swap(Admin_ExchangeGift* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(charid_, other->charid_);
    std::swap(mail_, other->mail_);
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_ExchangeGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_ExchangeGift_descriptor_;
  metadata.reflection = Admin_ExchangeGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_GiftCode::kCodeFieldNumber;
const int Admin_GiftCode::kCharidFieldNumber;
const int Admin_GiftCode::kNameFieldNumber;
#endif  // !_MSC_VER

Admin_GiftCode::Admin_GiftCode()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_GiftCode::InitAsDefaultInstance() {
}

Admin_GiftCode::Admin_GiftCode(const Admin_GiftCode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_GiftCode::SharedCtor() {
  _cached_size_ = 0;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  charid_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_GiftCode::~Admin_GiftCode() {
  SharedDtor();
}

void Admin_GiftCode::SharedDtor() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Admin_GiftCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_GiftCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_GiftCode_descriptor_;
}

const Admin_GiftCode& Admin_GiftCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  return *default_instance_;
}

Admin_GiftCode* Admin_GiftCode::default_instance_ = NULL;

Admin_GiftCode* Admin_GiftCode::New() const {
  return new Admin_GiftCode;
}

void Admin_GiftCode::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
    charid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_GiftCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_charid;
        break;
      }

      // optional int64 charid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_GiftCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->code(), output);
  }

  // optional int64 charid = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->charid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_GiftCode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // optional int64 charid = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->charid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_GiftCode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional int64 charid = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_GiftCode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_GiftCode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_GiftCode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_GiftCode::MergeFrom(const Admin_GiftCode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_GiftCode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_GiftCode::CopyFrom(const Admin_GiftCode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_GiftCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Admin_GiftCode::Swap(Admin_GiftCode* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(charid_, other->charid_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_GiftCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_GiftCode_descriptor_;
  metadata.reflection = Admin_GiftCode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_ExchangeGiftRet::kRetFieldNumber;
const int Admin_ExchangeGiftRet::kCharIDFieldNumber;
const int Admin_ExchangeGiftRet::kCodeFieldNumber;
const int Admin_ExchangeGiftRet::kServerIDFieldNumber;
#endif  // !_MSC_VER

Admin_ExchangeGiftRet::Admin_ExchangeGiftRet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_ExchangeGiftRet::InitAsDefaultInstance() {
}

Admin_ExchangeGiftRet::Admin_ExchangeGiftRet(const Admin_ExchangeGiftRet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_ExchangeGiftRet::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  serverid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_ExchangeGiftRet::~Admin_ExchangeGiftRet() {
  SharedDtor();
}

void Admin_ExchangeGiftRet::SharedDtor() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (this != default_instance_) {
  }
}

void Admin_ExchangeGiftRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_ExchangeGiftRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_ExchangeGiftRet_descriptor_;
}

const Admin_ExchangeGiftRet& Admin_ExchangeGiftRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  return *default_instance_;
}

Admin_ExchangeGiftRet* Admin_ExchangeGiftRet::default_instance_ = NULL;

Admin_ExchangeGiftRet* Admin_ExchangeGiftRet::New() const {
  return new Admin_ExchangeGiftRet;
}

void Admin_ExchangeGiftRet::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    charid_ = GOOGLE_LONGLONG(0);
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
    serverid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_ExchangeGiftRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_charID;
        break;
      }

      // optional int64 charID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_code;
        break;
      }

      // optional string code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_serverID;
        break;
      }

      // optional int32 serverID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serverID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
          set_has_serverid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_ExchangeGiftRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int64 charID = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->charid(), output);
  }

  // optional string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->code(), output);
  }

  // optional int32 serverID = 4;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_ExchangeGiftRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int64 charID = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->charid(), target);
  }

  // optional string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // optional int32 serverID = 4;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_ExchangeGiftRet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int64 charID = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional string code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional int32 serverID = 4;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serverid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_ExchangeGiftRet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_ExchangeGiftRet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_ExchangeGiftRet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_ExchangeGiftRet::MergeFrom(const Admin_ExchangeGiftRet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_ExchangeGiftRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_ExchangeGiftRet::CopyFrom(const Admin_ExchangeGiftRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_ExchangeGiftRet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Admin_ExchangeGiftRet::Swap(Admin_ExchangeGiftRet* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(charid_, other->charid_);
    std::swap(code_, other->code_);
    std::swap(serverid_, other->serverid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_ExchangeGiftRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_ExchangeGiftRet_descriptor_;
  metadata.reflection = Admin_ExchangeGiftRet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_ExchangeGiftInfo::kMailFieldNumber;
const int Admin_ExchangeGiftInfo::kRetFieldNumber;
const int Admin_ExchangeGiftInfo::kCharIDFieldNumber;
#endif  // !_MSC_VER

Admin_ExchangeGiftInfo::Admin_ExchangeGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_ExchangeGiftInfo::InitAsDefaultInstance() {
  mail_ = const_cast< ::MS_MailInfo::MSSimDBSendMail*>(&::MS_MailInfo::MSSimDBSendMail::default_instance());
}

Admin_ExchangeGiftInfo::Admin_ExchangeGiftInfo(const Admin_ExchangeGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_ExchangeGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  mail_ = NULL;
  ret_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_ExchangeGiftInfo::~Admin_ExchangeGiftInfo() {
  SharedDtor();
}

void Admin_ExchangeGiftInfo::SharedDtor() {
  if (this != default_instance_) {
    delete mail_;
  }
}

void Admin_ExchangeGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_ExchangeGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_ExchangeGiftInfo_descriptor_;
}

const Admin_ExchangeGiftInfo& Admin_ExchangeGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  return *default_instance_;
}

Admin_ExchangeGiftInfo* Admin_ExchangeGiftInfo::default_instance_ = NULL;

Admin_ExchangeGiftInfo* Admin_ExchangeGiftInfo::New() const {
  return new Admin_ExchangeGiftInfo;
}

void Admin_ExchangeGiftInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_mail()) {
      if (mail_ != NULL) mail_->::MS_MailInfo::MSSimDBSendMail::Clear();
    }
    ret_ = 0;
    charid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_ExchangeGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MS_MailInfo.MSSimDBSendMail mail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional int32 ret = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_charID;
        break;
      }

      // optional int64 charID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_ExchangeGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .MS_MailInfo.MSSimDBSendMail mail = 1;
  if (has_mail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mail(), output);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  // optional int64 charID = 3;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->charid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_ExchangeGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .MS_MailInfo.MSSimDBSendMail mail = 1;
  if (has_mail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mail(), target);
  }

  // optional int32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  // optional int64 charID = 3;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->charid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_ExchangeGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MS_MailInfo.MSSimDBSendMail mail = 1;
    if (has_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mail());
    }

    // optional int32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int64 charID = 3;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_ExchangeGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_ExchangeGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_ExchangeGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_ExchangeGiftInfo::MergeFrom(const Admin_ExchangeGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail()) {
      mutable_mail()->::MS_MailInfo::MSSimDBSendMail::MergeFrom(from.mail());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_ExchangeGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_ExchangeGiftInfo::CopyFrom(const Admin_ExchangeGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_ExchangeGiftInfo::IsInitialized() const {

  if (has_mail()) {
    if (!this->mail().IsInitialized()) return false;
  }
  return true;
}

void Admin_ExchangeGiftInfo::Swap(Admin_ExchangeGiftInfo* other) {
  if (other != this) {
    std::swap(mail_, other->mail_);
    std::swap(ret_, other->ret_);
    std::swap(charid_, other->charid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_ExchangeGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_ExchangeGiftInfo_descriptor_;
  metadata.reflection = Admin_ExchangeGiftInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MS_ExchangeGift

// @@protoc_insertion_point(global_scope)
