// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AchievementProto.proto

#ifndef PROTOBUF_AchievementProto_2eproto__INCLUDED
#define PROTOBUF_AchievementProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ServerReturn3Int.pb.h"
#include "ServerReturnInt.pb.h"
// @@protoc_insertion_point(includes)

namespace AchievementProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AchievementProto_2eproto();
void protobuf_AssignDesc_AchievementProto_2eproto();
void protobuf_ShutdownFile_AchievementProto_2eproto();

class ReqAchievementAll;
class RetAchievementAll;
class ReqLookForTitle;
class RetLookForTitle;
class ReqLookForPrestigeType;
class RetLookForPrestigeType;
class ReqTitleActive;
class RetTitleActive;
class SimPrestigeComplete;
class RetAchShopInfo;
class RetAchShopItem;

// ===================================================================

class ReqAchievementAll : public ::google::protobuf::Message {
 public:
  ReqAchievementAll();
  virtual ~ReqAchievementAll();

  ReqAchievementAll(const ReqAchievementAll& from);

  inline ReqAchievementAll& operator=(const ReqAchievementAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAchievementAll& default_instance();

  void Swap(ReqAchievementAll* other);

  // implements Message ----------------------------------------------

  ReqAchievementAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAchievementAll& from);
  void MergeFrom(const ReqAchievementAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AchievementProto.ReqAchievementAll)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static ReqAchievementAll* default_instance_;
};
// -------------------------------------------------------------------

class RetAchievementAll : public ::google::protobuf::Message {
 public:
  RetAchievementAll();
  virtual ~RetAchievementAll();

  RetAchievementAll(const RetAchievementAll& from);

  inline RetAchievementAll& operator=(const RetAchievementAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAchievementAll& default_instance();

  void Swap(RetAchievementAll* other);

  // implements Message ----------------------------------------------

  RetAchievementAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAchievementAll& from);
  void MergeFrom(const RetAchievementAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 prestige = 1;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 1;
  inline ::google::protobuf::int32 prestige() const;
  inline void set_prestige(::google::protobuf::int32 value);

  // repeated .ServerReturn.ServerThreeInt prestigeInfo = 2;
  inline int prestigeinfo_size() const;
  inline void clear_prestigeinfo();
  static const int kPrestigeInfoFieldNumber = 2;
  inline const ::ServerReturn::ServerThreeInt& prestigeinfo(int index) const;
  inline ::ServerReturn::ServerThreeInt* mutable_prestigeinfo(int index);
  inline ::ServerReturn::ServerThreeInt* add_prestigeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >&
      prestigeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >*
      mutable_prestigeinfo();

  // repeated .ServerReturn.ServerRetInt prestigeProgress = 3;
  inline int prestigeprogress_size() const;
  inline void clear_prestigeprogress();
  static const int kPrestigeProgressFieldNumber = 3;
  inline const ::ServerReturn::ServerRetInt& prestigeprogress(int index) const;
  inline ::ServerReturn::ServerRetInt* mutable_prestigeprogress(int index);
  inline ::ServerReturn::ServerRetInt* add_prestigeprogress();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerRetInt >&
      prestigeprogress() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerRetInt >*
      mutable_prestigeprogress();

  // @@protoc_insertion_point(class_scope:AchievementProto.RetAchievementAll)
 private:
  inline void set_has_prestige();
  inline void clear_has_prestige();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt > prestigeinfo_;
  ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerRetInt > prestigeprogress_;
  ::google::protobuf::int32 prestige_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static RetAchievementAll* default_instance_;
};
// -------------------------------------------------------------------

class ReqLookForTitle : public ::google::protobuf::Message {
 public:
  ReqLookForTitle();
  virtual ~ReqLookForTitle();

  ReqLookForTitle(const ReqLookForTitle& from);

  inline ReqLookForTitle& operator=(const ReqLookForTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLookForTitle& default_instance();

  void Swap(ReqLookForTitle* other);

  // implements Message ----------------------------------------------

  ReqLookForTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLookForTitle& from);
  void MergeFrom(const ReqLookForTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AchievementProto.ReqLookForTitle)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static ReqLookForTitle* default_instance_;
};
// -------------------------------------------------------------------

class RetLookForTitle : public ::google::protobuf::Message {
 public:
  RetLookForTitle();
  virtual ~RetLookForTitle();

  RetLookForTitle(const RetLookForTitle& from);

  inline RetLookForTitle& operator=(const RetLookForTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetLookForTitle& default_instance();

  void Swap(RetLookForTitle* other);

  // implements Message ----------------------------------------------

  RetLookForTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetLookForTitle& from);
  void MergeFrom(const RetLookForTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ServerReturn.ServerThreeInt titleInfo = 1;
  inline int titleinfo_size() const;
  inline void clear_titleinfo();
  static const int kTitleInfoFieldNumber = 1;
  inline const ::ServerReturn::ServerThreeInt& titleinfo(int index) const;
  inline ::ServerReturn::ServerThreeInt* mutable_titleinfo(int index);
  inline ::ServerReturn::ServerThreeInt* add_titleinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >&
      titleinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >*
      mutable_titleinfo();

  // @@protoc_insertion_point(class_scope:AchievementProto.RetLookForTitle)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt > titleinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static RetLookForTitle* default_instance_;
};
// -------------------------------------------------------------------

class ReqLookForPrestigeType : public ::google::protobuf::Message {
 public:
  ReqLookForPrestigeType();
  virtual ~ReqLookForPrestigeType();

  ReqLookForPrestigeType(const ReqLookForPrestigeType& from);

  inline ReqLookForPrestigeType& operator=(const ReqLookForPrestigeType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLookForPrestigeType& default_instance();

  void Swap(ReqLookForPrestigeType* other);

  // implements Message ----------------------------------------------

  ReqLookForPrestigeType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLookForPrestigeType& from);
  void MergeFrom(const ReqLookForPrestigeType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementProto.ReqLookForPrestigeType)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static ReqLookForPrestigeType* default_instance_;
};
// -------------------------------------------------------------------

class RetLookForPrestigeType : public ::google::protobuf::Message {
 public:
  RetLookForPrestigeType();
  virtual ~RetLookForPrestigeType();

  RetLookForPrestigeType(const RetLookForPrestigeType& from);

  inline RetLookForPrestigeType& operator=(const RetLookForPrestigeType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetLookForPrestigeType& default_instance();

  void Swap(RetLookForPrestigeType* other);

  // implements Message ----------------------------------------------

  RetLookForPrestigeType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetLookForPrestigeType& from);
  void MergeFrom(const RetLookForPrestigeType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ServerReturn.ServerThreeInt prestigeInfo = 1;
  inline int prestigeinfo_size() const;
  inline void clear_prestigeinfo();
  static const int kPrestigeInfoFieldNumber = 1;
  inline const ::ServerReturn::ServerThreeInt& prestigeinfo(int index) const;
  inline ::ServerReturn::ServerThreeInt* mutable_prestigeinfo(int index);
  inline ::ServerReturn::ServerThreeInt* add_prestigeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >&
      prestigeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >*
      mutable_prestigeinfo();

  // @@protoc_insertion_point(class_scope:AchievementProto.RetLookForPrestigeType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt > prestigeinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static RetLookForPrestigeType* default_instance_;
};
// -------------------------------------------------------------------

class ReqTitleActive : public ::google::protobuf::Message {
 public:
  ReqTitleActive();
  virtual ~ReqTitleActive();

  ReqTitleActive(const ReqTitleActive& from);

  inline ReqTitleActive& operator=(const ReqTitleActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTitleActive& default_instance();

  void Swap(ReqTitleActive* other);

  // implements Message ----------------------------------------------

  ReqTitleActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTitleActive& from);
  void MergeFrom(const ReqTitleActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 titleID = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 1;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementProto.ReqTitleActive)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 titleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static ReqTitleActive* default_instance_;
};
// -------------------------------------------------------------------

class RetTitleActive : public ::google::protobuf::Message {
 public:
  RetTitleActive();
  virtual ~RetTitleActive();

  RetTitleActive(const RetTitleActive& from);

  inline RetTitleActive& operator=(const RetTitleActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetTitleActive& default_instance();

  void Swap(RetTitleActive* other);

  // implements Message ----------------------------------------------

  RetTitleActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetTitleActive& from);
  void MergeFrom(const RetTitleActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwError = 1;
  inline bool has_dwerror() const;
  inline void clear_dwerror();
  static const int kDwErrorFieldNumber = 1;
  inline ::google::protobuf::int32 dwerror() const;
  inline void set_dwerror(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementProto.RetTitleActive)
 private:
  inline void set_has_dwerror();
  inline void clear_has_dwerror();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwerror_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static RetTitleActive* default_instance_;
};
// -------------------------------------------------------------------

class SimPrestigeComplete : public ::google::protobuf::Message {
 public:
  SimPrestigeComplete();
  virtual ~SimPrestigeComplete();

  SimPrestigeComplete(const SimPrestigeComplete& from);

  inline SimPrestigeComplete& operator=(const SimPrestigeComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimPrestigeComplete& default_instance();

  void Swap(SimPrestigeComplete* other);

  // implements Message ----------------------------------------------

  SimPrestigeComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimPrestigeComplete& from);
  void MergeFrom(const SimPrestigeComplete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 completeID = 1;
  inline bool has_completeid() const;
  inline void clear_completeid();
  static const int kCompleteIDFieldNumber = 1;
  inline ::google::protobuf::int32 completeid() const;
  inline void set_completeid(::google::protobuf::int32 value);

  // required int32 completeType = 2;
  inline bool has_completetype() const;
  inline void clear_completetype();
  static const int kCompleteTypeFieldNumber = 2;
  inline ::google::protobuf::int32 completetype() const;
  inline void set_completetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementProto.SimPrestigeComplete)
 private:
  inline void set_has_completeid();
  inline void clear_has_completeid();
  inline void set_has_completetype();
  inline void clear_has_completetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 completeid_;
  ::google::protobuf::int32 completetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static SimPrestigeComplete* default_instance_;
};
// -------------------------------------------------------------------

class RetAchShopInfo : public ::google::protobuf::Message {
 public:
  RetAchShopInfo();
  virtual ~RetAchShopInfo();

  RetAchShopInfo(const RetAchShopInfo& from);

  inline RetAchShopInfo& operator=(const RetAchShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAchShopInfo& default_instance();

  void Swap(RetAchShopInfo* other);

  // implements Message ----------------------------------------------

  RetAchShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAchShopInfo& from);
  void MergeFrom(const RetAchShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // repeated .AchievementProto.RetAchShopItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::AchievementProto::RetAchShopItem& item(int index) const;
  inline ::AchievementProto::RetAchShopItem* mutable_item(int index);
  inline ::AchievementProto::RetAchShopItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::AchievementProto::RetAchShopItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::AchievementProto::RetAchShopItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:AchievementProto.RetAchShopInfo)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;
  ::google::protobuf::RepeatedPtrField< ::AchievementProto::RetAchShopItem > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static RetAchShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class RetAchShopItem : public ::google::protobuf::Message {
 public:
  RetAchShopItem();
  virtual ~RetAchShopItem();

  RetAchShopItem(const RetAchShopItem& from);

  inline RetAchShopItem& operator=(const RetAchShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAchShopItem& default_instance();

  void Swap(RetAchShopItem* other);

  // implements Message ----------------------------------------------

  RetAchShopItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAchShopItem& from);
  void MergeFrom(const RetAchShopItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated int32 goodsid = 3;
  inline int goodsid_size() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 3;
  inline ::google::protobuf::int32 goodsid(int index) const;
  inline void set_goodsid(int index, ::google::protobuf::int32 value);
  inline void add_goodsid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      goodsid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_goodsid();

  // @@protoc_insertion_point(class_scope:AchievementProto.RetAchShopItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > goodsid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_AchievementProto_2eproto();
  friend void protobuf_AssignDesc_AchievementProto_2eproto();
  friend void protobuf_ShutdownFile_AchievementProto_2eproto();

  void InitAsDefaultInstance();
  static RetAchShopItem* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqAchievementAll

// -------------------------------------------------------------------

// RetAchievementAll

// required int32 prestige = 1;
inline bool RetAchievementAll::has_prestige() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAchievementAll::set_has_prestige() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAchievementAll::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAchievementAll::clear_prestige() {
  prestige_ = 0;
  clear_has_prestige();
}
inline ::google::protobuf::int32 RetAchievementAll::prestige() const {
  return prestige_;
}
inline void RetAchievementAll::set_prestige(::google::protobuf::int32 value) {
  set_has_prestige();
  prestige_ = value;
}

// repeated .ServerReturn.ServerThreeInt prestigeInfo = 2;
inline int RetAchievementAll::prestigeinfo_size() const {
  return prestigeinfo_.size();
}
inline void RetAchievementAll::clear_prestigeinfo() {
  prestigeinfo_.Clear();
}
inline const ::ServerReturn::ServerThreeInt& RetAchievementAll::prestigeinfo(int index) const {
  return prestigeinfo_.Get(index);
}
inline ::ServerReturn::ServerThreeInt* RetAchievementAll::mutable_prestigeinfo(int index) {
  return prestigeinfo_.Mutable(index);
}
inline ::ServerReturn::ServerThreeInt* RetAchievementAll::add_prestigeinfo() {
  return prestigeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >&
RetAchievementAll::prestigeinfo() const {
  return prestigeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >*
RetAchievementAll::mutable_prestigeinfo() {
  return &prestigeinfo_;
}

// repeated .ServerReturn.ServerRetInt prestigeProgress = 3;
inline int RetAchievementAll::prestigeprogress_size() const {
  return prestigeprogress_.size();
}
inline void RetAchievementAll::clear_prestigeprogress() {
  prestigeprogress_.Clear();
}
inline const ::ServerReturn::ServerRetInt& RetAchievementAll::prestigeprogress(int index) const {
  return prestigeprogress_.Get(index);
}
inline ::ServerReturn::ServerRetInt* RetAchievementAll::mutable_prestigeprogress(int index) {
  return prestigeprogress_.Mutable(index);
}
inline ::ServerReturn::ServerRetInt* RetAchievementAll::add_prestigeprogress() {
  return prestigeprogress_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerRetInt >&
RetAchievementAll::prestigeprogress() const {
  return prestigeprogress_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerRetInt >*
RetAchievementAll::mutable_prestigeprogress() {
  return &prestigeprogress_;
}

// -------------------------------------------------------------------

// ReqLookForTitle

// -------------------------------------------------------------------

// RetLookForTitle

// repeated .ServerReturn.ServerThreeInt titleInfo = 1;
inline int RetLookForTitle::titleinfo_size() const {
  return titleinfo_.size();
}
inline void RetLookForTitle::clear_titleinfo() {
  titleinfo_.Clear();
}
inline const ::ServerReturn::ServerThreeInt& RetLookForTitle::titleinfo(int index) const {
  return titleinfo_.Get(index);
}
inline ::ServerReturn::ServerThreeInt* RetLookForTitle::mutable_titleinfo(int index) {
  return titleinfo_.Mutable(index);
}
inline ::ServerReturn::ServerThreeInt* RetLookForTitle::add_titleinfo() {
  return titleinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >&
RetLookForTitle::titleinfo() const {
  return titleinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >*
RetLookForTitle::mutable_titleinfo() {
  return &titleinfo_;
}

// -------------------------------------------------------------------

// ReqLookForPrestigeType

// required int32 type = 1;
inline bool ReqLookForPrestigeType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLookForPrestigeType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLookForPrestigeType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLookForPrestigeType::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqLookForPrestigeType::type() const {
  return type_;
}
inline void ReqLookForPrestigeType::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RetLookForPrestigeType

// repeated .ServerReturn.ServerThreeInt prestigeInfo = 1;
inline int RetLookForPrestigeType::prestigeinfo_size() const {
  return prestigeinfo_.size();
}
inline void RetLookForPrestigeType::clear_prestigeinfo() {
  prestigeinfo_.Clear();
}
inline const ::ServerReturn::ServerThreeInt& RetLookForPrestigeType::prestigeinfo(int index) const {
  return prestigeinfo_.Get(index);
}
inline ::ServerReturn::ServerThreeInt* RetLookForPrestigeType::mutable_prestigeinfo(int index) {
  return prestigeinfo_.Mutable(index);
}
inline ::ServerReturn::ServerThreeInt* RetLookForPrestigeType::add_prestigeinfo() {
  return prestigeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >&
RetLookForPrestigeType::prestigeinfo() const {
  return prestigeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ServerReturn::ServerThreeInt >*
RetLookForPrestigeType::mutable_prestigeinfo() {
  return &prestigeinfo_;
}

// -------------------------------------------------------------------

// ReqTitleActive

// required int32 titleID = 1;
inline bool ReqTitleActive::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTitleActive::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTitleActive::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTitleActive::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 ReqTitleActive::titleid() const {
  return titleid_;
}
inline void ReqTitleActive::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// -------------------------------------------------------------------

// RetTitleActive

// required int32 dwError = 1;
inline bool RetTitleActive::has_dwerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetTitleActive::set_has_dwerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetTitleActive::clear_has_dwerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetTitleActive::clear_dwerror() {
  dwerror_ = 0;
  clear_has_dwerror();
}
inline ::google::protobuf::int32 RetTitleActive::dwerror() const {
  return dwerror_;
}
inline void RetTitleActive::set_dwerror(::google::protobuf::int32 value) {
  set_has_dwerror();
  dwerror_ = value;
}

// -------------------------------------------------------------------

// SimPrestigeComplete

// required int32 completeID = 1;
inline bool SimPrestigeComplete::has_completeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimPrestigeComplete::set_has_completeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimPrestigeComplete::clear_has_completeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimPrestigeComplete::clear_completeid() {
  completeid_ = 0;
  clear_has_completeid();
}
inline ::google::protobuf::int32 SimPrestigeComplete::completeid() const {
  return completeid_;
}
inline void SimPrestigeComplete::set_completeid(::google::protobuf::int32 value) {
  set_has_completeid();
  completeid_ = value;
}

// required int32 completeType = 2;
inline bool SimPrestigeComplete::has_completetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimPrestigeComplete::set_has_completetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimPrestigeComplete::clear_has_completetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimPrestigeComplete::clear_completetype() {
  completetype_ = 0;
  clear_has_completetype();
}
inline ::google::protobuf::int32 SimPrestigeComplete::completetype() const {
  return completetype_;
}
inline void SimPrestigeComplete::set_completetype(::google::protobuf::int32 value) {
  set_has_completetype();
  completetype_ = value;
}

// -------------------------------------------------------------------

// RetAchShopInfo

// required int64 time = 1;
inline bool RetAchShopInfo::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAchShopInfo::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAchShopInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAchShopInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 RetAchShopInfo::time() const {
  return time_;
}
inline void RetAchShopInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// repeated .AchievementProto.RetAchShopItem item = 2;
inline int RetAchShopInfo::item_size() const {
  return item_.size();
}
inline void RetAchShopInfo::clear_item() {
  item_.Clear();
}
inline const ::AchievementProto::RetAchShopItem& RetAchShopInfo::item(int index) const {
  return item_.Get(index);
}
inline ::AchievementProto::RetAchShopItem* RetAchShopInfo::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::AchievementProto::RetAchShopItem* RetAchShopInfo::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AchievementProto::RetAchShopItem >&
RetAchShopInfo::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::AchievementProto::RetAchShopItem >*
RetAchShopInfo::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// RetAchShopItem

// required int32 id = 1;
inline bool RetAchShopItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAchShopItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAchShopItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAchShopItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RetAchShopItem::id() const {
  return id_;
}
inline void RetAchShopItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 count = 2;
inline bool RetAchShopItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetAchShopItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetAchShopItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetAchShopItem::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 RetAchShopItem::count() const {
  return count_;
}
inline void RetAchShopItem::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated int32 goodsid = 3;
inline int RetAchShopItem::goodsid_size() const {
  return goodsid_.size();
}
inline void RetAchShopItem::clear_goodsid() {
  goodsid_.Clear();
}
inline ::google::protobuf::int32 RetAchShopItem::goodsid(int index) const {
  return goodsid_.Get(index);
}
inline void RetAchShopItem::set_goodsid(int index, ::google::protobuf::int32 value) {
  goodsid_.Set(index, value);
}
inline void RetAchShopItem::add_goodsid(::google::protobuf::int32 value) {
  goodsid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RetAchShopItem::goodsid() const {
  return goodsid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RetAchShopItem::mutable_goodsid() {
  return &goodsid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AchievementProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AchievementProto_2eproto__INCLUDED
