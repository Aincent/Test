// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/PlayerVipProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CharLogin/PlayerVipProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PlayerVipProto {

namespace {

const ::google::protobuf::Descriptor* ReqGetVipGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGetVipGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetGetVipGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetGetVipGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqGotGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGotGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetGotGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetGotGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClientRechargeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClientRechargeInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CharLogin_2fPlayerVipProto_2eproto() {
  protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CharLogin/PlayerVipProto.proto");
  GOOGLE_CHECK(file != NULL);
  ReqGetVipGift_descriptor_ = file->message_type(0);
  static const int ReqGetVipGift_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetVipGift, giftid_),
  };
  ReqGetVipGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGetVipGift_descriptor_,
      ReqGetVipGift::default_instance_,
      ReqGetVipGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetVipGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetVipGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGetVipGift));
  RetGetVipGift_descriptor_ = file->message_type(1);
  static const int RetGetVipGift_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGetVipGift, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGetVipGift, giftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGetVipGift, list_),
  };
  RetGetVipGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetGetVipGift_descriptor_,
      RetGetVipGift::default_instance_,
      RetGetVipGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGetVipGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGetVipGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetGetVipGift));
  ReqGotGiftInfo_descriptor_ = file->message_type(2);
  static const int ReqGotGiftInfo_offsets_[1] = {
  };
  ReqGotGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGotGiftInfo_descriptor_,
      ReqGotGiftInfo::default_instance_,
      ReqGotGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGotGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGotGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGotGiftInfo));
  RetGotGiftInfo_descriptor_ = file->message_type(3);
  static const int RetGotGiftInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGotGiftInfo, giftinfo_),
  };
  RetGotGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetGotGiftInfo_descriptor_,
      RetGotGiftInfo::default_instance_,
      RetGotGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGotGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGotGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetGotGiftInfo));
  ToClientRechargeInfo_descriptor_ = file->message_type(4);
  static const int ToClientRechargeInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, maxday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, item_),
  };
  ToClientRechargeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClientRechargeInfo_descriptor_,
      ToClientRechargeInfo::default_instance_,
      ToClientRechargeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientRechargeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClientRechargeInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CharLogin_2fPlayerVipProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGetVipGift_descriptor_, &ReqGetVipGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetGetVipGift_descriptor_, &RetGetVipGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGotGiftInfo_descriptor_, &ReqGotGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetGotGiftInfo_descriptor_, &RetGotGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClientRechargeInfo_descriptor_, &ToClientRechargeInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CharLogin_2fPlayerVipProto_2eproto() {
  delete ReqGetVipGift::default_instance_;
  delete ReqGetVipGift_reflection_;
  delete RetGetVipGift::default_instance_;
  delete RetGetVipGift_reflection_;
  delete ReqGotGiftInfo::default_instance_;
  delete ReqGotGiftInfo_reflection_;
  delete RetGotGiftInfo::default_instance_;
  delete RetGotGiftInfo_reflection_;
  delete ToClientRechargeInfo::default_instance_;
  delete ToClientRechargeInfo_reflection_;
}

void protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036CharLogin/PlayerVipProto.proto\022\016Player"
    "VipProto\"\037\n\rReqGetVipGift\022\016\n\006giftID\030\001 \002("
    "\005\">\n\rRetGetVipGift\022\r\n\005error\030\001 \002(\005\022\020\n\010gif"
    "tInfo\030\002 \001(\005\022\014\n\004list\030\003 \003(\005\"\020\n\016ReqGotGiftI"
    "nfo\"\"\n\016RetGotGiftInfo\022\020\n\010giftInfo\030\001 \002(\005\""
    "e\n\024ToClientRechargeInfo\022\021\n\tstartTime\030\001 \001"
    "(\003\022\017\n\007endTime\030\002 \001(\003\022\013\n\003day\030\003 \001(\005\022\016\n\006maxD"
    "ay\030\004 \001(\005\022\014\n\004item\030\005 \003(\003", 302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CharLogin/PlayerVipProto.proto", &protobuf_RegisterTypes);
  ReqGetVipGift::default_instance_ = new ReqGetVipGift();
  RetGetVipGift::default_instance_ = new RetGetVipGift();
  ReqGotGiftInfo::default_instance_ = new ReqGotGiftInfo();
  RetGotGiftInfo::default_instance_ = new RetGotGiftInfo();
  ToClientRechargeInfo::default_instance_ = new ToClientRechargeInfo();
  ReqGetVipGift::default_instance_->InitAsDefaultInstance();
  RetGetVipGift::default_instance_->InitAsDefaultInstance();
  ReqGotGiftInfo::default_instance_->InitAsDefaultInstance();
  RetGotGiftInfo::default_instance_->InitAsDefaultInstance();
  ToClientRechargeInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CharLogin_2fPlayerVipProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CharLogin_2fPlayerVipProto_2eproto {
  StaticDescriptorInitializer_CharLogin_2fPlayerVipProto_2eproto() {
    protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  }
} static_descriptor_initializer_CharLogin_2fPlayerVipProto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReqGetVipGift::kGiftIDFieldNumber;
#endif  // !_MSC_VER

ReqGetVipGift::ReqGetVipGift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqGetVipGift::InitAsDefaultInstance() {
}

ReqGetVipGift::ReqGetVipGift(const ReqGetVipGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqGetVipGift::SharedCtor() {
  _cached_size_ = 0;
  giftid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGetVipGift::~ReqGetVipGift() {
  SharedDtor();
}

void ReqGetVipGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqGetVipGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGetVipGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGetVipGift_descriptor_;
}

const ReqGetVipGift& ReqGetVipGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  return *default_instance_;
}

ReqGetVipGift* ReqGetVipGift::default_instance_ = NULL;

ReqGetVipGift* ReqGetVipGift::New() const {
  return new ReqGetVipGift;
}

void ReqGetVipGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    giftid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGetVipGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 giftID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqGetVipGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 giftID = 1;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->giftid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqGetVipGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 giftID = 1;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->giftid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqGetVipGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 giftID = 1;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGetVipGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGetVipGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGetVipGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGetVipGift::MergeFrom(const ReqGetVipGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGetVipGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetVipGift::CopyFrom(const ReqGetVipGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetVipGift::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqGetVipGift::Swap(ReqGetVipGift* other) {
  if (other != this) {
    std::swap(giftid_, other->giftid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGetVipGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGetVipGift_descriptor_;
  metadata.reflection = ReqGetVipGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetGetVipGift::kErrorFieldNumber;
const int RetGetVipGift::kGiftInfoFieldNumber;
const int RetGetVipGift::kListFieldNumber;
#endif  // !_MSC_VER

RetGetVipGift::RetGetVipGift()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetGetVipGift::InitAsDefaultInstance() {
}

RetGetVipGift::RetGetVipGift(const RetGetVipGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetGetVipGift::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0;
  giftinfo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetGetVipGift::~RetGetVipGift() {
  SharedDtor();
}

void RetGetVipGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetGetVipGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetGetVipGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetGetVipGift_descriptor_;
}

const RetGetVipGift& RetGetVipGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  return *default_instance_;
}

RetGetVipGift* RetGetVipGift::default_instance_ = NULL;

RetGetVipGift* RetGetVipGift::New() const {
  return new RetGetVipGift;
}

void RetGetVipGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0;
    giftinfo_ = 0;
  }
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetGetVipGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_giftInfo;
        break;
      }

      // optional int32 giftInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_giftInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftinfo_)));
          set_has_giftinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_list;
        break;
      }

      // repeated int32 list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetGetVipGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // optional int32 giftInfo = 2;
  if (has_giftinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->giftinfo(), output);
  }

  // repeated int32 list = 3;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetGetVipGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // optional int32 giftInfo = 2;
  if (has_giftinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->giftinfo(), target);
  }

  // repeated int32 list = 3;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetGetVipGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error());
    }

    // optional int32 giftInfo = 2;
    if (has_giftinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftinfo());
    }

  }
  // repeated int32 list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->list(i));
    }
    total_size += 1 * this->list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetGetVipGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetGetVipGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetGetVipGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetGetVipGift::MergeFrom(const RetGetVipGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_giftinfo()) {
      set_giftinfo(from.giftinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetGetVipGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetGetVipGift::CopyFrom(const RetGetVipGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetGetVipGift::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetGetVipGift::Swap(RetGetVipGift* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(giftinfo_, other->giftinfo_);
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetGetVipGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetGetVipGift_descriptor_;
  metadata.reflection = RetGetVipGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqGotGiftInfo::ReqGotGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqGotGiftInfo::InitAsDefaultInstance() {
}

ReqGotGiftInfo::ReqGotGiftInfo(const ReqGotGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqGotGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGotGiftInfo::~ReqGotGiftInfo() {
  SharedDtor();
}

void ReqGotGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqGotGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGotGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGotGiftInfo_descriptor_;
}

const ReqGotGiftInfo& ReqGotGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  return *default_instance_;
}

ReqGotGiftInfo* ReqGotGiftInfo::default_instance_ = NULL;

ReqGotGiftInfo* ReqGotGiftInfo::New() const {
  return new ReqGotGiftInfo;
}

void ReqGotGiftInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGotGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqGotGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqGotGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqGotGiftInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGotGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGotGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGotGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGotGiftInfo::MergeFrom(const ReqGotGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGotGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGotGiftInfo::CopyFrom(const ReqGotGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGotGiftInfo::IsInitialized() const {

  return true;
}

void ReqGotGiftInfo::Swap(ReqGotGiftInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGotGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGotGiftInfo_descriptor_;
  metadata.reflection = ReqGotGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetGotGiftInfo::kGiftInfoFieldNumber;
#endif  // !_MSC_VER

RetGotGiftInfo::RetGotGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetGotGiftInfo::InitAsDefaultInstance() {
}

RetGotGiftInfo::RetGotGiftInfo(const RetGotGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetGotGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  giftinfo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetGotGiftInfo::~RetGotGiftInfo() {
  SharedDtor();
}

void RetGotGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetGotGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetGotGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetGotGiftInfo_descriptor_;
}

const RetGotGiftInfo& RetGotGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  return *default_instance_;
}

RetGotGiftInfo* RetGotGiftInfo::default_instance_ = NULL;

RetGotGiftInfo* RetGotGiftInfo::New() const {
  return new RetGotGiftInfo;
}

void RetGotGiftInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    giftinfo_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetGotGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 giftInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftinfo_)));
          set_has_giftinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetGotGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 giftInfo = 1;
  if (has_giftinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->giftinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetGotGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 giftInfo = 1;
  if (has_giftinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->giftinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetGotGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 giftInfo = 1;
    if (has_giftinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetGotGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetGotGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetGotGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetGotGiftInfo::MergeFrom(const RetGotGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftinfo()) {
      set_giftinfo(from.giftinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetGotGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetGotGiftInfo::CopyFrom(const RetGotGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetGotGiftInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetGotGiftInfo::Swap(RetGotGiftInfo* other) {
  if (other != this) {
    std::swap(giftinfo_, other->giftinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetGotGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetGotGiftInfo_descriptor_;
  metadata.reflection = RetGotGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClientRechargeInfo::kStartTimeFieldNumber;
const int ToClientRechargeInfo::kEndTimeFieldNumber;
const int ToClientRechargeInfo::kDayFieldNumber;
const int ToClientRechargeInfo::kMaxDayFieldNumber;
const int ToClientRechargeInfo::kItemFieldNumber;
#endif  // !_MSC_VER

ToClientRechargeInfo::ToClientRechargeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClientRechargeInfo::InitAsDefaultInstance() {
}

ToClientRechargeInfo::ToClientRechargeInfo(const ToClientRechargeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClientRechargeInfo::SharedCtor() {
  _cached_size_ = 0;
  starttime_ = GOOGLE_LONGLONG(0);
  endtime_ = GOOGLE_LONGLONG(0);
  day_ = 0;
  maxday_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClientRechargeInfo::~ToClientRechargeInfo() {
  SharedDtor();
}

void ToClientRechargeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClientRechargeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClientRechargeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClientRechargeInfo_descriptor_;
}

const ToClientRechargeInfo& ToClientRechargeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fPlayerVipProto_2eproto();
  return *default_instance_;
}

ToClientRechargeInfo* ToClientRechargeInfo::default_instance_ = NULL;

ToClientRechargeInfo* ToClientRechargeInfo::New() const {
  return new ToClientRechargeInfo;
}

void ToClientRechargeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    starttime_ = GOOGLE_LONGLONG(0);
    endtime_ = GOOGLE_LONGLONG(0);
    day_ = 0;
    maxday_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClientRechargeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 startTime = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_endTime;
        break;
      }

      // optional int64 endTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_day;
        break;
      }

      // optional int32 day = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_maxDay;
        break;
      }

      // optional int32 maxDay = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxday_)));
          set_has_maxday();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item;
        break;
      }

      // repeated int64 item = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 40, input, this->mutable_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClientRechargeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 startTime = 1;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->starttime(), output);
  }

  // optional int64 endTime = 2;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->endtime(), output);
  }

  // optional int32 day = 3;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day(), output);
  }

  // optional int32 maxDay = 4;
  if (has_maxday()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxday(), output);
  }

  // repeated int64 item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClientRechargeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 startTime = 1;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->starttime(), target);
  }

  // optional int64 endTime = 2;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->endtime(), target);
  }

  // optional int32 day = 3;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day(), target);
  }

  // optional int32 maxDay = 4;
  if (has_maxday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxday(), target);
  }

  // repeated int64 item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClientRechargeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 startTime = 1;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

    // optional int64 endTime = 2;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

    // optional int32 day = 3;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day());
    }

    // optional int32 maxDay = 4;
    if (has_maxday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxday());
    }

  }
  // repeated int64 item = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->item(i));
    }
    total_size += 1 * this->item_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClientRechargeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClientRechargeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClientRechargeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClientRechargeInfo::MergeFrom(const ToClientRechargeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_day()) {
      set_day(from.day());
    }
    if (from.has_maxday()) {
      set_maxday(from.maxday());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClientRechargeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClientRechargeInfo::CopyFrom(const ToClientRechargeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClientRechargeInfo::IsInitialized() const {

  return true;
}

void ToClientRechargeInfo::Swap(ToClientRechargeInfo* other) {
  if (other != this) {
    std::swap(starttime_, other->starttime_);
    std::swap(endtime_, other->endtime_);
    std::swap(day_, other->day_);
    std::swap(maxday_, other->maxday_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClientRechargeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClientRechargeInfo_descriptor_;
  metadata.reflection = ToClientRechargeInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PlayerVipProto

// @@protoc_insertion_point(global_scope)
