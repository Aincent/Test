// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Activity/OnLineAtTime.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Activity/OnLineAtTime.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace OnLineAtTimeInfo {

namespace {

const ::google::protobuf::Descriptor* AtTimeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AtTimeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqOnLineAtTimeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqOnLineAtTimeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetOnLineAtTimeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetOnLineAtTimeInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Activity_2fOnLineAtTime_2eproto() {
  protobuf_AddDesc_Activity_2fOnLineAtTime_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Activity/OnLineAtTime.proto");
  GOOGLE_CHECK(file != NULL);
  AtTimeInfo_descriptor_ = file->message_type(0);
  static const int AtTimeInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AtTimeInfo, hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AtTimeInfo, minute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AtTimeInfo, itemids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AtTimeInfo, itemnums_),
  };
  AtTimeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AtTimeInfo_descriptor_,
      AtTimeInfo::default_instance_,
      AtTimeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AtTimeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AtTimeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AtTimeInfo));
  ReqOnLineAtTimeInfo_descriptor_ = file->message_type(1);
  static const int ReqOnLineAtTimeInfo_offsets_[1] = {
  };
  ReqOnLineAtTimeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqOnLineAtTimeInfo_descriptor_,
      ReqOnLineAtTimeInfo::default_instance_,
      ReqOnLineAtTimeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOnLineAtTimeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOnLineAtTimeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqOnLineAtTimeInfo));
  RetOnLineAtTimeInfo_descriptor_ = file->message_type(2);
  static const int RetOnLineAtTimeInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetOnLineAtTimeInfo, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetOnLineAtTimeInfo, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetOnLineAtTimeInfo, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetOnLineAtTimeInfo, attimelist_),
  };
  RetOnLineAtTimeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetOnLineAtTimeInfo_descriptor_,
      RetOnLineAtTimeInfo::default_instance_,
      RetOnLineAtTimeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetOnLineAtTimeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetOnLineAtTimeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetOnLineAtTimeInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Activity_2fOnLineAtTime_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AtTimeInfo_descriptor_, &AtTimeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqOnLineAtTimeInfo_descriptor_, &ReqOnLineAtTimeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetOnLineAtTimeInfo_descriptor_, &RetOnLineAtTimeInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Activity_2fOnLineAtTime_2eproto() {
  delete AtTimeInfo::default_instance_;
  delete AtTimeInfo_reflection_;
  delete ReqOnLineAtTimeInfo::default_instance_;
  delete ReqOnLineAtTimeInfo_reflection_;
  delete RetOnLineAtTimeInfo::default_instance_;
  delete RetOnLineAtTimeInfo_reflection_;
}

void protobuf_AddDesc_Activity_2fOnLineAtTime_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033Activity/OnLineAtTime.proto\022\020OnLineAtT"
    "imeInfo\"M\n\nAtTimeInfo\022\014\n\004hour\030\001 \002(\005\022\016\n\006m"
    "inute\030\002 \002(\005\022\017\n\007itemIDs\030\003 \003(\003\022\020\n\010itemNums"
    "\030\004 \003(\005\"\025\n\023ReqOnLineAtTimeInfo\"x\n\023RetOnLi"
    "neAtTimeInfo\022\013\n\003ret\030\001 \002(\005\022\021\n\tbeginTime\030\002"
    " \001(\003\022\017\n\007endTime\030\003 \001(\003\0220\n\natTimeList\030\004 \003("
    "\0132\034.OnLineAtTimeInfo.AtTimeInfo", 271);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Activity/OnLineAtTime.proto", &protobuf_RegisterTypes);
  AtTimeInfo::default_instance_ = new AtTimeInfo();
  ReqOnLineAtTimeInfo::default_instance_ = new ReqOnLineAtTimeInfo();
  RetOnLineAtTimeInfo::default_instance_ = new RetOnLineAtTimeInfo();
  AtTimeInfo::default_instance_->InitAsDefaultInstance();
  ReqOnLineAtTimeInfo::default_instance_->InitAsDefaultInstance();
  RetOnLineAtTimeInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Activity_2fOnLineAtTime_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Activity_2fOnLineAtTime_2eproto {
  StaticDescriptorInitializer_Activity_2fOnLineAtTime_2eproto() {
    protobuf_AddDesc_Activity_2fOnLineAtTime_2eproto();
  }
} static_descriptor_initializer_Activity_2fOnLineAtTime_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AtTimeInfo::kHourFieldNumber;
const int AtTimeInfo::kMinuteFieldNumber;
const int AtTimeInfo::kItemIDsFieldNumber;
const int AtTimeInfo::kItemNumsFieldNumber;
#endif  // !_MSC_VER

AtTimeInfo::AtTimeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AtTimeInfo::InitAsDefaultInstance() {
}

AtTimeInfo::AtTimeInfo(const AtTimeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AtTimeInfo::SharedCtor() {
  _cached_size_ = 0;
  hour_ = 0;
  minute_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AtTimeInfo::~AtTimeInfo() {
  SharedDtor();
}

void AtTimeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AtTimeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AtTimeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AtTimeInfo_descriptor_;
}

const AtTimeInfo& AtTimeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Activity_2fOnLineAtTime_2eproto();
  return *default_instance_;
}

AtTimeInfo* AtTimeInfo::default_instance_ = NULL;

AtTimeInfo* AtTimeInfo::New() const {
  return new AtTimeInfo;
}

void AtTimeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hour_ = 0;
    minute_ = 0;
  }
  itemids_.Clear();
  itemnums_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AtTimeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 hour = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hour_)));
          set_has_hour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_minute;
        break;
      }

      // required int32 minute = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minute_)));
          set_has_minute();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemIDs;
        break;
      }

      // repeated int64 itemIDs = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemIDs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_itemids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_itemids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemIDs;
        if (input->ExpectTag(32)) goto parse_itemNums;
        break;
      }

      // repeated int32 itemNums = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemNums:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_itemnums())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_itemnums())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_itemNums;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AtTimeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 hour = 1;
  if (has_hour()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hour(), output);
  }

  // required int32 minute = 2;
  if (has_minute()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minute(), output);
  }

  // repeated int64 itemIDs = 3;
  for (int i = 0; i < this->itemids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->itemids(i), output);
  }

  // repeated int32 itemNums = 4;
  for (int i = 0; i < this->itemnums_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->itemnums(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AtTimeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 hour = 1;
  if (has_hour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hour(), target);
  }

  // required int32 minute = 2;
  if (has_minute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minute(), target);
  }

  // repeated int64 itemIDs = 3;
  for (int i = 0; i < this->itemids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->itemids(i), target);
  }

  // repeated int32 itemNums = 4;
  for (int i = 0; i < this->itemnums_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->itemnums(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AtTimeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 hour = 1;
    if (has_hour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hour());
    }

    // required int32 minute = 2;
    if (has_minute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minute());
    }

  }
  // repeated int64 itemIDs = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->itemids(i));
    }
    total_size += 1 * this->itemids_size() + data_size;
  }

  // repeated int32 itemNums = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemnums_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->itemnums(i));
    }
    total_size += 1 * this->itemnums_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AtTimeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AtTimeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AtTimeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AtTimeInfo::MergeFrom(const AtTimeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemids_.MergeFrom(from.itemids_);
  itemnums_.MergeFrom(from.itemnums_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hour()) {
      set_hour(from.hour());
    }
    if (from.has_minute()) {
      set_minute(from.minute());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AtTimeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AtTimeInfo::CopyFrom(const AtTimeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AtTimeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AtTimeInfo::Swap(AtTimeInfo* other) {
  if (other != this) {
    std::swap(hour_, other->hour_);
    std::swap(minute_, other->minute_);
    itemids_.Swap(&other->itemids_);
    itemnums_.Swap(&other->itemnums_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AtTimeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AtTimeInfo_descriptor_;
  metadata.reflection = AtTimeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqOnLineAtTimeInfo::ReqOnLineAtTimeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqOnLineAtTimeInfo::InitAsDefaultInstance() {
}

ReqOnLineAtTimeInfo::ReqOnLineAtTimeInfo(const ReqOnLineAtTimeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqOnLineAtTimeInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqOnLineAtTimeInfo::~ReqOnLineAtTimeInfo() {
  SharedDtor();
}

void ReqOnLineAtTimeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqOnLineAtTimeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqOnLineAtTimeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqOnLineAtTimeInfo_descriptor_;
}

const ReqOnLineAtTimeInfo& ReqOnLineAtTimeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Activity_2fOnLineAtTime_2eproto();
  return *default_instance_;
}

ReqOnLineAtTimeInfo* ReqOnLineAtTimeInfo::default_instance_ = NULL;

ReqOnLineAtTimeInfo* ReqOnLineAtTimeInfo::New() const {
  return new ReqOnLineAtTimeInfo;
}

void ReqOnLineAtTimeInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqOnLineAtTimeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqOnLineAtTimeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqOnLineAtTimeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqOnLineAtTimeInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqOnLineAtTimeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqOnLineAtTimeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqOnLineAtTimeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqOnLineAtTimeInfo::MergeFrom(const ReqOnLineAtTimeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqOnLineAtTimeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqOnLineAtTimeInfo::CopyFrom(const ReqOnLineAtTimeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqOnLineAtTimeInfo::IsInitialized() const {

  return true;
}

void ReqOnLineAtTimeInfo::Swap(ReqOnLineAtTimeInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqOnLineAtTimeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqOnLineAtTimeInfo_descriptor_;
  metadata.reflection = ReqOnLineAtTimeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetOnLineAtTimeInfo::kRetFieldNumber;
const int RetOnLineAtTimeInfo::kBeginTimeFieldNumber;
const int RetOnLineAtTimeInfo::kEndTimeFieldNumber;
const int RetOnLineAtTimeInfo::kAtTimeListFieldNumber;
#endif  // !_MSC_VER

RetOnLineAtTimeInfo::RetOnLineAtTimeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetOnLineAtTimeInfo::InitAsDefaultInstance() {
}

RetOnLineAtTimeInfo::RetOnLineAtTimeInfo(const RetOnLineAtTimeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetOnLineAtTimeInfo::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  begintime_ = GOOGLE_LONGLONG(0);
  endtime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetOnLineAtTimeInfo::~RetOnLineAtTimeInfo() {
  SharedDtor();
}

void RetOnLineAtTimeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetOnLineAtTimeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetOnLineAtTimeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetOnLineAtTimeInfo_descriptor_;
}

const RetOnLineAtTimeInfo& RetOnLineAtTimeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Activity_2fOnLineAtTime_2eproto();
  return *default_instance_;
}

RetOnLineAtTimeInfo* RetOnLineAtTimeInfo::default_instance_ = NULL;

RetOnLineAtTimeInfo* RetOnLineAtTimeInfo::New() const {
  return new RetOnLineAtTimeInfo;
}

void RetOnLineAtTimeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    begintime_ = GOOGLE_LONGLONG(0);
    endtime_ = GOOGLE_LONGLONG(0);
  }
  attimelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetOnLineAtTimeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beginTime;
        break;
      }

      // optional int64 beginTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beginTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begintime_)));
          set_has_begintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_endTime;
        break;
      }

      // optional int64 endTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_atTimeList;
        break;
      }

      // repeated .OnLineAtTimeInfo.AtTimeInfo atTimeList = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_atTimeList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attimelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_atTimeList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetOnLineAtTimeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int64 beginTime = 2;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->begintime(), output);
  }

  // optional int64 endTime = 3;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->endtime(), output);
  }

  // repeated .OnLineAtTimeInfo.AtTimeInfo atTimeList = 4;
  for (int i = 0; i < this->attimelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attimelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetOnLineAtTimeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int64 beginTime = 2;
  if (has_begintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->begintime(), target);
  }

  // optional int64 endTime = 3;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->endtime(), target);
  }

  // repeated .OnLineAtTimeInfo.AtTimeInfo atTimeList = 4;
  for (int i = 0; i < this->attimelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attimelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetOnLineAtTimeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int64 beginTime = 2;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begintime());
    }

    // optional int64 endTime = 3;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

  }
  // repeated .OnLineAtTimeInfo.AtTimeInfo atTimeList = 4;
  total_size += 1 * this->attimelist_size();
  for (int i = 0; i < this->attimelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attimelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetOnLineAtTimeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetOnLineAtTimeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetOnLineAtTimeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetOnLineAtTimeInfo::MergeFrom(const RetOnLineAtTimeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  attimelist_.MergeFrom(from.attimelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_begintime()) {
      set_begintime(from.begintime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetOnLineAtTimeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetOnLineAtTimeInfo::CopyFrom(const RetOnLineAtTimeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetOnLineAtTimeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < attimelist_size(); i++) {
    if (!this->attimelist(i).IsInitialized()) return false;
  }
  return true;
}

void RetOnLineAtTimeInfo::Swap(RetOnLineAtTimeInfo* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(begintime_, other->begintime_);
    std::swap(endtime_, other->endtime_);
    attimelist_.Swap(&other->attimelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetOnLineAtTimeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetOnLineAtTimeInfo_descriptor_;
  metadata.reflection = RetOnLineAtTimeInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OnLineAtTimeInfo

// @@protoc_insertion_point(global_scope)
