// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/Horse.proto

#ifndef PROTOBUF_CharLogin_2fHorse_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fHorse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CharLogin/PlayerInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace HorseInfo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

class ControlHorse;
class ToGMControlHorse;
class HorseAdvance;
class HorseAddExp;
class HorseCritStatistics;
class HorseItemList;
class AddExpReturn;
class ToGMAddHorse;
class ToGTGetHorse;

// ===================================================================

class ControlHorse : public ::google::protobuf::Message {
 public:
  ControlHorse();
  virtual ~ControlHorse();

  ControlHorse(const ControlHorse& from);

  inline ControlHorse& operator=(const ControlHorse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlHorse& default_instance();

  void Swap(ControlHorse* other);

  // implements Message ----------------------------------------------

  ControlHorse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ControlHorse& from);
  void MergeFrom(const ControlHorse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo.ControlHorse)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static ControlHorse* default_instance_;
};
// -------------------------------------------------------------------

class ToGMControlHorse : public ::google::protobuf::Message {
 public:
  ToGMControlHorse();
  virtual ~ToGMControlHorse();

  ToGMControlHorse(const ToGMControlHorse& from);

  inline ToGMControlHorse& operator=(const ToGMControlHorse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGMControlHorse& default_instance();

  void Swap(ToGMControlHorse* other);

  // implements Message ----------------------------------------------

  ToGMControlHorse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGMControlHorse& from);
  void MergeFrom(const ToGMControlHorse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .HorseInfo.ControlHorse horse = 2;
  inline bool has_horse() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 2;
  inline const ::HorseInfo::ControlHorse& horse() const;
  inline ::HorseInfo::ControlHorse* mutable_horse();
  inline ::HorseInfo::ControlHorse* release_horse();
  inline void set_allocated_horse(::HorseInfo::ControlHorse* horse);

  // @@protoc_insertion_point(class_scope:HorseInfo.ToGMControlHorse)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_horse();
  inline void clear_has_horse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::HorseInfo::ControlHorse* horse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static ToGMControlHorse* default_instance_;
};
// -------------------------------------------------------------------

class HorseAdvance : public ::google::protobuf::Message {
 public:
  HorseAdvance();
  virtual ~HorseAdvance();

  HorseAdvance(const HorseAdvance& from);

  inline HorseAdvance& operator=(const HorseAdvance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseAdvance& default_instance();

  void Swap(HorseAdvance* other);

  // implements Message ----------------------------------------------

  HorseAdvance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseAdvance& from);
  void MergeFrom(const HorseAdvance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bool isAutoBuy = 2;
  inline bool has_isautobuy() const;
  inline void clear_isautobuy();
  static const int kIsAutoBuyFieldNumber = 2;
  inline bool isautobuy() const;
  inline void set_isautobuy(bool value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo.HorseAdvance)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isautobuy();
  inline void clear_has_isautobuy();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  bool isautobuy_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static HorseAdvance* default_instance_;
};
// -------------------------------------------------------------------

class HorseAddExp : public ::google::protobuf::Message {
 public:
  HorseAddExp();
  virtual ~HorseAddExp();

  HorseAddExp(const HorseAddExp& from);

  inline HorseAddExp& operator=(const HorseAddExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseAddExp& default_instance();

  void Swap(HorseAddExp* other);

  // implements Message ----------------------------------------------

  HorseAddExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseAddExp& from);
  void MergeFrom(const HorseAddExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 addNum = 2;
  inline bool has_addnum() const;
  inline void clear_addnum();
  static const int kAddNumFieldNumber = 2;
  inline ::google::protobuf::int32 addnum() const;
  inline void set_addnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo.HorseAddExp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_addnum();
  inline void clear_has_addnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 addnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static HorseAddExp* default_instance_;
};
// -------------------------------------------------------------------

class HorseCritStatistics : public ::google::protobuf::Message {
 public:
  HorseCritStatistics();
  virtual ~HorseCritStatistics();

  HorseCritStatistics(const HorseCritStatistics& from);

  inline HorseCritStatistics& operator=(const HorseCritStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseCritStatistics& default_instance();

  void Swap(HorseCritStatistics* other);

  // implements Message ----------------------------------------------

  HorseCritStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseCritStatistics& from);
  void MergeFrom(const HorseCritStatistics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::int32 counts() const;
  inline void set_counts(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo.HorseCritStatistics)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_counts();
  inline void clear_has_counts();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 counts_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static HorseCritStatistics* default_instance_;
};
// -------------------------------------------------------------------

class HorseItemList : public ::google::protobuf::Message {
 public:
  HorseItemList();
  virtual ~HorseItemList();

  HorseItemList(const HorseItemList& from);

  inline HorseItemList& operator=(const HorseItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseItemList& default_instance();

  void Swap(HorseItemList* other);

  // implements Message ----------------------------------------------

  HorseItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseItemList& from);
  void MergeFrom(const HorseItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::int32 counts() const;
  inline void set_counts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo.HorseItemList)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static HorseItemList* default_instance_;
};
// -------------------------------------------------------------------

class AddExpReturn : public ::google::protobuf::Message {
 public:
  AddExpReturn();
  virtual ~AddExpReturn();

  AddExpReturn(const AddExpReturn& from);

  inline AddExpReturn& operator=(const AddExpReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddExpReturn& default_instance();

  void Swap(AddExpReturn* other);

  // implements Message ----------------------------------------------

  AddExpReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddExpReturn& from);
  void MergeFrom(const AddExpReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional bool iscrack = 2;
  inline bool has_iscrack() const;
  inline void clear_iscrack();
  static const int kIscrackFieldNumber = 2;
  inline bool iscrack() const;
  inline void set_iscrack(bool value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated .HorseInfo.HorseCritStatistics statisticsList = 6;
  inline int statisticslist_size() const;
  inline void clear_statisticslist();
  static const int kStatisticsListFieldNumber = 6;
  inline const ::HorseInfo::HorseCritStatistics& statisticslist(int index) const;
  inline ::HorseInfo::HorseCritStatistics* mutable_statisticslist(int index);
  inline ::HorseInfo::HorseCritStatistics* add_statisticslist();
  inline const ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseCritStatistics >&
      statisticslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseCritStatistics >*
      mutable_statisticslist();

  // optional int32 allExp = 7;
  inline bool has_allexp() const;
  inline void clear_allexp();
  static const int kAllExpFieldNumber = 7;
  inline ::google::protobuf::int32 allexp() const;
  inline void set_allexp(::google::protobuf::int32 value);

  // repeated .HorseInfo.HorseItemList itemList = 8;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 8;
  inline const ::HorseInfo::HorseItemList& itemlist(int index) const;
  inline ::HorseInfo::HorseItemList* mutable_itemlist(int index);
  inline ::HorseInfo::HorseItemList* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseItemList >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseItemList >*
      mutable_itemlist();

  // optional int32 golden = 9;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 9;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // optional int32 money = 10;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 10;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 stopError = 12;
  inline bool has_stoperror() const;
  inline void clear_stoperror();
  static const int kStopErrorFieldNumber = 12;
  inline ::google::protobuf::int32 stoperror() const;
  inline void set_stoperror(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HorseInfo.AddExpReturn)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_iscrack();
  inline void clear_has_iscrack();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_allexp();
  inline void clear_has_allexp();
  inline void set_has_golden();
  inline void clear_has_golden();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_stoperror();
  inline void clear_has_stoperror();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  bool iscrack_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseCritStatistics > statisticslist_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 allexp_;
  ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseItemList > itemlist_;
  ::google::protobuf::int32 golden_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 stoperror_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static AddExpReturn* default_instance_;
};
// -------------------------------------------------------------------

class ToGMAddHorse : public ::google::protobuf::Message {
 public:
  ToGMAddHorse();
  virtual ~ToGMAddHorse();

  ToGMAddHorse(const ToGMAddHorse& from);

  inline ToGMAddHorse& operator=(const ToGMAddHorse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGMAddHorse& default_instance();

  void Swap(ToGMAddHorse* other);

  // implements Message ----------------------------------------------

  ToGMAddHorse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGMAddHorse& from);
  void MergeFrom(const ToGMAddHorse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .HorseInfo.HorseAddExp horse = 2;
  inline bool has_horse() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 2;
  inline const ::HorseInfo::HorseAddExp& horse() const;
  inline ::HorseInfo::HorseAddExp* mutable_horse();
  inline ::HorseInfo::HorseAddExp* release_horse();
  inline void set_allocated_horse(::HorseInfo::HorseAddExp* horse);

  // @@protoc_insertion_point(class_scope:HorseInfo.ToGMAddHorse)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_horse();
  inline void clear_has_horse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::HorseInfo::HorseAddExp* horse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static ToGMAddHorse* default_instance_;
};
// -------------------------------------------------------------------

class ToGTGetHorse : public ::google::protobuf::Message {
 public:
  ToGTGetHorse();
  virtual ~ToGTGetHorse();

  ToGTGetHorse(const ToGTGetHorse& from);

  inline ToGTGetHorse& operator=(const ToGTGetHorse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTGetHorse& default_instance();

  void Swap(ToGTGetHorse* other);

  // implements Message ----------------------------------------------

  ToGTGetHorse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTGetHorse& from);
  void MergeFrom(const ToGTGetHorse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .PlayerInfo.HorseInfo horse = 2;
  inline bool has_horse() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 2;
  inline const ::PlayerInfo::HorseInfo& horse() const;
  inline ::PlayerInfo::HorseInfo* mutable_horse();
  inline ::PlayerInfo::HorseInfo* release_horse();
  inline void set_allocated_horse(::PlayerInfo::HorseInfo* horse);

  // @@protoc_insertion_point(class_scope:HorseInfo.ToGTGetHorse)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_horse();
  inline void clear_has_horse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::PlayerInfo::HorseInfo* horse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fHorse_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fHorse_2eproto();

  void InitAsDefaultInstance();
  static ToGTGetHorse* default_instance_;
};
// ===================================================================


// ===================================================================

// ControlHorse

// required int32 id = 1;
inline bool ControlHorse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlHorse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlHorse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlHorse::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ControlHorse::id() const {
  return id_;
}
inline void ControlHorse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool ControlHorse::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ControlHorse::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ControlHorse::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ControlHorse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ControlHorse::type() const {
  return type_;
}
inline void ControlHorse::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ToGMControlHorse

// required int64 charid = 1;
inline bool ToGMControlHorse::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGMControlHorse::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGMControlHorse::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGMControlHorse::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGMControlHorse::charid() const {
  return charid_;
}
inline void ToGMControlHorse::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .HorseInfo.ControlHorse horse = 2;
inline bool ToGMControlHorse::has_horse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGMControlHorse::set_has_horse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGMControlHorse::clear_has_horse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGMControlHorse::clear_horse() {
  if (horse_ != NULL) horse_->::HorseInfo::ControlHorse::Clear();
  clear_has_horse();
}
inline const ::HorseInfo::ControlHorse& ToGMControlHorse::horse() const {
  return horse_ != NULL ? *horse_ : *default_instance_->horse_;
}
inline ::HorseInfo::ControlHorse* ToGMControlHorse::mutable_horse() {
  set_has_horse();
  if (horse_ == NULL) horse_ = new ::HorseInfo::ControlHorse;
  return horse_;
}
inline ::HorseInfo::ControlHorse* ToGMControlHorse::release_horse() {
  clear_has_horse();
  ::HorseInfo::ControlHorse* temp = horse_;
  horse_ = NULL;
  return temp;
}
inline void ToGMControlHorse::set_allocated_horse(::HorseInfo::ControlHorse* horse) {
  delete horse_;
  horse_ = horse;
  if (horse) {
    set_has_horse();
  } else {
    clear_has_horse();
  }
}

// -------------------------------------------------------------------

// HorseAdvance

// optional int32 type = 1;
inline bool HorseAdvance::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseAdvance::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseAdvance::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseAdvance::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HorseAdvance::type() const {
  return type_;
}
inline void HorseAdvance::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional bool isAutoBuy = 2;
inline bool HorseAdvance::has_isautobuy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseAdvance::set_has_isautobuy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseAdvance::clear_has_isautobuy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseAdvance::clear_isautobuy() {
  isautobuy_ = false;
  clear_has_isautobuy();
}
inline bool HorseAdvance::isautobuy() const {
  return isautobuy_;
}
inline void HorseAdvance::set_isautobuy(bool value) {
  set_has_isautobuy();
  isautobuy_ = value;
}

// optional int32 id = 3;
inline bool HorseAdvance::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorseAdvance::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorseAdvance::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorseAdvance::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 HorseAdvance::id() const {
  return id_;
}
inline void HorseAdvance::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// HorseAddExp

// required int32 type = 1;
inline bool HorseAddExp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseAddExp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseAddExp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseAddExp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HorseAddExp::type() const {
  return type_;
}
inline void HorseAddExp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 addNum = 2;
inline bool HorseAddExp::has_addnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseAddExp::set_has_addnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseAddExp::clear_has_addnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseAddExp::clear_addnum() {
  addnum_ = 0;
  clear_has_addnum();
}
inline ::google::protobuf::int32 HorseAddExp::addnum() const {
  return addnum_;
}
inline void HorseAddExp::set_addnum(::google::protobuf::int32 value) {
  set_has_addnum();
  addnum_ = value;
}

// -------------------------------------------------------------------

// HorseCritStatistics

// optional int32 type = 1;
inline bool HorseCritStatistics::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseCritStatistics::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseCritStatistics::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseCritStatistics::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HorseCritStatistics::type() const {
  return type_;
}
inline void HorseCritStatistics::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 counts = 2;
inline bool HorseCritStatistics::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseCritStatistics::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseCritStatistics::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseCritStatistics::clear_counts() {
  counts_ = 0;
  clear_has_counts();
}
inline ::google::protobuf::int32 HorseCritStatistics::counts() const {
  return counts_;
}
inline void HorseCritStatistics::set_counts(::google::protobuf::int32 value) {
  set_has_counts();
  counts_ = value;
}

// optional int32 exp = 3;
inline bool HorseCritStatistics::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorseCritStatistics::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorseCritStatistics::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorseCritStatistics::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 HorseCritStatistics::exp() const {
  return exp_;
}
inline void HorseCritStatistics::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// HorseItemList

// optional int32 itemID = 1;
inline bool HorseItemList::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseItemList::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseItemList::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseItemList::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 HorseItemList::itemid() const {
  return itemid_;
}
inline void HorseItemList::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 counts = 2;
inline bool HorseItemList::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseItemList::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseItemList::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseItemList::clear_counts() {
  counts_ = 0;
  clear_has_counts();
}
inline ::google::protobuf::int32 HorseItemList::counts() const {
  return counts_;
}
inline void HorseItemList::set_counts(::google::protobuf::int32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// AddExpReturn

// required int32 ret = 1;
inline bool AddExpReturn::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddExpReturn::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddExpReturn::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddExpReturn::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AddExpReturn::ret() const {
  return ret_;
}
inline void AddExpReturn::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional bool iscrack = 2;
inline bool AddExpReturn::has_iscrack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddExpReturn::set_has_iscrack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddExpReturn::clear_has_iscrack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddExpReturn::clear_iscrack() {
  iscrack_ = false;
  clear_has_iscrack();
}
inline bool AddExpReturn::iscrack() const {
  return iscrack_;
}
inline void AddExpReturn::set_iscrack(bool value) {
  set_has_iscrack();
  iscrack_ = value;
}

// optional int32 exp = 3;
inline bool AddExpReturn::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddExpReturn::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddExpReturn::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddExpReturn::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 AddExpReturn::exp() const {
  return exp_;
}
inline void AddExpReturn::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 id = 4;
inline bool AddExpReturn::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddExpReturn::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddExpReturn::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddExpReturn::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AddExpReturn::id() const {
  return id_;
}
inline void AddExpReturn::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 5;
inline bool AddExpReturn::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddExpReturn::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddExpReturn::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddExpReturn::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AddExpReturn::type() const {
  return type_;
}
inline void AddExpReturn::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .HorseInfo.HorseCritStatistics statisticsList = 6;
inline int AddExpReturn::statisticslist_size() const {
  return statisticslist_.size();
}
inline void AddExpReturn::clear_statisticslist() {
  statisticslist_.Clear();
}
inline const ::HorseInfo::HorseCritStatistics& AddExpReturn::statisticslist(int index) const {
  return statisticslist_.Get(index);
}
inline ::HorseInfo::HorseCritStatistics* AddExpReturn::mutable_statisticslist(int index) {
  return statisticslist_.Mutable(index);
}
inline ::HorseInfo::HorseCritStatistics* AddExpReturn::add_statisticslist() {
  return statisticslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseCritStatistics >&
AddExpReturn::statisticslist() const {
  return statisticslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseCritStatistics >*
AddExpReturn::mutable_statisticslist() {
  return &statisticslist_;
}

// optional int32 allExp = 7;
inline bool AddExpReturn::has_allexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddExpReturn::set_has_allexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddExpReturn::clear_has_allexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddExpReturn::clear_allexp() {
  allexp_ = 0;
  clear_has_allexp();
}
inline ::google::protobuf::int32 AddExpReturn::allexp() const {
  return allexp_;
}
inline void AddExpReturn::set_allexp(::google::protobuf::int32 value) {
  set_has_allexp();
  allexp_ = value;
}

// repeated .HorseInfo.HorseItemList itemList = 8;
inline int AddExpReturn::itemlist_size() const {
  return itemlist_.size();
}
inline void AddExpReturn::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::HorseInfo::HorseItemList& AddExpReturn::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::HorseInfo::HorseItemList* AddExpReturn::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::HorseInfo::HorseItemList* AddExpReturn::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseItemList >&
AddExpReturn::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::HorseInfo::HorseItemList >*
AddExpReturn::mutable_itemlist() {
  return &itemlist_;
}

// optional int32 golden = 9;
inline bool AddExpReturn::has_golden() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AddExpReturn::set_has_golden() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AddExpReturn::clear_has_golden() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AddExpReturn::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 AddExpReturn::golden() const {
  return golden_;
}
inline void AddExpReturn::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// optional int32 money = 10;
inline bool AddExpReturn::has_money() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AddExpReturn::set_has_money() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AddExpReturn::clear_has_money() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AddExpReturn::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 AddExpReturn::money() const {
  return money_;
}
inline void AddExpReturn::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 stopError = 12;
inline bool AddExpReturn::has_stoperror() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AddExpReturn::set_has_stoperror() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AddExpReturn::clear_has_stoperror() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AddExpReturn::clear_stoperror() {
  stoperror_ = 0;
  clear_has_stoperror();
}
inline ::google::protobuf::int32 AddExpReturn::stoperror() const {
  return stoperror_;
}
inline void AddExpReturn::set_stoperror(::google::protobuf::int32 value) {
  set_has_stoperror();
  stoperror_ = value;
}

// -------------------------------------------------------------------

// ToGMAddHorse

// required int64 charid = 1;
inline bool ToGMAddHorse::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGMAddHorse::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGMAddHorse::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGMAddHorse::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGMAddHorse::charid() const {
  return charid_;
}
inline void ToGMAddHorse::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .HorseInfo.HorseAddExp horse = 2;
inline bool ToGMAddHorse::has_horse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGMAddHorse::set_has_horse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGMAddHorse::clear_has_horse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGMAddHorse::clear_horse() {
  if (horse_ != NULL) horse_->::HorseInfo::HorseAddExp::Clear();
  clear_has_horse();
}
inline const ::HorseInfo::HorseAddExp& ToGMAddHorse::horse() const {
  return horse_ != NULL ? *horse_ : *default_instance_->horse_;
}
inline ::HorseInfo::HorseAddExp* ToGMAddHorse::mutable_horse() {
  set_has_horse();
  if (horse_ == NULL) horse_ = new ::HorseInfo::HorseAddExp;
  return horse_;
}
inline ::HorseInfo::HorseAddExp* ToGMAddHorse::release_horse() {
  clear_has_horse();
  ::HorseInfo::HorseAddExp* temp = horse_;
  horse_ = NULL;
  return temp;
}
inline void ToGMAddHorse::set_allocated_horse(::HorseInfo::HorseAddExp* horse) {
  delete horse_;
  horse_ = horse;
  if (horse) {
    set_has_horse();
  } else {
    clear_has_horse();
  }
}

// -------------------------------------------------------------------

// ToGTGetHorse

// required int64 charid = 1;
inline bool ToGTGetHorse::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTGetHorse::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTGetHorse::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTGetHorse::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTGetHorse::charid() const {
  return charid_;
}
inline void ToGTGetHorse::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .PlayerInfo.HorseInfo horse = 2;
inline bool ToGTGetHorse::has_horse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTGetHorse::set_has_horse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTGetHorse::clear_has_horse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTGetHorse::clear_horse() {
  if (horse_ != NULL) horse_->::PlayerInfo::HorseInfo::Clear();
  clear_has_horse();
}
inline const ::PlayerInfo::HorseInfo& ToGTGetHorse::horse() const {
  return horse_ != NULL ? *horse_ : *default_instance_->horse_;
}
inline ::PlayerInfo::HorseInfo* ToGTGetHorse::mutable_horse() {
  set_has_horse();
  if (horse_ == NULL) horse_ = new ::PlayerInfo::HorseInfo;
  return horse_;
}
inline ::PlayerInfo::HorseInfo* ToGTGetHorse::release_horse() {
  clear_has_horse();
  ::PlayerInfo::HorseInfo* temp = horse_;
  horse_ = NULL;
  return temp;
}
inline void ToGTGetHorse::set_allocated_horse(::PlayerInfo::HorseInfo* horse) {
  delete horse_;
  horse_ = horse;
  if (horse) {
    set_has_horse();
  } else {
    clear_has_horse();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HorseInfo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fHorse_2eproto__INCLUDED
