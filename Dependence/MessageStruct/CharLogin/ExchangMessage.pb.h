// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/ExchangMessage.proto

#ifndef PROTOBUF_CharLogin_2fExchangMessage_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fExchangMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CharLogin/CharBaseInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace Exchang {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

class ClientReqExchange;
class GTAckSrcExchange;
class GTAckReqExchange;
class TraderReqRet;
class GTAckOtherClientReqExchange;
class GTAckToApplicant;
class ClientReqCancelExchang;
class GTAckCancelExchang;
class ClientReqLock;
class GTAckSrcReqLock;
class GTAckReqLock;
class ClientReqVerifyExchang;
class GTAckExchangComplete;
class GTtoGMReqExchange;
class GTtoGMTraderReqRet;
class GTtoGMCancelExchang;
class GTtoGMReqReqLock;
class GMToGTLockToOther;
class GTtoGMVerifyExchang;

// ===================================================================

class ClientReqExchange : public ::google::protobuf::Message {
 public:
  ClientReqExchange();
  virtual ~ClientReqExchange();

  ClientReqExchange(const ClientReqExchange& from);

  inline ClientReqExchange& operator=(const ClientReqExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqExchange& default_instance();

  void Swap(ClientReqExchange* other);

  // implements Message ----------------------------------------------

  ClientReqExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqExchange& from);
  void MergeFrom(const ClientReqExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwTraderID = 1;
  inline bool has_dwtraderid() const;
  inline void clear_dwtraderid();
  static const int kDwTraderIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwtraderid() const;
  inline void set_dwtraderid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.ClientReqExchange)
 private:
  inline void set_has_dwtraderid();
  inline void clear_has_dwtraderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwtraderid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqExchange* default_instance_;
};
// -------------------------------------------------------------------

class GTAckSrcExchange : public ::google::protobuf::Message {
 public:
  GTAckSrcExchange();
  virtual ~GTAckSrcExchange();

  GTAckSrcExchange(const GTAckSrcExchange& from);

  inline GTAckSrcExchange& operator=(const GTAckSrcExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckSrcExchange& default_instance();

  void Swap(GTAckSrcExchange* other);

  // implements Message ----------------------------------------------

  GTAckSrcExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckSrcExchange& from);
  void MergeFrom(const GTAckSrcExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwTraderID = 1;
  inline bool has_dwtraderid() const;
  inline void clear_dwtraderid();
  static const int kDwTraderIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwtraderid() const;
  inline void set_dwtraderid(::google::protobuf::int32 value);

  // required int32 dwErrorCode = 2;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckSrcExchange)
 private:
  inline void set_has_dwtraderid();
  inline void clear_has_dwtraderid();
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwtraderid_;
  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckSrcExchange* default_instance_;
};
// -------------------------------------------------------------------

class GTAckReqExchange : public ::google::protobuf::Message {
 public:
  GTAckReqExchange();
  virtual ~GTAckReqExchange();

  GTAckReqExchange(const GTAckReqExchange& from);

  inline GTAckReqExchange& operator=(const GTAckReqExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckReqExchange& default_instance();

  void Swap(GTAckReqExchange* other);

  // implements Message ----------------------------------------------

  GTAckReqExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckReqExchange& from);
  void MergeFrom(const GTAckReqExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwCharID = 1;
  inline bool has_dwcharid() const;
  inline void clear_dwcharid();
  static const int kDwCharIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwcharid() const;
  inline void set_dwcharid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckReqExchange)
 private:
  inline void set_has_dwcharid();
  inline void clear_has_dwcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 dwcharid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckReqExchange* default_instance_;
};
// -------------------------------------------------------------------

class TraderReqRet : public ::google::protobuf::Message {
 public:
  TraderReqRet();
  virtual ~TraderReqRet();

  TraderReqRet(const TraderReqRet& from);

  inline TraderReqRet& operator=(const TraderReqRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TraderReqRet& default_instance();

  void Swap(TraderReqRet* other);

  // implements Message ----------------------------------------------

  TraderReqRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TraderReqRet& from);
  void MergeFrom(const TraderReqRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwSrcID = 1;
  inline bool has_dwsrcid() const;
  inline void clear_dwsrcid();
  static const int kDwSrcIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwsrcid() const;
  inline void set_dwsrcid(::google::protobuf::int32 value);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.TraderReqRet)
 private:
  inline void set_has_dwsrcid();
  inline void clear_has_dwsrcid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwsrcid_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static TraderReqRet* default_instance_;
};
// -------------------------------------------------------------------

class GTAckOtherClientReqExchange : public ::google::protobuf::Message {
 public:
  GTAckOtherClientReqExchange();
  virtual ~GTAckOtherClientReqExchange();

  GTAckOtherClientReqExchange(const GTAckOtherClientReqExchange& from);

  inline GTAckOtherClientReqExchange& operator=(const GTAckOtherClientReqExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckOtherClientReqExchange& default_instance();

  void Swap(GTAckOtherClientReqExchange* other);

  // implements Message ----------------------------------------------

  GTAckOtherClientReqExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckOtherClientReqExchange& from);
  void MergeFrom(const GTAckOtherClientReqExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwCharID = 1;
  inline bool has_dwcharid() const;
  inline void clear_dwcharid();
  static const int kDwCharIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwcharid() const;
  inline void set_dwcharid(::google::protobuf::int32 value);

  // required int32 dwErrorCode = 2;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckOtherClientReqExchange)
 private:
  inline void set_has_dwcharid();
  inline void clear_has_dwcharid();
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwcharid_;
  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckOtherClientReqExchange* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToApplicant : public ::google::protobuf::Message {
 public:
  GTAckToApplicant();
  virtual ~GTAckToApplicant();

  GTAckToApplicant(const GTAckToApplicant& from);

  inline GTAckToApplicant& operator=(const GTAckToApplicant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToApplicant& default_instance();

  void Swap(GTAckToApplicant* other);

  // implements Message ----------------------------------------------

  GTAckToApplicant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToApplicant& from);
  void MergeFrom(const GTAckToApplicant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwCharID = 1;
  inline bool has_dwcharid() const;
  inline void clear_dwcharid();
  static const int kDwCharIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwcharid() const;
  inline void set_dwcharid(::google::protobuf::int32 value);

  // required int32 dwErrorCode = 2;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckToApplicant)
 private:
  inline void set_has_dwcharid();
  inline void clear_has_dwcharid();
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwcharid_;
  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckToApplicant* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqCancelExchang : public ::google::protobuf::Message {
 public:
  ClientReqCancelExchang();
  virtual ~ClientReqCancelExchang();

  ClientReqCancelExchang(const ClientReqCancelExchang& from);

  inline ClientReqCancelExchang& operator=(const ClientReqCancelExchang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqCancelExchang& default_instance();

  void Swap(ClientReqCancelExchang* other);

  // implements Message ----------------------------------------------

  ClientReqCancelExchang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqCancelExchang& from);
  void MergeFrom(const ClientReqCancelExchang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwPlayerID = 1;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.ClientReqCancelExchang)
 private:
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqCancelExchang* default_instance_;
};
// -------------------------------------------------------------------

class GTAckCancelExchang : public ::google::protobuf::Message {
 public:
  GTAckCancelExchang();
  virtual ~GTAckCancelExchang();

  GTAckCancelExchang(const GTAckCancelExchang& from);

  inline GTAckCancelExchang& operator=(const GTAckCancelExchang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckCancelExchang& default_instance();

  void Swap(GTAckCancelExchang* other);

  // implements Message ----------------------------------------------

  GTAckCancelExchang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckCancelExchang& from);
  void MergeFrom(const GTAckCancelExchang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwPlayerID = 1;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckCancelExchang)
 private:
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckCancelExchang* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqLock : public ::google::protobuf::Message {
 public:
  ClientReqLock();
  virtual ~ClientReqLock();

  ClientReqLock(const ClientReqLock& from);

  inline ClientReqLock& operator=(const ClientReqLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqLock& default_instance();

  void Swap(ClientReqLock* other);

  // implements Message ----------------------------------------------

  ClientReqLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqLock& from);
  void MergeFrom(const ClientReqLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwPlayerID = 1;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // repeated int32 dwPacketPos = 2;
  inline int dwpacketpos_size() const;
  inline void clear_dwpacketpos();
  static const int kDwPacketPosFieldNumber = 2;
  inline ::google::protobuf::int32 dwpacketpos(int index) const;
  inline void set_dwpacketpos(int index, ::google::protobuf::int32 value);
  inline void add_dwpacketpos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwpacketpos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwpacketpos();

  // required int32 dwMoney = 3;
  inline bool has_dwmoney() const;
  inline void clear_dwmoney();
  static const int kDwMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 dwmoney() const;
  inline void set_dwmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.ClientReqLock)
 private:
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();
  inline void set_has_dwmoney();
  inline void clear_has_dwmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwpacketpos_;
  ::google::protobuf::int32 dwplayerid_;
  ::google::protobuf::int32 dwmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqLock* default_instance_;
};
// -------------------------------------------------------------------

class GTAckSrcReqLock : public ::google::protobuf::Message {
 public:
  GTAckSrcReqLock();
  virtual ~GTAckSrcReqLock();

  GTAckSrcReqLock(const GTAckSrcReqLock& from);

  inline GTAckSrcReqLock& operator=(const GTAckSrcReqLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckSrcReqLock& default_instance();

  void Swap(GTAckSrcReqLock* other);

  // implements Message ----------------------------------------------

  GTAckSrcReqLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckSrcReqLock& from);
  void MergeFrom(const GTAckSrcReqLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwErrorCode = 1;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckSrcReqLock)
 private:
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckSrcReqLock* default_instance_;
};
// -------------------------------------------------------------------

class GTAckReqLock : public ::google::protobuf::Message {
 public:
  GTAckReqLock();
  virtual ~GTAckReqLock();

  GTAckReqLock(const GTAckReqLock& from);

  inline GTAckReqLock& operator=(const GTAckReqLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckReqLock& default_instance();

  void Swap(GTAckReqLock* other);

  // implements Message ----------------------------------------------

  GTAckReqLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckReqLock& from);
  void MergeFrom(const GTAckReqLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwTraderID = 1;
  inline bool has_dwtraderid() const;
  inline void clear_dwtraderid();
  static const int kDwTraderIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwtraderid() const;
  inline void set_dwtraderid(::google::protobuf::int32 value);

  // repeated .CharLogin.ClientItemInfo propList = 2;
  inline int proplist_size() const;
  inline void clear_proplist();
  static const int kPropListFieldNumber = 2;
  inline const ::CharLogin::ClientItemInfo& proplist(int index) const;
  inline ::CharLogin::ClientItemInfo* mutable_proplist(int index);
  inline ::CharLogin::ClientItemInfo* add_proplist();
  inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
      proplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
      mutable_proplist();

  // required int32 dwMoney = 3;
  inline bool has_dwmoney() const;
  inline void clear_dwmoney();
  static const int kDwMoneyFieldNumber = 3;
  inline ::google::protobuf::int32 dwmoney() const;
  inline void set_dwmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckReqLock)
 private:
  inline void set_has_dwtraderid();
  inline void clear_has_dwtraderid();
  inline void set_has_dwmoney();
  inline void clear_has_dwmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo > proplist_;
  ::google::protobuf::int32 dwtraderid_;
  ::google::protobuf::int32 dwmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckReqLock* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqVerifyExchang : public ::google::protobuf::Message {
 public:
  ClientReqVerifyExchang();
  virtual ~ClientReqVerifyExchang();

  ClientReqVerifyExchang(const ClientReqVerifyExchang& from);

  inline ClientReqVerifyExchang& operator=(const ClientReqVerifyExchang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqVerifyExchang& default_instance();

  void Swap(ClientReqVerifyExchang* other);

  // implements Message ----------------------------------------------

  ClientReqVerifyExchang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqVerifyExchang& from);
  void MergeFrom(const ClientReqVerifyExchang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwPlayerID = 1;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.ClientReqVerifyExchang)
 private:
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqVerifyExchang* default_instance_;
};
// -------------------------------------------------------------------

class GTAckExchangComplete : public ::google::protobuf::Message {
 public:
  GTAckExchangComplete();
  virtual ~GTAckExchangComplete();

  GTAckExchangComplete(const GTAckExchangComplete& from);

  inline GTAckExchangComplete& operator=(const GTAckExchangComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckExchangComplete& default_instance();

  void Swap(GTAckExchangComplete* other);

  // implements Message ----------------------------------------------

  GTAckExchangComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckExchangComplete& from);
  void MergeFrom(const GTAckExchangComplete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwFailedPlayerKey = 1;
  inline bool has_dwfailedplayerkey() const;
  inline void clear_dwfailedplayerkey();
  static const int kDwFailedPlayerKeyFieldNumber = 1;
  inline ::google::protobuf::int32 dwfailedplayerkey() const;
  inline void set_dwfailedplayerkey(::google::protobuf::int32 value);

  // required int32 dwErrorCode = 2;
  inline bool has_dwerrorcode() const;
  inline void clear_dwerrorcode();
  static const int kDwErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 dwerrorcode() const;
  inline void set_dwerrorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTAckExchangComplete)
 private:
  inline void set_has_dwfailedplayerkey();
  inline void clear_has_dwfailedplayerkey();
  inline void set_has_dwerrorcode();
  inline void clear_has_dwerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwfailedplayerkey_;
  ::google::protobuf::int32 dwerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckExchangComplete* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMReqExchange : public ::google::protobuf::Message {
 public:
  GTtoGMReqExchange();
  virtual ~GTtoGMReqExchange();

  GTtoGMReqExchange(const GTtoGMReqExchange& from);

  inline GTtoGMReqExchange& operator=(const GTtoGMReqExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMReqExchange& default_instance();

  void Swap(GTtoGMReqExchange* other);

  // implements Message ----------------------------------------------

  GTtoGMReqExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMReqExchange& from);
  void MergeFrom(const GTtoGMReqExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 dwTraderID = 2;
  inline bool has_dwtraderid() const;
  inline void clear_dwtraderid();
  static const int kDwTraderIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwtraderid() const;
  inline void set_dwtraderid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTtoGMReqExchange)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dwtraderid();
  inline void clear_has_dwtraderid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 dwtraderid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMReqExchange* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMTraderReqRet : public ::google::protobuf::Message {
 public:
  GTtoGMTraderReqRet();
  virtual ~GTtoGMTraderReqRet();

  GTtoGMTraderReqRet(const GTtoGMTraderReqRet& from);

  inline GTtoGMTraderReqRet& operator=(const GTtoGMTraderReqRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMTraderReqRet& default_instance();

  void Swap(GTtoGMTraderReqRet* other);

  // implements Message ----------------------------------------------

  GTtoGMTraderReqRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMTraderReqRet& from);
  void MergeFrom(const GTtoGMTraderReqRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 dwSrcID = 2;
  inline bool has_dwsrcid() const;
  inline void clear_dwsrcid();
  static const int kDwSrcIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwsrcid() const;
  inline void set_dwsrcid(::google::protobuf::int32 value);

  // required int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTtoGMTraderReqRet)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dwsrcid();
  inline void clear_has_dwsrcid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 dwsrcid_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMTraderReqRet* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMCancelExchang : public ::google::protobuf::Message {
 public:
  GTtoGMCancelExchang();
  virtual ~GTtoGMCancelExchang();

  GTtoGMCancelExchang(const GTtoGMCancelExchang& from);

  inline GTtoGMCancelExchang& operator=(const GTtoGMCancelExchang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMCancelExchang& default_instance();

  void Swap(GTtoGMCancelExchang* other);

  // implements Message ----------------------------------------------

  GTtoGMCancelExchang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMCancelExchang& from);
  void MergeFrom(const GTtoGMCancelExchang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 dwPlayerID = 2;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTtoGMCancelExchang)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 dwplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMCancelExchang* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMReqReqLock : public ::google::protobuf::Message {
 public:
  GTtoGMReqReqLock();
  virtual ~GTtoGMReqReqLock();

  GTtoGMReqReqLock(const GTtoGMReqReqLock& from);

  inline GTtoGMReqReqLock& operator=(const GTtoGMReqReqLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMReqReqLock& default_instance();

  void Swap(GTtoGMReqReqLock* other);

  // implements Message ----------------------------------------------

  GTtoGMReqReqLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMReqReqLock& from);
  void MergeFrom(const GTtoGMReqReqLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 dwPlayerID = 2;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // repeated int32 dwPacketPos = 3;
  inline int dwpacketpos_size() const;
  inline void clear_dwpacketpos();
  static const int kDwPacketPosFieldNumber = 3;
  inline ::google::protobuf::int32 dwpacketpos(int index) const;
  inline void set_dwpacketpos(int index, ::google::protobuf::int32 value);
  inline void add_dwpacketpos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwpacketpos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwpacketpos();

  // required int32 dwMoney = 4;
  inline bool has_dwmoney() const;
  inline void clear_dwmoney();
  static const int kDwMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 dwmoney() const;
  inline void set_dwmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTtoGMReqReqLock)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();
  inline void set_has_dwmoney();
  inline void clear_has_dwmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwpacketpos_;
  ::google::protobuf::int32 dwplayerid_;
  ::google::protobuf::int32 dwmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMReqReqLock* default_instance_;
};
// -------------------------------------------------------------------

class GMToGTLockToOther : public ::google::protobuf::Message {
 public:
  GMToGTLockToOther();
  virtual ~GMToGTLockToOther();

  GMToGTLockToOther(const GMToGTLockToOther& from);

  inline GMToGTLockToOther& operator=(const GMToGTLockToOther& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToGTLockToOther& default_instance();

  void Swap(GMToGTLockToOther* other);

  // implements Message ----------------------------------------------

  GMToGTLockToOther* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToGTLockToOther& from);
  void MergeFrom(const GMToGTLockToOther& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 dwTraderID = 2;
  inline bool has_dwtraderid() const;
  inline void clear_dwtraderid();
  static const int kDwTraderIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwtraderid() const;
  inline void set_dwtraderid(::google::protobuf::int32 value);

  // repeated .CharLogin.ClientItemInfo propList = 3;
  inline int proplist_size() const;
  inline void clear_proplist();
  static const int kPropListFieldNumber = 3;
  inline const ::CharLogin::ClientItemInfo& proplist(int index) const;
  inline ::CharLogin::ClientItemInfo* mutable_proplist(int index);
  inline ::CharLogin::ClientItemInfo* add_proplist();
  inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
      proplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
      mutable_proplist();

  // required int32 dwMoney = 4;
  inline bool has_dwmoney() const;
  inline void clear_dwmoney();
  static const int kDwMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 dwmoney() const;
  inline void set_dwmoney(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GMToGTLockToOther)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dwtraderid();
  inline void clear_has_dwtraderid();
  inline void set_has_dwmoney();
  inline void clear_has_dwmoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo > proplist_;
  ::google::protobuf::int32 dwtraderid_;
  ::google::protobuf::int32 dwmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GMToGTLockToOther* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMVerifyExchang : public ::google::protobuf::Message {
 public:
  GTtoGMVerifyExchang();
  virtual ~GTtoGMVerifyExchang();

  GTtoGMVerifyExchang(const GTtoGMVerifyExchang& from);

  inline GTtoGMVerifyExchang& operator=(const GTtoGMVerifyExchang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMVerifyExchang& default_instance();

  void Swap(GTtoGMVerifyExchang* other);

  // implements Message ----------------------------------------------

  GTtoGMVerifyExchang* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMVerifyExchang& from);
  void MergeFrom(const GTtoGMVerifyExchang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 dwPlayerID = 2;
  inline bool has_dwplayerid() const;
  inline void clear_dwplayerid();
  static const int kDwPlayerIDFieldNumber = 2;
  inline ::google::protobuf::int32 dwplayerid() const;
  inline void set_dwplayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchang.GTtoGMVerifyExchang)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dwplayerid();
  inline void clear_has_dwplayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 dwplayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fExchangMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fExchangMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMVerifyExchang* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientReqExchange

// required int32 dwTraderID = 1;
inline bool ClientReqExchange::has_dwtraderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqExchange::set_has_dwtraderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqExchange::clear_has_dwtraderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqExchange::clear_dwtraderid() {
  dwtraderid_ = 0;
  clear_has_dwtraderid();
}
inline ::google::protobuf::int32 ClientReqExchange::dwtraderid() const {
  return dwtraderid_;
}
inline void ClientReqExchange::set_dwtraderid(::google::protobuf::int32 value) {
  set_has_dwtraderid();
  dwtraderid_ = value;
}

// -------------------------------------------------------------------

// GTAckSrcExchange

// required int32 dwTraderID = 1;
inline bool GTAckSrcExchange::has_dwtraderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckSrcExchange::set_has_dwtraderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckSrcExchange::clear_has_dwtraderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckSrcExchange::clear_dwtraderid() {
  dwtraderid_ = 0;
  clear_has_dwtraderid();
}
inline ::google::protobuf::int32 GTAckSrcExchange::dwtraderid() const {
  return dwtraderid_;
}
inline void GTAckSrcExchange::set_dwtraderid(::google::protobuf::int32 value) {
  set_has_dwtraderid();
  dwtraderid_ = value;
}

// required int32 dwErrorCode = 2;
inline bool GTAckSrcExchange::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckSrcExchange::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckSrcExchange::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckSrcExchange::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 GTAckSrcExchange::dwerrorcode() const {
  return dwerrorcode_;
}
inline void GTAckSrcExchange::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// -------------------------------------------------------------------

// GTAckReqExchange

// required int64 dwCharID = 1;
inline bool GTAckReqExchange::has_dwcharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckReqExchange::set_has_dwcharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckReqExchange::clear_has_dwcharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckReqExchange::clear_dwcharid() {
  dwcharid_ = GOOGLE_LONGLONG(0);
  clear_has_dwcharid();
}
inline ::google::protobuf::int64 GTAckReqExchange::dwcharid() const {
  return dwcharid_;
}
inline void GTAckReqExchange::set_dwcharid(::google::protobuf::int64 value) {
  set_has_dwcharid();
  dwcharid_ = value;
}

// -------------------------------------------------------------------

// TraderReqRet

// required int32 dwSrcID = 1;
inline bool TraderReqRet::has_dwsrcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TraderReqRet::set_has_dwsrcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TraderReqRet::clear_has_dwsrcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TraderReqRet::clear_dwsrcid() {
  dwsrcid_ = 0;
  clear_has_dwsrcid();
}
inline ::google::protobuf::int32 TraderReqRet::dwsrcid() const {
  return dwsrcid_;
}
inline void TraderReqRet::set_dwsrcid(::google::protobuf::int32 value) {
  set_has_dwsrcid();
  dwsrcid_ = value;
}

// required int32 status = 2;
inline bool TraderReqRet::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TraderReqRet::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TraderReqRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TraderReqRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TraderReqRet::status() const {
  return status_;
}
inline void TraderReqRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// GTAckOtherClientReqExchange

// required int32 dwCharID = 1;
inline bool GTAckOtherClientReqExchange::has_dwcharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckOtherClientReqExchange::set_has_dwcharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckOtherClientReqExchange::clear_has_dwcharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckOtherClientReqExchange::clear_dwcharid() {
  dwcharid_ = 0;
  clear_has_dwcharid();
}
inline ::google::protobuf::int32 GTAckOtherClientReqExchange::dwcharid() const {
  return dwcharid_;
}
inline void GTAckOtherClientReqExchange::set_dwcharid(::google::protobuf::int32 value) {
  set_has_dwcharid();
  dwcharid_ = value;
}

// required int32 dwErrorCode = 2;
inline bool GTAckOtherClientReqExchange::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckOtherClientReqExchange::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckOtherClientReqExchange::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckOtherClientReqExchange::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 GTAckOtherClientReqExchange::dwerrorcode() const {
  return dwerrorcode_;
}
inline void GTAckOtherClientReqExchange::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// -------------------------------------------------------------------

// GTAckToApplicant

// required int32 dwCharID = 1;
inline bool GTAckToApplicant::has_dwcharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckToApplicant::set_has_dwcharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckToApplicant::clear_has_dwcharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckToApplicant::clear_dwcharid() {
  dwcharid_ = 0;
  clear_has_dwcharid();
}
inline ::google::protobuf::int32 GTAckToApplicant::dwcharid() const {
  return dwcharid_;
}
inline void GTAckToApplicant::set_dwcharid(::google::protobuf::int32 value) {
  set_has_dwcharid();
  dwcharid_ = value;
}

// required int32 dwErrorCode = 2;
inline bool GTAckToApplicant::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckToApplicant::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckToApplicant::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckToApplicant::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 GTAckToApplicant::dwerrorcode() const {
  return dwerrorcode_;
}
inline void GTAckToApplicant::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// -------------------------------------------------------------------

// ClientReqCancelExchang

// required int32 dwPlayerID = 1;
inline bool ClientReqCancelExchang::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqCancelExchang::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqCancelExchang::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqCancelExchang::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 ClientReqCancelExchang::dwplayerid() const {
  return dwplayerid_;
}
inline void ClientReqCancelExchang::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}

// -------------------------------------------------------------------

// GTAckCancelExchang

// required int32 dwPlayerID = 1;
inline bool GTAckCancelExchang::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckCancelExchang::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckCancelExchang::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckCancelExchang::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 GTAckCancelExchang::dwplayerid() const {
  return dwplayerid_;
}
inline void GTAckCancelExchang::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}

// -------------------------------------------------------------------

// ClientReqLock

// required int32 dwPlayerID = 1;
inline bool ClientReqLock::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqLock::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqLock::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqLock::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 ClientReqLock::dwplayerid() const {
  return dwplayerid_;
}
inline void ClientReqLock::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}

// repeated int32 dwPacketPos = 2;
inline int ClientReqLock::dwpacketpos_size() const {
  return dwpacketpos_.size();
}
inline void ClientReqLock::clear_dwpacketpos() {
  dwpacketpos_.Clear();
}
inline ::google::protobuf::int32 ClientReqLock::dwpacketpos(int index) const {
  return dwpacketpos_.Get(index);
}
inline void ClientReqLock::set_dwpacketpos(int index, ::google::protobuf::int32 value) {
  dwpacketpos_.Set(index, value);
}
inline void ClientReqLock::add_dwpacketpos(::google::protobuf::int32 value) {
  dwpacketpos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientReqLock::dwpacketpos() const {
  return dwpacketpos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientReqLock::mutable_dwpacketpos() {
  return &dwpacketpos_;
}

// required int32 dwMoney = 3;
inline bool ClientReqLock::has_dwmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqLock::set_has_dwmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqLock::clear_has_dwmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqLock::clear_dwmoney() {
  dwmoney_ = 0;
  clear_has_dwmoney();
}
inline ::google::protobuf::int32 ClientReqLock::dwmoney() const {
  return dwmoney_;
}
inline void ClientReqLock::set_dwmoney(::google::protobuf::int32 value) {
  set_has_dwmoney();
  dwmoney_ = value;
}

// -------------------------------------------------------------------

// GTAckSrcReqLock

// required int32 dwErrorCode = 1;
inline bool GTAckSrcReqLock::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckSrcReqLock::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckSrcReqLock::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckSrcReqLock::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 GTAckSrcReqLock::dwerrorcode() const {
  return dwerrorcode_;
}
inline void GTAckSrcReqLock::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// -------------------------------------------------------------------

// GTAckReqLock

// required int32 dwTraderID = 1;
inline bool GTAckReqLock::has_dwtraderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckReqLock::set_has_dwtraderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckReqLock::clear_has_dwtraderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckReqLock::clear_dwtraderid() {
  dwtraderid_ = 0;
  clear_has_dwtraderid();
}
inline ::google::protobuf::int32 GTAckReqLock::dwtraderid() const {
  return dwtraderid_;
}
inline void GTAckReqLock::set_dwtraderid(::google::protobuf::int32 value) {
  set_has_dwtraderid();
  dwtraderid_ = value;
}

// repeated .CharLogin.ClientItemInfo propList = 2;
inline int GTAckReqLock::proplist_size() const {
  return proplist_.size();
}
inline void GTAckReqLock::clear_proplist() {
  proplist_.Clear();
}
inline const ::CharLogin::ClientItemInfo& GTAckReqLock::proplist(int index) const {
  return proplist_.Get(index);
}
inline ::CharLogin::ClientItemInfo* GTAckReqLock::mutable_proplist(int index) {
  return proplist_.Mutable(index);
}
inline ::CharLogin::ClientItemInfo* GTAckReqLock::add_proplist() {
  return proplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
GTAckReqLock::proplist() const {
  return proplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
GTAckReqLock::mutable_proplist() {
  return &proplist_;
}

// required int32 dwMoney = 3;
inline bool GTAckReqLock::has_dwmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTAckReqLock::set_has_dwmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTAckReqLock::clear_has_dwmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTAckReqLock::clear_dwmoney() {
  dwmoney_ = 0;
  clear_has_dwmoney();
}
inline ::google::protobuf::int32 GTAckReqLock::dwmoney() const {
  return dwmoney_;
}
inline void GTAckReqLock::set_dwmoney(::google::protobuf::int32 value) {
  set_has_dwmoney();
  dwmoney_ = value;
}

// -------------------------------------------------------------------

// ClientReqVerifyExchang

// required int32 dwPlayerID = 1;
inline bool ClientReqVerifyExchang::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqVerifyExchang::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqVerifyExchang::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqVerifyExchang::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 ClientReqVerifyExchang::dwplayerid() const {
  return dwplayerid_;
}
inline void ClientReqVerifyExchang::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}

// -------------------------------------------------------------------

// GTAckExchangComplete

// required int32 dwFailedPlayerKey = 1;
inline bool GTAckExchangComplete::has_dwfailedplayerkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckExchangComplete::set_has_dwfailedplayerkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckExchangComplete::clear_has_dwfailedplayerkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckExchangComplete::clear_dwfailedplayerkey() {
  dwfailedplayerkey_ = 0;
  clear_has_dwfailedplayerkey();
}
inline ::google::protobuf::int32 GTAckExchangComplete::dwfailedplayerkey() const {
  return dwfailedplayerkey_;
}
inline void GTAckExchangComplete::set_dwfailedplayerkey(::google::protobuf::int32 value) {
  set_has_dwfailedplayerkey();
  dwfailedplayerkey_ = value;
}

// required int32 dwErrorCode = 2;
inline bool GTAckExchangComplete::has_dwerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckExchangComplete::set_has_dwerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckExchangComplete::clear_has_dwerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckExchangComplete::clear_dwerrorcode() {
  dwerrorcode_ = 0;
  clear_has_dwerrorcode();
}
inline ::google::protobuf::int32 GTAckExchangComplete::dwerrorcode() const {
  return dwerrorcode_;
}
inline void GTAckExchangComplete::set_dwerrorcode(::google::protobuf::int32 value) {
  set_has_dwerrorcode();
  dwerrorcode_ = value;
}

// -------------------------------------------------------------------

// GTtoGMReqExchange

// required int64 charid = 1;
inline bool GTtoGMReqExchange::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMReqExchange::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMReqExchange::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMReqExchange::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMReqExchange::charid() const {
  return charid_;
}
inline void GTtoGMReqExchange::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 dwTraderID = 2;
inline bool GTtoGMReqExchange::has_dwtraderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMReqExchange::set_has_dwtraderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMReqExchange::clear_has_dwtraderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMReqExchange::clear_dwtraderid() {
  dwtraderid_ = 0;
  clear_has_dwtraderid();
}
inline ::google::protobuf::int32 GTtoGMReqExchange::dwtraderid() const {
  return dwtraderid_;
}
inline void GTtoGMReqExchange::set_dwtraderid(::google::protobuf::int32 value) {
  set_has_dwtraderid();
  dwtraderid_ = value;
}

// -------------------------------------------------------------------

// GTtoGMTraderReqRet

// required int64 charid = 1;
inline bool GTtoGMTraderReqRet::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMTraderReqRet::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMTraderReqRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMTraderReqRet::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMTraderReqRet::charid() const {
  return charid_;
}
inline void GTtoGMTraderReqRet::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 dwSrcID = 2;
inline bool GTtoGMTraderReqRet::has_dwsrcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMTraderReqRet::set_has_dwsrcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMTraderReqRet::clear_has_dwsrcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMTraderReqRet::clear_dwsrcid() {
  dwsrcid_ = 0;
  clear_has_dwsrcid();
}
inline ::google::protobuf::int32 GTtoGMTraderReqRet::dwsrcid() const {
  return dwsrcid_;
}
inline void GTtoGMTraderReqRet::set_dwsrcid(::google::protobuf::int32 value) {
  set_has_dwsrcid();
  dwsrcid_ = value;
}

// required int32 status = 3;
inline bool GTtoGMTraderReqRet::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTtoGMTraderReqRet::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTtoGMTraderReqRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTtoGMTraderReqRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GTtoGMTraderReqRet::status() const {
  return status_;
}
inline void GTtoGMTraderReqRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// GTtoGMCancelExchang

// required int64 charid = 1;
inline bool GTtoGMCancelExchang::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMCancelExchang::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMCancelExchang::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMCancelExchang::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMCancelExchang::charid() const {
  return charid_;
}
inline void GTtoGMCancelExchang::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 dwPlayerID = 2;
inline bool GTtoGMCancelExchang::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMCancelExchang::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMCancelExchang::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMCancelExchang::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 GTtoGMCancelExchang::dwplayerid() const {
  return dwplayerid_;
}
inline void GTtoGMCancelExchang::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}

// -------------------------------------------------------------------

// GTtoGMReqReqLock

// required int64 charid = 1;
inline bool GTtoGMReqReqLock::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMReqReqLock::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMReqReqLock::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMReqReqLock::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMReqReqLock::charid() const {
  return charid_;
}
inline void GTtoGMReqReqLock::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 dwPlayerID = 2;
inline bool GTtoGMReqReqLock::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMReqReqLock::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMReqReqLock::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMReqReqLock::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 GTtoGMReqReqLock::dwplayerid() const {
  return dwplayerid_;
}
inline void GTtoGMReqReqLock::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}

// repeated int32 dwPacketPos = 3;
inline int GTtoGMReqReqLock::dwpacketpos_size() const {
  return dwpacketpos_.size();
}
inline void GTtoGMReqReqLock::clear_dwpacketpos() {
  dwpacketpos_.Clear();
}
inline ::google::protobuf::int32 GTtoGMReqReqLock::dwpacketpos(int index) const {
  return dwpacketpos_.Get(index);
}
inline void GTtoGMReqReqLock::set_dwpacketpos(int index, ::google::protobuf::int32 value) {
  dwpacketpos_.Set(index, value);
}
inline void GTtoGMReqReqLock::add_dwpacketpos(::google::protobuf::int32 value) {
  dwpacketpos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GTtoGMReqReqLock::dwpacketpos() const {
  return dwpacketpos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GTtoGMReqReqLock::mutable_dwpacketpos() {
  return &dwpacketpos_;
}

// required int32 dwMoney = 4;
inline bool GTtoGMReqReqLock::has_dwmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GTtoGMReqReqLock::set_has_dwmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GTtoGMReqReqLock::clear_has_dwmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GTtoGMReqReqLock::clear_dwmoney() {
  dwmoney_ = 0;
  clear_has_dwmoney();
}
inline ::google::protobuf::int32 GTtoGMReqReqLock::dwmoney() const {
  return dwmoney_;
}
inline void GTtoGMReqReqLock::set_dwmoney(::google::protobuf::int32 value) {
  set_has_dwmoney();
  dwmoney_ = value;
}

// -------------------------------------------------------------------

// GMToGTLockToOther

// required int64 charid = 1;
inline bool GMToGTLockToOther::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToGTLockToOther::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToGTLockToOther::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToGTLockToOther::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GMToGTLockToOther::charid() const {
  return charid_;
}
inline void GMToGTLockToOther::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 dwTraderID = 2;
inline bool GMToGTLockToOther::has_dwtraderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMToGTLockToOther::set_has_dwtraderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMToGTLockToOther::clear_has_dwtraderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMToGTLockToOther::clear_dwtraderid() {
  dwtraderid_ = 0;
  clear_has_dwtraderid();
}
inline ::google::protobuf::int32 GMToGTLockToOther::dwtraderid() const {
  return dwtraderid_;
}
inline void GMToGTLockToOther::set_dwtraderid(::google::protobuf::int32 value) {
  set_has_dwtraderid();
  dwtraderid_ = value;
}

// repeated .CharLogin.ClientItemInfo propList = 3;
inline int GMToGTLockToOther::proplist_size() const {
  return proplist_.size();
}
inline void GMToGTLockToOther::clear_proplist() {
  proplist_.Clear();
}
inline const ::CharLogin::ClientItemInfo& GMToGTLockToOther::proplist(int index) const {
  return proplist_.Get(index);
}
inline ::CharLogin::ClientItemInfo* GMToGTLockToOther::mutable_proplist(int index) {
  return proplist_.Mutable(index);
}
inline ::CharLogin::ClientItemInfo* GMToGTLockToOther::add_proplist() {
  return proplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >&
GMToGTLockToOther::proplist() const {
  return proplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CharLogin::ClientItemInfo >*
GMToGTLockToOther::mutable_proplist() {
  return &proplist_;
}

// required int32 dwMoney = 4;
inline bool GMToGTLockToOther::has_dwmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMToGTLockToOther::set_has_dwmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMToGTLockToOther::clear_has_dwmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMToGTLockToOther::clear_dwmoney() {
  dwmoney_ = 0;
  clear_has_dwmoney();
}
inline ::google::protobuf::int32 GMToGTLockToOther::dwmoney() const {
  return dwmoney_;
}
inline void GMToGTLockToOther::set_dwmoney(::google::protobuf::int32 value) {
  set_has_dwmoney();
  dwmoney_ = value;
}

// -------------------------------------------------------------------

// GTtoGMVerifyExchang

// required int64 charid = 1;
inline bool GTtoGMVerifyExchang::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMVerifyExchang::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMVerifyExchang::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMVerifyExchang::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMVerifyExchang::charid() const {
  return charid_;
}
inline void GTtoGMVerifyExchang::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 dwPlayerID = 2;
inline bool GTtoGMVerifyExchang::has_dwplayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMVerifyExchang::set_has_dwplayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMVerifyExchang::clear_has_dwplayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMVerifyExchang::clear_dwplayerid() {
  dwplayerid_ = 0;
  clear_has_dwplayerid();
}
inline ::google::protobuf::int32 GTtoGMVerifyExchang::dwplayerid() const {
  return dwplayerid_;
}
inline void GTtoGMVerifyExchang::set_dwplayerid(::google::protobuf::int32 value) {
  set_has_dwplayerid();
  dwplayerid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Exchang

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fExchangMessage_2eproto__INCLUDED
