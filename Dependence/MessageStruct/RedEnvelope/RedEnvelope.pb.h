// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RedEnvelope/RedEnvelope.proto

#ifndef PROTOBUF_RedEnvelope_2fRedEnvelope_2eproto__INCLUDED
#define PROTOBUF_RedEnvelope_2fRedEnvelope_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace RedEnvelopeProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

class GetEnvelopeInfo;
class GetEnvelopeInfoList;
class Envelope;
class ReqEnvelopeList;
class RetEnvelopeList;
class ReqGetEnvelope;
class RetGetEnvelope;
class ReqSendEnvelope;
class RetSendEnvelope;
class ReqGetEnvelopeRecord;
class RetGetEnvelopeRecord;
class ReqGetEnvelopeReward;
class RetGetEnvelopeReward;
class ReqGMGetEnvelopeReward;
class RetGMGetEnvelopeReward;
class WSToAllGMAddEnvelope;
class WSToGMPlayerAddEnvelope;
class WSToEnvSenderByGet;

// ===================================================================

class GetEnvelopeInfo : public ::google::protobuf::Message {
 public:
  GetEnvelopeInfo();
  virtual ~GetEnvelopeInfo();

  GetEnvelopeInfo(const GetEnvelopeInfo& from);

  inline GetEnvelopeInfo& operator=(const GetEnvelopeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnvelopeInfo& default_instance();

  void Swap(GetEnvelopeInfo* other);

  // implements Message ----------------------------------------------

  GetEnvelopeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnvelopeInfo& from);
  void MergeFrom(const GetEnvelopeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required double getTime = 2;
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGetTimeFieldNumber = 2;
  inline double gettime() const;
  inline void set_gettime(double value);

  // required string getName = 3;
  inline bool has_getname() const;
  inline void clear_getname();
  static const int kGetNameFieldNumber = 3;
  inline const ::std::string& getname() const;
  inline void set_getname(const ::std::string& value);
  inline void set_getname(const char* value);
  inline void set_getname(const char* value, size_t size);
  inline ::std::string* mutable_getname();
  inline ::std::string* release_getname();
  inline void set_allocated_getname(::std::string* getname);

  // required int32 getBindGolden = 4;
  inline bool has_getbindgolden() const;
  inline void clear_getbindgolden();
  static const int kGetBindGoldenFieldNumber = 4;
  inline ::google::protobuf::int32 getbindgolden() const;
  inline void set_getbindgolden(::google::protobuf::int32 value);

  // optional string senderName = 5;
  inline bool has_sendername() const;
  inline void clear_sendername();
  static const int kSenderNameFieldNumber = 5;
  inline const ::std::string& sendername() const;
  inline void set_sendername(const ::std::string& value);
  inline void set_sendername(const char* value);
  inline void set_sendername(const char* value, size_t size);
  inline ::std::string* mutable_sendername();
  inline ::std::string* release_sendername();
  inline void set_allocated_sendername(::std::string* sendername);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.GetEnvelopeInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gettime();
  inline void clear_has_gettime();
  inline void set_has_getname();
  inline void clear_has_getname();
  inline void set_has_getbindgolden();
  inline void clear_has_getbindgolden();
  inline void set_has_sendername();
  inline void clear_has_sendername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  double gettime_;
  ::std::string* getname_;
  ::std::string* sendername_;
  ::google::protobuf::int32 getbindgolden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static GetEnvelopeInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetEnvelopeInfoList : public ::google::protobuf::Message {
 public:
  GetEnvelopeInfoList();
  virtual ~GetEnvelopeInfoList();

  GetEnvelopeInfoList(const GetEnvelopeInfoList& from);

  inline GetEnvelopeInfoList& operator=(const GetEnvelopeInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnvelopeInfoList& default_instance();

  void Swap(GetEnvelopeInfoList* other);

  // implements Message ----------------------------------------------

  GetEnvelopeInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnvelopeInfoList& from);
  void MergeFrom(const GetEnvelopeInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RedEnvelopeProto.GetEnvelopeInfo infoList = 1;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 1;
  inline const ::RedEnvelopeProto::GetEnvelopeInfo& infolist(int index) const;
  inline ::RedEnvelopeProto::GetEnvelopeInfo* mutable_infolist(int index);
  inline ::RedEnvelopeProto::GetEnvelopeInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >*
      mutable_infolist();

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.GetEnvelopeInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo > infolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static GetEnvelopeInfoList* default_instance_;
};
// -------------------------------------------------------------------

class Envelope : public ::google::protobuf::Message {
 public:
  Envelope();
  virtual ~Envelope();

  Envelope(const Envelope& from);

  inline Envelope& operator=(const Envelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Envelope& default_instance();

  void Swap(Envelope* other);

  // implements Message ----------------------------------------------

  Envelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Envelope& from);
  void MergeFrom(const Envelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sendName = 1;
  inline bool has_sendname() const;
  inline void clear_sendname();
  static const int kSendNameFieldNumber = 1;
  inline const ::std::string& sendname() const;
  inline void set_sendname(const ::std::string& value);
  inline void set_sendname(const char* value);
  inline void set_sendname(const char* value, size_t size);
  inline ::std::string* mutable_sendname();
  inline ::std::string* release_sendname();
  inline void set_allocated_sendname(::std::string* sendname);

  // required double sendTime = 2;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  inline double sendtime() const;
  inline void set_sendtime(double value);

  // required int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int32 envelopeID = 4;
  inline bool has_envelopeid() const;
  inline void clear_envelopeid();
  static const int kEnvelopeIDFieldNumber = 4;
  inline ::google::protobuf::int32 envelopeid() const;
  inline void set_envelopeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.Envelope)
 private:
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_envelopeid();
  inline void clear_has_envelopeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sendname_;
  double sendtime_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 envelopeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static Envelope* default_instance_;
};
// -------------------------------------------------------------------

class ReqEnvelopeList : public ::google::protobuf::Message {
 public:
  ReqEnvelopeList();
  virtual ~ReqEnvelopeList();

  ReqEnvelopeList(const ReqEnvelopeList& from);

  inline ReqEnvelopeList& operator=(const ReqEnvelopeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnvelopeList& default_instance();

  void Swap(ReqEnvelopeList* other);

  // implements Message ----------------------------------------------

  ReqEnvelopeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnvelopeList& from);
  void MergeFrom(const ReqEnvelopeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::int32 begin() const;
  inline void set_begin(::google::protobuf::int32 value);

  // required int32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::int32 end() const;
  inline void set_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.ReqEnvelopeList)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 begin_;
  ::google::protobuf::int32 end_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static ReqEnvelopeList* default_instance_;
};
// -------------------------------------------------------------------

class RetEnvelopeList : public ::google::protobuf::Message {
 public:
  RetEnvelopeList();
  virtual ~RetEnvelopeList();

  RetEnvelopeList(const RetEnvelopeList& from);

  inline RetEnvelopeList& operator=(const RetEnvelopeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetEnvelopeList& default_instance();

  void Swap(RetEnvelopeList* other);

  // implements Message ----------------------------------------------

  RetEnvelopeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetEnvelopeList& from);
  void MergeFrom(const RetEnvelopeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 totalCount = 2;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::int32 totalcount() const;
  inline void set_totalcount(::google::protobuf::int32 value);

  // repeated .RedEnvelopeProto.Envelope envelopeList = 3;
  inline int envelopelist_size() const;
  inline void clear_envelopelist();
  static const int kEnvelopeListFieldNumber = 3;
  inline const ::RedEnvelopeProto::Envelope& envelopelist(int index) const;
  inline ::RedEnvelopeProto::Envelope* mutable_envelopelist(int index);
  inline ::RedEnvelopeProto::Envelope* add_envelopelist();
  inline const ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::Envelope >&
      envelopelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::Envelope >*
      mutable_envelopelist();

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.RetEnvelopeList)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::Envelope > envelopelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static RetEnvelopeList* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetEnvelope : public ::google::protobuf::Message {
 public:
  ReqGetEnvelope();
  virtual ~ReqGetEnvelope();

  ReqGetEnvelope(const ReqGetEnvelope& from);

  inline ReqGetEnvelope& operator=(const ReqGetEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetEnvelope& default_instance();

  void Swap(ReqGetEnvelope* other);

  // implements Message ----------------------------------------------

  ReqGetEnvelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetEnvelope& from);
  void MergeFrom(const ReqGetEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 op = 1;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 1;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);

  // optional int32 envelopeID = 2;
  inline bool has_envelopeid() const;
  inline void clear_envelopeid();
  static const int kEnvelopeIDFieldNumber = 2;
  inline ::google::protobuf::int32 envelopeid() const;
  inline void set_envelopeid(::google::protobuf::int32 value);

  // optional int64 charID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 canGetCount = 4;
  inline bool has_cangetcount() const;
  inline void clear_cangetcount();
  static const int kCanGetCountFieldNumber = 4;
  inline ::google::protobuf::int32 cangetcount() const;
  inline void set_cangetcount(::google::protobuf::int32 value);

  // optional int32 isOnLine = 5;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsOnLineFieldNumber = 5;
  inline ::google::protobuf::int32 isonline() const;
  inline void set_isonline(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.ReqGetEnvelope)
 private:
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_envelopeid();
  inline void clear_has_envelopeid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_cangetcount();
  inline void clear_has_cangetcount();
  inline void set_has_isonline();
  inline void clear_has_isonline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 op_;
  ::google::protobuf::int32 envelopeid_;
  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 cangetcount_;
  ::google::protobuf::int32 isonline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static ReqGetEnvelope* default_instance_;
};
// -------------------------------------------------------------------

class RetGetEnvelope : public ::google::protobuf::Message {
 public:
  RetGetEnvelope();
  virtual ~RetGetEnvelope();

  RetGetEnvelope(const RetGetEnvelope& from);

  inline RetGetEnvelope& operator=(const RetGetEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGetEnvelope& default_instance();

  void Swap(RetGetEnvelope* other);

  // implements Message ----------------------------------------------

  RetGetEnvelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGetEnvelope& from);
  void MergeFrom(const RetGetEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated int32 envelopIdList = 2;
  inline int envelopidlist_size() const;
  inline void clear_envelopidlist();
  static const int kEnvelopIdListFieldNumber = 2;
  inline ::google::protobuf::int32 envelopidlist(int index) const;
  inline void set_envelopidlist(int index, ::google::protobuf::int32 value);
  inline void add_envelopidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      envelopidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_envelopidlist();

  // optional int64 charID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 getBindGolden = 4;
  inline bool has_getbindgolden() const;
  inline void clear_getbindgolden();
  static const int kGetBindGoldenFieldNumber = 4;
  inline ::google::protobuf::int32 getbindgolden() const;
  inline void set_getbindgolden(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.RetGetEnvelope)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_getbindgolden();
  inline void clear_has_getbindgolden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > envelopidlist_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 getbindgolden_;
  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static RetGetEnvelope* default_instance_;
};
// -------------------------------------------------------------------

class ReqSendEnvelope : public ::google::protobuf::Message {
 public:
  ReqSendEnvelope();
  virtual ~ReqSendEnvelope();

  ReqSendEnvelope(const ReqSendEnvelope& from);

  inline ReqSendEnvelope& operator=(const ReqSendEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSendEnvelope& default_instance();

  void Swap(ReqSendEnvelope* other);

  // implements Message ----------------------------------------------

  ReqSendEnvelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSendEnvelope& from);
  void MergeFrom(const ReqSendEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 country = 4;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 4;
  inline ::google::protobuf::int32 country() const;
  inline void set_country(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.ReqSendEnvelope)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_country();
  inline void clear_has_country();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 country_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static ReqSendEnvelope* default_instance_;
};
// -------------------------------------------------------------------

class RetSendEnvelope : public ::google::protobuf::Message {
 public:
  RetSendEnvelope();
  virtual ~RetSendEnvelope();

  RetSendEnvelope(const RetSendEnvelope& from);

  inline RetSendEnvelope& operator=(const RetSendEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetSendEnvelope& default_instance();

  void Swap(RetSendEnvelope* other);

  // implements Message ----------------------------------------------

  RetSendEnvelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetSendEnvelope& from);
  void MergeFrom(const RetSendEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.RetSendEnvelope)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static RetSendEnvelope* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetEnvelopeRecord : public ::google::protobuf::Message {
 public:
  ReqGetEnvelopeRecord();
  virtual ~ReqGetEnvelopeRecord();

  ReqGetEnvelopeRecord(const ReqGetEnvelopeRecord& from);

  inline ReqGetEnvelopeRecord& operator=(const ReqGetEnvelopeRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetEnvelopeRecord& default_instance();

  void Swap(ReqGetEnvelopeRecord* other);

  // implements Message ----------------------------------------------

  ReqGetEnvelopeRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetEnvelopeRecord& from);
  void MergeFrom(const ReqGetEnvelopeRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::int32 begin() const;
  inline void set_begin(::google::protobuf::int32 value);

  // required int32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::int32 end() const;
  inline void set_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.ReqGetEnvelopeRecord)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 begin_;
  ::google::protobuf::int32 end_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static ReqGetEnvelopeRecord* default_instance_;
};
// -------------------------------------------------------------------

class RetGetEnvelopeRecord : public ::google::protobuf::Message {
 public:
  RetGetEnvelopeRecord();
  virtual ~RetGetEnvelopeRecord();

  RetGetEnvelopeRecord(const RetGetEnvelopeRecord& from);

  inline RetGetEnvelopeRecord& operator=(const RetGetEnvelopeRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGetEnvelopeRecord& default_instance();

  void Swap(RetGetEnvelopeRecord* other);

  // implements Message ----------------------------------------------

  RetGetEnvelopeRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGetEnvelopeRecord& from);
  void MergeFrom(const RetGetEnvelopeRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 totalCount = 2;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::int32 totalcount() const;
  inline void set_totalcount(::google::protobuf::int32 value);

  // repeated .RedEnvelopeProto.GetEnvelopeInfo infoList = 3;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 3;
  inline const ::RedEnvelopeProto::GetEnvelopeInfo& infolist(int index) const;
  inline ::RedEnvelopeProto::GetEnvelopeInfo* mutable_infolist(int index);
  inline ::RedEnvelopeProto::GetEnvelopeInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >*
      mutable_infolist();

  // optional int32 getCount = 4;
  inline bool has_getcount() const;
  inline void clear_getcount();
  static const int kGetCountFieldNumber = 4;
  inline ::google::protobuf::int32 getcount() const;
  inline void set_getcount(::google::protobuf::int32 value);

  // optional int32 accumulateCount = 5;
  inline bool has_accumulatecount() const;
  inline void clear_accumulatecount();
  static const int kAccumulateCountFieldNumber = 5;
  inline ::google::protobuf::int32 accumulatecount() const;
  inline void set_accumulatecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.RetGetEnvelopeRecord)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();
  inline void set_has_getcount();
  inline void clear_has_getcount();
  inline void set_has_accumulatecount();
  inline void clear_has_accumulatecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo > infolist_;
  ::google::protobuf::int32 getcount_;
  ::google::protobuf::int32 accumulatecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static RetGetEnvelopeRecord* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetEnvelopeReward : public ::google::protobuf::Message {
 public:
  ReqGetEnvelopeReward();
  virtual ~ReqGetEnvelopeReward();

  ReqGetEnvelopeReward(const ReqGetEnvelopeReward& from);

  inline ReqGetEnvelopeReward& operator=(const ReqGetEnvelopeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetEnvelopeReward& default_instance();

  void Swap(ReqGetEnvelopeReward* other);

  // implements Message ----------------------------------------------

  ReqGetEnvelopeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetEnvelopeReward& from);
  void MergeFrom(const ReqGetEnvelopeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 op = 1;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 1;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.ReqGetEnvelopeReward)
 private:
  inline void set_has_op();
  inline void clear_has_op();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 op_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static ReqGetEnvelopeReward* default_instance_;
};
// -------------------------------------------------------------------

class RetGetEnvelopeReward : public ::google::protobuf::Message {
 public:
  RetGetEnvelopeReward();
  virtual ~RetGetEnvelopeReward();

  RetGetEnvelopeReward(const RetGetEnvelopeReward& from);

  inline RetGetEnvelopeReward& operator=(const RetGetEnvelopeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGetEnvelopeReward& default_instance();

  void Swap(RetGetEnvelopeReward* other);

  // implements Message ----------------------------------------------

  RetGetEnvelopeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGetEnvelopeReward& from);
  void MergeFrom(const RetGetEnvelopeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 op = 2;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 2;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.RetGetEnvelopeReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_op();
  inline void clear_has_op();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 op_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static RetGetEnvelopeReward* default_instance_;
};
// -------------------------------------------------------------------

class ReqGMGetEnvelopeReward : public ::google::protobuf::Message {
 public:
  ReqGMGetEnvelopeReward();
  virtual ~ReqGMGetEnvelopeReward();

  ReqGMGetEnvelopeReward(const ReqGMGetEnvelopeReward& from);

  inline ReqGMGetEnvelopeReward& operator=(const ReqGMGetEnvelopeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGMGetEnvelopeReward& default_instance();

  void Swap(ReqGMGetEnvelopeReward* other);

  // implements Message ----------------------------------------------

  ReqGMGetEnvelopeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGMGetEnvelopeReward& from);
  void MergeFrom(const ReqGMGetEnvelopeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 op = 1;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 1;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);

  // required int64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.ReqGMGetEnvelopeReward)
 private:
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 op_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static ReqGMGetEnvelopeReward* default_instance_;
};
// -------------------------------------------------------------------

class RetGMGetEnvelopeReward : public ::google::protobuf::Message {
 public:
  RetGMGetEnvelopeReward();
  virtual ~RetGMGetEnvelopeReward();

  RetGMGetEnvelopeReward(const RetGMGetEnvelopeReward& from);

  inline RetGMGetEnvelopeReward& operator=(const RetGMGetEnvelopeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGMGetEnvelopeReward& default_instance();

  void Swap(RetGMGetEnvelopeReward* other);

  // implements Message ----------------------------------------------

  RetGMGetEnvelopeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGMGetEnvelopeReward& from);
  void MergeFrom(const RetGMGetEnvelopeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required int64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .RedEnvelopeProto.ReqGMGetEnvelopeReward getInfo = 3;
  inline bool has_getinfo() const;
  inline void clear_getinfo();
  static const int kGetInfoFieldNumber = 3;
  inline const ::RedEnvelopeProto::ReqGMGetEnvelopeReward& getinfo() const;
  inline ::RedEnvelopeProto::ReqGMGetEnvelopeReward* mutable_getinfo();
  inline ::RedEnvelopeProto::ReqGMGetEnvelopeReward* release_getinfo();
  inline void set_allocated_getinfo(::RedEnvelopeProto::ReqGMGetEnvelopeReward* getinfo);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.RetGMGetEnvelopeReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_getinfo();
  inline void clear_has_getinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::RedEnvelopeProto::ReqGMGetEnvelopeReward* getinfo_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static RetGMGetEnvelopeReward* default_instance_;
};
// -------------------------------------------------------------------

class WSToAllGMAddEnvelope : public ::google::protobuf::Message {
 public:
  WSToAllGMAddEnvelope();
  virtual ~WSToAllGMAddEnvelope();

  WSToAllGMAddEnvelope(const WSToAllGMAddEnvelope& from);

  inline WSToAllGMAddEnvelope& operator=(const WSToAllGMAddEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToAllGMAddEnvelope& default_instance();

  void Swap(WSToAllGMAddEnvelope* other);

  // implements Message ----------------------------------------------

  WSToAllGMAddEnvelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToAllGMAddEnvelope& from);
  void MergeFrom(const WSToAllGMAddEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 country = 1;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 1;
  inline ::google::protobuf::int32 country() const;
  inline void set_country(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required bool flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline bool flag() const;
  inline void set_flag(bool value);

  // repeated int64 charID = 4;
  inline int charid_size() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::int64 charid(int index) const;
  inline void set_charid(int index, ::google::protobuf::int64 value);
  inline void add_charid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      charid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_charid();

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.WSToAllGMAddEnvelope)
 private:
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 country_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > charid_;
  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static WSToAllGMAddEnvelope* default_instance_;
};
// -------------------------------------------------------------------

class WSToGMPlayerAddEnvelope : public ::google::protobuf::Message {
 public:
  WSToGMPlayerAddEnvelope();
  virtual ~WSToGMPlayerAddEnvelope();

  WSToGMPlayerAddEnvelope(const WSToGMPlayerAddEnvelope& from);

  inline WSToGMPlayerAddEnvelope& operator=(const WSToGMPlayerAddEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToGMPlayerAddEnvelope& default_instance();

  void Swap(WSToGMPlayerAddEnvelope* other);

  // implements Message ----------------------------------------------

  WSToGMPlayerAddEnvelope* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToGMPlayerAddEnvelope& from);
  void MergeFrom(const WSToGMPlayerAddEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 country = 2;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 2;
  inline ::google::protobuf::int32 country() const;
  inline void set_country(::google::protobuf::int32 value);

  // required int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.WSToGMPlayerAddEnvelope)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 country_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static WSToGMPlayerAddEnvelope* default_instance_;
};
// -------------------------------------------------------------------

class WSToEnvSenderByGet : public ::google::protobuf::Message {
 public:
  WSToEnvSenderByGet();
  virtual ~WSToEnvSenderByGet();

  WSToEnvSenderByGet(const WSToEnvSenderByGet& from);

  inline WSToEnvSenderByGet& operator=(const WSToEnvSenderByGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToEnvSenderByGet& default_instance();

  void Swap(WSToEnvSenderByGet* other);

  // implements Message ----------------------------------------------

  WSToEnvSenderByGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToEnvSenderByGet& from);
  void MergeFrom(const WSToEnvSenderByGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RedEnvelopeProto.WSToEnvSenderByGet)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_AssignDesc_RedEnvelope_2fRedEnvelope_2eproto();
  friend void protobuf_ShutdownFile_RedEnvelope_2fRedEnvelope_2eproto();

  void InitAsDefaultInstance();
  static WSToEnvSenderByGet* default_instance_;
};
// ===================================================================


// ===================================================================

// GetEnvelopeInfo

// required int64 charID = 1;
inline bool GetEnvelopeInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEnvelopeInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEnvelopeInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEnvelopeInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GetEnvelopeInfo::charid() const {
  return charid_;
}
inline void GetEnvelopeInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required double getTime = 2;
inline bool GetEnvelopeInfo::has_gettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEnvelopeInfo::set_has_gettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEnvelopeInfo::clear_has_gettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEnvelopeInfo::clear_gettime() {
  gettime_ = 0;
  clear_has_gettime();
}
inline double GetEnvelopeInfo::gettime() const {
  return gettime_;
}
inline void GetEnvelopeInfo::set_gettime(double value) {
  set_has_gettime();
  gettime_ = value;
}

// required string getName = 3;
inline bool GetEnvelopeInfo::has_getname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetEnvelopeInfo::set_has_getname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetEnvelopeInfo::clear_has_getname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetEnvelopeInfo::clear_getname() {
  if (getname_ != &::google::protobuf::internal::kEmptyString) {
    getname_->clear();
  }
  clear_has_getname();
}
inline const ::std::string& GetEnvelopeInfo::getname() const {
  return *getname_;
}
inline void GetEnvelopeInfo::set_getname(const ::std::string& value) {
  set_has_getname();
  if (getname_ == &::google::protobuf::internal::kEmptyString) {
    getname_ = new ::std::string;
  }
  getname_->assign(value);
}
inline void GetEnvelopeInfo::set_getname(const char* value) {
  set_has_getname();
  if (getname_ == &::google::protobuf::internal::kEmptyString) {
    getname_ = new ::std::string;
  }
  getname_->assign(value);
}
inline void GetEnvelopeInfo::set_getname(const char* value, size_t size) {
  set_has_getname();
  if (getname_ == &::google::protobuf::internal::kEmptyString) {
    getname_ = new ::std::string;
  }
  getname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetEnvelopeInfo::mutable_getname() {
  set_has_getname();
  if (getname_ == &::google::protobuf::internal::kEmptyString) {
    getname_ = new ::std::string;
  }
  return getname_;
}
inline ::std::string* GetEnvelopeInfo::release_getname() {
  clear_has_getname();
  if (getname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = getname_;
    getname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetEnvelopeInfo::set_allocated_getname(::std::string* getname) {
  if (getname_ != &::google::protobuf::internal::kEmptyString) {
    delete getname_;
  }
  if (getname) {
    set_has_getname();
    getname_ = getname;
  } else {
    clear_has_getname();
    getname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 getBindGolden = 4;
inline bool GetEnvelopeInfo::has_getbindgolden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetEnvelopeInfo::set_has_getbindgolden() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetEnvelopeInfo::clear_has_getbindgolden() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetEnvelopeInfo::clear_getbindgolden() {
  getbindgolden_ = 0;
  clear_has_getbindgolden();
}
inline ::google::protobuf::int32 GetEnvelopeInfo::getbindgolden() const {
  return getbindgolden_;
}
inline void GetEnvelopeInfo::set_getbindgolden(::google::protobuf::int32 value) {
  set_has_getbindgolden();
  getbindgolden_ = value;
}

// optional string senderName = 5;
inline bool GetEnvelopeInfo::has_sendername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetEnvelopeInfo::set_has_sendername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetEnvelopeInfo::clear_has_sendername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetEnvelopeInfo::clear_sendername() {
  if (sendername_ != &::google::protobuf::internal::kEmptyString) {
    sendername_->clear();
  }
  clear_has_sendername();
}
inline const ::std::string& GetEnvelopeInfo::sendername() const {
  return *sendername_;
}
inline void GetEnvelopeInfo::set_sendername(const ::std::string& value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
}
inline void GetEnvelopeInfo::set_sendername(const char* value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
}
inline void GetEnvelopeInfo::set_sendername(const char* value, size_t size) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetEnvelopeInfo::mutable_sendername() {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  return sendername_;
}
inline ::std::string* GetEnvelopeInfo::release_sendername() {
  clear_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendername_;
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetEnvelopeInfo::set_allocated_sendername(::std::string* sendername) {
  if (sendername_ != &::google::protobuf::internal::kEmptyString) {
    delete sendername_;
  }
  if (sendername) {
    set_has_sendername();
    sendername_ = sendername;
  } else {
    clear_has_sendername();
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetEnvelopeInfoList

// repeated .RedEnvelopeProto.GetEnvelopeInfo infoList = 1;
inline int GetEnvelopeInfoList::infolist_size() const {
  return infolist_.size();
}
inline void GetEnvelopeInfoList::clear_infolist() {
  infolist_.Clear();
}
inline const ::RedEnvelopeProto::GetEnvelopeInfo& GetEnvelopeInfoList::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::RedEnvelopeProto::GetEnvelopeInfo* GetEnvelopeInfoList::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::RedEnvelopeProto::GetEnvelopeInfo* GetEnvelopeInfoList::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >&
GetEnvelopeInfoList::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >*
GetEnvelopeInfoList::mutable_infolist() {
  return &infolist_;
}

// -------------------------------------------------------------------

// Envelope

// required string sendName = 1;
inline bool Envelope::has_sendname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Envelope::set_has_sendname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Envelope::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Envelope::clear_sendname() {
  if (sendname_ != &::google::protobuf::internal::kEmptyString) {
    sendname_->clear();
  }
  clear_has_sendname();
}
inline const ::std::string& Envelope::sendname() const {
  return *sendname_;
}
inline void Envelope::set_sendname(const ::std::string& value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
}
inline void Envelope::set_sendname(const char* value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
}
inline void Envelope::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Envelope::mutable_sendname() {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  return sendname_;
}
inline ::std::string* Envelope::release_sendname() {
  clear_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendname_;
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Envelope::set_allocated_sendname(::std::string* sendname) {
  if (sendname_ != &::google::protobuf::internal::kEmptyString) {
    delete sendname_;
  }
  if (sendname) {
    set_has_sendname();
    sendname_ = sendname;
  } else {
    clear_has_sendname();
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required double sendTime = 2;
inline bool Envelope::has_sendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Envelope::set_has_sendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Envelope::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Envelope::clear_sendtime() {
  sendtime_ = 0;
  clear_has_sendtime();
}
inline double Envelope::sendtime() const {
  return sendtime_;
}
inline void Envelope::set_sendtime(double value) {
  set_has_sendtime();
  sendtime_ = value;
}

// required int32 state = 3;
inline bool Envelope::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Envelope::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Envelope::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Envelope::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Envelope::state() const {
  return state_;
}
inline void Envelope::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required int32 envelopeID = 4;
inline bool Envelope::has_envelopeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Envelope::set_has_envelopeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Envelope::clear_has_envelopeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Envelope::clear_envelopeid() {
  envelopeid_ = 0;
  clear_has_envelopeid();
}
inline ::google::protobuf::int32 Envelope::envelopeid() const {
  return envelopeid_;
}
inline void Envelope::set_envelopeid(::google::protobuf::int32 value) {
  set_has_envelopeid();
  envelopeid_ = value;
}

// -------------------------------------------------------------------

// ReqEnvelopeList

// required int32 begin = 1;
inline bool ReqEnvelopeList::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqEnvelopeList::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqEnvelopeList::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqEnvelopeList::clear_begin() {
  begin_ = 0;
  clear_has_begin();
}
inline ::google::protobuf::int32 ReqEnvelopeList::begin() const {
  return begin_;
}
inline void ReqEnvelopeList::set_begin(::google::protobuf::int32 value) {
  set_has_begin();
  begin_ = value;
}

// required int32 end = 2;
inline bool ReqEnvelopeList::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqEnvelopeList::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqEnvelopeList::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqEnvelopeList::clear_end() {
  end_ = 0;
  clear_has_end();
}
inline ::google::protobuf::int32 ReqEnvelopeList::end() const {
  return end_;
}
inline void ReqEnvelopeList::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// RetEnvelopeList

// required int32 ret = 1;
inline bool RetEnvelopeList::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetEnvelopeList::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetEnvelopeList::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetEnvelopeList::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetEnvelopeList::ret() const {
  return ret_;
}
inline void RetEnvelopeList::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 totalCount = 2;
inline bool RetEnvelopeList::has_totalcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetEnvelopeList::set_has_totalcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetEnvelopeList::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetEnvelopeList::clear_totalcount() {
  totalcount_ = 0;
  clear_has_totalcount();
}
inline ::google::protobuf::int32 RetEnvelopeList::totalcount() const {
  return totalcount_;
}
inline void RetEnvelopeList::set_totalcount(::google::protobuf::int32 value) {
  set_has_totalcount();
  totalcount_ = value;
}

// repeated .RedEnvelopeProto.Envelope envelopeList = 3;
inline int RetEnvelopeList::envelopelist_size() const {
  return envelopelist_.size();
}
inline void RetEnvelopeList::clear_envelopelist() {
  envelopelist_.Clear();
}
inline const ::RedEnvelopeProto::Envelope& RetEnvelopeList::envelopelist(int index) const {
  return envelopelist_.Get(index);
}
inline ::RedEnvelopeProto::Envelope* RetEnvelopeList::mutable_envelopelist(int index) {
  return envelopelist_.Mutable(index);
}
inline ::RedEnvelopeProto::Envelope* RetEnvelopeList::add_envelopelist() {
  return envelopelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::Envelope >&
RetEnvelopeList::envelopelist() const {
  return envelopelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::Envelope >*
RetEnvelopeList::mutable_envelopelist() {
  return &envelopelist_;
}

// -------------------------------------------------------------------

// ReqGetEnvelope

// required int32 op = 1;
inline bool ReqGetEnvelope::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetEnvelope::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetEnvelope::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetEnvelope::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 ReqGetEnvelope::op() const {
  return op_;
}
inline void ReqGetEnvelope::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// optional int32 envelopeID = 2;
inline bool ReqGetEnvelope::has_envelopeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGetEnvelope::set_has_envelopeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGetEnvelope::clear_has_envelopeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGetEnvelope::clear_envelopeid() {
  envelopeid_ = 0;
  clear_has_envelopeid();
}
inline ::google::protobuf::int32 ReqGetEnvelope::envelopeid() const {
  return envelopeid_;
}
inline void ReqGetEnvelope::set_envelopeid(::google::protobuf::int32 value) {
  set_has_envelopeid();
  envelopeid_ = value;
}

// optional int64 charID = 3;
inline bool ReqGetEnvelope::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqGetEnvelope::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqGetEnvelope::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqGetEnvelope::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqGetEnvelope::charid() const {
  return charid_;
}
inline void ReqGetEnvelope::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 canGetCount = 4;
inline bool ReqGetEnvelope::has_cangetcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqGetEnvelope::set_has_cangetcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqGetEnvelope::clear_has_cangetcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqGetEnvelope::clear_cangetcount() {
  cangetcount_ = 0;
  clear_has_cangetcount();
}
inline ::google::protobuf::int32 ReqGetEnvelope::cangetcount() const {
  return cangetcount_;
}
inline void ReqGetEnvelope::set_cangetcount(::google::protobuf::int32 value) {
  set_has_cangetcount();
  cangetcount_ = value;
}

// optional int32 isOnLine = 5;
inline bool ReqGetEnvelope::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqGetEnvelope::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqGetEnvelope::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqGetEnvelope::clear_isonline() {
  isonline_ = 0;
  clear_has_isonline();
}
inline ::google::protobuf::int32 ReqGetEnvelope::isonline() const {
  return isonline_;
}
inline void ReqGetEnvelope::set_isonline(::google::protobuf::int32 value) {
  set_has_isonline();
  isonline_ = value;
}

// -------------------------------------------------------------------

// RetGetEnvelope

// required int32 ret = 1;
inline bool RetGetEnvelope::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGetEnvelope::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGetEnvelope::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGetEnvelope::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGetEnvelope::ret() const {
  return ret_;
}
inline void RetGetEnvelope::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated int32 envelopIdList = 2;
inline int RetGetEnvelope::envelopidlist_size() const {
  return envelopidlist_.size();
}
inline void RetGetEnvelope::clear_envelopidlist() {
  envelopidlist_.Clear();
}
inline ::google::protobuf::int32 RetGetEnvelope::envelopidlist(int index) const {
  return envelopidlist_.Get(index);
}
inline void RetGetEnvelope::set_envelopidlist(int index, ::google::protobuf::int32 value) {
  envelopidlist_.Set(index, value);
}
inline void RetGetEnvelope::add_envelopidlist(::google::protobuf::int32 value) {
  envelopidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RetGetEnvelope::envelopidlist() const {
  return envelopidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RetGetEnvelope::mutable_envelopidlist() {
  return &envelopidlist_;
}

// optional int64 charID = 3;
inline bool RetGetEnvelope::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetGetEnvelope::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetGetEnvelope::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetGetEnvelope::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 RetGetEnvelope::charid() const {
  return charid_;
}
inline void RetGetEnvelope::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 getBindGolden = 4;
inline bool RetGetEnvelope::has_getbindgolden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetGetEnvelope::set_has_getbindgolden() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetGetEnvelope::clear_has_getbindgolden() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetGetEnvelope::clear_getbindgolden() {
  getbindgolden_ = 0;
  clear_has_getbindgolden();
}
inline ::google::protobuf::int32 RetGetEnvelope::getbindgolden() const {
  return getbindgolden_;
}
inline void RetGetEnvelope::set_getbindgolden(::google::protobuf::int32 value) {
  set_has_getbindgolden();
  getbindgolden_ = value;
}

// -------------------------------------------------------------------

// ReqSendEnvelope

// required int32 count = 1;
inline bool ReqSendEnvelope::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSendEnvelope::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSendEnvelope::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSendEnvelope::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ReqSendEnvelope::count() const {
  return count_;
}
inline void ReqSendEnvelope::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int64 charID = 2;
inline bool ReqSendEnvelope::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqSendEnvelope::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqSendEnvelope::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqSendEnvelope::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqSendEnvelope::charid() const {
  return charid_;
}
inline void ReqSendEnvelope::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 3;
inline bool ReqSendEnvelope::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqSendEnvelope::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqSendEnvelope::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqSendEnvelope::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ReqSendEnvelope::name() const {
  return *name_;
}
inline void ReqSendEnvelope::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReqSendEnvelope::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReqSendEnvelope::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqSendEnvelope::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ReqSendEnvelope::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ReqSendEnvelope::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 country = 4;
inline bool ReqSendEnvelope::has_country() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqSendEnvelope::set_has_country() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqSendEnvelope::clear_has_country() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqSendEnvelope::clear_country() {
  country_ = 0;
  clear_has_country();
}
inline ::google::protobuf::int32 ReqSendEnvelope::country() const {
  return country_;
}
inline void ReqSendEnvelope::set_country(::google::protobuf::int32 value) {
  set_has_country();
  country_ = value;
}

// -------------------------------------------------------------------

// RetSendEnvelope

// required int32 ret = 1;
inline bool RetSendEnvelope::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetSendEnvelope::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetSendEnvelope::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetSendEnvelope::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetSendEnvelope::ret() const {
  return ret_;
}
inline void RetSendEnvelope::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 charID = 2;
inline bool RetSendEnvelope::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetSendEnvelope::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetSendEnvelope::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetSendEnvelope::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 RetSendEnvelope::charid() const {
  return charid_;
}
inline void RetSendEnvelope::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 count = 3;
inline bool RetSendEnvelope::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetSendEnvelope::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetSendEnvelope::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetSendEnvelope::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 RetSendEnvelope::count() const {
  return count_;
}
inline void RetSendEnvelope::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// ReqGetEnvelopeRecord

// required int32 begin = 1;
inline bool ReqGetEnvelopeRecord::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetEnvelopeRecord::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetEnvelopeRecord::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetEnvelopeRecord::clear_begin() {
  begin_ = 0;
  clear_has_begin();
}
inline ::google::protobuf::int32 ReqGetEnvelopeRecord::begin() const {
  return begin_;
}
inline void ReqGetEnvelopeRecord::set_begin(::google::protobuf::int32 value) {
  set_has_begin();
  begin_ = value;
}

// required int32 end = 2;
inline bool ReqGetEnvelopeRecord::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGetEnvelopeRecord::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGetEnvelopeRecord::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGetEnvelopeRecord::clear_end() {
  end_ = 0;
  clear_has_end();
}
inline ::google::protobuf::int32 ReqGetEnvelopeRecord::end() const {
  return end_;
}
inline void ReqGetEnvelopeRecord::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// RetGetEnvelopeRecord

// required int32 ret = 1;
inline bool RetGetEnvelopeRecord::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGetEnvelopeRecord::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGetEnvelopeRecord::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGetEnvelopeRecord::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGetEnvelopeRecord::ret() const {
  return ret_;
}
inline void RetGetEnvelopeRecord::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 totalCount = 2;
inline bool RetGetEnvelopeRecord::has_totalcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetGetEnvelopeRecord::set_has_totalcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetGetEnvelopeRecord::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetGetEnvelopeRecord::clear_totalcount() {
  totalcount_ = 0;
  clear_has_totalcount();
}
inline ::google::protobuf::int32 RetGetEnvelopeRecord::totalcount() const {
  return totalcount_;
}
inline void RetGetEnvelopeRecord::set_totalcount(::google::protobuf::int32 value) {
  set_has_totalcount();
  totalcount_ = value;
}

// repeated .RedEnvelopeProto.GetEnvelopeInfo infoList = 3;
inline int RetGetEnvelopeRecord::infolist_size() const {
  return infolist_.size();
}
inline void RetGetEnvelopeRecord::clear_infolist() {
  infolist_.Clear();
}
inline const ::RedEnvelopeProto::GetEnvelopeInfo& RetGetEnvelopeRecord::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::RedEnvelopeProto::GetEnvelopeInfo* RetGetEnvelopeRecord::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::RedEnvelopeProto::GetEnvelopeInfo* RetGetEnvelopeRecord::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >&
RetGetEnvelopeRecord::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RedEnvelopeProto::GetEnvelopeInfo >*
RetGetEnvelopeRecord::mutable_infolist() {
  return &infolist_;
}

// optional int32 getCount = 4;
inline bool RetGetEnvelopeRecord::has_getcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetGetEnvelopeRecord::set_has_getcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetGetEnvelopeRecord::clear_has_getcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetGetEnvelopeRecord::clear_getcount() {
  getcount_ = 0;
  clear_has_getcount();
}
inline ::google::protobuf::int32 RetGetEnvelopeRecord::getcount() const {
  return getcount_;
}
inline void RetGetEnvelopeRecord::set_getcount(::google::protobuf::int32 value) {
  set_has_getcount();
  getcount_ = value;
}

// optional int32 accumulateCount = 5;
inline bool RetGetEnvelopeRecord::has_accumulatecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RetGetEnvelopeRecord::set_has_accumulatecount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RetGetEnvelopeRecord::clear_has_accumulatecount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RetGetEnvelopeRecord::clear_accumulatecount() {
  accumulatecount_ = 0;
  clear_has_accumulatecount();
}
inline ::google::protobuf::int32 RetGetEnvelopeRecord::accumulatecount() const {
  return accumulatecount_;
}
inline void RetGetEnvelopeRecord::set_accumulatecount(::google::protobuf::int32 value) {
  set_has_accumulatecount();
  accumulatecount_ = value;
}

// -------------------------------------------------------------------

// ReqGetEnvelopeReward

// required int32 op = 1;
inline bool ReqGetEnvelopeReward::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetEnvelopeReward::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetEnvelopeReward::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetEnvelopeReward::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 ReqGetEnvelopeReward::op() const {
  return op_;
}
inline void ReqGetEnvelopeReward::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// -------------------------------------------------------------------

// RetGetEnvelopeReward

// required int32 ret = 1;
inline bool RetGetEnvelopeReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGetEnvelopeReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGetEnvelopeReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGetEnvelopeReward::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGetEnvelopeReward::ret() const {
  return ret_;
}
inline void RetGetEnvelopeReward::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 op = 2;
inline bool RetGetEnvelopeReward::has_op() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetGetEnvelopeReward::set_has_op() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetGetEnvelopeReward::clear_has_op() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetGetEnvelopeReward::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 RetGetEnvelopeReward::op() const {
  return op_;
}
inline void RetGetEnvelopeReward::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// -------------------------------------------------------------------

// ReqGMGetEnvelopeReward

// required int32 op = 1;
inline bool ReqGMGetEnvelopeReward::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGMGetEnvelopeReward::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGMGetEnvelopeReward::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGMGetEnvelopeReward::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 ReqGMGetEnvelopeReward::op() const {
  return op_;
}
inline void ReqGMGetEnvelopeReward::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// required int64 charID = 2;
inline bool ReqGMGetEnvelopeReward::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGMGetEnvelopeReward::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGMGetEnvelopeReward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGMGetEnvelopeReward::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqGMGetEnvelopeReward::charid() const {
  return charid_;
}
inline void ReqGMGetEnvelopeReward::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 num = 3;
inline bool ReqGMGetEnvelopeReward::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqGMGetEnvelopeReward::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqGMGetEnvelopeReward::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqGMGetEnvelopeReward::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ReqGMGetEnvelopeReward::num() const {
  return num_;
}
inline void ReqGMGetEnvelopeReward::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// RetGMGetEnvelopeReward

// required int32 ret = 1;
inline bool RetGMGetEnvelopeReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGMGetEnvelopeReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGMGetEnvelopeReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGMGetEnvelopeReward::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGMGetEnvelopeReward::ret() const {
  return ret_;
}
inline void RetGMGetEnvelopeReward::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required int64 charID = 2;
inline bool RetGMGetEnvelopeReward::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetGMGetEnvelopeReward::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetGMGetEnvelopeReward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetGMGetEnvelopeReward::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 RetGMGetEnvelopeReward::charid() const {
  return charid_;
}
inline void RetGMGetEnvelopeReward::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .RedEnvelopeProto.ReqGMGetEnvelopeReward getInfo = 3;
inline bool RetGMGetEnvelopeReward::has_getinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetGMGetEnvelopeReward::set_has_getinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetGMGetEnvelopeReward::clear_has_getinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetGMGetEnvelopeReward::clear_getinfo() {
  if (getinfo_ != NULL) getinfo_->::RedEnvelopeProto::ReqGMGetEnvelopeReward::Clear();
  clear_has_getinfo();
}
inline const ::RedEnvelopeProto::ReqGMGetEnvelopeReward& RetGMGetEnvelopeReward::getinfo() const {
  return getinfo_ != NULL ? *getinfo_ : *default_instance_->getinfo_;
}
inline ::RedEnvelopeProto::ReqGMGetEnvelopeReward* RetGMGetEnvelopeReward::mutable_getinfo() {
  set_has_getinfo();
  if (getinfo_ == NULL) getinfo_ = new ::RedEnvelopeProto::ReqGMGetEnvelopeReward;
  return getinfo_;
}
inline ::RedEnvelopeProto::ReqGMGetEnvelopeReward* RetGMGetEnvelopeReward::release_getinfo() {
  clear_has_getinfo();
  ::RedEnvelopeProto::ReqGMGetEnvelopeReward* temp = getinfo_;
  getinfo_ = NULL;
  return temp;
}
inline void RetGMGetEnvelopeReward::set_allocated_getinfo(::RedEnvelopeProto::ReqGMGetEnvelopeReward* getinfo) {
  delete getinfo_;
  getinfo_ = getinfo;
  if (getinfo) {
    set_has_getinfo();
  } else {
    clear_has_getinfo();
  }
}

// -------------------------------------------------------------------

// WSToAllGMAddEnvelope

// required int32 country = 1;
inline bool WSToAllGMAddEnvelope::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToAllGMAddEnvelope::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToAllGMAddEnvelope::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToAllGMAddEnvelope::clear_country() {
  country_ = 0;
  clear_has_country();
}
inline ::google::protobuf::int32 WSToAllGMAddEnvelope::country() const {
  return country_;
}
inline void WSToAllGMAddEnvelope::set_country(::google::protobuf::int32 value) {
  set_has_country();
  country_ = value;
}

// required int32 count = 2;
inline bool WSToAllGMAddEnvelope::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToAllGMAddEnvelope::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToAllGMAddEnvelope::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToAllGMAddEnvelope::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 WSToAllGMAddEnvelope::count() const {
  return count_;
}
inline void WSToAllGMAddEnvelope::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// required bool flag = 3;
inline bool WSToAllGMAddEnvelope::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSToAllGMAddEnvelope::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSToAllGMAddEnvelope::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSToAllGMAddEnvelope::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WSToAllGMAddEnvelope::flag() const {
  return flag_;
}
inline void WSToAllGMAddEnvelope::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// repeated int64 charID = 4;
inline int WSToAllGMAddEnvelope::charid_size() const {
  return charid_.size();
}
inline void WSToAllGMAddEnvelope::clear_charid() {
  charid_.Clear();
}
inline ::google::protobuf::int64 WSToAllGMAddEnvelope::charid(int index) const {
  return charid_.Get(index);
}
inline void WSToAllGMAddEnvelope::set_charid(int index, ::google::protobuf::int64 value) {
  charid_.Set(index, value);
}
inline void WSToAllGMAddEnvelope::add_charid(::google::protobuf::int64 value) {
  charid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
WSToAllGMAddEnvelope::charid() const {
  return charid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
WSToAllGMAddEnvelope::mutable_charid() {
  return &charid_;
}

// -------------------------------------------------------------------

// WSToGMPlayerAddEnvelope

// required int64 charID = 1;
inline bool WSToGMPlayerAddEnvelope::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToGMPlayerAddEnvelope::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToGMPlayerAddEnvelope::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToGMPlayerAddEnvelope::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToGMPlayerAddEnvelope::charid() const {
  return charid_;
}
inline void WSToGMPlayerAddEnvelope::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 country = 2;
inline bool WSToGMPlayerAddEnvelope::has_country() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToGMPlayerAddEnvelope::set_has_country() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToGMPlayerAddEnvelope::clear_has_country() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToGMPlayerAddEnvelope::clear_country() {
  country_ = 0;
  clear_has_country();
}
inline ::google::protobuf::int32 WSToGMPlayerAddEnvelope::country() const {
  return country_;
}
inline void WSToGMPlayerAddEnvelope::set_country(::google::protobuf::int32 value) {
  set_has_country();
  country_ = value;
}

// required int32 count = 3;
inline bool WSToGMPlayerAddEnvelope::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSToGMPlayerAddEnvelope::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSToGMPlayerAddEnvelope::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSToGMPlayerAddEnvelope::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 WSToGMPlayerAddEnvelope::count() const {
  return count_;
}
inline void WSToGMPlayerAddEnvelope::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// WSToEnvSenderByGet

// required int64 charID = 1;
inline bool WSToEnvSenderByGet::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToEnvSenderByGet::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToEnvSenderByGet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToEnvSenderByGet::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSToEnvSenderByGet::charid() const {
  return charid_;
}
inline void WSToEnvSenderByGet::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 count = 2;
inline bool WSToEnvSenderByGet::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSToEnvSenderByGet::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSToEnvSenderByGet::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSToEnvSenderByGet::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 WSToEnvSenderByGet::count() const {
  return count_;
}
inline void WSToEnvSenderByGet::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RedEnvelopeProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RedEnvelope_2fRedEnvelope_2eproto__INCLUDED
