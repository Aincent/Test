// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/PlayerInfo2Path.proto

#ifndef PROTOBUF_CharLogin_2fPlayerInfo2Path_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fPlayerInfo2Path_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CharLogin {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fPlayerInfo2Path_2eproto();
void protobuf_AssignDesc_CharLogin_2fPlayerInfo2Path_2eproto();
void protobuf_ShutdownFile_CharLogin_2fPlayerInfo2Path_2eproto();

class CharInfoToPath;

// ===================================================================

class CharInfoToPath : public ::google::protobuf::Message {
 public:
  CharInfoToPath();
  virtual ~CharInfoToPath();

  CharInfoToPath(const CharInfoToPath& from);

  inline CharInfoToPath& operator=(const CharInfoToPath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharInfoToPath& default_instance();

  void Swap(CharInfoToPath* other);

  // implements Message ----------------------------------------------

  CharInfoToPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharInfoToPath& from);
  void MergeFrom(const CharInfoToPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int64 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // required int32 xpos = 3;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 3;
  inline ::google::protobuf::int32 xpos() const;
  inline void set_xpos(::google::protobuf::int32 value);

  // required int32 ypos = 4;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 4;
  inline ::google::protobuf::int32 ypos() const;
  inline void set_ypos(::google::protobuf::int32 value);

  // required int32 gtid = 5;
  inline bool has_gtid() const;
  inline void clear_gtid();
  static const int kGtidFieldNumber = 5;
  inline ::google::protobuf::int32 gtid() const;
  inline void set_gtid(::google::protobuf::int32 value);

  // required int32 movespeed = 6;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMovespeedFieldNumber = 6;
  inline ::google::protobuf::int32 movespeed() const;
  inline void set_movespeed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharLogin.CharInfoToPath)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_gtid();
  inline void clear_has_gtid();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 mapid_;
  ::google::protobuf::int32 xpos_;
  ::google::protobuf::int32 ypos_;
  ::google::protobuf::int32 gtid_;
  ::google::protobuf::int32 movespeed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fPlayerInfo2Path_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fPlayerInfo2Path_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fPlayerInfo2Path_2eproto();

  void InitAsDefaultInstance();
  static CharInfoToPath* default_instance_;
};
// ===================================================================


// ===================================================================

// CharInfoToPath

// required int64 charid = 1;
inline bool CharInfoToPath::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharInfoToPath::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharInfoToPath::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharInfoToPath::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 CharInfoToPath::charid() const {
  return charid_;
}
inline void CharInfoToPath::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int64 mapid = 2;
inline bool CharInfoToPath::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharInfoToPath::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharInfoToPath::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharInfoToPath::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 CharInfoToPath::mapid() const {
  return mapid_;
}
inline void CharInfoToPath::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// required int32 xpos = 3;
inline bool CharInfoToPath::has_xpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharInfoToPath::set_has_xpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharInfoToPath::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharInfoToPath::clear_xpos() {
  xpos_ = 0;
  clear_has_xpos();
}
inline ::google::protobuf::int32 CharInfoToPath::xpos() const {
  return xpos_;
}
inline void CharInfoToPath::set_xpos(::google::protobuf::int32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required int32 ypos = 4;
inline bool CharInfoToPath::has_ypos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharInfoToPath::set_has_ypos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharInfoToPath::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharInfoToPath::clear_ypos() {
  ypos_ = 0;
  clear_has_ypos();
}
inline ::google::protobuf::int32 CharInfoToPath::ypos() const {
  return ypos_;
}
inline void CharInfoToPath::set_ypos(::google::protobuf::int32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required int32 gtid = 5;
inline bool CharInfoToPath::has_gtid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharInfoToPath::set_has_gtid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharInfoToPath::clear_has_gtid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharInfoToPath::clear_gtid() {
  gtid_ = 0;
  clear_has_gtid();
}
inline ::google::protobuf::int32 CharInfoToPath::gtid() const {
  return gtid_;
}
inline void CharInfoToPath::set_gtid(::google::protobuf::int32 value) {
  set_has_gtid();
  gtid_ = value;
}

// required int32 movespeed = 6;
inline bool CharInfoToPath::has_movespeed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharInfoToPath::set_has_movespeed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharInfoToPath::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharInfoToPath::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 CharInfoToPath::movespeed() const {
  return movespeed_;
}
inline void CharInfoToPath::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CharLogin

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fPlayerInfo2Path_2eproto__INCLUDED
