// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_BugSubmit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSProtoc/MS_BugSubmit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MS_BugSubmit {

namespace {

const ::google::protobuf::Descriptor* Admin_C2GMBugSubmit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_C2GMBugSubmit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_GM2DBBugSubmit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_GM2DBBugSubmit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_DBBugSubmitBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_DBBugSubmitBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_DBBugSubmit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_DBBugSubmit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_ReqBugSubmitList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_ReqBugSubmitList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_RetBugSubmitList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_RetBugSubmitList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_ReqBugSubmitOp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_ReqBugSubmitOp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Admin_RetBugSubmitOp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Admin_RetBugSubmitOp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSProtoc_2fMS_5fBugSubmit_2eproto() {
  protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSProtoc/MS_BugSubmit.proto");
  GOOGLE_CHECK(file != NULL);
  Admin_C2GMBugSubmit_descriptor_ = file->message_type(0);
  static const int Admin_C2GMBugSubmit_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_C2GMBugSubmit, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_C2GMBugSubmit, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_C2GMBugSubmit, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_C2GMBugSubmit, qq_),
  };
  Admin_C2GMBugSubmit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_C2GMBugSubmit_descriptor_,
      Admin_C2GMBugSubmit::default_instance_,
      Admin_C2GMBugSubmit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_C2GMBugSubmit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_C2GMBugSubmit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_C2GMBugSubmit));
  Admin_GM2DBBugSubmit_descriptor_ = file->message_type(1);
  static const int Admin_GM2DBBugSubmit_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, qq_),
  };
  Admin_GM2DBBugSubmit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_GM2DBBugSubmit_descriptor_,
      Admin_GM2DBBugSubmit::default_instance_,
      Admin_GM2DBBugSubmit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_GM2DBBugSubmit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_GM2DBBugSubmit));
  Admin_DBBugSubmitBaseInfo_descriptor_ = file->message_type(2);
  static const int Admin_DBBugSubmitBaseInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, bugid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, time_),
  };
  Admin_DBBugSubmitBaseInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_DBBugSubmitBaseInfo_descriptor_,
      Admin_DBBugSubmitBaseInfo::default_instance_,
      Admin_DBBugSubmitBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmitBaseInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_DBBugSubmitBaseInfo));
  Admin_DBBugSubmit_descriptor_ = file->message_type(3);
  static const int Admin_DBBugSubmit_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, bugid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, qq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, result_),
  };
  Admin_DBBugSubmit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_DBBugSubmit_descriptor_,
      Admin_DBBugSubmit::default_instance_,
      Admin_DBBugSubmit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_DBBugSubmit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_DBBugSubmit));
  Admin_ReqBugSubmitList_descriptor_ = file->message_type(4);
  static const int Admin_ReqBugSubmitList_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, endtime_),
  };
  Admin_ReqBugSubmitList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_ReqBugSubmitList_descriptor_,
      Admin_ReqBugSubmitList::default_instance_,
      Admin_ReqBugSubmitList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_ReqBugSubmitList));
  Admin_RetBugSubmitList_descriptor_ = file->message_type(5);
  static const int Admin_RetBugSubmitList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitList, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitList, totalcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitList, basebuglist_),
  };
  Admin_RetBugSubmitList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_RetBugSubmitList_descriptor_,
      Admin_RetBugSubmitList::default_instance_,
      Admin_RetBugSubmitList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_RetBugSubmitList));
  Admin_ReqBugSubmitOp_descriptor_ = file->message_type(6);
  static const int Admin_ReqBugSubmitOp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitOp, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitOp, bugid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitOp, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitOp, result_),
  };
  Admin_ReqBugSubmitOp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_ReqBugSubmitOp_descriptor_,
      Admin_ReqBugSubmitOp::default_instance_,
      Admin_ReqBugSubmitOp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitOp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_ReqBugSubmitOp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_ReqBugSubmitOp));
  Admin_RetBugSubmitOp_descriptor_ = file->message_type(7);
  static const int Admin_RetBugSubmitOp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitOp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitOp, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitOp, buginfo_),
  };
  Admin_RetBugSubmitOp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Admin_RetBugSubmitOp_descriptor_,
      Admin_RetBugSubmitOp::default_instance_,
      Admin_RetBugSubmitOp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitOp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin_RetBugSubmitOp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Admin_RetBugSubmitOp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSProtoc_2fMS_5fBugSubmit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_C2GMBugSubmit_descriptor_, &Admin_C2GMBugSubmit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_GM2DBBugSubmit_descriptor_, &Admin_GM2DBBugSubmit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_DBBugSubmitBaseInfo_descriptor_, &Admin_DBBugSubmitBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_DBBugSubmit_descriptor_, &Admin_DBBugSubmit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_ReqBugSubmitList_descriptor_, &Admin_ReqBugSubmitList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_RetBugSubmitList_descriptor_, &Admin_RetBugSubmitList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_ReqBugSubmitOp_descriptor_, &Admin_ReqBugSubmitOp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Admin_RetBugSubmitOp_descriptor_, &Admin_RetBugSubmitOp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSProtoc_2fMS_5fBugSubmit_2eproto() {
  delete Admin_C2GMBugSubmit::default_instance_;
  delete Admin_C2GMBugSubmit_reflection_;
  delete Admin_GM2DBBugSubmit::default_instance_;
  delete Admin_GM2DBBugSubmit_reflection_;
  delete Admin_DBBugSubmitBaseInfo::default_instance_;
  delete Admin_DBBugSubmitBaseInfo_reflection_;
  delete Admin_DBBugSubmit::default_instance_;
  delete Admin_DBBugSubmit_reflection_;
  delete Admin_ReqBugSubmitList::default_instance_;
  delete Admin_ReqBugSubmitList_reflection_;
  delete Admin_RetBugSubmitList::default_instance_;
  delete Admin_RetBugSubmitList_reflection_;
  delete Admin_ReqBugSubmitOp::default_instance_;
  delete Admin_ReqBugSubmitOp_reflection_;
  delete Admin_RetBugSubmitOp::default_instance_;
  delete Admin_RetBugSubmitOp_reflection_;
}

void protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033MSProtoc/MS_BugSubmit.proto\022\014MS_BugSub"
    "mit\"L\n\023Admin_C2GMBugSubmit\022\014\n\004type\030\001 \002(\005"
    "\022\r\n\005title\030\002 \002(\t\022\014\n\004text\030\003 \002(\t\022\n\n\002qq\030\004 \001("
    "\t\"l\n\024Admin_GM2DBBugSubmit\022\016\n\006charID\030\001 \002("
    "\003\022\r\n\005state\030\002 \002(\005\022\014\n\004type\030\003 \002(\005\022\r\n\005title\030"
    "\004 \002(\t\022\014\n\004text\030\005 \002(\t\022\n\n\002qq\030\006 \001(\t\"t\n\031Admin"
    "_DBBugSubmitBaseInfo\022\r\n\005bugID\030\001 \002(\003\022\016\n\006c"
    "harID\030\002 \002(\003\022\r\n\005state\030\003 \002(\005\022\014\n\004type\030\004 \002(\005"
    "\022\r\n\005title\030\005 \002(\t\022\014\n\004time\030\006 \002(\003\"\226\001\n\021Admin_"
    "DBBugSubmit\022\r\n\005bugID\030\001 \002(\003\022\016\n\006charID\030\002 \002"
    "(\003\022\r\n\005state\030\003 \002(\005\022\014\n\004type\030\004 \002(\005\022\r\n\005title"
    "\030\005 \002(\t\022\014\n\004text\030\006 \002(\t\022\014\n\004time\030\007 \002(\003\022\n\n\002qq"
    "\030\010 \001(\t\022\016\n\006result\030\t \001(\t\"h\n\026Admin_ReqBugSu"
    "bmitList\022\014\n\004type\030\001 \002(\005\022\r\n\005start\030\002 \002(\005\022\r\n"
    "\005count\030\003 \002(\005\022\021\n\tbeginTime\030\004 \001(\003\022\017\n\007endTi"
    "me\030\005 \001(\003\"w\n\026Admin_RetBugSubmitList\022\013\n\003re"
    "t\030\001 \002(\005\022\022\n\ntotalCount\030\002 \001(\005\022<\n\013baseBugLi"
    "st\030\003 \003(\0132\'.MS_BugSubmit.Admin_DBBugSubmi"
    "tBaseInfo\"O\n\024Admin_ReqBugSubmitOp\022\n\n\002Op\030"
    "\001 \002(\005\022\r\n\005bugID\030\002 \002(\003\022\014\n\004type\030\003 \001(\005\022\016\n\006re"
    "sult\030\004 \001(\t\"a\n\024Admin_RetBugSubmitOp\022\013\n\003re"
    "t\030\001 \002(\005\022\n\n\002Op\030\002 \002(\005\0220\n\007bugInfo\030\003 \001(\0132\037.M"
    "S_BugSubmit.Admin_DBBugSubmit", 909);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSProtoc/MS_BugSubmit.proto", &protobuf_RegisterTypes);
  Admin_C2GMBugSubmit::default_instance_ = new Admin_C2GMBugSubmit();
  Admin_GM2DBBugSubmit::default_instance_ = new Admin_GM2DBBugSubmit();
  Admin_DBBugSubmitBaseInfo::default_instance_ = new Admin_DBBugSubmitBaseInfo();
  Admin_DBBugSubmit::default_instance_ = new Admin_DBBugSubmit();
  Admin_ReqBugSubmitList::default_instance_ = new Admin_ReqBugSubmitList();
  Admin_RetBugSubmitList::default_instance_ = new Admin_RetBugSubmitList();
  Admin_ReqBugSubmitOp::default_instance_ = new Admin_ReqBugSubmitOp();
  Admin_RetBugSubmitOp::default_instance_ = new Admin_RetBugSubmitOp();
  Admin_C2GMBugSubmit::default_instance_->InitAsDefaultInstance();
  Admin_GM2DBBugSubmit::default_instance_->InitAsDefaultInstance();
  Admin_DBBugSubmitBaseInfo::default_instance_->InitAsDefaultInstance();
  Admin_DBBugSubmit::default_instance_->InitAsDefaultInstance();
  Admin_ReqBugSubmitList::default_instance_->InitAsDefaultInstance();
  Admin_RetBugSubmitList::default_instance_->InitAsDefaultInstance();
  Admin_ReqBugSubmitOp::default_instance_->InitAsDefaultInstance();
  Admin_RetBugSubmitOp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSProtoc_2fMS_5fBugSubmit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSProtoc_2fMS_5fBugSubmit_2eproto {
  StaticDescriptorInitializer_MSProtoc_2fMS_5fBugSubmit_2eproto() {
    protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  }
} static_descriptor_initializer_MSProtoc_2fMS_5fBugSubmit_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Admin_C2GMBugSubmit::kTypeFieldNumber;
const int Admin_C2GMBugSubmit::kTitleFieldNumber;
const int Admin_C2GMBugSubmit::kTextFieldNumber;
const int Admin_C2GMBugSubmit::kQqFieldNumber;
#endif  // !_MSC_VER

Admin_C2GMBugSubmit::Admin_C2GMBugSubmit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_C2GMBugSubmit::InitAsDefaultInstance() {
}

Admin_C2GMBugSubmit::Admin_C2GMBugSubmit(const Admin_C2GMBugSubmit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_C2GMBugSubmit::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_C2GMBugSubmit::~Admin_C2GMBugSubmit() {
  SharedDtor();
}

void Admin_C2GMBugSubmit::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (qq_ != &::google::protobuf::internal::kEmptyString) {
    delete qq_;
  }
  if (this != default_instance_) {
  }
}

void Admin_C2GMBugSubmit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_C2GMBugSubmit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_C2GMBugSubmit_descriptor_;
}

const Admin_C2GMBugSubmit& Admin_C2GMBugSubmit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_C2GMBugSubmit* Admin_C2GMBugSubmit::default_instance_ = NULL;

Admin_C2GMBugSubmit* Admin_C2GMBugSubmit::New() const {
  return new Admin_C2GMBugSubmit;
}

void Admin_C2GMBugSubmit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::kEmptyString) {
        text_->clear();
      }
    }
    if (has_qq()) {
      if (qq_ != &::google::protobuf::internal::kEmptyString) {
        qq_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_C2GMBugSubmit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // required string title = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_text;
        break;
      }

      // required string text = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_qq;
        break;
      }

      // optional string qq = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_qq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->qq().data(), this->qq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_C2GMBugSubmit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->title(), output);
  }

  // required string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->text(), output);
  }

  // optional string qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->qq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_C2GMBugSubmit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // required string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // optional string qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->qq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_C2GMBugSubmit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // required string text = 3;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional string qq = 4;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_C2GMBugSubmit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_C2GMBugSubmit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_C2GMBugSubmit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_C2GMBugSubmit::MergeFrom(const Admin_C2GMBugSubmit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_qq()) {
      set_qq(from.qq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_C2GMBugSubmit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_C2GMBugSubmit::CopyFrom(const Admin_C2GMBugSubmit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_C2GMBugSubmit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Admin_C2GMBugSubmit::Swap(Admin_C2GMBugSubmit* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(text_, other->text_);
    std::swap(qq_, other->qq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_C2GMBugSubmit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_C2GMBugSubmit_descriptor_;
  metadata.reflection = Admin_C2GMBugSubmit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_GM2DBBugSubmit::kCharIDFieldNumber;
const int Admin_GM2DBBugSubmit::kStateFieldNumber;
const int Admin_GM2DBBugSubmit::kTypeFieldNumber;
const int Admin_GM2DBBugSubmit::kTitleFieldNumber;
const int Admin_GM2DBBugSubmit::kTextFieldNumber;
const int Admin_GM2DBBugSubmit::kQqFieldNumber;
#endif  // !_MSC_VER

Admin_GM2DBBugSubmit::Admin_GM2DBBugSubmit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_GM2DBBugSubmit::InitAsDefaultInstance() {
}

Admin_GM2DBBugSubmit::Admin_GM2DBBugSubmit(const Admin_GM2DBBugSubmit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_GM2DBBugSubmit::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  state_ = 0;
  type_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_GM2DBBugSubmit::~Admin_GM2DBBugSubmit() {
  SharedDtor();
}

void Admin_GM2DBBugSubmit::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (qq_ != &::google::protobuf::internal::kEmptyString) {
    delete qq_;
  }
  if (this != default_instance_) {
  }
}

void Admin_GM2DBBugSubmit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_GM2DBBugSubmit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_GM2DBBugSubmit_descriptor_;
}

const Admin_GM2DBBugSubmit& Admin_GM2DBBugSubmit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_GM2DBBugSubmit* Admin_GM2DBBugSubmit::default_instance_ = NULL;

Admin_GM2DBBugSubmit* Admin_GM2DBBugSubmit::New() const {
  return new Admin_GM2DBBugSubmit;
}

void Admin_GM2DBBugSubmit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    state_ = 0;
    type_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::kEmptyString) {
        text_->clear();
      }
    }
    if (has_qq()) {
      if (qq_ != &::google::protobuf::internal::kEmptyString) {
        qq_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_GM2DBBugSubmit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // required int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // required string title = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_text;
        break;
      }

      // required string text = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_qq;
        break;
      }

      // optional string qq = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_qq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->qq().data(), this->qq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_GM2DBBugSubmit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charID = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  // required int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // required string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->title(), output);
  }

  // required string text = 5;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->text(), output);
  }

  // optional string qq = 6;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->qq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_GM2DBBugSubmit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charID = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  // required int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // required string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // required string text = 5;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->text(), target);
  }

  // optional string qq = 6;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->qq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_GM2DBBugSubmit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charID = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // required int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // required string text = 5;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional string qq = 6;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_GM2DBBugSubmit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_GM2DBBugSubmit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_GM2DBBugSubmit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_GM2DBBugSubmit::MergeFrom(const Admin_GM2DBBugSubmit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_qq()) {
      set_qq(from.qq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_GM2DBBugSubmit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_GM2DBBugSubmit::CopyFrom(const Admin_GM2DBBugSubmit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_GM2DBBugSubmit::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void Admin_GM2DBBugSubmit::Swap(Admin_GM2DBBugSubmit* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(state_, other->state_);
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(text_, other->text_);
    std::swap(qq_, other->qq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_GM2DBBugSubmit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_GM2DBBugSubmit_descriptor_;
  metadata.reflection = Admin_GM2DBBugSubmit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_DBBugSubmitBaseInfo::kBugIDFieldNumber;
const int Admin_DBBugSubmitBaseInfo::kCharIDFieldNumber;
const int Admin_DBBugSubmitBaseInfo::kStateFieldNumber;
const int Admin_DBBugSubmitBaseInfo::kTypeFieldNumber;
const int Admin_DBBugSubmitBaseInfo::kTitleFieldNumber;
const int Admin_DBBugSubmitBaseInfo::kTimeFieldNumber;
#endif  // !_MSC_VER

Admin_DBBugSubmitBaseInfo::Admin_DBBugSubmitBaseInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_DBBugSubmitBaseInfo::InitAsDefaultInstance() {
}

Admin_DBBugSubmitBaseInfo::Admin_DBBugSubmitBaseInfo(const Admin_DBBugSubmitBaseInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_DBBugSubmitBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  bugid_ = GOOGLE_LONGLONG(0);
  charid_ = GOOGLE_LONGLONG(0);
  state_ = 0;
  type_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_DBBugSubmitBaseInfo::~Admin_DBBugSubmitBaseInfo() {
  SharedDtor();
}

void Admin_DBBugSubmitBaseInfo::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (this != default_instance_) {
  }
}

void Admin_DBBugSubmitBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_DBBugSubmitBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_DBBugSubmitBaseInfo_descriptor_;
}

const Admin_DBBugSubmitBaseInfo& Admin_DBBugSubmitBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_DBBugSubmitBaseInfo* Admin_DBBugSubmitBaseInfo::default_instance_ = NULL;

Admin_DBBugSubmitBaseInfo* Admin_DBBugSubmitBaseInfo::New() const {
  return new Admin_DBBugSubmitBaseInfo;
}

void Admin_DBBugSubmitBaseInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bugid_ = GOOGLE_LONGLONG(0);
    charid_ = GOOGLE_LONGLONG(0);
    state_ = 0;
    type_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_DBBugSubmitBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 bugID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bugid_)));
          set_has_bugid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_charID;
        break;
      }

      // required int64 charID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // required int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_title;
        break;
      }

      // required string title = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // required int64 time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_DBBugSubmitBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 bugID = 1;
  if (has_bugid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bugid(), output);
  }

  // required int64 charID = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->charid(), output);
  }

  // required int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // required int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // required string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->title(), output);
  }

  // required int64 time = 6;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_DBBugSubmitBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 bugID = 1;
  if (has_bugid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bugid(), target);
  }

  // required int64 charID = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->charid(), target);
  }

  // required int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // required int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // required string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // required int64 time = 6;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_DBBugSubmitBaseInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 bugID = 1;
    if (has_bugid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bugid());
    }

    // required int64 charID = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // required int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // required int64 time = 6;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_DBBugSubmitBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_DBBugSubmitBaseInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_DBBugSubmitBaseInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_DBBugSubmitBaseInfo::MergeFrom(const Admin_DBBugSubmitBaseInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bugid()) {
      set_bugid(from.bugid());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_DBBugSubmitBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_DBBugSubmitBaseInfo::CopyFrom(const Admin_DBBugSubmitBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_DBBugSubmitBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void Admin_DBBugSubmitBaseInfo::Swap(Admin_DBBugSubmitBaseInfo* other) {
  if (other != this) {
    std::swap(bugid_, other->bugid_);
    std::swap(charid_, other->charid_);
    std::swap(state_, other->state_);
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_DBBugSubmitBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_DBBugSubmitBaseInfo_descriptor_;
  metadata.reflection = Admin_DBBugSubmitBaseInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_DBBugSubmit::kBugIDFieldNumber;
const int Admin_DBBugSubmit::kCharIDFieldNumber;
const int Admin_DBBugSubmit::kStateFieldNumber;
const int Admin_DBBugSubmit::kTypeFieldNumber;
const int Admin_DBBugSubmit::kTitleFieldNumber;
const int Admin_DBBugSubmit::kTextFieldNumber;
const int Admin_DBBugSubmit::kTimeFieldNumber;
const int Admin_DBBugSubmit::kQqFieldNumber;
const int Admin_DBBugSubmit::kResultFieldNumber;
#endif  // !_MSC_VER

Admin_DBBugSubmit::Admin_DBBugSubmit()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_DBBugSubmit::InitAsDefaultInstance() {
}

Admin_DBBugSubmit::Admin_DBBugSubmit(const Admin_DBBugSubmit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_DBBugSubmit::SharedCtor() {
  _cached_size_ = 0;
  bugid_ = GOOGLE_LONGLONG(0);
  charid_ = GOOGLE_LONGLONG(0);
  state_ = 0;
  type_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  time_ = GOOGLE_LONGLONG(0);
  qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  result_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_DBBugSubmit::~Admin_DBBugSubmit() {
  SharedDtor();
}

void Admin_DBBugSubmit::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (qq_ != &::google::protobuf::internal::kEmptyString) {
    delete qq_;
  }
  if (result_ != &::google::protobuf::internal::kEmptyString) {
    delete result_;
  }
  if (this != default_instance_) {
  }
}

void Admin_DBBugSubmit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_DBBugSubmit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_DBBugSubmit_descriptor_;
}

const Admin_DBBugSubmit& Admin_DBBugSubmit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_DBBugSubmit* Admin_DBBugSubmit::default_instance_ = NULL;

Admin_DBBugSubmit* Admin_DBBugSubmit::New() const {
  return new Admin_DBBugSubmit;
}

void Admin_DBBugSubmit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bugid_ = GOOGLE_LONGLONG(0);
    charid_ = GOOGLE_LONGLONG(0);
    state_ = 0;
    type_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::kEmptyString) {
        text_->clear();
      }
    }
    time_ = GOOGLE_LONGLONG(0);
    if (has_qq()) {
      if (qq_ != &::google::protobuf::internal::kEmptyString) {
        qq_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_result()) {
      if (result_ != &::google::protobuf::internal::kEmptyString) {
        result_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_DBBugSubmit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 bugID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bugid_)));
          set_has_bugid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_charID;
        break;
      }

      // required int64 charID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // required int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_title;
        break;
      }

      // required string title = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_text;
        break;
      }

      // required string text = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_time;
        break;
      }

      // required int64 time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_qq;
        break;
      }

      // optional string qq = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_qq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->qq().data(), this->qq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_result;
        break;
      }

      // optional string result = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_DBBugSubmit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 bugID = 1;
  if (has_bugid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bugid(), output);
  }

  // required int64 charID = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->charid(), output);
  }

  // required int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // required int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // required string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->title(), output);
  }

  // required string text = 6;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->text(), output);
  }

  // required int64 time = 7;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->time(), output);
  }

  // optional string qq = 8;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->qq(), output);
  }

  // optional string result = 9;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_DBBugSubmit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 bugID = 1;
  if (has_bugid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bugid(), target);
  }

  // required int64 charID = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->charid(), target);
  }

  // required int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // required int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // required string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // required string text = 6;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text(), target);
  }

  // required int64 time = 7;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->time(), target);
  }

  // optional string qq = 8;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->qq(), target);
  }

  // optional string result = 9;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_DBBugSubmit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 bugID = 1;
    if (has_bugid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bugid());
    }

    // required int64 charID = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // required int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // required string text = 6;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // required int64 time = 7;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional string qq = 8;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string result = 9;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_DBBugSubmit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_DBBugSubmit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_DBBugSubmit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_DBBugSubmit::MergeFrom(const Admin_DBBugSubmit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bugid()) {
      set_bugid(from.bugid());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_qq()) {
      set_qq(from.qq());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_DBBugSubmit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_DBBugSubmit::CopyFrom(const Admin_DBBugSubmit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_DBBugSubmit::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void Admin_DBBugSubmit::Swap(Admin_DBBugSubmit* other) {
  if (other != this) {
    std::swap(bugid_, other->bugid_);
    std::swap(charid_, other->charid_);
    std::swap(state_, other->state_);
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(text_, other->text_);
    std::swap(time_, other->time_);
    std::swap(qq_, other->qq_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_DBBugSubmit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_DBBugSubmit_descriptor_;
  metadata.reflection = Admin_DBBugSubmit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_ReqBugSubmitList::kTypeFieldNumber;
const int Admin_ReqBugSubmitList::kStartFieldNumber;
const int Admin_ReqBugSubmitList::kCountFieldNumber;
const int Admin_ReqBugSubmitList::kBeginTimeFieldNumber;
const int Admin_ReqBugSubmitList::kEndTimeFieldNumber;
#endif  // !_MSC_VER

Admin_ReqBugSubmitList::Admin_ReqBugSubmitList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_ReqBugSubmitList::InitAsDefaultInstance() {
}

Admin_ReqBugSubmitList::Admin_ReqBugSubmitList(const Admin_ReqBugSubmitList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_ReqBugSubmitList::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  start_ = 0;
  count_ = 0;
  begintime_ = GOOGLE_LONGLONG(0);
  endtime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_ReqBugSubmitList::~Admin_ReqBugSubmitList() {
  SharedDtor();
}

void Admin_ReqBugSubmitList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Admin_ReqBugSubmitList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_ReqBugSubmitList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_ReqBugSubmitList_descriptor_;
}

const Admin_ReqBugSubmitList& Admin_ReqBugSubmitList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_ReqBugSubmitList* Admin_ReqBugSubmitList::default_instance_ = NULL;

Admin_ReqBugSubmitList* Admin_ReqBugSubmitList::New() const {
  return new Admin_ReqBugSubmitList;
}

void Admin_ReqBugSubmitList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    start_ = 0;
    count_ = 0;
    begintime_ = GOOGLE_LONGLONG(0);
    endtime_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_ReqBugSubmitList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_start;
        break;
      }

      // required int32 start = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
          set_has_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_beginTime;
        break;
      }

      // optional int64 beginTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beginTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begintime_)));
          set_has_begintime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_endTime;
        break;
      }

      // optional int64 endTime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_ReqBugSubmitList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required int32 start = 2;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->start(), output);
  }

  // required int32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // optional int64 beginTime = 4;
  if (has_begintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->begintime(), output);
  }

  // optional int64 endTime = 5;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_ReqBugSubmitList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required int32 start = 2;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->start(), target);
  }

  // required int32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // optional int64 beginTime = 4;
  if (has_begintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->begintime(), target);
  }

  // optional int64 endTime = 5;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_ReqBugSubmitList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required int32 start = 2;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start());
    }

    // required int32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int64 beginTime = 4;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begintime());
    }

    // optional int64 endTime = 5;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_ReqBugSubmitList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_ReqBugSubmitList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_ReqBugSubmitList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_ReqBugSubmitList::MergeFrom(const Admin_ReqBugSubmitList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_start()) {
      set_start(from.start());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_begintime()) {
      set_begintime(from.begintime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_ReqBugSubmitList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_ReqBugSubmitList::CopyFrom(const Admin_ReqBugSubmitList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_ReqBugSubmitList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Admin_ReqBugSubmitList::Swap(Admin_ReqBugSubmitList* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(start_, other->start_);
    std::swap(count_, other->count_);
    std::swap(begintime_, other->begintime_);
    std::swap(endtime_, other->endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_ReqBugSubmitList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_ReqBugSubmitList_descriptor_;
  metadata.reflection = Admin_ReqBugSubmitList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_RetBugSubmitList::kRetFieldNumber;
const int Admin_RetBugSubmitList::kTotalCountFieldNumber;
const int Admin_RetBugSubmitList::kBaseBugListFieldNumber;
#endif  // !_MSC_VER

Admin_RetBugSubmitList::Admin_RetBugSubmitList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_RetBugSubmitList::InitAsDefaultInstance() {
}

Admin_RetBugSubmitList::Admin_RetBugSubmitList(const Admin_RetBugSubmitList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_RetBugSubmitList::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  totalcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_RetBugSubmitList::~Admin_RetBugSubmitList() {
  SharedDtor();
}

void Admin_RetBugSubmitList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Admin_RetBugSubmitList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_RetBugSubmitList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_RetBugSubmitList_descriptor_;
}

const Admin_RetBugSubmitList& Admin_RetBugSubmitList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_RetBugSubmitList* Admin_RetBugSubmitList::default_instance_ = NULL;

Admin_RetBugSubmitList* Admin_RetBugSubmitList::New() const {
  return new Admin_RetBugSubmitList;
}

void Admin_RetBugSubmitList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    totalcount_ = 0;
  }
  basebuglist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_RetBugSubmitList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_totalCount;
        break;
      }

      // optional int32 totalCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_baseBugList;
        break;
      }

      // repeated .MS_BugSubmit.Admin_DBBugSubmitBaseInfo baseBugList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_baseBugList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_basebuglist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_baseBugList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_RetBugSubmitList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 totalCount = 2;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->totalcount(), output);
  }

  // repeated .MS_BugSubmit.Admin_DBBugSubmitBaseInfo baseBugList = 3;
  for (int i = 0; i < this->basebuglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->basebuglist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_RetBugSubmitList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 totalCount = 2;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->totalcount(), target);
  }

  // repeated .MS_BugSubmit.Admin_DBBugSubmitBaseInfo baseBugList = 3;
  for (int i = 0; i < this->basebuglist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->basebuglist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_RetBugSubmitList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 totalCount = 2;
    if (has_totalcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalcount());
    }

  }
  // repeated .MS_BugSubmit.Admin_DBBugSubmitBaseInfo baseBugList = 3;
  total_size += 1 * this->basebuglist_size();
  for (int i = 0; i < this->basebuglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->basebuglist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_RetBugSubmitList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_RetBugSubmitList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_RetBugSubmitList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_RetBugSubmitList::MergeFrom(const Admin_RetBugSubmitList& from) {
  GOOGLE_CHECK_NE(&from, this);
  basebuglist_.MergeFrom(from.basebuglist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_RetBugSubmitList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_RetBugSubmitList::CopyFrom(const Admin_RetBugSubmitList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_RetBugSubmitList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < basebuglist_size(); i++) {
    if (!this->basebuglist(i).IsInitialized()) return false;
  }
  return true;
}

void Admin_RetBugSubmitList::Swap(Admin_RetBugSubmitList* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(totalcount_, other->totalcount_);
    basebuglist_.Swap(&other->basebuglist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_RetBugSubmitList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_RetBugSubmitList_descriptor_;
  metadata.reflection = Admin_RetBugSubmitList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_ReqBugSubmitOp::kOpFieldNumber;
const int Admin_ReqBugSubmitOp::kBugIDFieldNumber;
const int Admin_ReqBugSubmitOp::kTypeFieldNumber;
const int Admin_ReqBugSubmitOp::kResultFieldNumber;
#endif  // !_MSC_VER

Admin_ReqBugSubmitOp::Admin_ReqBugSubmitOp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_ReqBugSubmitOp::InitAsDefaultInstance() {
}

Admin_ReqBugSubmitOp::Admin_ReqBugSubmitOp(const Admin_ReqBugSubmitOp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_ReqBugSubmitOp::SharedCtor() {
  _cached_size_ = 0;
  op_ = 0;
  bugid_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  result_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_ReqBugSubmitOp::~Admin_ReqBugSubmitOp() {
  SharedDtor();
}

void Admin_ReqBugSubmitOp::SharedDtor() {
  if (result_ != &::google::protobuf::internal::kEmptyString) {
    delete result_;
  }
  if (this != default_instance_) {
  }
}

void Admin_ReqBugSubmitOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_ReqBugSubmitOp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_ReqBugSubmitOp_descriptor_;
}

const Admin_ReqBugSubmitOp& Admin_ReqBugSubmitOp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_ReqBugSubmitOp* Admin_ReqBugSubmitOp::default_instance_ = NULL;

Admin_ReqBugSubmitOp* Admin_ReqBugSubmitOp::New() const {
  return new Admin_ReqBugSubmitOp;
}

void Admin_ReqBugSubmitOp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    op_ = 0;
    bugid_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    if (has_result()) {
      if (result_ != &::google::protobuf::internal::kEmptyString) {
        result_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_ReqBugSubmitOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Op = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_)));
          set_has_op();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bugID;
        break;
      }

      // required int64 bugID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bugID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bugid_)));
          set_has_bugid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_result;
        break;
      }

      // optional string result = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_ReqBugSubmitOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Op = 1;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->op(), output);
  }

  // required int64 bugID = 2;
  if (has_bugid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bugid(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional string result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_ReqBugSubmitOp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Op = 1;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->op(), target);
  }

  // required int64 bugID = 2;
  if (has_bugid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bugid(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional string result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_ReqBugSubmitOp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Op = 1;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->op());
    }

    // required int64 bugID = 2;
    if (has_bugid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bugid());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_ReqBugSubmitOp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_ReqBugSubmitOp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_ReqBugSubmitOp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_ReqBugSubmitOp::MergeFrom(const Admin_ReqBugSubmitOp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_bugid()) {
      set_bugid(from.bugid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_ReqBugSubmitOp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_ReqBugSubmitOp::CopyFrom(const Admin_ReqBugSubmitOp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_ReqBugSubmitOp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Admin_ReqBugSubmitOp::Swap(Admin_ReqBugSubmitOp* other) {
  if (other != this) {
    std::swap(op_, other->op_);
    std::swap(bugid_, other->bugid_);
    std::swap(type_, other->type_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_ReqBugSubmitOp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_ReqBugSubmitOp_descriptor_;
  metadata.reflection = Admin_ReqBugSubmitOp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Admin_RetBugSubmitOp::kRetFieldNumber;
const int Admin_RetBugSubmitOp::kOpFieldNumber;
const int Admin_RetBugSubmitOp::kBugInfoFieldNumber;
#endif  // !_MSC_VER

Admin_RetBugSubmitOp::Admin_RetBugSubmitOp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Admin_RetBugSubmitOp::InitAsDefaultInstance() {
  buginfo_ = const_cast< ::MS_BugSubmit::Admin_DBBugSubmit*>(&::MS_BugSubmit::Admin_DBBugSubmit::default_instance());
}

Admin_RetBugSubmitOp::Admin_RetBugSubmitOp(const Admin_RetBugSubmitOp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Admin_RetBugSubmitOp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  op_ = 0;
  buginfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Admin_RetBugSubmitOp::~Admin_RetBugSubmitOp() {
  SharedDtor();
}

void Admin_RetBugSubmitOp::SharedDtor() {
  if (this != default_instance_) {
    delete buginfo_;
  }
}

void Admin_RetBugSubmitOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin_RetBugSubmitOp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Admin_RetBugSubmitOp_descriptor_;
}

const Admin_RetBugSubmitOp& Admin_RetBugSubmitOp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fBugSubmit_2eproto();
  return *default_instance_;
}

Admin_RetBugSubmitOp* Admin_RetBugSubmitOp::default_instance_ = NULL;

Admin_RetBugSubmitOp* Admin_RetBugSubmitOp::New() const {
  return new Admin_RetBugSubmitOp;
}

void Admin_RetBugSubmitOp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    op_ = 0;
    if (has_buginfo()) {
      if (buginfo_ != NULL) buginfo_->::MS_BugSubmit::Admin_DBBugSubmit::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Admin_RetBugSubmitOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // required int32 Op = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_)));
          set_has_op();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bugInfo;
        break;
      }

      // optional .MS_BugSubmit.Admin_DBBugSubmit bugInfo = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bugInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buginfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Admin_RetBugSubmitOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // required int32 Op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->op(), output);
  }

  // optional .MS_BugSubmit.Admin_DBBugSubmit bugInfo = 3;
  if (has_buginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->buginfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Admin_RetBugSubmitOp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // required int32 Op = 2;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->op(), target);
  }

  // optional .MS_BugSubmit.Admin_DBBugSubmit bugInfo = 3;
  if (has_buginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->buginfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Admin_RetBugSubmitOp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // required int32 Op = 2;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->op());
    }

    // optional .MS_BugSubmit.Admin_DBBugSubmit bugInfo = 3;
    if (has_buginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buginfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin_RetBugSubmitOp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Admin_RetBugSubmitOp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Admin_RetBugSubmitOp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Admin_RetBugSubmitOp::MergeFrom(const Admin_RetBugSubmitOp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_buginfo()) {
      mutable_buginfo()->::MS_BugSubmit::Admin_DBBugSubmit::MergeFrom(from.buginfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Admin_RetBugSubmitOp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin_RetBugSubmitOp::CopyFrom(const Admin_RetBugSubmitOp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin_RetBugSubmitOp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_buginfo()) {
    if (!this->buginfo().IsInitialized()) return false;
  }
  return true;
}

void Admin_RetBugSubmitOp::Swap(Admin_RetBugSubmitOp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(op_, other->op_);
    std::swap(buginfo_, other->buginfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Admin_RetBugSubmitOp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Admin_RetBugSubmitOp_descriptor_;
  metadata.reflection = Admin_RetBugSubmitOp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MS_BugSubmit

// @@protoc_insertion_point(global_scope)
