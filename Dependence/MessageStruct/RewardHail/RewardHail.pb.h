// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RewardHail/RewardHail.proto

#ifndef PROTOBUF_RewardHail_2fRewardHail_2eproto__INCLUDED
#define PROTOBUF_RewardHail_2fRewardHail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace RewardHail {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

class SignIn;
class GetReward;
class ToClientGetReward;
class OpenSignIn;
class ClientSignInInfo;
class ClientOlineRewardInfo;
class GetOnlineReward;
class OpenLevelReward;
class OpenToalLoginAndFirstChargeRewardInfo;
class ClientOnceReward;

// ===================================================================

class SignIn : public ::google::protobuf::Message {
 public:
  SignIn();
  virtual ~SignIn();

  SignIn(const SignIn& from);

  inline SignIn& operator=(const SignIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignIn& default_instance();

  void Swap(SignIn* other);

  // implements Message ----------------------------------------------

  SignIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignIn& from);
  void MergeFrom(const SignIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardHail.SignIn)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static SignIn* default_instance_;
};
// -------------------------------------------------------------------

class GetReward : public ::google::protobuf::Message {
 public:
  GetReward();
  virtual ~GetReward();

  GetReward(const GetReward& from);

  inline GetReward& operator=(const GetReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReward& default_instance();

  void Swap(GetReward* other);

  // implements Message ----------------------------------------------

  GetReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetReward& from);
  void MergeFrom(const GetReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline ::google::protobuf::int32 list(int index) const;
  inline void set_list(int index, ::google::protobuf::int32 value);
  inline void add_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:RewardHail.GetReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > list_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static GetReward* default_instance_;
};
// -------------------------------------------------------------------

class ToClientGetReward : public ::google::protobuf::Message {
 public:
  ToClientGetReward();
  virtual ~ToClientGetReward();

  ToClientGetReward(const ToClientGetReward& from);

  inline ToClientGetReward& operator=(const ToClientGetReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClientGetReward& default_instance();

  void Swap(ToClientGetReward* other);

  // implements Message ----------------------------------------------

  ToClientGetReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClientGetReward& from);
  void MergeFrom(const ToClientGetReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 res = 1;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 1;
  inline ::google::protobuf::int32 res() const;
  inline void set_res(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 list = 3;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 3;
  inline ::google::protobuf::int32 list(int index) const;
  inline void set_list(int index, ::google::protobuf::int32 value);
  inline void add_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:RewardHail.ToClientGetReward)
 private:
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 res_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static ToClientGetReward* default_instance_;
};
// -------------------------------------------------------------------

class OpenSignIn : public ::google::protobuf::Message {
 public:
  OpenSignIn();
  virtual ~OpenSignIn();

  OpenSignIn(const OpenSignIn& from);

  inline OpenSignIn& operator=(const OpenSignIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenSignIn& default_instance();

  void Swap(OpenSignIn* other);

  // implements Message ----------------------------------------------

  OpenSignIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenSignIn& from);
  void MergeFrom(const OpenSignIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:RewardHail.OpenSignIn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static OpenSignIn* default_instance_;
};
// -------------------------------------------------------------------

class ClientSignInInfo : public ::google::protobuf::Message {
 public:
  ClientSignInInfo();
  virtual ~ClientSignInInfo();

  ClientSignInInfo(const ClientSignInInfo& from);

  inline ClientSignInInfo& operator=(const ClientSignInInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSignInInfo& default_instance();

  void Swap(ClientSignInInfo* other);

  // implements Message ----------------------------------------------

  ClientSignInInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientSignInInfo& from);
  void MergeFrom(const ClientSignInInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 SignIn = 1;
  inline bool has_signin() const;
  inline void clear_signin();
  static const int kSignInFieldNumber = 1;
  inline ::google::protobuf::int32 signin() const;
  inline void set_signin(::google::protobuf::int32 value);

  // required int32 Reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline ::google::protobuf::int32 reward() const;
  inline void set_reward(::google::protobuf::int32 value);

  // optional int32 restAddSignCount = 3;
  inline bool has_restaddsigncount() const;
  inline void clear_restaddsigncount();
  static const int kRestAddSignCountFieldNumber = 3;
  inline ::google::protobuf::int32 restaddsigncount() const;
  inline void set_restaddsigncount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardHail.ClientSignInInfo)
 private:
  inline void set_has_signin();
  inline void clear_has_signin();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_restaddsigncount();
  inline void clear_has_restaddsigncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 signin_;
  ::google::protobuf::int32 reward_;
  ::google::protobuf::int32 restaddsigncount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static ClientSignInInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientOlineRewardInfo : public ::google::protobuf::Message {
 public:
  ClientOlineRewardInfo();
  virtual ~ClientOlineRewardInfo();

  ClientOlineRewardInfo(const ClientOlineRewardInfo& from);

  inline ClientOlineRewardInfo& operator=(const ClientOlineRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOlineRewardInfo& default_instance();

  void Swap(ClientOlineRewardInfo* other);

  // implements Message ----------------------------------------------

  ClientOlineRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientOlineRewardInfo& from);
  void MergeFrom(const ClientOlineRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rewardInfo = 1;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 1;
  inline ::google::protobuf::int32 rewardinfo() const;
  inline void set_rewardinfo(::google::protobuf::int32 value);

  // required int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardHail.ClientOlineRewardInfo)
 private:
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rewardinfo_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static ClientOlineRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetOnlineReward : public ::google::protobuf::Message {
 public:
  GetOnlineReward();
  virtual ~GetOnlineReward();

  GetOnlineReward(const GetOnlineReward& from);

  inline GetOnlineReward& operator=(const GetOnlineReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOnlineReward& default_instance();

  void Swap(GetOnlineReward* other);

  // implements Message ----------------------------------------------

  GetOnlineReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOnlineReward& from);
  void MergeFrom(const GetOnlineReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 IdList = 1;
  inline int idlist_size() const;
  inline void clear_idlist();
  static const int kIdListFieldNumber = 1;
  inline ::google::protobuf::int32 idlist(int index) const;
  inline void set_idlist(int index, ::google::protobuf::int32 value);
  inline void add_idlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      idlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_idlist();

  // @@protoc_insertion_point(class_scope:RewardHail.GetOnlineReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > idlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static GetOnlineReward* default_instance_;
};
// -------------------------------------------------------------------

class OpenLevelReward : public ::google::protobuf::Message {
 public:
  OpenLevelReward();
  virtual ~OpenLevelReward();

  OpenLevelReward(const OpenLevelReward& from);

  inline OpenLevelReward& operator=(const OpenLevelReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenLevelReward& default_instance();

  void Swap(OpenLevelReward* other);

  // implements Message ----------------------------------------------

  OpenLevelReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenLevelReward& from);
  void MergeFrom(const OpenLevelReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 levelReward = 1;
  inline bool has_levelreward() const;
  inline void clear_levelreward();
  static const int kLevelRewardFieldNumber = 1;
  inline ::google::protobuf::int32 levelreward() const;
  inline void set_levelreward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardHail.OpenLevelReward)
 private:
  inline void set_has_levelreward();
  inline void clear_has_levelreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 levelreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static OpenLevelReward* default_instance_;
};
// -------------------------------------------------------------------

class OpenToalLoginAndFirstChargeRewardInfo : public ::google::protobuf::Message {
 public:
  OpenToalLoginAndFirstChargeRewardInfo();
  virtual ~OpenToalLoginAndFirstChargeRewardInfo();

  OpenToalLoginAndFirstChargeRewardInfo(const OpenToalLoginAndFirstChargeRewardInfo& from);

  inline OpenToalLoginAndFirstChargeRewardInfo& operator=(const OpenToalLoginAndFirstChargeRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenToalLoginAndFirstChargeRewardInfo& default_instance();

  void Swap(OpenToalLoginAndFirstChargeRewardInfo* other);

  // implements Message ----------------------------------------------

  OpenToalLoginAndFirstChargeRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenToalLoginAndFirstChargeRewardInfo& from);
  void MergeFrom(const OpenToalLoginAndFirstChargeRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 totalcount = 1;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalcountFieldNumber = 1;
  inline ::google::protobuf::int32 totalcount() const;
  inline void set_totalcount(::google::protobuf::int32 value);

  // optional int32 rewardInfo = 2;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 2;
  inline ::google::protobuf::int32 rewardinfo() const;
  inline void set_rewardinfo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardHail.OpenToalLoginAndFirstChargeRewardInfo)
 private:
  inline void set_has_totalcount();
  inline void clear_has_totalcount();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 totalcount_;
  ::google::protobuf::int32 rewardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static OpenToalLoginAndFirstChargeRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientOnceReward : public ::google::protobuf::Message {
 public:
  ClientOnceReward();
  virtual ~ClientOnceReward();

  ClientOnceReward(const ClientOnceReward& from);

  inline ClientOnceReward& operator=(const ClientOnceReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOnceReward& default_instance();

  void Swap(ClientOnceReward* other);

  // implements Message ----------------------------------------------

  ClientOnceReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientOnceReward& from);
  void MergeFrom(const ClientOnceReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 firstChargeReward = 1;
  inline bool has_firstchargereward() const;
  inline void clear_firstchargereward();
  static const int kFirstChargeRewardFieldNumber = 1;
  inline ::google::protobuf::int32 firstchargereward() const;
  inline void set_firstchargereward(::google::protobuf::int32 value);

  // optional int32 microReward = 2;
  inline bool has_microreward() const;
  inline void clear_microreward();
  static const int kMicroRewardFieldNumber = 2;
  inline ::google::protobuf::int32 microreward() const;
  inline void set_microreward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardHail.ClientOnceReward)
 private:
  inline void set_has_firstchargereward();
  inline void clear_has_firstchargereward();
  inline void set_has_microreward();
  inline void clear_has_microreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 firstchargereward_;
  ::google::protobuf::int32 microreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_AssignDesc_RewardHail_2fRewardHail_2eproto();
  friend void protobuf_ShutdownFile_RewardHail_2fRewardHail_2eproto();

  void InitAsDefaultInstance();
  static ClientOnceReward* default_instance_;
};
// ===================================================================


// ===================================================================

// SignIn

// required int32 day = 1;
inline bool SignIn::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignIn::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignIn::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignIn::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 SignIn::day() const {
  return day_;
}
inline void SignIn::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
}

// -------------------------------------------------------------------

// GetReward

// required int32 type = 1;
inline bool GetReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GetReward::type() const {
  return type_;
}
inline void GetReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 list = 2;
inline int GetReward::list_size() const {
  return list_.size();
}
inline void GetReward::clear_list() {
  list_.Clear();
}
inline ::google::protobuf::int32 GetReward::list(int index) const {
  return list_.Get(index);
}
inline void GetReward::set_list(int index, ::google::protobuf::int32 value) {
  list_.Set(index, value);
}
inline void GetReward::add_list(::google::protobuf::int32 value) {
  list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetReward::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetReward::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// ToClientGetReward

// required int32 res = 1;
inline bool ToClientGetReward::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClientGetReward::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClientGetReward::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClientGetReward::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::google::protobuf::int32 ToClientGetReward::res() const {
  return res_;
}
inline void ToClientGetReward::set_res(::google::protobuf::int32 value) {
  set_has_res();
  res_ = value;
}

// required int32 type = 2;
inline bool ToClientGetReward::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToClientGetReward::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToClientGetReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToClientGetReward::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ToClientGetReward::type() const {
  return type_;
}
inline void ToClientGetReward::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 list = 3;
inline int ToClientGetReward::list_size() const {
  return list_.size();
}
inline void ToClientGetReward::clear_list() {
  list_.Clear();
}
inline ::google::protobuf::int32 ToClientGetReward::list(int index) const {
  return list_.Get(index);
}
inline void ToClientGetReward::set_list(int index, ::google::protobuf::int32 value) {
  list_.Set(index, value);
}
inline void ToClientGetReward::add_list(::google::protobuf::int32 value) {
  list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ToClientGetReward::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ToClientGetReward::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// OpenSignIn

// -------------------------------------------------------------------

// ClientSignInInfo

// required int32 SignIn = 1;
inline bool ClientSignInInfo::has_signin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSignInInfo::set_has_signin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSignInInfo::clear_has_signin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSignInInfo::clear_signin() {
  signin_ = 0;
  clear_has_signin();
}
inline ::google::protobuf::int32 ClientSignInInfo::signin() const {
  return signin_;
}
inline void ClientSignInInfo::set_signin(::google::protobuf::int32 value) {
  set_has_signin();
  signin_ = value;
}

// required int32 Reward = 2;
inline bool ClientSignInInfo::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSignInInfo::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSignInInfo::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSignInInfo::clear_reward() {
  reward_ = 0;
  clear_has_reward();
}
inline ::google::protobuf::int32 ClientSignInInfo::reward() const {
  return reward_;
}
inline void ClientSignInInfo::set_reward(::google::protobuf::int32 value) {
  set_has_reward();
  reward_ = value;
}

// optional int32 restAddSignCount = 3;
inline bool ClientSignInInfo::has_restaddsigncount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSignInInfo::set_has_restaddsigncount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSignInInfo::clear_has_restaddsigncount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSignInInfo::clear_restaddsigncount() {
  restaddsigncount_ = 0;
  clear_has_restaddsigncount();
}
inline ::google::protobuf::int32 ClientSignInInfo::restaddsigncount() const {
  return restaddsigncount_;
}
inline void ClientSignInInfo::set_restaddsigncount(::google::protobuf::int32 value) {
  set_has_restaddsigncount();
  restaddsigncount_ = value;
}

// -------------------------------------------------------------------

// ClientOlineRewardInfo

// required int32 rewardInfo = 1;
inline bool ClientOlineRewardInfo::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientOlineRewardInfo::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientOlineRewardInfo::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientOlineRewardInfo::clear_rewardinfo() {
  rewardinfo_ = 0;
  clear_has_rewardinfo();
}
inline ::google::protobuf::int32 ClientOlineRewardInfo::rewardinfo() const {
  return rewardinfo_;
}
inline void ClientOlineRewardInfo::set_rewardinfo(::google::protobuf::int32 value) {
  set_has_rewardinfo();
  rewardinfo_ = value;
}

// required int32 time = 2;
inline bool ClientOlineRewardInfo::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientOlineRewardInfo::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientOlineRewardInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientOlineRewardInfo::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ClientOlineRewardInfo::time() const {
  return time_;
}
inline void ClientOlineRewardInfo::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// GetOnlineReward

// repeated int32 IdList = 1;
inline int GetOnlineReward::idlist_size() const {
  return idlist_.size();
}
inline void GetOnlineReward::clear_idlist() {
  idlist_.Clear();
}
inline ::google::protobuf::int32 GetOnlineReward::idlist(int index) const {
  return idlist_.Get(index);
}
inline void GetOnlineReward::set_idlist(int index, ::google::protobuf::int32 value) {
  idlist_.Set(index, value);
}
inline void GetOnlineReward::add_idlist(::google::protobuf::int32 value) {
  idlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetOnlineReward::idlist() const {
  return idlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetOnlineReward::mutable_idlist() {
  return &idlist_;
}

// -------------------------------------------------------------------

// OpenLevelReward

// required int32 levelReward = 1;
inline bool OpenLevelReward::has_levelreward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenLevelReward::set_has_levelreward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenLevelReward::clear_has_levelreward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenLevelReward::clear_levelreward() {
  levelreward_ = 0;
  clear_has_levelreward();
}
inline ::google::protobuf::int32 OpenLevelReward::levelreward() const {
  return levelreward_;
}
inline void OpenLevelReward::set_levelreward(::google::protobuf::int32 value) {
  set_has_levelreward();
  levelreward_ = value;
}

// -------------------------------------------------------------------

// OpenToalLoginAndFirstChargeRewardInfo

// optional int32 totalcount = 1;
inline bool OpenToalLoginAndFirstChargeRewardInfo::has_totalcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::set_has_totalcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::clear_totalcount() {
  totalcount_ = 0;
  clear_has_totalcount();
}
inline ::google::protobuf::int32 OpenToalLoginAndFirstChargeRewardInfo::totalcount() const {
  return totalcount_;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::set_totalcount(::google::protobuf::int32 value) {
  set_has_totalcount();
  totalcount_ = value;
}

// optional int32 rewardInfo = 2;
inline bool OpenToalLoginAndFirstChargeRewardInfo::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::clear_rewardinfo() {
  rewardinfo_ = 0;
  clear_has_rewardinfo();
}
inline ::google::protobuf::int32 OpenToalLoginAndFirstChargeRewardInfo::rewardinfo() const {
  return rewardinfo_;
}
inline void OpenToalLoginAndFirstChargeRewardInfo::set_rewardinfo(::google::protobuf::int32 value) {
  set_has_rewardinfo();
  rewardinfo_ = value;
}

// -------------------------------------------------------------------

// ClientOnceReward

// optional int32 firstChargeReward = 1;
inline bool ClientOnceReward::has_firstchargereward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientOnceReward::set_has_firstchargereward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientOnceReward::clear_has_firstchargereward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientOnceReward::clear_firstchargereward() {
  firstchargereward_ = 0;
  clear_has_firstchargereward();
}
inline ::google::protobuf::int32 ClientOnceReward::firstchargereward() const {
  return firstchargereward_;
}
inline void ClientOnceReward::set_firstchargereward(::google::protobuf::int32 value) {
  set_has_firstchargereward();
  firstchargereward_ = value;
}

// optional int32 microReward = 2;
inline bool ClientOnceReward::has_microreward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientOnceReward::set_has_microreward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientOnceReward::clear_has_microreward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientOnceReward::clear_microreward() {
  microreward_ = 0;
  clear_has_microreward();
}
inline ::google::protobuf::int32 ClientOnceReward::microreward() const {
  return microreward_;
}
inline void ClientOnceReward::set_microreward(::google::protobuf::int32 value) {
  set_has_microreward();
  microreward_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RewardHail

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RewardHail_2fRewardHail_2eproto__INCLUDED
