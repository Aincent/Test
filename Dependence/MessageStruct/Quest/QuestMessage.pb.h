// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Quest/QuestMessage.proto

#ifndef PROTOBUF_Quest_2fQuestMessage_2eproto__INCLUDED
#define PROTOBUF_Quest_2fQuestMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace QuestProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

class ClientBranchTask;
class UpdateMainTask;
class UpdateDailyTask;
class UpdateClanTask;
class UpdateCampTask;
class ReqSubmitTask;
class ToSubmitTask;
class ReqFreshStar;
class ToFreshStar;
class ReqOneKeyComplete;
class ToOneKeyComplete;
class WeekQuestItem;
class WeekQuest;

// ===================================================================

class ClientBranchTask : public ::google::protobuf::Message {
 public:
  ClientBranchTask();
  virtual ~ClientBranchTask();

  ClientBranchTask(const ClientBranchTask& from);

  inline ClientBranchTask& operator=(const ClientBranchTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientBranchTask& default_instance();

  void Swap(ClientBranchTask* other);

  // implements Message ----------------------------------------------

  ClientBranchTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientBranchTask& from);
  void MergeFrom(const ClientBranchTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 questid = 1;
  inline int questid_size() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid(int index) const;
  inline void set_questid(int index, ::google::protobuf::int32 value);
  inline void add_questid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      questid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_questid();

  // repeated int32 fvalue = 2;
  inline int fvalue_size() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::int32 fvalue(int index) const;
  inline void set_fvalue(int index, ::google::protobuf::int32 value);
  inline void add_fvalue(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fvalue();

  // repeated int32 svalue = 3;
  inline int svalue_size() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  inline ::google::protobuf::int32 svalue(int index) const;
  inline void set_svalue(int index, ::google::protobuf::int32 value);
  inline void add_svalue(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      svalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_svalue();

  // repeated int32 state = 4;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int32 value);
  inline void add_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_state();

  // @@protoc_insertion_point(class_scope:QuestProto.ClientBranchTask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > questid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > svalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientBranchTask* default_instance_;
};
// -------------------------------------------------------------------

class UpdateMainTask : public ::google::protobuf::Message {
 public:
  UpdateMainTask();
  virtual ~UpdateMainTask();

  UpdateMainTask(const UpdateMainTask& from);

  inline UpdateMainTask& operator=(const UpdateMainTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMainTask& default_instance();

  void Swap(UpdateMainTask* other);

  // implements Message ----------------------------------------------

  UpdateMainTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateMainTask& from);
  void MergeFrom(const UpdateMainTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 fvalue = 2;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::int32 fvalue() const;
  inline void set_fvalue(::google::protobuf::int32 value);

  // required int32 svalue = 3;
  inline bool has_svalue() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  inline ::google::protobuf::int32 svalue() const;
  inline void set_svalue(::google::protobuf::int32 value);

  // required int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional .QuestProto.ClientBranchTask branch = 5;
  inline bool has_branch() const;
  inline void clear_branch();
  static const int kBranchFieldNumber = 5;
  inline const ::QuestProto::ClientBranchTask& branch() const;
  inline ::QuestProto::ClientBranchTask* mutable_branch();
  inline ::QuestProto::ClientBranchTask* release_branch();
  inline void set_allocated_branch(::QuestProto::ClientBranchTask* branch);

  // @@protoc_insertion_point(class_scope:QuestProto.UpdateMainTask)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_svalue();
  inline void clear_has_svalue();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_branch();
  inline void clear_has_branch();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 fvalue_;
  ::google::protobuf::int32 svalue_;
  ::google::protobuf::int32 state_;
  ::QuestProto::ClientBranchTask* branch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateMainTask* default_instance_;
};
// -------------------------------------------------------------------

class UpdateDailyTask : public ::google::protobuf::Message {
 public:
  UpdateDailyTask();
  virtual ~UpdateDailyTask();

  UpdateDailyTask(const UpdateDailyTask& from);

  inline UpdateDailyTask& operator=(const UpdateDailyTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDailyTask& default_instance();

  void Swap(UpdateDailyTask* other);

  // implements Message ----------------------------------------------

  UpdateDailyTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDailyTask& from);
  void MergeFrom(const UpdateDailyTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 fvalue = 2;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::int32 fvalue() const;
  inline void set_fvalue(::google::protobuf::int32 value);

  // required int32 svalue = 3;
  inline bool has_svalue() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  inline ::google::protobuf::int32 svalue() const;
  inline void set_svalue(::google::protobuf::int32 value);

  // required int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int32 numstar = 5;
  inline bool has_numstar() const;
  inline void clear_numstar();
  static const int kNumstarFieldNumber = 5;
  inline ::google::protobuf::int32 numstar() const;
  inline void set_numstar(::google::protobuf::int32 value);

  // required int32 rewardstar = 6;
  inline bool has_rewardstar() const;
  inline void clear_rewardstar();
  static const int kRewardstarFieldNumber = 6;
  inline ::google::protobuf::int32 rewardstar() const;
  inline void set_rewardstar(::google::protobuf::int32 value);

  // required int32 times = 7;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 7;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.UpdateDailyTask)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_svalue();
  inline void clear_has_svalue();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_numstar();
  inline void clear_has_numstar();
  inline void set_has_rewardstar();
  inline void clear_has_rewardstar();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 fvalue_;
  ::google::protobuf::int32 svalue_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 numstar_;
  ::google::protobuf::int32 rewardstar_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateDailyTask* default_instance_;
};
// -------------------------------------------------------------------

class UpdateClanTask : public ::google::protobuf::Message {
 public:
  UpdateClanTask();
  virtual ~UpdateClanTask();

  UpdateClanTask(const UpdateClanTask& from);

  inline UpdateClanTask& operator=(const UpdateClanTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateClanTask& default_instance();

  void Swap(UpdateClanTask* other);

  // implements Message ----------------------------------------------

  UpdateClanTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateClanTask& from);
  void MergeFrom(const UpdateClanTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 fvalue = 2;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::int32 fvalue() const;
  inline void set_fvalue(::google::protobuf::int32 value);

  // required int32 svalue = 3;
  inline bool has_svalue() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  inline ::google::protobuf::int32 svalue() const;
  inline void set_svalue(::google::protobuf::int32 value);

  // required int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int32 numstar = 5;
  inline bool has_numstar() const;
  inline void clear_numstar();
  static const int kNumstarFieldNumber = 5;
  inline ::google::protobuf::int32 numstar() const;
  inline void set_numstar(::google::protobuf::int32 value);

  // required int32 rewardstar = 6;
  inline bool has_rewardstar() const;
  inline void clear_rewardstar();
  static const int kRewardstarFieldNumber = 6;
  inline ::google::protobuf::int32 rewardstar() const;
  inline void set_rewardstar(::google::protobuf::int32 value);

  // required int32 times = 7;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 7;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.UpdateClanTask)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_svalue();
  inline void clear_has_svalue();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_numstar();
  inline void clear_has_numstar();
  inline void set_has_rewardstar();
  inline void clear_has_rewardstar();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 fvalue_;
  ::google::protobuf::int32 svalue_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 numstar_;
  ::google::protobuf::int32 rewardstar_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateClanTask* default_instance_;
};
// -------------------------------------------------------------------

class UpdateCampTask : public ::google::protobuf::Message {
 public:
  UpdateCampTask();
  virtual ~UpdateCampTask();

  UpdateCampTask(const UpdateCampTask& from);

  inline UpdateCampTask& operator=(const UpdateCampTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCampTask& default_instance();

  void Swap(UpdateCampTask* other);

  // implements Message ----------------------------------------------

  UpdateCampTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateCampTask& from);
  void MergeFrom(const UpdateCampTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 fvalue = 2;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::int32 fvalue() const;
  inline void set_fvalue(::google::protobuf::int32 value);

  // required int32 svalue = 3;
  inline bool has_svalue() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  inline ::google::protobuf::int32 svalue() const;
  inline void set_svalue(::google::protobuf::int32 value);

  // required int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int32 numstar = 5;
  inline bool has_numstar() const;
  inline void clear_numstar();
  static const int kNumstarFieldNumber = 5;
  inline ::google::protobuf::int32 numstar() const;
  inline void set_numstar(::google::protobuf::int32 value);

  // required int32 rewardstar = 6;
  inline bool has_rewardstar() const;
  inline void clear_rewardstar();
  static const int kRewardstarFieldNumber = 6;
  inline ::google::protobuf::int32 rewardstar() const;
  inline void set_rewardstar(::google::protobuf::int32 value);

  // required int32 times = 7;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 7;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.UpdateCampTask)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_svalue();
  inline void clear_has_svalue();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_numstar();
  inline void clear_has_numstar();
  inline void set_has_rewardstar();
  inline void clear_has_rewardstar();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 fvalue_;
  ::google::protobuf::int32 svalue_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 numstar_;
  ::google::protobuf::int32 rewardstar_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateCampTask* default_instance_;
};
// -------------------------------------------------------------------

class ReqSubmitTask : public ::google::protobuf::Message {
 public:
  ReqSubmitTask();
  virtual ~ReqSubmitTask();

  ReqSubmitTask(const ReqSubmitTask& from);

  inline ReqSubmitTask& operator=(const ReqSubmitTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSubmitTask& default_instance();

  void Swap(ReqSubmitTask* other);

  // implements Message ----------------------------------------------

  ReqSubmitTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSubmitTask& from);
  void MergeFrom(const ReqSubmitTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.ReqSubmitTask)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ReqSubmitTask* default_instance_;
};
// -------------------------------------------------------------------

class ToSubmitTask : public ::google::protobuf::Message {
 public:
  ToSubmitTask();
  virtual ~ToSubmitTask();

  ToSubmitTask(const ToSubmitTask& from);

  inline ToSubmitTask& operator=(const ToSubmitTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToSubmitTask& default_instance();

  void Swap(ToSubmitTask* other);

  // implements Message ----------------------------------------------

  ToSubmitTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToSubmitTask& from);
  void MergeFrom(const ToSubmitTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // required int32 error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.ToSubmitTask)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ToSubmitTask* default_instance_;
};
// -------------------------------------------------------------------

class ReqFreshStar : public ::google::protobuf::Message {
 public:
  ReqFreshStar();
  virtual ~ReqFreshStar();

  ReqFreshStar(const ReqFreshStar& from);

  inline ReqFreshStar& operator=(const ReqFreshStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqFreshStar& default_instance();

  void Swap(ReqFreshStar* other);

  // implements Message ----------------------------------------------

  ReqFreshStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqFreshStar& from);
  void MergeFrom(const ReqFreshStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // required int32 freshtype = 2;
  inline bool has_freshtype() const;
  inline void clear_freshtype();
  static const int kFreshtypeFieldNumber = 2;
  inline ::google::protobuf::int32 freshtype() const;
  inline void set_freshtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.ReqFreshStar)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_freshtype();
  inline void clear_has_freshtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 freshtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ReqFreshStar* default_instance_;
};
// -------------------------------------------------------------------

class ToFreshStar : public ::google::protobuf::Message {
 public:
  ToFreshStar();
  virtual ~ToFreshStar();

  ToFreshStar(const ToFreshStar& from);

  inline ToFreshStar& operator=(const ToFreshStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToFreshStar& default_instance();

  void Swap(ToFreshStar* other);

  // implements Message ----------------------------------------------

  ToFreshStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToFreshStar& from);
  void MergeFrom(const ToFreshStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // required int32 freshtype = 2;
  inline bool has_freshtype() const;
  inline void clear_freshtype();
  static const int kFreshtypeFieldNumber = 2;
  inline ::google::protobuf::int32 freshtype() const;
  inline void set_freshtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.ToFreshStar)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_freshtype();
  inline void clear_has_freshtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 freshtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ToFreshStar* default_instance_;
};
// -------------------------------------------------------------------

class ReqOneKeyComplete : public ::google::protobuf::Message {
 public:
  ReqOneKeyComplete();
  virtual ~ReqOneKeyComplete();

  ReqOneKeyComplete(const ReqOneKeyComplete& from);

  inline ReqOneKeyComplete& operator=(const ReqOneKeyComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqOneKeyComplete& default_instance();

  void Swap(ReqOneKeyComplete* other);

  // implements Message ----------------------------------------------

  ReqOneKeyComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqOneKeyComplete& from);
  void MergeFrom(const ReqOneKeyComplete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.ReqOneKeyComplete)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 taskid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ReqOneKeyComplete* default_instance_;
};
// -------------------------------------------------------------------

class ToOneKeyComplete : public ::google::protobuf::Message {
 public:
  ToOneKeyComplete();
  virtual ~ToOneKeyComplete();

  ToOneKeyComplete(const ToOneKeyComplete& from);

  inline ToOneKeyComplete& operator=(const ToOneKeyComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToOneKeyComplete& default_instance();

  void Swap(ToOneKeyComplete* other);

  // implements Message ----------------------------------------------

  ToOneKeyComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToOneKeyComplete& from);
  void MergeFrom(const ToOneKeyComplete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.ToOneKeyComplete)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static ToOneKeyComplete* default_instance_;
};
// -------------------------------------------------------------------

class WeekQuestItem : public ::google::protobuf::Message {
 public:
  WeekQuestItem();
  virtual ~WeekQuestItem();

  WeekQuestItem(const WeekQuestItem& from);

  inline WeekQuestItem& operator=(const WeekQuestItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeekQuestItem& default_instance();

  void Swap(WeekQuestItem* other);

  // implements Message ----------------------------------------------

  WeekQuestItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeekQuestItem& from);
  void MergeFrom(const WeekQuestItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::int32 counts() const;
  inline void set_counts(::google::protobuf::int32 value);

  // optional int32 bindType = 3;
  inline bool has_bindtype() const;
  inline void clear_bindtype();
  static const int kBindTypeFieldNumber = 3;
  inline ::google::protobuf::int32 bindtype() const;
  inline void set_bindtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QuestProto.WeekQuestItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_counts();
  inline void clear_has_counts();
  inline void set_has_bindtype();
  inline void clear_has_bindtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 counts_;
  ::google::protobuf::int32 bindtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static WeekQuestItem* default_instance_;
};
// -------------------------------------------------------------------

class WeekQuest : public ::google::protobuf::Message {
 public:
  WeekQuest();
  virtual ~WeekQuest();

  WeekQuest(const WeekQuest& from);

  inline WeekQuest& operator=(const WeekQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeekQuest& default_instance();

  void Swap(WeekQuest* other);

  // implements Message ----------------------------------------------

  WeekQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeekQuest& from);
  void MergeFrom(const WeekQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 questID = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIDFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // optional int32 fvalue = 2;
  inline bool has_fvalue() const;
  inline void clear_fvalue();
  static const int kFvalueFieldNumber = 2;
  inline ::google::protobuf::int32 fvalue() const;
  inline void set_fvalue(::google::protobuf::int32 value);

  // optional int32 svalue = 3;
  inline bool has_svalue() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 3;
  inline ::google::protobuf::int32 svalue() const;
  inline void set_svalue(::google::protobuf::int32 value);

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 times = 5;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 5;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // repeated .QuestProto.WeekQuestItem rewardIDs = 6;
  inline int rewardids_size() const;
  inline void clear_rewardids();
  static const int kRewardIDsFieldNumber = 6;
  inline const ::QuestProto::WeekQuestItem& rewardids(int index) const;
  inline ::QuestProto::WeekQuestItem* mutable_rewardids(int index);
  inline ::QuestProto::WeekQuestItem* add_rewardids();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >&
      rewardids() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >*
      mutable_rewardids();

  // repeated .QuestProto.WeekQuestItem endrewardIDs = 7;
  inline int endrewardids_size() const;
  inline void clear_endrewardids();
  static const int kEndrewardIDsFieldNumber = 7;
  inline const ::QuestProto::WeekQuestItem& endrewardids(int index) const;
  inline ::QuestProto::WeekQuestItem* mutable_endrewardids(int index);
  inline ::QuestProto::WeekQuestItem* add_endrewardids();
  inline const ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >&
      endrewardids() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >*
      mutable_endrewardids();

  // @@protoc_insertion_point(class_scope:QuestProto.WeekQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_fvalue();
  inline void clear_has_fvalue();
  inline void set_has_svalue();
  inline void clear_has_svalue();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 fvalue_;
  ::google::protobuf::int32 svalue_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem > rewardids_;
  ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem > endrewardids_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_AssignDesc_Quest_2fQuestMessage_2eproto();
  friend void protobuf_ShutdownFile_Quest_2fQuestMessage_2eproto();

  void InitAsDefaultInstance();
  static WeekQuest* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientBranchTask

// repeated int32 questid = 1;
inline int ClientBranchTask::questid_size() const {
  return questid_.size();
}
inline void ClientBranchTask::clear_questid() {
  questid_.Clear();
}
inline ::google::protobuf::int32 ClientBranchTask::questid(int index) const {
  return questid_.Get(index);
}
inline void ClientBranchTask::set_questid(int index, ::google::protobuf::int32 value) {
  questid_.Set(index, value);
}
inline void ClientBranchTask::add_questid(::google::protobuf::int32 value) {
  questid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientBranchTask::questid() const {
  return questid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientBranchTask::mutable_questid() {
  return &questid_;
}

// repeated int32 fvalue = 2;
inline int ClientBranchTask::fvalue_size() const {
  return fvalue_.size();
}
inline void ClientBranchTask::clear_fvalue() {
  fvalue_.Clear();
}
inline ::google::protobuf::int32 ClientBranchTask::fvalue(int index) const {
  return fvalue_.Get(index);
}
inline void ClientBranchTask::set_fvalue(int index, ::google::protobuf::int32 value) {
  fvalue_.Set(index, value);
}
inline void ClientBranchTask::add_fvalue(::google::protobuf::int32 value) {
  fvalue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientBranchTask::fvalue() const {
  return fvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientBranchTask::mutable_fvalue() {
  return &fvalue_;
}

// repeated int32 svalue = 3;
inline int ClientBranchTask::svalue_size() const {
  return svalue_.size();
}
inline void ClientBranchTask::clear_svalue() {
  svalue_.Clear();
}
inline ::google::protobuf::int32 ClientBranchTask::svalue(int index) const {
  return svalue_.Get(index);
}
inline void ClientBranchTask::set_svalue(int index, ::google::protobuf::int32 value) {
  svalue_.Set(index, value);
}
inline void ClientBranchTask::add_svalue(::google::protobuf::int32 value) {
  svalue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientBranchTask::svalue() const {
  return svalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientBranchTask::mutable_svalue() {
  return &svalue_;
}

// repeated int32 state = 4;
inline int ClientBranchTask::state_size() const {
  return state_.size();
}
inline void ClientBranchTask::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int32 ClientBranchTask::state(int index) const {
  return state_.Get(index);
}
inline void ClientBranchTask::set_state(int index, ::google::protobuf::int32 value) {
  state_.Set(index, value);
}
inline void ClientBranchTask::add_state(::google::protobuf::int32 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientBranchTask::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientBranchTask::mutable_state() {
  return &state_;
}

// -------------------------------------------------------------------

// UpdateMainTask

// required int32 questid = 1;
inline bool UpdateMainTask::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateMainTask::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateMainTask::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateMainTask::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 UpdateMainTask::questid() const {
  return questid_;
}
inline void UpdateMainTask::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 fvalue = 2;
inline bool UpdateMainTask::has_fvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateMainTask::set_has_fvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateMainTask::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateMainTask::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline ::google::protobuf::int32 UpdateMainTask::fvalue() const {
  return fvalue_;
}
inline void UpdateMainTask::set_fvalue(::google::protobuf::int32 value) {
  set_has_fvalue();
  fvalue_ = value;
}

// required int32 svalue = 3;
inline bool UpdateMainTask::has_svalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateMainTask::set_has_svalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateMainTask::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateMainTask::clear_svalue() {
  svalue_ = 0;
  clear_has_svalue();
}
inline ::google::protobuf::int32 UpdateMainTask::svalue() const {
  return svalue_;
}
inline void UpdateMainTask::set_svalue(::google::protobuf::int32 value) {
  set_has_svalue();
  svalue_ = value;
}

// required int32 state = 4;
inline bool UpdateMainTask::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateMainTask::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateMainTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateMainTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UpdateMainTask::state() const {
  return state_;
}
inline void UpdateMainTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional .QuestProto.ClientBranchTask branch = 5;
inline bool UpdateMainTask::has_branch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateMainTask::set_has_branch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateMainTask::clear_has_branch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateMainTask::clear_branch() {
  if (branch_ != NULL) branch_->::QuestProto::ClientBranchTask::Clear();
  clear_has_branch();
}
inline const ::QuestProto::ClientBranchTask& UpdateMainTask::branch() const {
  return branch_ != NULL ? *branch_ : *default_instance_->branch_;
}
inline ::QuestProto::ClientBranchTask* UpdateMainTask::mutable_branch() {
  set_has_branch();
  if (branch_ == NULL) branch_ = new ::QuestProto::ClientBranchTask;
  return branch_;
}
inline ::QuestProto::ClientBranchTask* UpdateMainTask::release_branch() {
  clear_has_branch();
  ::QuestProto::ClientBranchTask* temp = branch_;
  branch_ = NULL;
  return temp;
}
inline void UpdateMainTask::set_allocated_branch(::QuestProto::ClientBranchTask* branch) {
  delete branch_;
  branch_ = branch;
  if (branch) {
    set_has_branch();
  } else {
    clear_has_branch();
  }
}

// -------------------------------------------------------------------

// UpdateDailyTask

// required int32 questid = 1;
inline bool UpdateDailyTask::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDailyTask::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDailyTask::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDailyTask::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 UpdateDailyTask::questid() const {
  return questid_;
}
inline void UpdateDailyTask::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 fvalue = 2;
inline bool UpdateDailyTask::has_fvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDailyTask::set_has_fvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDailyTask::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDailyTask::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline ::google::protobuf::int32 UpdateDailyTask::fvalue() const {
  return fvalue_;
}
inline void UpdateDailyTask::set_fvalue(::google::protobuf::int32 value) {
  set_has_fvalue();
  fvalue_ = value;
}

// required int32 svalue = 3;
inline bool UpdateDailyTask::has_svalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateDailyTask::set_has_svalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateDailyTask::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateDailyTask::clear_svalue() {
  svalue_ = 0;
  clear_has_svalue();
}
inline ::google::protobuf::int32 UpdateDailyTask::svalue() const {
  return svalue_;
}
inline void UpdateDailyTask::set_svalue(::google::protobuf::int32 value) {
  set_has_svalue();
  svalue_ = value;
}

// required int32 state = 4;
inline bool UpdateDailyTask::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateDailyTask::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateDailyTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateDailyTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UpdateDailyTask::state() const {
  return state_;
}
inline void UpdateDailyTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required int32 numstar = 5;
inline bool UpdateDailyTask::has_numstar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateDailyTask::set_has_numstar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateDailyTask::clear_has_numstar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateDailyTask::clear_numstar() {
  numstar_ = 0;
  clear_has_numstar();
}
inline ::google::protobuf::int32 UpdateDailyTask::numstar() const {
  return numstar_;
}
inline void UpdateDailyTask::set_numstar(::google::protobuf::int32 value) {
  set_has_numstar();
  numstar_ = value;
}

// required int32 rewardstar = 6;
inline bool UpdateDailyTask::has_rewardstar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateDailyTask::set_has_rewardstar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateDailyTask::clear_has_rewardstar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateDailyTask::clear_rewardstar() {
  rewardstar_ = 0;
  clear_has_rewardstar();
}
inline ::google::protobuf::int32 UpdateDailyTask::rewardstar() const {
  return rewardstar_;
}
inline void UpdateDailyTask::set_rewardstar(::google::protobuf::int32 value) {
  set_has_rewardstar();
  rewardstar_ = value;
}

// required int32 times = 7;
inline bool UpdateDailyTask::has_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateDailyTask::set_has_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateDailyTask::clear_has_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateDailyTask::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 UpdateDailyTask::times() const {
  return times_;
}
inline void UpdateDailyTask::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// UpdateClanTask

// required int32 questid = 1;
inline bool UpdateClanTask::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateClanTask::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateClanTask::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateClanTask::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 UpdateClanTask::questid() const {
  return questid_;
}
inline void UpdateClanTask::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 fvalue = 2;
inline bool UpdateClanTask::has_fvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateClanTask::set_has_fvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateClanTask::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateClanTask::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline ::google::protobuf::int32 UpdateClanTask::fvalue() const {
  return fvalue_;
}
inline void UpdateClanTask::set_fvalue(::google::protobuf::int32 value) {
  set_has_fvalue();
  fvalue_ = value;
}

// required int32 svalue = 3;
inline bool UpdateClanTask::has_svalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateClanTask::set_has_svalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateClanTask::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateClanTask::clear_svalue() {
  svalue_ = 0;
  clear_has_svalue();
}
inline ::google::protobuf::int32 UpdateClanTask::svalue() const {
  return svalue_;
}
inline void UpdateClanTask::set_svalue(::google::protobuf::int32 value) {
  set_has_svalue();
  svalue_ = value;
}

// required int32 state = 4;
inline bool UpdateClanTask::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateClanTask::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateClanTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateClanTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UpdateClanTask::state() const {
  return state_;
}
inline void UpdateClanTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required int32 numstar = 5;
inline bool UpdateClanTask::has_numstar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateClanTask::set_has_numstar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateClanTask::clear_has_numstar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateClanTask::clear_numstar() {
  numstar_ = 0;
  clear_has_numstar();
}
inline ::google::protobuf::int32 UpdateClanTask::numstar() const {
  return numstar_;
}
inline void UpdateClanTask::set_numstar(::google::protobuf::int32 value) {
  set_has_numstar();
  numstar_ = value;
}

// required int32 rewardstar = 6;
inline bool UpdateClanTask::has_rewardstar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateClanTask::set_has_rewardstar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateClanTask::clear_has_rewardstar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateClanTask::clear_rewardstar() {
  rewardstar_ = 0;
  clear_has_rewardstar();
}
inline ::google::protobuf::int32 UpdateClanTask::rewardstar() const {
  return rewardstar_;
}
inline void UpdateClanTask::set_rewardstar(::google::protobuf::int32 value) {
  set_has_rewardstar();
  rewardstar_ = value;
}

// required int32 times = 7;
inline bool UpdateClanTask::has_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateClanTask::set_has_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateClanTask::clear_has_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateClanTask::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 UpdateClanTask::times() const {
  return times_;
}
inline void UpdateClanTask::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// UpdateCampTask

// required int32 questid = 1;
inline bool UpdateCampTask::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateCampTask::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateCampTask::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateCampTask::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 UpdateCampTask::questid() const {
  return questid_;
}
inline void UpdateCampTask::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 fvalue = 2;
inline bool UpdateCampTask::has_fvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateCampTask::set_has_fvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateCampTask::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateCampTask::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline ::google::protobuf::int32 UpdateCampTask::fvalue() const {
  return fvalue_;
}
inline void UpdateCampTask::set_fvalue(::google::protobuf::int32 value) {
  set_has_fvalue();
  fvalue_ = value;
}

// required int32 svalue = 3;
inline bool UpdateCampTask::has_svalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateCampTask::set_has_svalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateCampTask::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateCampTask::clear_svalue() {
  svalue_ = 0;
  clear_has_svalue();
}
inline ::google::protobuf::int32 UpdateCampTask::svalue() const {
  return svalue_;
}
inline void UpdateCampTask::set_svalue(::google::protobuf::int32 value) {
  set_has_svalue();
  svalue_ = value;
}

// required int32 state = 4;
inline bool UpdateCampTask::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateCampTask::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateCampTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateCampTask::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UpdateCampTask::state() const {
  return state_;
}
inline void UpdateCampTask::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required int32 numstar = 5;
inline bool UpdateCampTask::has_numstar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateCampTask::set_has_numstar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateCampTask::clear_has_numstar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateCampTask::clear_numstar() {
  numstar_ = 0;
  clear_has_numstar();
}
inline ::google::protobuf::int32 UpdateCampTask::numstar() const {
  return numstar_;
}
inline void UpdateCampTask::set_numstar(::google::protobuf::int32 value) {
  set_has_numstar();
  numstar_ = value;
}

// required int32 rewardstar = 6;
inline bool UpdateCampTask::has_rewardstar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateCampTask::set_has_rewardstar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateCampTask::clear_has_rewardstar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateCampTask::clear_rewardstar() {
  rewardstar_ = 0;
  clear_has_rewardstar();
}
inline ::google::protobuf::int32 UpdateCampTask::rewardstar() const {
  return rewardstar_;
}
inline void UpdateCampTask::set_rewardstar(::google::protobuf::int32 value) {
  set_has_rewardstar();
  rewardstar_ = value;
}

// required int32 times = 7;
inline bool UpdateCampTask::has_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateCampTask::set_has_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateCampTask::clear_has_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateCampTask::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 UpdateCampTask::times() const {
  return times_;
}
inline void UpdateCampTask::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// ReqSubmitTask

// required int32 questid = 1;
inline bool ReqSubmitTask::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSubmitTask::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSubmitTask::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSubmitTask::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 ReqSubmitTask::questid() const {
  return questid_;
}
inline void ReqSubmitTask::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// -------------------------------------------------------------------

// ToSubmitTask

// required int32 questid = 1;
inline bool ToSubmitTask::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToSubmitTask::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToSubmitTask::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToSubmitTask::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 ToSubmitTask::questid() const {
  return questid_;
}
inline void ToSubmitTask::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// required int32 error = 2;
inline bool ToSubmitTask::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToSubmitTask::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToSubmitTask::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToSubmitTask::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ToSubmitTask::error() const {
  return error_;
}
inline void ToSubmitTask::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// ReqFreshStar

// required int32 taskid = 1;
inline bool ReqFreshStar::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqFreshStar::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqFreshStar::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqFreshStar::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 ReqFreshStar::taskid() const {
  return taskid_;
}
inline void ReqFreshStar::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
}

// required int32 freshtype = 2;
inline bool ReqFreshStar::has_freshtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqFreshStar::set_has_freshtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqFreshStar::clear_has_freshtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqFreshStar::clear_freshtype() {
  freshtype_ = 0;
  clear_has_freshtype();
}
inline ::google::protobuf::int32 ReqFreshStar::freshtype() const {
  return freshtype_;
}
inline void ReqFreshStar::set_freshtype(::google::protobuf::int32 value) {
  set_has_freshtype();
  freshtype_ = value;
}

// -------------------------------------------------------------------

// ToFreshStar

// required int32 error = 1;
inline bool ToFreshStar::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToFreshStar::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToFreshStar::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToFreshStar::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ToFreshStar::error() const {
  return error_;
}
inline void ToFreshStar::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// required int32 freshtype = 2;
inline bool ToFreshStar::has_freshtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToFreshStar::set_has_freshtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToFreshStar::clear_has_freshtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToFreshStar::clear_freshtype() {
  freshtype_ = 0;
  clear_has_freshtype();
}
inline ::google::protobuf::int32 ToFreshStar::freshtype() const {
  return freshtype_;
}
inline void ToFreshStar::set_freshtype(::google::protobuf::int32 value) {
  set_has_freshtype();
  freshtype_ = value;
}

// -------------------------------------------------------------------

// ReqOneKeyComplete

// required int32 taskid = 1;
inline bool ReqOneKeyComplete::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqOneKeyComplete::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqOneKeyComplete::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqOneKeyComplete::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 ReqOneKeyComplete::taskid() const {
  return taskid_;
}
inline void ReqOneKeyComplete::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
}

// -------------------------------------------------------------------

// ToOneKeyComplete

// required int32 error = 1;
inline bool ToOneKeyComplete::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToOneKeyComplete::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToOneKeyComplete::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToOneKeyComplete::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ToOneKeyComplete::error() const {
  return error_;
}
inline void ToOneKeyComplete::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// WeekQuestItem

// optional int32 itemID = 1;
inline bool WeekQuestItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeekQuestItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeekQuestItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeekQuestItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 WeekQuestItem::itemid() const {
  return itemid_;
}
inline void WeekQuestItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 counts = 2;
inline bool WeekQuestItem::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeekQuestItem::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeekQuestItem::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeekQuestItem::clear_counts() {
  counts_ = 0;
  clear_has_counts();
}
inline ::google::protobuf::int32 WeekQuestItem::counts() const {
  return counts_;
}
inline void WeekQuestItem::set_counts(::google::protobuf::int32 value) {
  set_has_counts();
  counts_ = value;
}

// optional int32 bindType = 3;
inline bool WeekQuestItem::has_bindtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeekQuestItem::set_has_bindtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeekQuestItem::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeekQuestItem::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 WeekQuestItem::bindtype() const {
  return bindtype_;
}
inline void WeekQuestItem::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
}

// -------------------------------------------------------------------

// WeekQuest

// optional int32 questID = 1;
inline bool WeekQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeekQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeekQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeekQuest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 WeekQuest::questid() const {
  return questid_;
}
inline void WeekQuest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
}

// optional int32 fvalue = 2;
inline bool WeekQuest::has_fvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WeekQuest::set_has_fvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WeekQuest::clear_has_fvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WeekQuest::clear_fvalue() {
  fvalue_ = 0;
  clear_has_fvalue();
}
inline ::google::protobuf::int32 WeekQuest::fvalue() const {
  return fvalue_;
}
inline void WeekQuest::set_fvalue(::google::protobuf::int32 value) {
  set_has_fvalue();
  fvalue_ = value;
}

// optional int32 svalue = 3;
inline bool WeekQuest::has_svalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeekQuest::set_has_svalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeekQuest::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeekQuest::clear_svalue() {
  svalue_ = 0;
  clear_has_svalue();
}
inline ::google::protobuf::int32 WeekQuest::svalue() const {
  return svalue_;
}
inline void WeekQuest::set_svalue(::google::protobuf::int32 value) {
  set_has_svalue();
  svalue_ = value;
}

// optional int32 state = 4;
inline bool WeekQuest::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeekQuest::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeekQuest::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeekQuest::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 WeekQuest::state() const {
  return state_;
}
inline void WeekQuest::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 times = 5;
inline bool WeekQuest::has_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WeekQuest::set_has_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WeekQuest::clear_has_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WeekQuest::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 WeekQuest::times() const {
  return times_;
}
inline void WeekQuest::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// repeated .QuestProto.WeekQuestItem rewardIDs = 6;
inline int WeekQuest::rewardids_size() const {
  return rewardids_.size();
}
inline void WeekQuest::clear_rewardids() {
  rewardids_.Clear();
}
inline const ::QuestProto::WeekQuestItem& WeekQuest::rewardids(int index) const {
  return rewardids_.Get(index);
}
inline ::QuestProto::WeekQuestItem* WeekQuest::mutable_rewardids(int index) {
  return rewardids_.Mutable(index);
}
inline ::QuestProto::WeekQuestItem* WeekQuest::add_rewardids() {
  return rewardids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >&
WeekQuest::rewardids() const {
  return rewardids_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >*
WeekQuest::mutable_rewardids() {
  return &rewardids_;
}

// repeated .QuestProto.WeekQuestItem endrewardIDs = 7;
inline int WeekQuest::endrewardids_size() const {
  return endrewardids_.size();
}
inline void WeekQuest::clear_endrewardids() {
  endrewardids_.Clear();
}
inline const ::QuestProto::WeekQuestItem& WeekQuest::endrewardids(int index) const {
  return endrewardids_.Get(index);
}
inline ::QuestProto::WeekQuestItem* WeekQuest::mutable_endrewardids(int index) {
  return endrewardids_.Mutable(index);
}
inline ::QuestProto::WeekQuestItem* WeekQuest::add_endrewardids() {
  return endrewardids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >&
WeekQuest::endrewardids() const {
  return endrewardids_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuestProto::WeekQuestItem >*
WeekQuest::mutable_endrewardids() {
  return &endrewardids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuestProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Quest_2fQuestMessage_2eproto__INCLUDED
