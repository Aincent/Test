// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Activity/ProtectKing.proto

#ifndef PROTOBUF_Activity_2fProtectKing_2eproto__INCLUDED
#define PROTOBUF_Activity_2fProtectKing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ActivityKing {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

class AckClientKingInfo;
class AckClientRelush;
class AckClientFinish;
class ClientReqGetReward;
class AckGetReward;
class ToClientProtectResult;
class WSToGMDoubleProtectKing;

// ===================================================================

class AckClientKingInfo : public ::google::protobuf::Message {
 public:
  AckClientKingInfo();
  virtual ~AckClientKingInfo();

  AckClientKingInfo(const AckClientKingInfo& from);

  inline AckClientKingInfo& operator=(const AckClientKingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckClientKingInfo& default_instance();

  void Swap(AckClientKingInfo* other);

  // implements Message ----------------------------------------------

  AckClientKingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckClientKingInfo& from);
  void MergeFrom(const AckClientKingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 node = 1;
  inline bool has_node() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 1;
  inline ::google::protobuf::int32 node() const;
  inline void set_node(::google::protobuf::int32 value);

  // optional int32 relush = 2;
  inline bool has_relush() const;
  inline void clear_relush();
  static const int kRelushFieldNumber = 2;
  inline ::google::protobuf::int32 relush() const;
  inline void set_relush(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional uint32 reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // optional int32 maxnode = 5;
  inline bool has_maxnode() const;
  inline void clear_maxnode();
  static const int kMaxnodeFieldNumber = 5;
  inline ::google::protobuf::int32 maxnode() const;
  inline void set_maxnode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityKing.AckClientKingInfo)
 private:
  inline void set_has_node();
  inline void clear_has_node();
  inline void set_has_relush();
  inline void clear_has_relush();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_maxnode();
  inline void clear_has_maxnode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 node_;
  ::google::protobuf::int32 relush_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::uint32 reward_;
  ::google::protobuf::int32 maxnode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static AckClientKingInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckClientRelush : public ::google::protobuf::Message {
 public:
  AckClientRelush();
  virtual ~AckClientRelush();

  AckClientRelush(const AckClientRelush& from);

  inline AckClientRelush& operator=(const AckClientRelush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckClientRelush& default_instance();

  void Swap(AckClientRelush* other);

  // implements Message ----------------------------------------------

  AckClientRelush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckClientRelush& from);
  void MergeFrom(const AckClientRelush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityKing.AckClientRelush)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static AckClientRelush* default_instance_;
};
// -------------------------------------------------------------------

class AckClientFinish : public ::google::protobuf::Message {
 public:
  AckClientFinish();
  virtual ~AckClientFinish();

  AckClientFinish(const AckClientFinish& from);

  inline AckClientFinish& operator=(const AckClientFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckClientFinish& default_instance();

  void Swap(AckClientFinish* other);

  // implements Message ----------------------------------------------

  AckClientFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckClientFinish& from);
  void MergeFrom(const AckClientFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityKing.AckClientFinish)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static AckClientFinish* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqGetReward : public ::google::protobuf::Message {
 public:
  ClientReqGetReward();
  virtual ~ClientReqGetReward();

  ClientReqGetReward(const ClientReqGetReward& from);

  inline ClientReqGetReward& operator=(const ClientReqGetReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqGetReward& default_instance();

  void Swap(ClientReqGetReward* other);

  // implements Message ----------------------------------------------

  ClientReqGetReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqGetReward& from);
  void MergeFrom(const ClientReqGetReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 node = 1;
  inline bool has_node() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 1;
  inline ::google::protobuf::int32 node() const;
  inline void set_node(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityKing.ClientReqGetReward)
 private:
  inline void set_has_node();
  inline void clear_has_node();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 node_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static ClientReqGetReward* default_instance_;
};
// -------------------------------------------------------------------

class AckGetReward : public ::google::protobuf::Message {
 public:
  AckGetReward();
  virtual ~AckGetReward();

  AckGetReward(const AckGetReward& from);

  inline AckGetReward& operator=(const AckGetReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGetReward& default_instance();

  void Swap(AckGetReward* other);

  // implements Message ----------------------------------------------

  AckGetReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGetReward& from);
  void MergeFrom(const AckGetReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 node = 2;
  inline bool has_node() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 2;
  inline ::google::protobuf::int32 node() const;
  inline void set_node(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityKing.AckGetReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_node();
  inline void clear_has_node();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 node_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static AckGetReward* default_instance_;
};
// -------------------------------------------------------------------

class ToClientProtectResult : public ::google::protobuf::Message {
 public:
  ToClientProtectResult();
  virtual ~ToClientProtectResult();

  ToClientProtectResult(const ToClientProtectResult& from);

  inline ToClientProtectResult& operator=(const ToClientProtectResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClientProtectResult& default_instance();

  void Swap(ToClientProtectResult* other);

  // implements Message ----------------------------------------------

  ToClientProtectResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClientProtectResult& from);
  void MergeFrom(const ToClientProtectResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline bool ret() const;
  inline void set_ret(bool value);

  // @@protoc_insertion_point(class_scope:ActivityKing.ToClientProtectResult)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static ToClientProtectResult* default_instance_;
};
// -------------------------------------------------------------------

class WSToGMDoubleProtectKing : public ::google::protobuf::Message {
 public:
  WSToGMDoubleProtectKing();
  virtual ~WSToGMDoubleProtectKing();

  WSToGMDoubleProtectKing(const WSToGMDoubleProtectKing& from);

  inline WSToGMDoubleProtectKing& operator=(const WSToGMDoubleProtectKing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSToGMDoubleProtectKing& default_instance();

  void Swap(WSToGMDoubleProtectKing* other);

  // implements Message ----------------------------------------------

  WSToGMDoubleProtectKing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSToGMDoubleProtectKing& from);
  void MergeFrom(const WSToGMDoubleProtectKing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:ActivityKing.WSToGMDoubleProtectKing)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_AssignDesc_Activity_2fProtectKing_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fProtectKing_2eproto();

  void InitAsDefaultInstance();
  static WSToGMDoubleProtectKing* default_instance_;
};
// ===================================================================


// ===================================================================

// AckClientKingInfo

// required int32 node = 1;
inline bool AckClientKingInfo::has_node() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckClientKingInfo::set_has_node() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckClientKingInfo::clear_has_node() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckClientKingInfo::clear_node() {
  node_ = 0;
  clear_has_node();
}
inline ::google::protobuf::int32 AckClientKingInfo::node() const {
  return node_;
}
inline void AckClientKingInfo::set_node(::google::protobuf::int32 value) {
  set_has_node();
  node_ = value;
}

// optional int32 relush = 2;
inline bool AckClientKingInfo::has_relush() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckClientKingInfo::set_has_relush() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckClientKingInfo::clear_has_relush() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckClientKingInfo::clear_relush() {
  relush_ = 0;
  clear_has_relush();
}
inline ::google::protobuf::int32 AckClientKingInfo::relush() const {
  return relush_;
}
inline void AckClientKingInfo::set_relush(::google::protobuf::int32 value) {
  set_has_relush();
  relush_ = value;
}

// optional int32 time = 3;
inline bool AckClientKingInfo::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckClientKingInfo::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckClientKingInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckClientKingInfo::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 AckClientKingInfo::time() const {
  return time_;
}
inline void AckClientKingInfo::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 reward = 4;
inline bool AckClientKingInfo::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckClientKingInfo::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckClientKingInfo::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckClientKingInfo::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 AckClientKingInfo::reward() const {
  return reward_;
}
inline void AckClientKingInfo::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
}

// optional int32 maxnode = 5;
inline bool AckClientKingInfo::has_maxnode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckClientKingInfo::set_has_maxnode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckClientKingInfo::clear_has_maxnode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckClientKingInfo::clear_maxnode() {
  maxnode_ = 0;
  clear_has_maxnode();
}
inline ::google::protobuf::int32 AckClientKingInfo::maxnode() const {
  return maxnode_;
}
inline void AckClientKingInfo::set_maxnode(::google::protobuf::int32 value) {
  set_has_maxnode();
  maxnode_ = value;
}

// -------------------------------------------------------------------

// AckClientRelush

// required int32 ret = 1;
inline bool AckClientRelush::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckClientRelush::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckClientRelush::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckClientRelush::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AckClientRelush::ret() const {
  return ret_;
}
inline void AckClientRelush::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// AckClientFinish

// required int32 ret = 1;
inline bool AckClientFinish::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckClientFinish::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckClientFinish::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckClientFinish::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AckClientFinish::ret() const {
  return ret_;
}
inline void AckClientFinish::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 time = 2;
inline bool AckClientFinish::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckClientFinish::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckClientFinish::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckClientFinish::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 AckClientFinish::time() const {
  return time_;
}
inline void AckClientFinish::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ClientReqGetReward

// required int32 node = 1;
inline bool ClientReqGetReward::has_node() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqGetReward::set_has_node() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqGetReward::clear_has_node() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqGetReward::clear_node() {
  node_ = 0;
  clear_has_node();
}
inline ::google::protobuf::int32 ClientReqGetReward::node() const {
  return node_;
}
inline void ClientReqGetReward::set_node(::google::protobuf::int32 value) {
  set_has_node();
  node_ = value;
}

// -------------------------------------------------------------------

// AckGetReward

// required int32 ret = 1;
inline bool AckGetReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGetReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGetReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGetReward::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AckGetReward::ret() const {
  return ret_;
}
inline void AckGetReward::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 node = 2;
inline bool AckGetReward::has_node() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGetReward::set_has_node() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGetReward::clear_has_node() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGetReward::clear_node() {
  node_ = 0;
  clear_has_node();
}
inline ::google::protobuf::int32 AckGetReward::node() const {
  return node_;
}
inline void AckGetReward::set_node(::google::protobuf::int32 value) {
  set_has_node();
  node_ = value;
}

// -------------------------------------------------------------------

// ToClientProtectResult

// required bool ret = 1;
inline bool ToClientProtectResult::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClientProtectResult::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClientProtectResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClientProtectResult::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool ToClientProtectResult::ret() const {
  return ret_;
}
inline void ToClientProtectResult::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// WSToGMDoubleProtectKing

// required bool flag = 1;
inline bool WSToGMDoubleProtectKing::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSToGMDoubleProtectKing::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSToGMDoubleProtectKing::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSToGMDoubleProtectKing::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WSToGMDoubleProtectKing::flag() const {
  return flag_;
}
inline void WSToGMDoubleProtectKing::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ActivityKing

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Activity_2fProtectKing_2eproto__INCLUDED
