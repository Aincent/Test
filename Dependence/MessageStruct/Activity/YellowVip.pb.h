// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Activity/YellowVip.proto

#ifndef PROTOBUF_Activity_2fYellowVip_2eproto__INCLUDED
#define PROTOBUF_Activity_2fYellowVip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace YellowVipInfo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

class ToClentYellowVipInfo;
class NovicePacks;
class GrowPacks;
class DailyPacks;
class YearVipPacks;
class GirlWarPacks;
class ToClentNovicePacks;
class ReqGrowPacks;
class ToClentReqGrowPacks;
class ReqDailyPacks;
class ToClentReqDailyPacks;
class ToClentYearVipPacks;
class ToClentGirlWarPacks;

// ===================================================================

class ToClentYellowVipInfo : public ::google::protobuf::Message {
 public:
  ToClentYellowVipInfo();
  virtual ~ToClentYellowVipInfo();

  ToClentYellowVipInfo(const ToClentYellowVipInfo& from);

  inline ToClentYellowVipInfo& operator=(const ToClentYellowVipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClentYellowVipInfo& default_instance();

  void Swap(ToClentYellowVipInfo* other);

  // implements Message ----------------------------------------------

  ToClentYellowVipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClentYellowVipInfo& from);
  void MergeFrom(const ToClentYellowVipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 is_yellow_vip = 2;
  inline bool has_is_yellow_vip() const;
  inline void clear_is_yellow_vip();
  static const int kIsYellowVipFieldNumber = 2;
  inline ::google::protobuf::int32 is_yellow_vip() const;
  inline void set_is_yellow_vip(::google::protobuf::int32 value);

  // optional int32 is_yellow_year_vip = 3;
  inline bool has_is_yellow_year_vip() const;
  inline void clear_is_yellow_year_vip();
  static const int kIsYellowYearVipFieldNumber = 3;
  inline ::google::protobuf::int32 is_yellow_year_vip() const;
  inline void set_is_yellow_year_vip(::google::protobuf::int32 value);

  // optional int32 yellow_vip_level = 4;
  inline bool has_yellow_vip_level() const;
  inline void clear_yellow_vip_level();
  static const int kYellowVipLevelFieldNumber = 4;
  inline ::google::protobuf::int32 yellow_vip_level() const;
  inline void set_yellow_vip_level(::google::protobuf::int32 value);

  // optional int32 is_yellow_high_vip = 5;
  inline bool has_is_yellow_high_vip() const;
  inline void clear_is_yellow_high_vip();
  static const int kIsYellowHighVipFieldNumber = 5;
  inline ::google::protobuf::int32 is_yellow_high_vip() const;
  inline void set_is_yellow_high_vip(::google::protobuf::int32 value);

  // optional .YellowVipInfo.NovicePacks novicepacks = 6;
  inline bool has_novicepacks() const;
  inline void clear_novicepacks();
  static const int kNovicepacksFieldNumber = 6;
  inline const ::YellowVipInfo::NovicePacks& novicepacks() const;
  inline ::YellowVipInfo::NovicePacks* mutable_novicepacks();
  inline ::YellowVipInfo::NovicePacks* release_novicepacks();
  inline void set_allocated_novicepacks(::YellowVipInfo::NovicePacks* novicepacks);

  // repeated .YellowVipInfo.GrowPacks growpacks = 7;
  inline int growpacks_size() const;
  inline void clear_growpacks();
  static const int kGrowpacksFieldNumber = 7;
  inline const ::YellowVipInfo::GrowPacks& growpacks(int index) const;
  inline ::YellowVipInfo::GrowPacks* mutable_growpacks(int index);
  inline ::YellowVipInfo::GrowPacks* add_growpacks();
  inline const ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::GrowPacks >&
      growpacks() const;
  inline ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::GrowPacks >*
      mutable_growpacks();

  // repeated .YellowVipInfo.DailyPacks dailypacks = 8;
  inline int dailypacks_size() const;
  inline void clear_dailypacks();
  static const int kDailypacksFieldNumber = 8;
  inline const ::YellowVipInfo::DailyPacks& dailypacks(int index) const;
  inline ::YellowVipInfo::DailyPacks* mutable_dailypacks(int index);
  inline ::YellowVipInfo::DailyPacks* add_dailypacks();
  inline const ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::DailyPacks >&
      dailypacks() const;
  inline ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::DailyPacks >*
      mutable_dailypacks();

  // optional .YellowVipInfo.YearVipPacks yearvippacks = 9;
  inline bool has_yearvippacks() const;
  inline void clear_yearvippacks();
  static const int kYearvippacksFieldNumber = 9;
  inline const ::YellowVipInfo::YearVipPacks& yearvippacks() const;
  inline ::YellowVipInfo::YearVipPacks* mutable_yearvippacks();
  inline ::YellowVipInfo::YearVipPacks* release_yearvippacks();
  inline void set_allocated_yearvippacks(::YellowVipInfo::YearVipPacks* yearvippacks);

  // optional .YellowVipInfo.GirlWarPacks girlwarpacks = 10;
  inline bool has_girlwarpacks() const;
  inline void clear_girlwarpacks();
  static const int kGirlwarpacksFieldNumber = 10;
  inline const ::YellowVipInfo::GirlWarPacks& girlwarpacks() const;
  inline ::YellowVipInfo::GirlWarPacks* mutable_girlwarpacks();
  inline ::YellowVipInfo::GirlWarPacks* release_girlwarpacks();
  inline void set_allocated_girlwarpacks(::YellowVipInfo::GirlWarPacks* girlwarpacks);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ToClentYellowVipInfo)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_is_yellow_vip();
  inline void clear_has_is_yellow_vip();
  inline void set_has_is_yellow_year_vip();
  inline void clear_has_is_yellow_year_vip();
  inline void set_has_yellow_vip_level();
  inline void clear_has_yellow_vip_level();
  inline void set_has_is_yellow_high_vip();
  inline void clear_has_is_yellow_high_vip();
  inline void set_has_novicepacks();
  inline void clear_has_novicepacks();
  inline void set_has_yearvippacks();
  inline void clear_has_yearvippacks();
  inline void set_has_girlwarpacks();
  inline void clear_has_girlwarpacks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 is_yellow_vip_;
  ::google::protobuf::int32 is_yellow_year_vip_;
  ::google::protobuf::int32 yellow_vip_level_;
  ::YellowVipInfo::NovicePacks* novicepacks_;
  ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::GrowPacks > growpacks_;
  ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::DailyPacks > dailypacks_;
  ::YellowVipInfo::YearVipPacks* yearvippacks_;
  ::YellowVipInfo::GirlWarPacks* girlwarpacks_;
  ::google::protobuf::int32 is_yellow_high_vip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ToClentYellowVipInfo* default_instance_;
};
// -------------------------------------------------------------------

class NovicePacks : public ::google::protobuf::Message {
 public:
  NovicePacks();
  virtual ~NovicePacks();

  NovicePacks(const NovicePacks& from);

  inline NovicePacks& operator=(const NovicePacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NovicePacks& default_instance();

  void Swap(NovicePacks* other);

  // implements Message ----------------------------------------------

  NovicePacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NovicePacks& from);
  void MergeFrom(const NovicePacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // @@protoc_insertion_point(class_scope:YellowVipInfo.NovicePacks)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static NovicePacks* default_instance_;
};
// -------------------------------------------------------------------

class GrowPacks : public ::google::protobuf::Message {
 public:
  GrowPacks();
  virtual ~GrowPacks();

  GrowPacks(const GrowPacks& from);

  inline GrowPacks& operator=(const GrowPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowPacks& default_instance();

  void Swap(GrowPacks* other);

  // implements Message ----------------------------------------------

  GrowPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowPacks& from);
  void MergeFrom(const GrowPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.GrowPacks)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GrowPacks* default_instance_;
};
// -------------------------------------------------------------------

class DailyPacks : public ::google::protobuf::Message {
 public:
  DailyPacks();
  virtual ~DailyPacks();

  DailyPacks(const DailyPacks& from);

  inline DailyPacks& operator=(const DailyPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyPacks& default_instance();

  void Swap(DailyPacks* other);

  // implements Message ----------------------------------------------

  DailyPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyPacks& from);
  void MergeFrom(const DailyPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.DailyPacks)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static DailyPacks* default_instance_;
};
// -------------------------------------------------------------------

class YearVipPacks : public ::google::protobuf::Message {
 public:
  YearVipPacks();
  virtual ~YearVipPacks();

  YearVipPacks(const YearVipPacks& from);

  inline YearVipPacks& operator=(const YearVipPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YearVipPacks& default_instance();

  void Swap(YearVipPacks* other);

  // implements Message ----------------------------------------------

  YearVipPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const YearVipPacks& from);
  void MergeFrom(const YearVipPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // @@protoc_insertion_point(class_scope:YellowVipInfo.YearVipPacks)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static YearVipPacks* default_instance_;
};
// -------------------------------------------------------------------

class GirlWarPacks : public ::google::protobuf::Message {
 public:
  GirlWarPacks();
  virtual ~GirlWarPacks();

  GirlWarPacks(const GirlWarPacks& from);

  inline GirlWarPacks& operator=(const GirlWarPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GirlWarPacks& default_instance();

  void Swap(GirlWarPacks* other);

  // implements Message ----------------------------------------------

  GirlWarPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GirlWarPacks& from);
  void MergeFrom(const GirlWarPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.GirlWarPacks)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static GirlWarPacks* default_instance_;
};
// -------------------------------------------------------------------

class ToClentNovicePacks : public ::google::protobuf::Message {
 public:
  ToClentNovicePacks();
  virtual ~ToClentNovicePacks();

  ToClentNovicePacks(const ToClentNovicePacks& from);

  inline ToClentNovicePacks& operator=(const ToClentNovicePacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClentNovicePacks& default_instance();

  void Swap(ToClentNovicePacks* other);

  // implements Message ----------------------------------------------

  ToClentNovicePacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClentNovicePacks& from);
  void MergeFrom(const ToClentNovicePacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ToClentNovicePacks)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ToClentNovicePacks* default_instance_;
};
// -------------------------------------------------------------------

class ReqGrowPacks : public ::google::protobuf::Message {
 public:
  ReqGrowPacks();
  virtual ~ReqGrowPacks();

  ReqGrowPacks(const ReqGrowPacks& from);

  inline ReqGrowPacks& operator=(const ReqGrowPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGrowPacks& default_instance();

  void Swap(ReqGrowPacks* other);

  // implements Message ----------------------------------------------

  ReqGrowPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGrowPacks& from);
  void MergeFrom(const ReqGrowPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ReqGrowPacks)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ReqGrowPacks* default_instance_;
};
// -------------------------------------------------------------------

class ToClentReqGrowPacks : public ::google::protobuf::Message {
 public:
  ToClentReqGrowPacks();
  virtual ~ToClentReqGrowPacks();

  ToClentReqGrowPacks(const ToClentReqGrowPacks& from);

  inline ToClentReqGrowPacks& operator=(const ToClentReqGrowPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClentReqGrowPacks& default_instance();

  void Swap(ToClentReqGrowPacks* other);

  // implements Message ----------------------------------------------

  ToClentReqGrowPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClentReqGrowPacks& from);
  void MergeFrom(const ToClentReqGrowPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ToClentReqGrowPacks)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ToClentReqGrowPacks* default_instance_;
};
// -------------------------------------------------------------------

class ReqDailyPacks : public ::google::protobuf::Message {
 public:
  ReqDailyPacks();
  virtual ~ReqDailyPacks();

  ReqDailyPacks(const ReqDailyPacks& from);

  inline ReqDailyPacks& operator=(const ReqDailyPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqDailyPacks& default_instance();

  void Swap(ReqDailyPacks* other);

  // implements Message ----------------------------------------------

  ReqDailyPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqDailyPacks& from);
  void MergeFrom(const ReqDailyPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ReqDailyPacks)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ReqDailyPacks* default_instance_;
};
// -------------------------------------------------------------------

class ToClentReqDailyPacks : public ::google::protobuf::Message {
 public:
  ToClentReqDailyPacks();
  virtual ~ToClentReqDailyPacks();

  ToClentReqDailyPacks(const ToClentReqDailyPacks& from);

  inline ToClentReqDailyPacks& operator=(const ToClentReqDailyPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClentReqDailyPacks& default_instance();

  void Swap(ToClentReqDailyPacks* other);

  // implements Message ----------------------------------------------

  ToClentReqDailyPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClentReqDailyPacks& from);
  void MergeFrom(const ToClentReqDailyPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ToClentReqDailyPacks)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ToClentReqDailyPacks* default_instance_;
};
// -------------------------------------------------------------------

class ToClentYearVipPacks : public ::google::protobuf::Message {
 public:
  ToClentYearVipPacks();
  virtual ~ToClentYearVipPacks();

  ToClentYearVipPacks(const ToClentYearVipPacks& from);

  inline ToClentYearVipPacks& operator=(const ToClentYearVipPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClentYearVipPacks& default_instance();

  void Swap(ToClentYearVipPacks* other);

  // implements Message ----------------------------------------------

  ToClentYearVipPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClentYearVipPacks& from);
  void MergeFrom(const ToClentYearVipPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ToClentYearVipPacks)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ToClentYearVipPacks* default_instance_;
};
// -------------------------------------------------------------------

class ToClentGirlWarPacks : public ::google::protobuf::Message {
 public:
  ToClentGirlWarPacks();
  virtual ~ToClentGirlWarPacks();

  ToClentGirlWarPacks(const ToClentGirlWarPacks& from);

  inline ToClentGirlWarPacks& operator=(const ToClentGirlWarPacks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClentGirlWarPacks& default_instance();

  void Swap(ToClentGirlWarPacks* other);

  // implements Message ----------------------------------------------

  ToClentGirlWarPacks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClentGirlWarPacks& from);
  void MergeFrom(const ToClentGirlWarPacks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YellowVipInfo.ToClentGirlWarPacks)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_AssignDesc_Activity_2fYellowVip_2eproto();
  friend void protobuf_ShutdownFile_Activity_2fYellowVip_2eproto();

  void InitAsDefaultInstance();
  static ToClentGirlWarPacks* default_instance_;
};
// ===================================================================


// ===================================================================

// ToClentYellowVipInfo

// required int32 ret = 1;
inline bool ToClentYellowVipInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClentYellowVipInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClentYellowVipInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClentYellowVipInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ToClentYellowVipInfo::ret() const {
  return ret_;
}
inline void ToClentYellowVipInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 is_yellow_vip = 2;
inline bool ToClentYellowVipInfo::has_is_yellow_vip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToClentYellowVipInfo::set_has_is_yellow_vip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToClentYellowVipInfo::clear_has_is_yellow_vip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToClentYellowVipInfo::clear_is_yellow_vip() {
  is_yellow_vip_ = 0;
  clear_has_is_yellow_vip();
}
inline ::google::protobuf::int32 ToClentYellowVipInfo::is_yellow_vip() const {
  return is_yellow_vip_;
}
inline void ToClentYellowVipInfo::set_is_yellow_vip(::google::protobuf::int32 value) {
  set_has_is_yellow_vip();
  is_yellow_vip_ = value;
}

// optional int32 is_yellow_year_vip = 3;
inline bool ToClentYellowVipInfo::has_is_yellow_year_vip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToClentYellowVipInfo::set_has_is_yellow_year_vip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ToClentYellowVipInfo::clear_has_is_yellow_year_vip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ToClentYellowVipInfo::clear_is_yellow_year_vip() {
  is_yellow_year_vip_ = 0;
  clear_has_is_yellow_year_vip();
}
inline ::google::protobuf::int32 ToClentYellowVipInfo::is_yellow_year_vip() const {
  return is_yellow_year_vip_;
}
inline void ToClentYellowVipInfo::set_is_yellow_year_vip(::google::protobuf::int32 value) {
  set_has_is_yellow_year_vip();
  is_yellow_year_vip_ = value;
}

// optional int32 yellow_vip_level = 4;
inline bool ToClentYellowVipInfo::has_yellow_vip_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToClentYellowVipInfo::set_has_yellow_vip_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ToClentYellowVipInfo::clear_has_yellow_vip_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ToClentYellowVipInfo::clear_yellow_vip_level() {
  yellow_vip_level_ = 0;
  clear_has_yellow_vip_level();
}
inline ::google::protobuf::int32 ToClentYellowVipInfo::yellow_vip_level() const {
  return yellow_vip_level_;
}
inline void ToClentYellowVipInfo::set_yellow_vip_level(::google::protobuf::int32 value) {
  set_has_yellow_vip_level();
  yellow_vip_level_ = value;
}

// optional int32 is_yellow_high_vip = 5;
inline bool ToClentYellowVipInfo::has_is_yellow_high_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ToClentYellowVipInfo::set_has_is_yellow_high_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ToClentYellowVipInfo::clear_has_is_yellow_high_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ToClentYellowVipInfo::clear_is_yellow_high_vip() {
  is_yellow_high_vip_ = 0;
  clear_has_is_yellow_high_vip();
}
inline ::google::protobuf::int32 ToClentYellowVipInfo::is_yellow_high_vip() const {
  return is_yellow_high_vip_;
}
inline void ToClentYellowVipInfo::set_is_yellow_high_vip(::google::protobuf::int32 value) {
  set_has_is_yellow_high_vip();
  is_yellow_high_vip_ = value;
}

// optional .YellowVipInfo.NovicePacks novicepacks = 6;
inline bool ToClentYellowVipInfo::has_novicepacks() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ToClentYellowVipInfo::set_has_novicepacks() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ToClentYellowVipInfo::clear_has_novicepacks() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ToClentYellowVipInfo::clear_novicepacks() {
  if (novicepacks_ != NULL) novicepacks_->::YellowVipInfo::NovicePacks::Clear();
  clear_has_novicepacks();
}
inline const ::YellowVipInfo::NovicePacks& ToClentYellowVipInfo::novicepacks() const {
  return novicepacks_ != NULL ? *novicepacks_ : *default_instance_->novicepacks_;
}
inline ::YellowVipInfo::NovicePacks* ToClentYellowVipInfo::mutable_novicepacks() {
  set_has_novicepacks();
  if (novicepacks_ == NULL) novicepacks_ = new ::YellowVipInfo::NovicePacks;
  return novicepacks_;
}
inline ::YellowVipInfo::NovicePacks* ToClentYellowVipInfo::release_novicepacks() {
  clear_has_novicepacks();
  ::YellowVipInfo::NovicePacks* temp = novicepacks_;
  novicepacks_ = NULL;
  return temp;
}
inline void ToClentYellowVipInfo::set_allocated_novicepacks(::YellowVipInfo::NovicePacks* novicepacks) {
  delete novicepacks_;
  novicepacks_ = novicepacks;
  if (novicepacks) {
    set_has_novicepacks();
  } else {
    clear_has_novicepacks();
  }
}

// repeated .YellowVipInfo.GrowPacks growpacks = 7;
inline int ToClentYellowVipInfo::growpacks_size() const {
  return growpacks_.size();
}
inline void ToClentYellowVipInfo::clear_growpacks() {
  growpacks_.Clear();
}
inline const ::YellowVipInfo::GrowPacks& ToClentYellowVipInfo::growpacks(int index) const {
  return growpacks_.Get(index);
}
inline ::YellowVipInfo::GrowPacks* ToClentYellowVipInfo::mutable_growpacks(int index) {
  return growpacks_.Mutable(index);
}
inline ::YellowVipInfo::GrowPacks* ToClentYellowVipInfo::add_growpacks() {
  return growpacks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::GrowPacks >&
ToClentYellowVipInfo::growpacks() const {
  return growpacks_;
}
inline ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::GrowPacks >*
ToClentYellowVipInfo::mutable_growpacks() {
  return &growpacks_;
}

// repeated .YellowVipInfo.DailyPacks dailypacks = 8;
inline int ToClentYellowVipInfo::dailypacks_size() const {
  return dailypacks_.size();
}
inline void ToClentYellowVipInfo::clear_dailypacks() {
  dailypacks_.Clear();
}
inline const ::YellowVipInfo::DailyPacks& ToClentYellowVipInfo::dailypacks(int index) const {
  return dailypacks_.Get(index);
}
inline ::YellowVipInfo::DailyPacks* ToClentYellowVipInfo::mutable_dailypacks(int index) {
  return dailypacks_.Mutable(index);
}
inline ::YellowVipInfo::DailyPacks* ToClentYellowVipInfo::add_dailypacks() {
  return dailypacks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::DailyPacks >&
ToClentYellowVipInfo::dailypacks() const {
  return dailypacks_;
}
inline ::google::protobuf::RepeatedPtrField< ::YellowVipInfo::DailyPacks >*
ToClentYellowVipInfo::mutable_dailypacks() {
  return &dailypacks_;
}

// optional .YellowVipInfo.YearVipPacks yearvippacks = 9;
inline bool ToClentYellowVipInfo::has_yearvippacks() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ToClentYellowVipInfo::set_has_yearvippacks() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ToClentYellowVipInfo::clear_has_yearvippacks() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ToClentYellowVipInfo::clear_yearvippacks() {
  if (yearvippacks_ != NULL) yearvippacks_->::YellowVipInfo::YearVipPacks::Clear();
  clear_has_yearvippacks();
}
inline const ::YellowVipInfo::YearVipPacks& ToClentYellowVipInfo::yearvippacks() const {
  return yearvippacks_ != NULL ? *yearvippacks_ : *default_instance_->yearvippacks_;
}
inline ::YellowVipInfo::YearVipPacks* ToClentYellowVipInfo::mutable_yearvippacks() {
  set_has_yearvippacks();
  if (yearvippacks_ == NULL) yearvippacks_ = new ::YellowVipInfo::YearVipPacks;
  return yearvippacks_;
}
inline ::YellowVipInfo::YearVipPacks* ToClentYellowVipInfo::release_yearvippacks() {
  clear_has_yearvippacks();
  ::YellowVipInfo::YearVipPacks* temp = yearvippacks_;
  yearvippacks_ = NULL;
  return temp;
}
inline void ToClentYellowVipInfo::set_allocated_yearvippacks(::YellowVipInfo::YearVipPacks* yearvippacks) {
  delete yearvippacks_;
  yearvippacks_ = yearvippacks;
  if (yearvippacks) {
    set_has_yearvippacks();
  } else {
    clear_has_yearvippacks();
  }
}

// optional .YellowVipInfo.GirlWarPacks girlwarpacks = 10;
inline bool ToClentYellowVipInfo::has_girlwarpacks() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ToClentYellowVipInfo::set_has_girlwarpacks() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ToClentYellowVipInfo::clear_has_girlwarpacks() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ToClentYellowVipInfo::clear_girlwarpacks() {
  if (girlwarpacks_ != NULL) girlwarpacks_->::YellowVipInfo::GirlWarPacks::Clear();
  clear_has_girlwarpacks();
}
inline const ::YellowVipInfo::GirlWarPacks& ToClentYellowVipInfo::girlwarpacks() const {
  return girlwarpacks_ != NULL ? *girlwarpacks_ : *default_instance_->girlwarpacks_;
}
inline ::YellowVipInfo::GirlWarPacks* ToClentYellowVipInfo::mutable_girlwarpacks() {
  set_has_girlwarpacks();
  if (girlwarpacks_ == NULL) girlwarpacks_ = new ::YellowVipInfo::GirlWarPacks;
  return girlwarpacks_;
}
inline ::YellowVipInfo::GirlWarPacks* ToClentYellowVipInfo::release_girlwarpacks() {
  clear_has_girlwarpacks();
  ::YellowVipInfo::GirlWarPacks* temp = girlwarpacks_;
  girlwarpacks_ = NULL;
  return temp;
}
inline void ToClentYellowVipInfo::set_allocated_girlwarpacks(::YellowVipInfo::GirlWarPacks* girlwarpacks) {
  delete girlwarpacks_;
  girlwarpacks_ = girlwarpacks;
  if (girlwarpacks) {
    set_has_girlwarpacks();
  } else {
    clear_has_girlwarpacks();
  }
}

// -------------------------------------------------------------------

// NovicePacks

// optional int32 state = 1;
inline bool NovicePacks::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NovicePacks::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NovicePacks::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NovicePacks::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 NovicePacks::state() const {
  return state_;
}
inline void NovicePacks::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated int32 itemId = 2;
inline int NovicePacks::itemid_size() const {
  return itemid_.size();
}
inline void NovicePacks::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 NovicePacks::itemid(int index) const {
  return itemid_.Get(index);
}
inline void NovicePacks::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void NovicePacks::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NovicePacks::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NovicePacks::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int NovicePacks::itemnum_size() const {
  return itemnum_.size();
}
inline void NovicePacks::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 NovicePacks::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void NovicePacks::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void NovicePacks::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NovicePacks::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NovicePacks::mutable_itemnum() {
  return &itemnum_;
}

// -------------------------------------------------------------------

// GrowPacks

// optional int32 state = 1;
inline bool GrowPacks::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowPacks::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowPacks::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowPacks::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GrowPacks::state() const {
  return state_;
}
inline void GrowPacks::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated int32 itemId = 2;
inline int GrowPacks::itemid_size() const {
  return itemid_.size();
}
inline void GrowPacks::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 GrowPacks::itemid(int index) const {
  return itemid_.Get(index);
}
inline void GrowPacks::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void GrowPacks::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GrowPacks::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GrowPacks::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int GrowPacks::itemnum_size() const {
  return itemnum_.size();
}
inline void GrowPacks::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 GrowPacks::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void GrowPacks::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void GrowPacks::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GrowPacks::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GrowPacks::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 value = 4;
inline bool GrowPacks::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GrowPacks::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GrowPacks::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GrowPacks::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 GrowPacks::value() const {
  return value_;
}
inline void GrowPacks::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// DailyPacks

// optional int32 state = 1;
inline bool DailyPacks::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyPacks::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyPacks::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyPacks::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyPacks::state() const {
  return state_;
}
inline void DailyPacks::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated int32 itemId = 2;
inline int DailyPacks::itemid_size() const {
  return itemid_.size();
}
inline void DailyPacks::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 DailyPacks::itemid(int index) const {
  return itemid_.Get(index);
}
inline void DailyPacks::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void DailyPacks::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DailyPacks::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DailyPacks::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int DailyPacks::itemnum_size() const {
  return itemnum_.size();
}
inline void DailyPacks::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 DailyPacks::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void DailyPacks::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void DailyPacks::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DailyPacks::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DailyPacks::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 value = 4;
inline bool DailyPacks::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyPacks::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyPacks::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyPacks::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 DailyPacks::value() const {
  return value_;
}
inline void DailyPacks::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// YearVipPacks

// optional int32 state = 1;
inline bool YearVipPacks::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YearVipPacks::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YearVipPacks::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YearVipPacks::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 YearVipPacks::state() const {
  return state_;
}
inline void YearVipPacks::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated int32 itemId = 2;
inline int YearVipPacks::itemid_size() const {
  return itemid_.size();
}
inline void YearVipPacks::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 YearVipPacks::itemid(int index) const {
  return itemid_.Get(index);
}
inline void YearVipPacks::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void YearVipPacks::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
YearVipPacks::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
YearVipPacks::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int YearVipPacks::itemnum_size() const {
  return itemnum_.size();
}
inline void YearVipPacks::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 YearVipPacks::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void YearVipPacks::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void YearVipPacks::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
YearVipPacks::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
YearVipPacks::mutable_itemnum() {
  return &itemnum_;
}

// -------------------------------------------------------------------

// GirlWarPacks

// optional int32 state = 1;
inline bool GirlWarPacks::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GirlWarPacks::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GirlWarPacks::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GirlWarPacks::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GirlWarPacks::state() const {
  return state_;
}
inline void GirlWarPacks::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 id = 2;
inline bool GirlWarPacks::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GirlWarPacks::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GirlWarPacks::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GirlWarPacks::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GirlWarPacks::id() const {
  return id_;
}
inline void GirlWarPacks::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ToClentNovicePacks

// required int32 ret = 1;
inline bool ToClentNovicePacks::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClentNovicePacks::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClentNovicePacks::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClentNovicePacks::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ToClentNovicePacks::ret() const {
  return ret_;
}
inline void ToClentNovicePacks::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ReqGrowPacks

// required int32 value = 1;
inline bool ReqGrowPacks::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGrowPacks::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGrowPacks::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGrowPacks::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ReqGrowPacks::value() const {
  return value_;
}
inline void ReqGrowPacks::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ToClentReqGrowPacks

// required int32 ret = 1;
inline bool ToClentReqGrowPacks::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClentReqGrowPacks::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClentReqGrowPacks::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClentReqGrowPacks::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ToClentReqGrowPacks::ret() const {
  return ret_;
}
inline void ToClentReqGrowPacks::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 value = 2;
inline bool ToClentReqGrowPacks::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToClentReqGrowPacks::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToClentReqGrowPacks::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToClentReqGrowPacks::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ToClentReqGrowPacks::value() const {
  return value_;
}
inline void ToClentReqGrowPacks::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ReqDailyPacks

// required int32 value = 1;
inline bool ReqDailyPacks::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqDailyPacks::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqDailyPacks::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqDailyPacks::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ReqDailyPacks::value() const {
  return value_;
}
inline void ReqDailyPacks::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ToClentReqDailyPacks

// required int32 ret = 1;
inline bool ToClentReqDailyPacks::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClentReqDailyPacks::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClentReqDailyPacks::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClentReqDailyPacks::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ToClentReqDailyPacks::ret() const {
  return ret_;
}
inline void ToClentReqDailyPacks::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 value = 2;
inline bool ToClentReqDailyPacks::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToClentReqDailyPacks::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToClentReqDailyPacks::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToClentReqDailyPacks::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ToClentReqDailyPacks::value() const {
  return value_;
}
inline void ToClentReqDailyPacks::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ToClentYearVipPacks

// required int32 ret = 1;
inline bool ToClentYearVipPacks::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClentYearVipPacks::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClentYearVipPacks::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClentYearVipPacks::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ToClentYearVipPacks::ret() const {
  return ret_;
}
inline void ToClentYearVipPacks::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ToClentGirlWarPacks

// required int32 ret = 1;
inline bool ToClentGirlWarPacks::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToClentGirlWarPacks::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToClentGirlWarPacks::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToClentGirlWarPacks::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ToClentGirlWarPacks::ret() const {
  return ret_;
}
inline void ToClentGirlWarPacks::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace YellowVipInfo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Activity_2fYellowVip_2eproto__INCLUDED
