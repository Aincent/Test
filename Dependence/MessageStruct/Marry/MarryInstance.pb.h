// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Marry/MarryInstance.proto

#ifndef PROTOBUF_Marry_2fMarryInstance_2eproto__INCLUDED
#define PROTOBUF_Marry_2fMarryInstance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MarryInstanceInfo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

class vocativepartner;
class TellAnothervocativepartner;
class ReadyChallenge;
class RetReadyChallenge;
class TellAnotherReadyChallenge;
class StopChallenge;
class RetStopChallenge;
class TellAnotherStopChallenge;
class SysMarryInstance;
class StartChallenge;
class AskJumpPoint;
class RetAskJumpPoint;
class GMForceClientJumpMap;
class AskDownPoint;
class RetAskDownPoint;
class GMForceClientDownMap;
class AskSupportOther;
class RetAskSupportOther;
class GMToWSDelMarryCarbon;

// ===================================================================

class vocativepartner : public ::google::protobuf::Message {
 public:
  vocativepartner();
  virtual ~vocativepartner();

  vocativepartner(const vocativepartner& from);

  inline vocativepartner& operator=(const vocativepartner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const vocativepartner& default_instance();

  void Swap(vocativepartner* other);

  // implements Message ----------------------------------------------

  vocativepartner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const vocativepartner& from);
  void MergeFrom(const vocativepartner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.vocativepartner)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static vocativepartner* default_instance_;
};
// -------------------------------------------------------------------

class TellAnothervocativepartner : public ::google::protobuf::Message {
 public:
  TellAnothervocativepartner();
  virtual ~TellAnothervocativepartner();

  TellAnothervocativepartner(const TellAnothervocativepartner& from);

  inline TellAnothervocativepartner& operator=(const TellAnothervocativepartner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TellAnothervocativepartner& default_instance();

  void Swap(TellAnothervocativepartner* other);

  // implements Message ----------------------------------------------

  TellAnothervocativepartner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TellAnothervocativepartner& from);
  void MergeFrom(const TellAnothervocativepartner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.TellAnothervocativepartner)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static TellAnothervocativepartner* default_instance_;
};
// -------------------------------------------------------------------

class ReadyChallenge : public ::google::protobuf::Message {
 public:
  ReadyChallenge();
  virtual ~ReadyChallenge();

  ReadyChallenge(const ReadyChallenge& from);

  inline ReadyChallenge& operator=(const ReadyChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyChallenge& default_instance();

  void Swap(ReadyChallenge* other);

  // implements Message ----------------------------------------------

  ReadyChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadyChallenge& from);
  void MergeFrom(const ReadyChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.ReadyChallenge)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static ReadyChallenge* default_instance_;
};
// -------------------------------------------------------------------

class RetReadyChallenge : public ::google::protobuf::Message {
 public:
  RetReadyChallenge();
  virtual ~RetReadyChallenge();

  RetReadyChallenge(const RetReadyChallenge& from);

  inline RetReadyChallenge& operator=(const RetReadyChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetReadyChallenge& default_instance();

  void Swap(RetReadyChallenge* other);

  // implements Message ----------------------------------------------

  RetReadyChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetReadyChallenge& from);
  void MergeFrom(const RetReadyChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 coutdowntime = 2;
  inline bool has_coutdowntime() const;
  inline void clear_coutdowntime();
  static const int kCoutdowntimeFieldNumber = 2;
  inline ::google::protobuf::int32 coutdowntime() const;
  inline void set_coutdowntime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.RetReadyChallenge)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_coutdowntime();
  inline void clear_has_coutdowntime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 coutdowntime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static RetReadyChallenge* default_instance_;
};
// -------------------------------------------------------------------

class TellAnotherReadyChallenge : public ::google::protobuf::Message {
 public:
  TellAnotherReadyChallenge();
  virtual ~TellAnotherReadyChallenge();

  TellAnotherReadyChallenge(const TellAnotherReadyChallenge& from);

  inline TellAnotherReadyChallenge& operator=(const TellAnotherReadyChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TellAnotherReadyChallenge& default_instance();

  void Swap(TellAnotherReadyChallenge* other);

  // implements Message ----------------------------------------------

  TellAnotherReadyChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TellAnotherReadyChallenge& from);
  void MergeFrom(const TellAnotherReadyChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 coutdowntime = 2;
  inline bool has_coutdowntime() const;
  inline void clear_coutdowntime();
  static const int kCoutdowntimeFieldNumber = 2;
  inline ::google::protobuf::int32 coutdowntime() const;
  inline void set_coutdowntime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.TellAnotherReadyChallenge)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_coutdowntime();
  inline void clear_has_coutdowntime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 coutdowntime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static TellAnotherReadyChallenge* default_instance_;
};
// -------------------------------------------------------------------

class StopChallenge : public ::google::protobuf::Message {
 public:
  StopChallenge();
  virtual ~StopChallenge();

  StopChallenge(const StopChallenge& from);

  inline StopChallenge& operator=(const StopChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopChallenge& default_instance();

  void Swap(StopChallenge* other);

  // implements Message ----------------------------------------------

  StopChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopChallenge& from);
  void MergeFrom(const StopChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.StopChallenge)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static StopChallenge* default_instance_;
};
// -------------------------------------------------------------------

class RetStopChallenge : public ::google::protobuf::Message {
 public:
  RetStopChallenge();
  virtual ~RetStopChallenge();

  RetStopChallenge(const RetStopChallenge& from);

  inline RetStopChallenge& operator=(const RetStopChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetStopChallenge& default_instance();

  void Swap(RetStopChallenge* other);

  // implements Message ----------------------------------------------

  RetStopChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetStopChallenge& from);
  void MergeFrom(const RetStopChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.RetStopChallenge)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static RetStopChallenge* default_instance_;
};
// -------------------------------------------------------------------

class TellAnotherStopChallenge : public ::google::protobuf::Message {
 public:
  TellAnotherStopChallenge();
  virtual ~TellAnotherStopChallenge();

  TellAnotherStopChallenge(const TellAnotherStopChallenge& from);

  inline TellAnotherStopChallenge& operator=(const TellAnotherStopChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TellAnotherStopChallenge& default_instance();

  void Swap(TellAnotherStopChallenge* other);

  // implements Message ----------------------------------------------

  TellAnotherStopChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TellAnotherStopChallenge& from);
  void MergeFrom(const TellAnotherStopChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.TellAnotherStopChallenge)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static TellAnotherStopChallenge* default_instance_;
};
// -------------------------------------------------------------------

class SysMarryInstance : public ::google::protobuf::Message {
 public:
  SysMarryInstance();
  virtual ~SysMarryInstance();

  SysMarryInstance(const SysMarryInstance& from);

  inline SysMarryInstance& operator=(const SysMarryInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysMarryInstance& default_instance();

  void Swap(SysMarryInstance* other);

  // implements Message ----------------------------------------------

  SysMarryInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysMarryInstance& from);
  void MergeFrom(const SysMarryInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.SysMarryInstance)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static SysMarryInstance* default_instance_;
};
// -------------------------------------------------------------------

class StartChallenge : public ::google::protobuf::Message {
 public:
  StartChallenge();
  virtual ~StartChallenge();

  StartChallenge(const StartChallenge& from);

  inline StartChallenge& operator=(const StartChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartChallenge& default_instance();

  void Swap(StartChallenge* other);

  // implements Message ----------------------------------------------

  StartChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartChallenge& from);
  void MergeFrom(const StartChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 coutdowntime = 1;
  inline bool has_coutdowntime() const;
  inline void clear_coutdowntime();
  static const int kCoutdowntimeFieldNumber = 1;
  inline ::google::protobuf::int32 coutdowntime() const;
  inline void set_coutdowntime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.StartChallenge)
 private:
  inline void set_has_coutdowntime();
  inline void clear_has_coutdowntime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 coutdowntime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static StartChallenge* default_instance_;
};
// -------------------------------------------------------------------

class AskJumpPoint : public ::google::protobuf::Message {
 public:
  AskJumpPoint();
  virtual ~AskJumpPoint();

  AskJumpPoint(const AskJumpPoint& from);

  inline AskJumpPoint& operator=(const AskJumpPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskJumpPoint& default_instance();

  void Swap(AskJumpPoint* other);

  // implements Message ----------------------------------------------

  AskJumpPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskJumpPoint& from);
  void MergeFrom(const AskJumpPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.AskJumpPoint)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static AskJumpPoint* default_instance_;
};
// -------------------------------------------------------------------

class RetAskJumpPoint : public ::google::protobuf::Message {
 public:
  RetAskJumpPoint();
  virtual ~RetAskJumpPoint();

  RetAskJumpPoint(const RetAskJumpPoint& from);

  inline RetAskJumpPoint& operator=(const RetAskJumpPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAskJumpPoint& default_instance();

  void Swap(RetAskJumpPoint* other);

  // implements Message ----------------------------------------------

  RetAskJumpPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAskJumpPoint& from);
  void MergeFrom(const RetAskJumpPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.RetAskJumpPoint)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static RetAskJumpPoint* default_instance_;
};
// -------------------------------------------------------------------

class GMForceClientJumpMap : public ::google::protobuf::Message {
 public:
  GMForceClientJumpMap();
  virtual ~GMForceClientJumpMap();

  GMForceClientJumpMap(const GMForceClientJumpMap& from);

  inline GMForceClientJumpMap& operator=(const GMForceClientJumpMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMForceClientJumpMap& default_instance();

  void Swap(GMForceClientJumpMap* other);

  // implements Message ----------------------------------------------

  GMForceClientJumpMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMForceClientJumpMap& from);
  void MergeFrom(const GMForceClientJumpMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.GMForceClientJumpMap)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static GMForceClientJumpMap* default_instance_;
};
// -------------------------------------------------------------------

class AskDownPoint : public ::google::protobuf::Message {
 public:
  AskDownPoint();
  virtual ~AskDownPoint();

  AskDownPoint(const AskDownPoint& from);

  inline AskDownPoint& operator=(const AskDownPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskDownPoint& default_instance();

  void Swap(AskDownPoint* other);

  // implements Message ----------------------------------------------

  AskDownPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskDownPoint& from);
  void MergeFrom(const AskDownPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.AskDownPoint)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static AskDownPoint* default_instance_;
};
// -------------------------------------------------------------------

class RetAskDownPoint : public ::google::protobuf::Message {
 public:
  RetAskDownPoint();
  virtual ~RetAskDownPoint();

  RetAskDownPoint(const RetAskDownPoint& from);

  inline RetAskDownPoint& operator=(const RetAskDownPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAskDownPoint& default_instance();

  void Swap(RetAskDownPoint* other);

  // implements Message ----------------------------------------------

  RetAskDownPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAskDownPoint& from);
  void MergeFrom(const RetAskDownPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.RetAskDownPoint)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static RetAskDownPoint* default_instance_;
};
// -------------------------------------------------------------------

class GMForceClientDownMap : public ::google::protobuf::Message {
 public:
  GMForceClientDownMap();
  virtual ~GMForceClientDownMap();

  GMForceClientDownMap(const GMForceClientDownMap& from);

  inline GMForceClientDownMap& operator=(const GMForceClientDownMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMForceClientDownMap& default_instance();

  void Swap(GMForceClientDownMap* other);

  // implements Message ----------------------------------------------

  GMForceClientDownMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMForceClientDownMap& from);
  void MergeFrom(const GMForceClientDownMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int64 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // optional int32 xpos = 3;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 3;
  inline ::google::protobuf::int32 xpos() const;
  inline void set_xpos(::google::protobuf::int32 value);

  // optional int32 ypos = 4;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 4;
  inline ::google::protobuf::int32 ypos() const;
  inline void set_ypos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.GMForceClientDownMap)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 mapid_;
  ::google::protobuf::int32 xpos_;
  ::google::protobuf::int32 ypos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static GMForceClientDownMap* default_instance_;
};
// -------------------------------------------------------------------

class AskSupportOther : public ::google::protobuf::Message {
 public:
  AskSupportOther();
  virtual ~AskSupportOther();

  AskSupportOther(const AskSupportOther& from);

  inline AskSupportOther& operator=(const AskSupportOther& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSupportOther& default_instance();

  void Swap(AskSupportOther* other);

  // implements Message ----------------------------------------------

  AskSupportOther* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSupportOther& from);
  void MergeFrom(const AskSupportOther& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.AskSupportOther)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static AskSupportOther* default_instance_;
};
// -------------------------------------------------------------------

class RetAskSupportOther : public ::google::protobuf::Message {
 public:
  RetAskSupportOther();
  virtual ~RetAskSupportOther();

  RetAskSupportOther(const RetAskSupportOther& from);

  inline RetAskSupportOther& operator=(const RetAskSupportOther& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAskSupportOther& default_instance();

  void Swap(RetAskSupportOther* other);

  // implements Message ----------------------------------------------

  RetAskSupportOther* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAskSupportOther& from);
  void MergeFrom(const RetAskSupportOther& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.RetAskSupportOther)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static RetAskSupportOther* default_instance_;
};
// -------------------------------------------------------------------

class GMToWSDelMarryCarbon : public ::google::protobuf::Message {
 public:
  GMToWSDelMarryCarbon();
  virtual ~GMToWSDelMarryCarbon();

  GMToWSDelMarryCarbon(const GMToWSDelMarryCarbon& from);

  inline GMToWSDelMarryCarbon& operator=(const GMToWSDelMarryCarbon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMToWSDelMarryCarbon& default_instance();

  void Swap(GMToWSDelMarryCarbon* other);

  // implements Message ----------------------------------------------

  GMToWSDelMarryCarbon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMToWSDelMarryCarbon& from);
  void MergeFrom(const GMToWSDelMarryCarbon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charidf = 1;
  inline bool has_charidf() const;
  inline void clear_charidf();
  static const int kCharidfFieldNumber = 1;
  inline ::google::protobuf::int64 charidf() const;
  inline void set_charidf(::google::protobuf::int64 value);

  // required int64 charids = 2;
  inline bool has_charids() const;
  inline void clear_charids();
  static const int kCharidsFieldNumber = 2;
  inline ::google::protobuf::int64 charids() const;
  inline void set_charids(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MarryInstanceInfo.GMToWSDelMarryCarbon)
 private:
  inline void set_has_charidf();
  inline void clear_has_charidf();
  inline void set_has_charids();
  inline void clear_has_charids();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charidf_;
  ::google::protobuf::int64 charids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_AssignDesc_Marry_2fMarryInstance_2eproto();
  friend void protobuf_ShutdownFile_Marry_2fMarryInstance_2eproto();

  void InitAsDefaultInstance();
  static GMToWSDelMarryCarbon* default_instance_;
};
// ===================================================================


// ===================================================================

// vocativepartner

// -------------------------------------------------------------------

// TellAnothervocativepartner

// required int64 charid = 1;
inline bool TellAnothervocativepartner::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TellAnothervocativepartner::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TellAnothervocativepartner::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TellAnothervocativepartner::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 TellAnothervocativepartner::charid() const {
  return charid_;
}
inline void TellAnothervocativepartner::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// ReadyChallenge

// required int32 mapid = 1;
inline bool ReadyChallenge::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadyChallenge::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadyChallenge::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadyChallenge::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 ReadyChallenge::mapid() const {
  return mapid_;
}
inline void ReadyChallenge::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// RetReadyChallenge

// required int32 ret = 1;
inline bool RetReadyChallenge::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetReadyChallenge::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetReadyChallenge::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetReadyChallenge::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetReadyChallenge::ret() const {
  return ret_;
}
inline void RetReadyChallenge::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 coutdowntime = 2;
inline bool RetReadyChallenge::has_coutdowntime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetReadyChallenge::set_has_coutdowntime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetReadyChallenge::clear_has_coutdowntime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetReadyChallenge::clear_coutdowntime() {
  coutdowntime_ = 0;
  clear_has_coutdowntime();
}
inline ::google::protobuf::int32 RetReadyChallenge::coutdowntime() const {
  return coutdowntime_;
}
inline void RetReadyChallenge::set_coutdowntime(::google::protobuf::int32 value) {
  set_has_coutdowntime();
  coutdowntime_ = value;
}

// -------------------------------------------------------------------

// TellAnotherReadyChallenge

// required int64 charid = 1;
inline bool TellAnotherReadyChallenge::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TellAnotherReadyChallenge::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TellAnotherReadyChallenge::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TellAnotherReadyChallenge::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 TellAnotherReadyChallenge::charid() const {
  return charid_;
}
inline void TellAnotherReadyChallenge::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 coutdowntime = 2;
inline bool TellAnotherReadyChallenge::has_coutdowntime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TellAnotherReadyChallenge::set_has_coutdowntime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TellAnotherReadyChallenge::clear_has_coutdowntime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TellAnotherReadyChallenge::clear_coutdowntime() {
  coutdowntime_ = 0;
  clear_has_coutdowntime();
}
inline ::google::protobuf::int32 TellAnotherReadyChallenge::coutdowntime() const {
  return coutdowntime_;
}
inline void TellAnotherReadyChallenge::set_coutdowntime(::google::protobuf::int32 value) {
  set_has_coutdowntime();
  coutdowntime_ = value;
}

// -------------------------------------------------------------------

// StopChallenge

// -------------------------------------------------------------------

// RetStopChallenge

// required int32 ret = 1;
inline bool RetStopChallenge::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetStopChallenge::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetStopChallenge::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetStopChallenge::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetStopChallenge::ret() const {
  return ret_;
}
inline void RetStopChallenge::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// TellAnotherStopChallenge

// required int32 ret = 1;
inline bool TellAnotherStopChallenge::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TellAnotherStopChallenge::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TellAnotherStopChallenge::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TellAnotherStopChallenge::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 TellAnotherStopChallenge::ret() const {
  return ret_;
}
inline void TellAnotherStopChallenge::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 charid = 2;
inline bool TellAnotherStopChallenge::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TellAnotherStopChallenge::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TellAnotherStopChallenge::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TellAnotherStopChallenge::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 TellAnotherStopChallenge::charid() const {
  return charid_;
}
inline void TellAnotherStopChallenge::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// SysMarryInstance

// required int64 id = 1;
inline bool SysMarryInstance::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysMarryInstance::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysMarryInstance::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysMarryInstance::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 SysMarryInstance::id() const {
  return id_;
}
inline void SysMarryInstance::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// StartChallenge

// optional int32 coutdowntime = 1;
inline bool StartChallenge::has_coutdowntime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartChallenge::set_has_coutdowntime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartChallenge::clear_has_coutdowntime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartChallenge::clear_coutdowntime() {
  coutdowntime_ = 0;
  clear_has_coutdowntime();
}
inline ::google::protobuf::int32 StartChallenge::coutdowntime() const {
  return coutdowntime_;
}
inline void StartChallenge::set_coutdowntime(::google::protobuf::int32 value) {
  set_has_coutdowntime();
  coutdowntime_ = value;
}

// -------------------------------------------------------------------

// AskJumpPoint

// required int32 id = 1;
inline bool AskJumpPoint::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskJumpPoint::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskJumpPoint::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskJumpPoint::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AskJumpPoint::id() const {
  return id_;
}
inline void AskJumpPoint::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// RetAskJumpPoint

// required int32 ret = 1;
inline bool RetAskJumpPoint::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAskJumpPoint::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAskJumpPoint::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAskJumpPoint::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetAskJumpPoint::ret() const {
  return ret_;
}
inline void RetAskJumpPoint::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool RetAskJumpPoint::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetAskJumpPoint::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetAskJumpPoint::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetAskJumpPoint::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RetAskJumpPoint::id() const {
  return id_;
}
inline void RetAskJumpPoint::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GMForceClientJumpMap

// required int64 charid = 1;
inline bool GMForceClientJumpMap::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMForceClientJumpMap::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMForceClientJumpMap::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMForceClientJumpMap::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GMForceClientJumpMap::charid() const {
  return charid_;
}
inline void GMForceClientJumpMap::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 id = 2;
inline bool GMForceClientJumpMap::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMForceClientJumpMap::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMForceClientJumpMap::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMForceClientJumpMap::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GMForceClientJumpMap::id() const {
  return id_;
}
inline void GMForceClientJumpMap::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// AskDownPoint

// required int32 id = 1;
inline bool AskDownPoint::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskDownPoint::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskDownPoint::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskDownPoint::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AskDownPoint::id() const {
  return id_;
}
inline void AskDownPoint::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// RetAskDownPoint

// required int32 ret = 1;
inline bool RetAskDownPoint::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAskDownPoint::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAskDownPoint::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAskDownPoint::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetAskDownPoint::ret() const {
  return ret_;
}
inline void RetAskDownPoint::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 id = 2;
inline bool RetAskDownPoint::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetAskDownPoint::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetAskDownPoint::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetAskDownPoint::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RetAskDownPoint::id() const {
  return id_;
}
inline void RetAskDownPoint::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GMForceClientDownMap

// required int64 charid = 1;
inline bool GMForceClientDownMap::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMForceClientDownMap::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMForceClientDownMap::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMForceClientDownMap::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GMForceClientDownMap::charid() const {
  return charid_;
}
inline void GMForceClientDownMap::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int64 mapid = 2;
inline bool GMForceClientDownMap::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMForceClientDownMap::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMForceClientDownMap::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMForceClientDownMap::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 GMForceClientDownMap::mapid() const {
  return mapid_;
}
inline void GMForceClientDownMap::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 xpos = 3;
inline bool GMForceClientDownMap::has_xpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMForceClientDownMap::set_has_xpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMForceClientDownMap::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMForceClientDownMap::clear_xpos() {
  xpos_ = 0;
  clear_has_xpos();
}
inline ::google::protobuf::int32 GMForceClientDownMap::xpos() const {
  return xpos_;
}
inline void GMForceClientDownMap::set_xpos(::google::protobuf::int32 value) {
  set_has_xpos();
  xpos_ = value;
}

// optional int32 ypos = 4;
inline bool GMForceClientDownMap::has_ypos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMForceClientDownMap::set_has_ypos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMForceClientDownMap::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMForceClientDownMap::clear_ypos() {
  ypos_ = 0;
  clear_has_ypos();
}
inline ::google::protobuf::int32 GMForceClientDownMap::ypos() const {
  return ypos_;
}
inline void GMForceClientDownMap::set_ypos(::google::protobuf::int32 value) {
  set_has_ypos();
  ypos_ = value;
}

// -------------------------------------------------------------------

// AskSupportOther

// -------------------------------------------------------------------

// RetAskSupportOther

// required int32 ret = 1;
inline bool RetAskSupportOther::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAskSupportOther::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAskSupportOther::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAskSupportOther::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetAskSupportOther::ret() const {
  return ret_;
}
inline void RetAskSupportOther::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GMToWSDelMarryCarbon

// required int64 charidf = 1;
inline bool GMToWSDelMarryCarbon::has_charidf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMToWSDelMarryCarbon::set_has_charidf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMToWSDelMarryCarbon::clear_has_charidf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMToWSDelMarryCarbon::clear_charidf() {
  charidf_ = GOOGLE_LONGLONG(0);
  clear_has_charidf();
}
inline ::google::protobuf::int64 GMToWSDelMarryCarbon::charidf() const {
  return charidf_;
}
inline void GMToWSDelMarryCarbon::set_charidf(::google::protobuf::int64 value) {
  set_has_charidf();
  charidf_ = value;
}

// required int64 charids = 2;
inline bool GMToWSDelMarryCarbon::has_charids() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMToWSDelMarryCarbon::set_has_charids() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMToWSDelMarryCarbon::clear_has_charids() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMToWSDelMarryCarbon::clear_charids() {
  charids_ = GOOGLE_LONGLONG(0);
  clear_has_charids();
}
inline ::google::protobuf::int64 GMToWSDelMarryCarbon::charids() const {
  return charids_;
}
inline void GMToWSDelMarryCarbon::set_charids(::google::protobuf::int64 value) {
  set_has_charids();
  charids_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MarryInstanceInfo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Marry_2fMarryInstance_2eproto__INCLUDED
