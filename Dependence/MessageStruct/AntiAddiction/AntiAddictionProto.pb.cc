// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AntiAddiction/AntiAddictionProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AntiAddiction/AntiAddictionProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace AntiAddictionProto {

namespace {

const ::google::protobuf::Descriptor* ReqBindAntiAddictionID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqBindAntiAddictionID_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetBindAntiAddictionID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetBindAntiAddictionID_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToDBBindAntiAddictionID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToDBBindAntiAddictionID_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AntiAddiction_2fAntiAddictionProto_2eproto() {
  protobuf_AddDesc_AntiAddiction_2fAntiAddictionProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AntiAddiction/AntiAddictionProto.proto");
  GOOGLE_CHECK(file != NULL);
  ReqBindAntiAddictionID_descriptor_ = file->message_type(0);
  static const int ReqBindAntiAddictionID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBindAntiAddictionID, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBindAntiAddictionID, antiaddictionid_),
  };
  ReqBindAntiAddictionID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqBindAntiAddictionID_descriptor_,
      ReqBindAntiAddictionID::default_instance_,
      ReqBindAntiAddictionID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBindAntiAddictionID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqBindAntiAddictionID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqBindAntiAddictionID));
  RetBindAntiAddictionID_descriptor_ = file->message_type(1);
  static const int RetBindAntiAddictionID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBindAntiAddictionID, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBindAntiAddictionID, state_),
  };
  RetBindAntiAddictionID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetBindAntiAddictionID_descriptor_,
      RetBindAntiAddictionID::default_instance_,
      RetBindAntiAddictionID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBindAntiAddictionID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetBindAntiAddictionID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetBindAntiAddictionID));
  ToDBBindAntiAddictionID_descriptor_ = file->message_type(2);
  static const int ToDBBindAntiAddictionID_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToDBBindAntiAddictionID, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToDBBindAntiAddictionID, antiaddictionstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToDBBindAntiAddictionID, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToDBBindAntiAddictionID, antiaddictionid_),
  };
  ToDBBindAntiAddictionID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToDBBindAntiAddictionID_descriptor_,
      ToDBBindAntiAddictionID::default_instance_,
      ToDBBindAntiAddictionID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToDBBindAntiAddictionID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToDBBindAntiAddictionID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToDBBindAntiAddictionID));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AntiAddiction_2fAntiAddictionProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqBindAntiAddictionID_descriptor_, &ReqBindAntiAddictionID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetBindAntiAddictionID_descriptor_, &RetBindAntiAddictionID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToDBBindAntiAddictionID_descriptor_, &ToDBBindAntiAddictionID::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AntiAddiction_2fAntiAddictionProto_2eproto() {
  delete ReqBindAntiAddictionID::default_instance_;
  delete ReqBindAntiAddictionID_reflection_;
  delete RetBindAntiAddictionID::default_instance_;
  delete RetBindAntiAddictionID_reflection_;
  delete ToDBBindAntiAddictionID::default_instance_;
  delete ToDBBindAntiAddictionID_reflection_;
}

void protobuf_AddDesc_AntiAddiction_2fAntiAddictionProto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&AntiAddiction/AntiAddictionProto.proto"
    "\022\022AntiAddictionProto\"C\n\026ReqBindAntiAddic"
    "tionID\022\020\n\010realname\030\001 \002(\t\022\027\n\017antiaddictio"
    "nid\030\002 \002(\t\"6\n\026RetBindAntiAddictionID\022\r\n\005e"
    "rror\030\001 \002(\005\022\r\n\005state\030\002 \001(\005\"p\n\027ToDBBindAnt"
    "iAddictionID\022\016\n\006charid\030\001 \002(\003\022\032\n\022antiaddi"
    "ctionstate\030\002 \002(\005\022\020\n\010realname\030\003 \002(\t\022\027\n\017an"
    "tiaddictionid\030\004 \002(\t", 299);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AntiAddiction/AntiAddictionProto.proto", &protobuf_RegisterTypes);
  ReqBindAntiAddictionID::default_instance_ = new ReqBindAntiAddictionID();
  RetBindAntiAddictionID::default_instance_ = new RetBindAntiAddictionID();
  ToDBBindAntiAddictionID::default_instance_ = new ToDBBindAntiAddictionID();
  ReqBindAntiAddictionID::default_instance_->InitAsDefaultInstance();
  RetBindAntiAddictionID::default_instance_->InitAsDefaultInstance();
  ToDBBindAntiAddictionID::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AntiAddiction_2fAntiAddictionProto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AntiAddiction_2fAntiAddictionProto_2eproto {
  StaticDescriptorInitializer_AntiAddiction_2fAntiAddictionProto_2eproto() {
    protobuf_AddDesc_AntiAddiction_2fAntiAddictionProto_2eproto();
  }
} static_descriptor_initializer_AntiAddiction_2fAntiAddictionProto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReqBindAntiAddictionID::kRealnameFieldNumber;
const int ReqBindAntiAddictionID::kAntiaddictionidFieldNumber;
#endif  // !_MSC_VER

ReqBindAntiAddictionID::ReqBindAntiAddictionID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqBindAntiAddictionID::InitAsDefaultInstance() {
}

ReqBindAntiAddictionID::ReqBindAntiAddictionID(const ReqBindAntiAddictionID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqBindAntiAddictionID::SharedCtor() {
  _cached_size_ = 0;
  realname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  antiaddictionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqBindAntiAddictionID::~ReqBindAntiAddictionID() {
  SharedDtor();
}

void ReqBindAntiAddictionID::SharedDtor() {
  if (realname_ != &::google::protobuf::internal::kEmptyString) {
    delete realname_;
  }
  if (antiaddictionid_ != &::google::protobuf::internal::kEmptyString) {
    delete antiaddictionid_;
  }
  if (this != default_instance_) {
  }
}

void ReqBindAntiAddictionID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqBindAntiAddictionID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqBindAntiAddictionID_descriptor_;
}

const ReqBindAntiAddictionID& ReqBindAntiAddictionID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AntiAddiction_2fAntiAddictionProto_2eproto();
  return *default_instance_;
}

ReqBindAntiAddictionID* ReqBindAntiAddictionID::default_instance_ = NULL;

ReqBindAntiAddictionID* ReqBindAntiAddictionID::New() const {
  return new ReqBindAntiAddictionID;
}

void ReqBindAntiAddictionID::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_realname()) {
      if (realname_ != &::google::protobuf::internal::kEmptyString) {
        realname_->clear();
      }
    }
    if (has_antiaddictionid()) {
      if (antiaddictionid_ != &::google::protobuf::internal::kEmptyString) {
        antiaddictionid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqBindAntiAddictionID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string realname = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_antiaddictionid;
        break;
      }

      // required string antiaddictionid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_antiaddictionid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antiaddictionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->antiaddictionid().data(), this->antiaddictionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqBindAntiAddictionID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string realname = 1;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->realname(), output);
  }

  // required string antiaddictionid = 2;
  if (has_antiaddictionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->antiaddictionid().data(), this->antiaddictionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->antiaddictionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqBindAntiAddictionID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string realname = 1;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->realname(), target);
  }

  // required string antiaddictionid = 2;
  if (has_antiaddictionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->antiaddictionid().data(), this->antiaddictionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->antiaddictionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqBindAntiAddictionID::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string realname = 1;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

    // required string antiaddictionid = 2;
    if (has_antiaddictionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antiaddictionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqBindAntiAddictionID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqBindAntiAddictionID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqBindAntiAddictionID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqBindAntiAddictionID::MergeFrom(const ReqBindAntiAddictionID& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_realname()) {
      set_realname(from.realname());
    }
    if (from.has_antiaddictionid()) {
      set_antiaddictionid(from.antiaddictionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqBindAntiAddictionID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqBindAntiAddictionID::CopyFrom(const ReqBindAntiAddictionID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqBindAntiAddictionID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqBindAntiAddictionID::Swap(ReqBindAntiAddictionID* other) {
  if (other != this) {
    std::swap(realname_, other->realname_);
    std::swap(antiaddictionid_, other->antiaddictionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqBindAntiAddictionID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqBindAntiAddictionID_descriptor_;
  metadata.reflection = ReqBindAntiAddictionID_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetBindAntiAddictionID::kErrorFieldNumber;
const int RetBindAntiAddictionID::kStateFieldNumber;
#endif  // !_MSC_VER

RetBindAntiAddictionID::RetBindAntiAddictionID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetBindAntiAddictionID::InitAsDefaultInstance() {
}

RetBindAntiAddictionID::RetBindAntiAddictionID(const RetBindAntiAddictionID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetBindAntiAddictionID::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetBindAntiAddictionID::~RetBindAntiAddictionID() {
  SharedDtor();
}

void RetBindAntiAddictionID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetBindAntiAddictionID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetBindAntiAddictionID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetBindAntiAddictionID_descriptor_;
}

const RetBindAntiAddictionID& RetBindAntiAddictionID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AntiAddiction_2fAntiAddictionProto_2eproto();
  return *default_instance_;
}

RetBindAntiAddictionID* RetBindAntiAddictionID::default_instance_ = NULL;

RetBindAntiAddictionID* RetBindAntiAddictionID::New() const {
  return new RetBindAntiAddictionID;
}

void RetBindAntiAddictionID::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0;
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetBindAntiAddictionID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetBindAntiAddictionID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetBindAntiAddictionID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetBindAntiAddictionID::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error());
    }

    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetBindAntiAddictionID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetBindAntiAddictionID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetBindAntiAddictionID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetBindAntiAddictionID::MergeFrom(const RetBindAntiAddictionID& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetBindAntiAddictionID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetBindAntiAddictionID::CopyFrom(const RetBindAntiAddictionID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetBindAntiAddictionID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetBindAntiAddictionID::Swap(RetBindAntiAddictionID* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetBindAntiAddictionID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetBindAntiAddictionID_descriptor_;
  metadata.reflection = RetBindAntiAddictionID_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToDBBindAntiAddictionID::kCharidFieldNumber;
const int ToDBBindAntiAddictionID::kAntiaddictionstateFieldNumber;
const int ToDBBindAntiAddictionID::kRealnameFieldNumber;
const int ToDBBindAntiAddictionID::kAntiaddictionidFieldNumber;
#endif  // !_MSC_VER

ToDBBindAntiAddictionID::ToDBBindAntiAddictionID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToDBBindAntiAddictionID::InitAsDefaultInstance() {
}

ToDBBindAntiAddictionID::ToDBBindAntiAddictionID(const ToDBBindAntiAddictionID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToDBBindAntiAddictionID::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  antiaddictionstate_ = 0;
  realname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  antiaddictionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToDBBindAntiAddictionID::~ToDBBindAntiAddictionID() {
  SharedDtor();
}

void ToDBBindAntiAddictionID::SharedDtor() {
  if (realname_ != &::google::protobuf::internal::kEmptyString) {
    delete realname_;
  }
  if (antiaddictionid_ != &::google::protobuf::internal::kEmptyString) {
    delete antiaddictionid_;
  }
  if (this != default_instance_) {
  }
}

void ToDBBindAntiAddictionID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToDBBindAntiAddictionID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToDBBindAntiAddictionID_descriptor_;
}

const ToDBBindAntiAddictionID& ToDBBindAntiAddictionID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AntiAddiction_2fAntiAddictionProto_2eproto();
  return *default_instance_;
}

ToDBBindAntiAddictionID* ToDBBindAntiAddictionID::default_instance_ = NULL;

ToDBBindAntiAddictionID* ToDBBindAntiAddictionID::New() const {
  return new ToDBBindAntiAddictionID;
}

void ToDBBindAntiAddictionID::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    antiaddictionstate_ = 0;
    if (has_realname()) {
      if (realname_ != &::google::protobuf::internal::kEmptyString) {
        realname_->clear();
      }
    }
    if (has_antiaddictionid()) {
      if (antiaddictionid_ != &::google::protobuf::internal::kEmptyString) {
        antiaddictionid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToDBBindAntiAddictionID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_antiaddictionstate;
        break;
      }

      // required int32 antiaddictionstate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_antiaddictionstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &antiaddictionstate_)));
          set_has_antiaddictionstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_realname;
        break;
      }

      // required string realname = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_antiaddictionid;
        break;
      }

      // required string antiaddictionid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_antiaddictionid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antiaddictionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->antiaddictionid().data(), this->antiaddictionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToDBBindAntiAddictionID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required int32 antiaddictionstate = 2;
  if (has_antiaddictionstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->antiaddictionstate(), output);
  }

  // required string realname = 3;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->realname(), output);
  }

  // required string antiaddictionid = 4;
  if (has_antiaddictionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->antiaddictionid().data(), this->antiaddictionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->antiaddictionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToDBBindAntiAddictionID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required int32 antiaddictionstate = 2;
  if (has_antiaddictionstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->antiaddictionstate(), target);
  }

  // required string realname = 3;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->realname(), target);
  }

  // required string antiaddictionid = 4;
  if (has_antiaddictionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->antiaddictionid().data(), this->antiaddictionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->antiaddictionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToDBBindAntiAddictionID::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 antiaddictionstate = 2;
    if (has_antiaddictionstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->antiaddictionstate());
    }

    // required string realname = 3;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

    // required string antiaddictionid = 4;
    if (has_antiaddictionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antiaddictionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToDBBindAntiAddictionID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToDBBindAntiAddictionID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToDBBindAntiAddictionID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToDBBindAntiAddictionID::MergeFrom(const ToDBBindAntiAddictionID& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_antiaddictionstate()) {
      set_antiaddictionstate(from.antiaddictionstate());
    }
    if (from.has_realname()) {
      set_realname(from.realname());
    }
    if (from.has_antiaddictionid()) {
      set_antiaddictionid(from.antiaddictionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToDBBindAntiAddictionID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToDBBindAntiAddictionID::CopyFrom(const ToDBBindAntiAddictionID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToDBBindAntiAddictionID::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ToDBBindAntiAddictionID::Swap(ToDBBindAntiAddictionID* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(antiaddictionstate_, other->antiaddictionstate_);
    std::swap(realname_, other->realname_);
    std::swap(antiaddictionid_, other->antiaddictionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToDBBindAntiAddictionID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToDBBindAntiAddictionID_descriptor_;
  metadata.reflection = ToDBBindAntiAddictionID_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AntiAddictionProto

// @@protoc_insertion_point(global_scope)
