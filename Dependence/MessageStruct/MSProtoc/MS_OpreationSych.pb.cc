// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_OpreationSych.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSProtoc/MS_OpreationSych.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MS_SychProto {

namespace {

const ::google::protobuf::Descriptor* SychManagerThig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SychManagerThig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SychManagerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SychManagerData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SychGMThig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SychGMThig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSProtoc_2fMS_5fOpreationSych_2eproto() {
  protobuf_AddDesc_MSProtoc_2fMS_5fOpreationSych_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSProtoc/MS_OpreationSych.proto");
  GOOGLE_CHECK(file != NULL);
  SychManagerThig_descriptor_ = file->message_type(0);
  static const int SychManagerThig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerThig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerThig, data_),
  };
  SychManagerThig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SychManagerThig_descriptor_,
      SychManagerThig::default_instance_,
      SychManagerThig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerThig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerThig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SychManagerThig));
  SychManagerData_descriptor_ = file->message_type(1);
  static const int SychManagerData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerData, nexttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerData, saytext_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerData, type_),
  };
  SychManagerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SychManagerData_descriptor_,
      SychManagerData::default_instance_,
      SychManagerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychManagerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SychManagerData));
  SychGMThig_descriptor_ = file->message_type(2);
  static const int SychGMThig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychGMThig, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychGMThig, data_),
  };
  SychGMThig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SychGMThig_descriptor_,
      SychGMThig::default_instance_,
      SychGMThig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychGMThig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SychGMThig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SychGMThig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSProtoc_2fMS_5fOpreationSych_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SychManagerThig_descriptor_, &SychManagerThig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SychManagerData_descriptor_, &SychManagerData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SychGMThig_descriptor_, &SychGMThig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSProtoc_2fMS_5fOpreationSych_2eproto() {
  delete SychManagerThig::default_instance_;
  delete SychManagerThig_reflection_;
  delete SychManagerData::default_instance_;
  delete SychManagerData_reflection_;
  delete SychGMThig::default_instance_;
  delete SychGMThig_reflection_;
}

void protobuf_AddDesc_MSProtoc_2fMS_5fOpreationSych_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037MSProtoc/MS_OpreationSych.proto\022\014MS_Sy"
    "chProto\"L\n\017SychManagerThig\022\014\n\004name\030\001 \002(\t"
    "\022+\n\004data\030\002 \001(\0132\035.MS_SychProto.SychManage"
    "rData\"B\n\017SychManagerData\022\020\n\010nextTime\030\001 \002"
    "(\003\022\017\n\007sayText\030\002 \002(\t\022\014\n\004type\030\003 \002(\005\"I\n\nSyc"
    "hGMThig\022\016\n\006charid\030\001 \002(\003\022+\n\004data\030\002 \001(\0132\035."
    "MS_SychProto.SychManagerData", 268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSProtoc/MS_OpreationSych.proto", &protobuf_RegisterTypes);
  SychManagerThig::default_instance_ = new SychManagerThig();
  SychManagerData::default_instance_ = new SychManagerData();
  SychGMThig::default_instance_ = new SychGMThig();
  SychManagerThig::default_instance_->InitAsDefaultInstance();
  SychManagerData::default_instance_->InitAsDefaultInstance();
  SychGMThig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSProtoc_2fMS_5fOpreationSych_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSProtoc_2fMS_5fOpreationSych_2eproto {
  StaticDescriptorInitializer_MSProtoc_2fMS_5fOpreationSych_2eproto() {
    protobuf_AddDesc_MSProtoc_2fMS_5fOpreationSych_2eproto();
  }
} static_descriptor_initializer_MSProtoc_2fMS_5fOpreationSych_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SychManagerThig::kNameFieldNumber;
const int SychManagerThig::kDataFieldNumber;
#endif  // !_MSC_VER

SychManagerThig::SychManagerThig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SychManagerThig::InitAsDefaultInstance() {
  data_ = const_cast< ::MS_SychProto::SychManagerData*>(&::MS_SychProto::SychManagerData::default_instance());
}

SychManagerThig::SychManagerThig(const SychManagerThig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SychManagerThig::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SychManagerThig::~SychManagerThig() {
  SharedDtor();
}

void SychManagerThig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void SychManagerThig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SychManagerThig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SychManagerThig_descriptor_;
}

const SychManagerThig& SychManagerThig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fOpreationSych_2eproto();
  return *default_instance_;
}

SychManagerThig* SychManagerThig::default_instance_ = NULL;

SychManagerThig* SychManagerThig::New() const {
  return new SychManagerThig;
}

void SychManagerThig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_data()) {
      if (data_ != NULL) data_->::MS_SychProto::SychManagerData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SychManagerThig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .MS_SychProto.SychManagerData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SychManagerThig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional .MS_SychProto.SychManagerData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SychManagerThig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .MS_SychProto.SychManagerData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SychManagerThig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .MS_SychProto.SychManagerData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SychManagerThig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SychManagerThig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SychManagerThig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SychManagerThig::MergeFrom(const SychManagerThig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_data()) {
      mutable_data()->::MS_SychProto::SychManagerData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SychManagerThig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SychManagerThig::CopyFrom(const SychManagerThig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SychManagerThig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void SychManagerThig::Swap(SychManagerThig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SychManagerThig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SychManagerThig_descriptor_;
  metadata.reflection = SychManagerThig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SychManagerData::kNextTimeFieldNumber;
const int SychManagerData::kSayTextFieldNumber;
const int SychManagerData::kTypeFieldNumber;
#endif  // !_MSC_VER

SychManagerData::SychManagerData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SychManagerData::InitAsDefaultInstance() {
}

SychManagerData::SychManagerData(const SychManagerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SychManagerData::SharedCtor() {
  _cached_size_ = 0;
  nexttime_ = GOOGLE_LONGLONG(0);
  saytext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SychManagerData::~SychManagerData() {
  SharedDtor();
}

void SychManagerData::SharedDtor() {
  if (saytext_ != &::google::protobuf::internal::kEmptyString) {
    delete saytext_;
  }
  if (this != default_instance_) {
  }
}

void SychManagerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SychManagerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SychManagerData_descriptor_;
}

const SychManagerData& SychManagerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fOpreationSych_2eproto();
  return *default_instance_;
}

SychManagerData* SychManagerData::default_instance_ = NULL;

SychManagerData* SychManagerData::New() const {
  return new SychManagerData;
}

void SychManagerData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nexttime_ = GOOGLE_LONGLONG(0);
    if (has_saytext()) {
      if (saytext_ != &::google::protobuf::internal::kEmptyString) {
        saytext_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SychManagerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 nextTime = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nexttime_)));
          set_has_nexttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sayText;
        break;
      }

      // required string sayText = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sayText:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_saytext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->saytext().data(), this->saytext().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SychManagerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 nextTime = 1;
  if (has_nexttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nexttime(), output);
  }

  // required string sayText = 2;
  if (has_saytext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->saytext().data(), this->saytext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->saytext(), output);
  }

  // required int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SychManagerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 nextTime = 1;
  if (has_nexttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nexttime(), target);
  }

  // required string sayText = 2;
  if (has_saytext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->saytext().data(), this->saytext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->saytext(), target);
  }

  // required int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SychManagerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 nextTime = 1;
    if (has_nexttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nexttime());
    }

    // required string sayText = 2;
    if (has_saytext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->saytext());
    }

    // required int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SychManagerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SychManagerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SychManagerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SychManagerData::MergeFrom(const SychManagerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nexttime()) {
      set_nexttime(from.nexttime());
    }
    if (from.has_saytext()) {
      set_saytext(from.saytext());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SychManagerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SychManagerData::CopyFrom(const SychManagerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SychManagerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SychManagerData::Swap(SychManagerData* other) {
  if (other != this) {
    std::swap(nexttime_, other->nexttime_);
    std::swap(saytext_, other->saytext_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SychManagerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SychManagerData_descriptor_;
  metadata.reflection = SychManagerData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SychGMThig::kCharidFieldNumber;
const int SychGMThig::kDataFieldNumber;
#endif  // !_MSC_VER

SychGMThig::SychGMThig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SychGMThig::InitAsDefaultInstance() {
  data_ = const_cast< ::MS_SychProto::SychManagerData*>(&::MS_SychProto::SychManagerData::default_instance());
}

SychGMThig::SychGMThig(const SychGMThig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SychGMThig::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SychGMThig::~SychGMThig() {
  SharedDtor();
}

void SychGMThig::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void SychGMThig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SychGMThig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SychGMThig_descriptor_;
}

const SychGMThig& SychGMThig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSProtoc_2fMS_5fOpreationSych_2eproto();
  return *default_instance_;
}

SychGMThig* SychGMThig::default_instance_ = NULL;

SychGMThig* SychGMThig::New() const {
  return new SychGMThig;
}

void SychGMThig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    if (has_data()) {
      if (data_ != NULL) data_->::MS_SychProto::SychManagerData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SychGMThig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .MS_SychProto.SychManagerData data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SychGMThig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // optional .MS_SychProto.SychManagerData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SychGMThig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // optional .MS_SychProto.SychManagerData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SychGMThig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional .MS_SychProto.SychManagerData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SychGMThig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SychGMThig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SychGMThig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SychGMThig::MergeFrom(const SychGMThig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_data()) {
      mutable_data()->::MS_SychProto::SychManagerData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SychGMThig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SychGMThig::CopyFrom(const SychGMThig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SychGMThig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void SychGMThig::Swap(SychGMThig* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SychGMThig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SychGMThig_descriptor_;
  metadata.reflection = SychGMThig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MS_SychProto

// @@protoc_insertion_point(global_scope)
