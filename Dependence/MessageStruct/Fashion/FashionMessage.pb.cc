// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Fashion/FashionMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Fashion/FashionMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace FashionMsgProto {

namespace {

const ::google::protobuf::Descriptor* ReqFashionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqFashionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetFashionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetFashionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqActivateFashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqActivateFashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetActivateFashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetActivateFashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqWearFashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqWearFashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetWearFashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetWearFashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqStrengthFashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqStrengthFashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetStrengthFashion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetStrengthFashion_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqFashionShowState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqFashionShowState_reflection_ = NULL;
const ::google::protobuf::Descriptor* FashionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FashionInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FashionShow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FashionShow_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Fashion_2fFashionMessage_2eproto() {
  protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Fashion/FashionMessage.proto");
  GOOGLE_CHECK(file != NULL);
  ReqFashionInfo_descriptor_ = file->message_type(0);
  static const int ReqFashionInfo_offsets_[1] = {
  };
  ReqFashionInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqFashionInfo_descriptor_,
      ReqFashionInfo::default_instance_,
      ReqFashionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFashionInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFashionInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqFashionInfo));
  RetFashionInfo_descriptor_ = file->message_type(1);
  static const int RetFashionInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetFashionInfo, show_),
  };
  RetFashionInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetFashionInfo_descriptor_,
      RetFashionInfo::default_instance_,
      RetFashionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetFashionInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetFashionInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetFashionInfo));
  ReqActivateFashion_descriptor_ = file->message_type(2);
  static const int ReqActivateFashion_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqActivateFashion, fashionid_),
  };
  ReqActivateFashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqActivateFashion_descriptor_,
      ReqActivateFashion::default_instance_,
      ReqActivateFashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqActivateFashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqActivateFashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqActivateFashion));
  RetActivateFashion_descriptor_ = file->message_type(3);
  static const int RetActivateFashion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetActivateFashion, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetActivateFashion, newfashion_),
  };
  RetActivateFashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetActivateFashion_descriptor_,
      RetActivateFashion::default_instance_,
      RetActivateFashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetActivateFashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetActivateFashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetActivateFashion));
  ReqWearFashion_descriptor_ = file->message_type(4);
  static const int ReqWearFashion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWearFashion, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWearFashion, fashionid_),
  };
  ReqWearFashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqWearFashion_descriptor_,
      ReqWearFashion::default_instance_,
      ReqWearFashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWearFashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqWearFashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqWearFashion));
  RetWearFashion_descriptor_ = file->message_type(5);
  static const int RetWearFashion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetWearFashion, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetWearFashion, fashion_),
  };
  RetWearFashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetWearFashion_descriptor_,
      RetWearFashion::default_instance_,
      RetWearFashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetWearFashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetWearFashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetWearFashion));
  ReqStrengthFashion_descriptor_ = file->message_type(6);
  static const int ReqStrengthFashion_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqStrengthFashion, fashionid_),
  };
  ReqStrengthFashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqStrengthFashion_descriptor_,
      ReqStrengthFashion::default_instance_,
      ReqStrengthFashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqStrengthFashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqStrengthFashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqStrengthFashion));
  RetStrengthFashion_descriptor_ = file->message_type(7);
  static const int RetStrengthFashion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetStrengthFashion, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetStrengthFashion, fashion_),
  };
  RetStrengthFashion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetStrengthFashion_descriptor_,
      RetStrengthFashion::default_instance_,
      RetStrengthFashion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetStrengthFashion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetStrengthFashion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetStrengthFashion));
  ReqFashionShowState_descriptor_ = file->message_type(8);
  static const int ReqFashionShowState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFashionShowState, fashionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFashionShowState, showstate_),
  };
  ReqFashionShowState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqFashionShowState_descriptor_,
      ReqFashionShowState::default_instance_,
      ReqFashionShowState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFashionShowState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFashionShowState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqFashionShowState));
  FashionInfo_descriptor_ = file->message_type(9);
  static const int FashionInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionInfo, strengthlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionInfo, status_),
  };
  FashionInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FashionInfo_descriptor_,
      FashionInfo::default_instance_,
      FashionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FashionInfo));
  FashionShow_descriptor_ = file->message_type(10);
  static const int FashionShow_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionShow, list_),
  };
  FashionShow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FashionShow_descriptor_,
      FashionShow::default_instance_,
      FashionShow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionShow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FashionShow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FashionShow));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Fashion_2fFashionMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqFashionInfo_descriptor_, &ReqFashionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetFashionInfo_descriptor_, &RetFashionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqActivateFashion_descriptor_, &ReqActivateFashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetActivateFashion_descriptor_, &RetActivateFashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqWearFashion_descriptor_, &ReqWearFashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetWearFashion_descriptor_, &RetWearFashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqStrengthFashion_descriptor_, &ReqStrengthFashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetStrengthFashion_descriptor_, &RetStrengthFashion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqFashionShowState_descriptor_, &ReqFashionShowState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FashionInfo_descriptor_, &FashionInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FashionShow_descriptor_, &FashionShow::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Fashion_2fFashionMessage_2eproto() {
  delete ReqFashionInfo::default_instance_;
  delete ReqFashionInfo_reflection_;
  delete RetFashionInfo::default_instance_;
  delete RetFashionInfo_reflection_;
  delete ReqActivateFashion::default_instance_;
  delete ReqActivateFashion_reflection_;
  delete RetActivateFashion::default_instance_;
  delete RetActivateFashion_reflection_;
  delete ReqWearFashion::default_instance_;
  delete ReqWearFashion_reflection_;
  delete RetWearFashion::default_instance_;
  delete RetWearFashion_reflection_;
  delete ReqStrengthFashion::default_instance_;
  delete ReqStrengthFashion_reflection_;
  delete RetStrengthFashion::default_instance_;
  delete RetStrengthFashion_reflection_;
  delete ReqFashionShowState::default_instance_;
  delete ReqFashionShowState_reflection_;
  delete FashionInfo::default_instance_;
  delete FashionInfo_reflection_;
  delete FashionShow::default_instance_;
  delete FashionShow_reflection_;
}

void protobuf_AddDesc_Fashion_2fFashionMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034Fashion/FashionMessage.proto\022\017FashionM"
    "sgProto\"\020\n\016ReqFashionInfo\"<\n\016RetFashionI"
    "nfo\022*\n\004show\030\001 \003(\0132\034.FashionMsgProto.Fash"
    "ionInfo\"\'\n\022ReqActivateFashion\022\021\n\tfashion"
    "ID\030\001 \002(\005\"S\n\022RetActivateFashion\022\013\n\003ret\030\001 "
    "\002(\005\0220\n\nnewFashion\030\002 \001(\0132\034.FashionMsgProt"
    "o.FashionInfo\"1\n\016ReqWearFashion\022\014\n\004flag\030"
    "\001 \002(\005\022\021\n\tfashionID\030\002 \002(\005\"L\n\016RetWearFashi"
    "on\022\013\n\003ret\030\001 \002(\005\022-\n\007fashion\030\002 \001(\0132\034.Fashi"
    "onMsgProto.FashionInfo\"\'\n\022ReqStrengthFas"
    "hion\022\021\n\tfashionID\030\001 \002(\005\"P\n\022RetStrengthFa"
    "shion\022\013\n\003ret\030\001 \002(\005\022-\n\007fashion\030\002 \001(\0132\034.Fa"
    "shionMsgProto.FashionInfo\";\n\023ReqFashionS"
    "howState\022\021\n\tfashionID\030\001 \002(\005\022\021\n\tshowState"
    "\030\002 \001(\005\"=\n\013FashionInfo\022\n\n\002ID\030\001 \002(\005\022\022\n\nstr"
    "engthLv\030\002 \001(\005\022\016\n\006status\030\003 \001(\005\"9\n\013Fashion"
    "Show\022*\n\004list\030\001 \003(\0132\034.FashionMsgProto.Fas"
    "hionInfo", 688);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Fashion/FashionMessage.proto", &protobuf_RegisterTypes);
  ReqFashionInfo::default_instance_ = new ReqFashionInfo();
  RetFashionInfo::default_instance_ = new RetFashionInfo();
  ReqActivateFashion::default_instance_ = new ReqActivateFashion();
  RetActivateFashion::default_instance_ = new RetActivateFashion();
  ReqWearFashion::default_instance_ = new ReqWearFashion();
  RetWearFashion::default_instance_ = new RetWearFashion();
  ReqStrengthFashion::default_instance_ = new ReqStrengthFashion();
  RetStrengthFashion::default_instance_ = new RetStrengthFashion();
  ReqFashionShowState::default_instance_ = new ReqFashionShowState();
  FashionInfo::default_instance_ = new FashionInfo();
  FashionShow::default_instance_ = new FashionShow();
  ReqFashionInfo::default_instance_->InitAsDefaultInstance();
  RetFashionInfo::default_instance_->InitAsDefaultInstance();
  ReqActivateFashion::default_instance_->InitAsDefaultInstance();
  RetActivateFashion::default_instance_->InitAsDefaultInstance();
  ReqWearFashion::default_instance_->InitAsDefaultInstance();
  RetWearFashion::default_instance_->InitAsDefaultInstance();
  ReqStrengthFashion::default_instance_->InitAsDefaultInstance();
  RetStrengthFashion::default_instance_->InitAsDefaultInstance();
  ReqFashionShowState::default_instance_->InitAsDefaultInstance();
  FashionInfo::default_instance_->InitAsDefaultInstance();
  FashionShow::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Fashion_2fFashionMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Fashion_2fFashionMessage_2eproto {
  StaticDescriptorInitializer_Fashion_2fFashionMessage_2eproto() {
    protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  }
} static_descriptor_initializer_Fashion_2fFashionMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqFashionInfo::ReqFashionInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqFashionInfo::InitAsDefaultInstance() {
}

ReqFashionInfo::ReqFashionInfo(const ReqFashionInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqFashionInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqFashionInfo::~ReqFashionInfo() {
  SharedDtor();
}

void ReqFashionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqFashionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqFashionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqFashionInfo_descriptor_;
}

const ReqFashionInfo& ReqFashionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

ReqFashionInfo* ReqFashionInfo::default_instance_ = NULL;

ReqFashionInfo* ReqFashionInfo::New() const {
  return new ReqFashionInfo;
}

void ReqFashionInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqFashionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqFashionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqFashionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqFashionInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqFashionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqFashionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqFashionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqFashionInfo::MergeFrom(const ReqFashionInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqFashionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqFashionInfo::CopyFrom(const ReqFashionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqFashionInfo::IsInitialized() const {

  return true;
}

void ReqFashionInfo::Swap(ReqFashionInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqFashionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqFashionInfo_descriptor_;
  metadata.reflection = ReqFashionInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetFashionInfo::kShowFieldNumber;
#endif  // !_MSC_VER

RetFashionInfo::RetFashionInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetFashionInfo::InitAsDefaultInstance() {
}

RetFashionInfo::RetFashionInfo(const RetFashionInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetFashionInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetFashionInfo::~RetFashionInfo() {
  SharedDtor();
}

void RetFashionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetFashionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetFashionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetFashionInfo_descriptor_;
}

const RetFashionInfo& RetFashionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

RetFashionInfo* RetFashionInfo::default_instance_ = NULL;

RetFashionInfo* RetFashionInfo::New() const {
  return new RetFashionInfo;
}

void RetFashionInfo::Clear() {
  show_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetFashionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FashionMsgProto.FashionInfo show = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_show:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_show()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_show;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetFashionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .FashionMsgProto.FashionInfo show = 1;
  for (int i = 0; i < this->show_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->show(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetFashionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .FashionMsgProto.FashionInfo show = 1;
  for (int i = 0; i < this->show_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->show(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetFashionInfo::ByteSize() const {
  int total_size = 0;

  // repeated .FashionMsgProto.FashionInfo show = 1;
  total_size += 1 * this->show_size();
  for (int i = 0; i < this->show_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->show(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetFashionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetFashionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetFashionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetFashionInfo::MergeFrom(const RetFashionInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  show_.MergeFrom(from.show_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetFashionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetFashionInfo::CopyFrom(const RetFashionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetFashionInfo::IsInitialized() const {

  for (int i = 0; i < show_size(); i++) {
    if (!this->show(i).IsInitialized()) return false;
  }
  return true;
}

void RetFashionInfo::Swap(RetFashionInfo* other) {
  if (other != this) {
    show_.Swap(&other->show_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetFashionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetFashionInfo_descriptor_;
  metadata.reflection = RetFashionInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqActivateFashion::kFashionIDFieldNumber;
#endif  // !_MSC_VER

ReqActivateFashion::ReqActivateFashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqActivateFashion::InitAsDefaultInstance() {
}

ReqActivateFashion::ReqActivateFashion(const ReqActivateFashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqActivateFashion::SharedCtor() {
  _cached_size_ = 0;
  fashionid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqActivateFashion::~ReqActivateFashion() {
  SharedDtor();
}

void ReqActivateFashion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqActivateFashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqActivateFashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqActivateFashion_descriptor_;
}

const ReqActivateFashion& ReqActivateFashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

ReqActivateFashion* ReqActivateFashion::default_instance_ = NULL;

ReqActivateFashion* ReqActivateFashion::New() const {
  return new ReqActivateFashion;
}

void ReqActivateFashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashionid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqActivateFashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fashionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashionid_)));
          set_has_fashionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqActivateFashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 fashionID = 1;
  if (has_fashionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqActivateFashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 fashionID = 1;
  if (has_fashionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqActivateFashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 fashionID = 1;
    if (has_fashionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqActivateFashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqActivateFashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqActivateFashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqActivateFashion::MergeFrom(const ReqActivateFashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashionid()) {
      set_fashionid(from.fashionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqActivateFashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqActivateFashion::CopyFrom(const ReqActivateFashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqActivateFashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqActivateFashion::Swap(ReqActivateFashion* other) {
  if (other != this) {
    std::swap(fashionid_, other->fashionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqActivateFashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqActivateFashion_descriptor_;
  metadata.reflection = ReqActivateFashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetActivateFashion::kRetFieldNumber;
const int RetActivateFashion::kNewFashionFieldNumber;
#endif  // !_MSC_VER

RetActivateFashion::RetActivateFashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetActivateFashion::InitAsDefaultInstance() {
  newfashion_ = const_cast< ::FashionMsgProto::FashionInfo*>(&::FashionMsgProto::FashionInfo::default_instance());
}

RetActivateFashion::RetActivateFashion(const RetActivateFashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetActivateFashion::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  newfashion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetActivateFashion::~RetActivateFashion() {
  SharedDtor();
}

void RetActivateFashion::SharedDtor() {
  if (this != default_instance_) {
    delete newfashion_;
  }
}

void RetActivateFashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetActivateFashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetActivateFashion_descriptor_;
}

const RetActivateFashion& RetActivateFashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

RetActivateFashion* RetActivateFashion::default_instance_ = NULL;

RetActivateFashion* RetActivateFashion::New() const {
  return new RetActivateFashion;
}

void RetActivateFashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    if (has_newfashion()) {
      if (newfashion_ != NULL) newfashion_->::FashionMsgProto::FashionInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetActivateFashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_newFashion;
        break;
      }

      // optional .FashionMsgProto.FashionInfo newFashion = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_newFashion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newfashion()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetActivateFashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional .FashionMsgProto.FashionInfo newFashion = 2;
  if (has_newfashion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->newfashion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetActivateFashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional .FashionMsgProto.FashionInfo newFashion = 2;
  if (has_newfashion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->newfashion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetActivateFashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional .FashionMsgProto.FashionInfo newFashion = 2;
    if (has_newfashion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newfashion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetActivateFashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetActivateFashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetActivateFashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetActivateFashion::MergeFrom(const RetActivateFashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_newfashion()) {
      mutable_newfashion()->::FashionMsgProto::FashionInfo::MergeFrom(from.newfashion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetActivateFashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetActivateFashion::CopyFrom(const RetActivateFashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetActivateFashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_newfashion()) {
    if (!this->newfashion().IsInitialized()) return false;
  }
  return true;
}

void RetActivateFashion::Swap(RetActivateFashion* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(newfashion_, other->newfashion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetActivateFashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetActivateFashion_descriptor_;
  metadata.reflection = RetActivateFashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqWearFashion::kFlagFieldNumber;
const int ReqWearFashion::kFashionIDFieldNumber;
#endif  // !_MSC_VER

ReqWearFashion::ReqWearFashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqWearFashion::InitAsDefaultInstance() {
}

ReqWearFashion::ReqWearFashion(const ReqWearFashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqWearFashion::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  fashionid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqWearFashion::~ReqWearFashion() {
  SharedDtor();
}

void ReqWearFashion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqWearFashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqWearFashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqWearFashion_descriptor_;
}

const ReqWearFashion& ReqWearFashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

ReqWearFashion* ReqWearFashion::default_instance_ = NULL;

ReqWearFashion* ReqWearFashion::New() const {
  return new ReqWearFashion;
}

void ReqWearFashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    fashionid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqWearFashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fashionID;
        break;
      }

      // required int32 fashionID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashionid_)));
          set_has_fashionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqWearFashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  // required int32 fashionID = 2;
  if (has_fashionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fashionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqWearFashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  // required int32 fashionID = 2;
  if (has_fashionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fashionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqWearFashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

    // required int32 fashionID = 2;
    if (has_fashionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqWearFashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqWearFashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqWearFashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqWearFashion::MergeFrom(const ReqWearFashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_fashionid()) {
      set_fashionid(from.fashionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqWearFashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqWearFashion::CopyFrom(const ReqWearFashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqWearFashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReqWearFashion::Swap(ReqWearFashion* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(fashionid_, other->fashionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqWearFashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqWearFashion_descriptor_;
  metadata.reflection = ReqWearFashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetWearFashion::kRetFieldNumber;
const int RetWearFashion::kFashionFieldNumber;
#endif  // !_MSC_VER

RetWearFashion::RetWearFashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetWearFashion::InitAsDefaultInstance() {
  fashion_ = const_cast< ::FashionMsgProto::FashionInfo*>(&::FashionMsgProto::FashionInfo::default_instance());
}

RetWearFashion::RetWearFashion(const RetWearFashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetWearFashion::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fashion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetWearFashion::~RetWearFashion() {
  SharedDtor();
}

void RetWearFashion::SharedDtor() {
  if (this != default_instance_) {
    delete fashion_;
  }
}

void RetWearFashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetWearFashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetWearFashion_descriptor_;
}

const RetWearFashion& RetWearFashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

RetWearFashion* RetWearFashion::default_instance_ = NULL;

RetWearFashion* RetWearFashion::New() const {
  return new RetWearFashion;
}

void RetWearFashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    if (has_fashion()) {
      if (fashion_ != NULL) fashion_->::FashionMsgProto::FashionInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetWearFashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fashion;
        break;
      }

      // optional .FashionMsgProto.FashionInfo fashion = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fashion()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetWearFashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional .FashionMsgProto.FashionInfo fashion = 2;
  if (has_fashion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fashion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetWearFashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional .FashionMsgProto.FashionInfo fashion = 2;
  if (has_fashion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fashion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetWearFashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional .FashionMsgProto.FashionInfo fashion = 2;
    if (has_fashion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fashion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetWearFashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetWearFashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetWearFashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetWearFashion::MergeFrom(const RetWearFashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fashion()) {
      mutable_fashion()->::FashionMsgProto::FashionInfo::MergeFrom(from.fashion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetWearFashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetWearFashion::CopyFrom(const RetWearFashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetWearFashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_fashion()) {
    if (!this->fashion().IsInitialized()) return false;
  }
  return true;
}

void RetWearFashion::Swap(RetWearFashion* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fashion_, other->fashion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetWearFashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetWearFashion_descriptor_;
  metadata.reflection = RetWearFashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqStrengthFashion::kFashionIDFieldNumber;
#endif  // !_MSC_VER

ReqStrengthFashion::ReqStrengthFashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqStrengthFashion::InitAsDefaultInstance() {
}

ReqStrengthFashion::ReqStrengthFashion(const ReqStrengthFashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqStrengthFashion::SharedCtor() {
  _cached_size_ = 0;
  fashionid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqStrengthFashion::~ReqStrengthFashion() {
  SharedDtor();
}

void ReqStrengthFashion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqStrengthFashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqStrengthFashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqStrengthFashion_descriptor_;
}

const ReqStrengthFashion& ReqStrengthFashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

ReqStrengthFashion* ReqStrengthFashion::default_instance_ = NULL;

ReqStrengthFashion* ReqStrengthFashion::New() const {
  return new ReqStrengthFashion;
}

void ReqStrengthFashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashionid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqStrengthFashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fashionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashionid_)));
          set_has_fashionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqStrengthFashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 fashionID = 1;
  if (has_fashionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashionid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqStrengthFashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 fashionID = 1;
  if (has_fashionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashionid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqStrengthFashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 fashionID = 1;
    if (has_fashionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashionid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqStrengthFashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqStrengthFashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqStrengthFashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqStrengthFashion::MergeFrom(const ReqStrengthFashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashionid()) {
      set_fashionid(from.fashionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqStrengthFashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqStrengthFashion::CopyFrom(const ReqStrengthFashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqStrengthFashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqStrengthFashion::Swap(ReqStrengthFashion* other) {
  if (other != this) {
    std::swap(fashionid_, other->fashionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqStrengthFashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqStrengthFashion_descriptor_;
  metadata.reflection = ReqStrengthFashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetStrengthFashion::kRetFieldNumber;
const int RetStrengthFashion::kFashionFieldNumber;
#endif  // !_MSC_VER

RetStrengthFashion::RetStrengthFashion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetStrengthFashion::InitAsDefaultInstance() {
  fashion_ = const_cast< ::FashionMsgProto::FashionInfo*>(&::FashionMsgProto::FashionInfo::default_instance());
}

RetStrengthFashion::RetStrengthFashion(const RetStrengthFashion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetStrengthFashion::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  fashion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetStrengthFashion::~RetStrengthFashion() {
  SharedDtor();
}

void RetStrengthFashion::SharedDtor() {
  if (this != default_instance_) {
    delete fashion_;
  }
}

void RetStrengthFashion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetStrengthFashion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetStrengthFashion_descriptor_;
}

const RetStrengthFashion& RetStrengthFashion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

RetStrengthFashion* RetStrengthFashion::default_instance_ = NULL;

RetStrengthFashion* RetStrengthFashion::New() const {
  return new RetStrengthFashion;
}

void RetStrengthFashion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    if (has_fashion()) {
      if (fashion_ != NULL) fashion_->::FashionMsgProto::FashionInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetStrengthFashion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fashion;
        break;
      }

      // optional .FashionMsgProto.FashionInfo fashion = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fashion()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetStrengthFashion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional .FashionMsgProto.FashionInfo fashion = 2;
  if (has_fashion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fashion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetStrengthFashion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional .FashionMsgProto.FashionInfo fashion = 2;
  if (has_fashion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fashion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetStrengthFashion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional .FashionMsgProto.FashionInfo fashion = 2;
    if (has_fashion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fashion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetStrengthFashion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetStrengthFashion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetStrengthFashion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetStrengthFashion::MergeFrom(const RetStrengthFashion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_fashion()) {
      mutable_fashion()->::FashionMsgProto::FashionInfo::MergeFrom(from.fashion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetStrengthFashion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetStrengthFashion::CopyFrom(const RetStrengthFashion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetStrengthFashion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_fashion()) {
    if (!this->fashion().IsInitialized()) return false;
  }
  return true;
}

void RetStrengthFashion::Swap(RetStrengthFashion* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(fashion_, other->fashion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetStrengthFashion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetStrengthFashion_descriptor_;
  metadata.reflection = RetStrengthFashion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqFashionShowState::kFashionIDFieldNumber;
const int ReqFashionShowState::kShowStateFieldNumber;
#endif  // !_MSC_VER

ReqFashionShowState::ReqFashionShowState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqFashionShowState::InitAsDefaultInstance() {
}

ReqFashionShowState::ReqFashionShowState(const ReqFashionShowState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqFashionShowState::SharedCtor() {
  _cached_size_ = 0;
  fashionid_ = 0;
  showstate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqFashionShowState::~ReqFashionShowState() {
  SharedDtor();
}

void ReqFashionShowState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqFashionShowState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqFashionShowState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqFashionShowState_descriptor_;
}

const ReqFashionShowState& ReqFashionShowState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

ReqFashionShowState* ReqFashionShowState::default_instance_ = NULL;

ReqFashionShowState* ReqFashionShowState::New() const {
  return new ReqFashionShowState;
}

void ReqFashionShowState::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashionid_ = 0;
    showstate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqFashionShowState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fashionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashionid_)));
          set_has_fashionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_showState;
        break;
      }

      // optional int32 showState = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_showState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &showstate_)));
          set_has_showstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqFashionShowState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 fashionID = 1;
  if (has_fashionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashionid(), output);
  }

  // optional int32 showState = 2;
  if (has_showstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->showstate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqFashionShowState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 fashionID = 1;
  if (has_fashionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashionid(), target);
  }

  // optional int32 showState = 2;
  if (has_showstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->showstate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqFashionShowState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 fashionID = 1;
    if (has_fashionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashionid());
    }

    // optional int32 showState = 2;
    if (has_showstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->showstate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqFashionShowState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqFashionShowState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqFashionShowState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqFashionShowState::MergeFrom(const ReqFashionShowState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashionid()) {
      set_fashionid(from.fashionid());
    }
    if (from.has_showstate()) {
      set_showstate(from.showstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqFashionShowState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqFashionShowState::CopyFrom(const ReqFashionShowState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqFashionShowState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqFashionShowState::Swap(ReqFashionShowState* other) {
  if (other != this) {
    std::swap(fashionid_, other->fashionid_);
    std::swap(showstate_, other->showstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqFashionShowState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqFashionShowState_descriptor_;
  metadata.reflection = ReqFashionShowState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FashionInfo::kIDFieldNumber;
const int FashionInfo::kStrengthLvFieldNumber;
const int FashionInfo::kStatusFieldNumber;
#endif  // !_MSC_VER

FashionInfo::FashionInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FashionInfo::InitAsDefaultInstance() {
}

FashionInfo::FashionInfo(const FashionInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FashionInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  strengthlv_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FashionInfo::~FashionInfo() {
  SharedDtor();
}

void FashionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FashionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FashionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FashionInfo_descriptor_;
}

const FashionInfo& FashionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

FashionInfo* FashionInfo::default_instance_ = NULL;

FashionInfo* FashionInfo::New() const {
  return new FashionInfo;
}

void FashionInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    strengthlv_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FashionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_strengthLv;
        break;
      }

      // optional int32 strengthLv = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_strengthLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlv_)));
          set_has_strengthlv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional int32 status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FashionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 strengthLv = 2;
  if (has_strengthlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->strengthlv(), output);
  }

  // optional int32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FashionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 strengthLv = 2;
  if (has_strengthlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->strengthlv(), target);
  }

  // optional int32 status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FashionInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 strengthLv = 2;
    if (has_strengthlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strengthlv());
    }

    // optional int32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FashionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FashionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FashionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FashionInfo::MergeFrom(const FashionInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_strengthlv()) {
      set_strengthlv(from.strengthlv());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FashionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FashionInfo::CopyFrom(const FashionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FashionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FashionInfo::Swap(FashionInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(strengthlv_, other->strengthlv_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FashionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FashionInfo_descriptor_;
  metadata.reflection = FashionInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FashionShow::kListFieldNumber;
#endif  // !_MSC_VER

FashionShow::FashionShow()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FashionShow::InitAsDefaultInstance() {
}

FashionShow::FashionShow(const FashionShow& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FashionShow::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FashionShow::~FashionShow() {
  SharedDtor();
}

void FashionShow::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FashionShow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FashionShow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FashionShow_descriptor_;
}

const FashionShow& FashionShow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Fashion_2fFashionMessage_2eproto();
  return *default_instance_;
}

FashionShow* FashionShow::default_instance_ = NULL;

FashionShow* FashionShow::New() const {
  return new FashionShow;
}

void FashionShow::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FashionShow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FashionMsgProto.FashionInfo list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FashionShow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .FashionMsgProto.FashionInfo list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FashionShow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .FashionMsgProto.FashionInfo list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FashionShow::ByteSize() const {
  int total_size = 0;

  // repeated .FashionMsgProto.FashionInfo list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FashionShow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FashionShow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FashionShow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FashionShow::MergeFrom(const FashionShow& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FashionShow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FashionShow::CopyFrom(const FashionShow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FashionShow::IsInitialized() const {

  for (int i = 0; i < list_size(); i++) {
    if (!this->list(i).IsInitialized()) return false;
  }
  return true;
}

void FashionShow::Swap(FashionShow* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FashionShow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FashionShow_descriptor_;
  metadata.reflection = FashionShow_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace FashionMsgProto

// @@protoc_insertion_point(global_scope)
