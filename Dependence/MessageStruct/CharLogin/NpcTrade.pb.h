// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/NpcTrade.proto

#ifndef PROTOBUF_CharLogin_2fNpcTrade_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fNpcTrade_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CharLogin/CharBaseInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace NpcTrade {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

class ClientReqBuyItem;
class ClientReqSellItem;
class GTAckToCSellItem;
class ClientReqBuyBack;
class GTtoGMReqBuyItem;
class GTtoGMReqSellItem;
class GMAckToGTSellItem;
class GTtoGMReqBuyBack;

// ===================================================================

class ClientReqBuyItem : public ::google::protobuf::Message {
 public:
  ClientReqBuyItem();
  virtual ~ClientReqBuyItem();

  ClientReqBuyItem(const ClientReqBuyItem& from);

  inline ClientReqBuyItem& operator=(const ClientReqBuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqBuyItem& default_instance();

  void Swap(ClientReqBuyItem* other);

  // implements Message ----------------------------------------------

  ClientReqBuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqBuyItem& from);
  void MergeFrom(const ClientReqBuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::int32 npcid() const;
  inline void set_npcid(::google::protobuf::int32 value);

  // required int32 itemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 itemNum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NpcTrade.ClientReqBuyItem)
 private:
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 npcid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static ClientReqBuyItem* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqSellItem : public ::google::protobuf::Message {
 public:
  ClientReqSellItem();
  virtual ~ClientReqSellItem();

  ClientReqSellItem(const ClientReqSellItem& from);

  inline ClientReqSellItem& operator=(const ClientReqSellItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqSellItem& default_instance();

  void Swap(ClientReqSellItem* other);

  // implements Message ----------------------------------------------

  ClientReqSellItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqSellItem& from);
  void MergeFrom(const ClientReqSellItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 PacketGridID = 1;
  inline bool has_packetgridid() const;
  inline void clear_packetgridid();
  static const int kPacketGridIDFieldNumber = 1;
  inline ::google::protobuf::int32 packetgridid() const;
  inline void set_packetgridid(::google::protobuf::int32 value);

  // optional int32 BeSureSell = 2;
  inline bool has_besuresell() const;
  inline void clear_besuresell();
  static const int kBeSureSellFieldNumber = 2;
  inline ::google::protobuf::int32 besuresell() const;
  inline void set_besuresell(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NpcTrade.ClientReqSellItem)
 private:
  inline void set_has_packetgridid();
  inline void clear_has_packetgridid();
  inline void set_has_besuresell();
  inline void clear_has_besuresell();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 packetgridid_;
  ::google::protobuf::int32 besuresell_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static ClientReqSellItem* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToCSellItem : public ::google::protobuf::Message {
 public:
  GTAckToCSellItem();
  virtual ~GTAckToCSellItem();

  GTAckToCSellItem(const GTAckToCSellItem& from);

  inline GTAckToCSellItem& operator=(const GTAckToCSellItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToCSellItem& default_instance();

  void Swap(GTAckToCSellItem* other);

  // implements Message ----------------------------------------------

  GTAckToCSellItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToCSellItem& from);
  void MergeFrom(const GTAckToCSellItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 StatusID = 1;
  inline bool has_statusid() const;
  inline void clear_statusid();
  static const int kStatusIDFieldNumber = 1;
  inline ::google::protobuf::int32 statusid() const;
  inline void set_statusid(::google::protobuf::int32 value);

  // optional .CharLogin.ClientItemInfo itemInfo = 2;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 2;
  inline const ::CharLogin::ClientItemInfo& iteminfo() const;
  inline ::CharLogin::ClientItemInfo* mutable_iteminfo();
  inline ::CharLogin::ClientItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::CharLogin::ClientItemInfo* iteminfo);

  // @@protoc_insertion_point(class_scope:NpcTrade.GTAckToCSellItem)
 private:
  inline void set_has_statusid();
  inline void clear_has_statusid();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CharLogin::ClientItemInfo* iteminfo_;
  ::google::protobuf::int32 statusid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static GTAckToCSellItem* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqBuyBack : public ::google::protobuf::Message {
 public:
  ClientReqBuyBack();
  virtual ~ClientReqBuyBack();

  ClientReqBuyBack(const ClientReqBuyBack& from);

  inline ClientReqBuyBack& operator=(const ClientReqBuyBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqBuyBack& default_instance();

  void Swap(ClientReqBuyBack* other);

  // implements Message ----------------------------------------------

  ClientReqBuyBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqBuyBack& from);
  void MergeFrom(const ClientReqBuyBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buyBackIndex = 1;
  inline bool has_buybackindex() const;
  inline void clear_buybackindex();
  static const int kBuyBackIndexFieldNumber = 1;
  inline ::google::protobuf::int32 buybackindex() const;
  inline void set_buybackindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NpcTrade.ClientReqBuyBack)
 private:
  inline void set_has_buybackindex();
  inline void clear_has_buybackindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buybackindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static ClientReqBuyBack* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMReqBuyItem : public ::google::protobuf::Message {
 public:
  GTtoGMReqBuyItem();
  virtual ~GTtoGMReqBuyItem();

  GTtoGMReqBuyItem(const GTtoGMReqBuyItem& from);

  inline GTtoGMReqBuyItem& operator=(const GTtoGMReqBuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMReqBuyItem& default_instance();

  void Swap(GTtoGMReqBuyItem* other);

  // implements Message ----------------------------------------------

  GTtoGMReqBuyItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMReqBuyItem& from);
  void MergeFrom(const GTtoGMReqBuyItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::int32 npcid() const;
  inline void set_npcid(::google::protobuf::int32 value);

  // required int32 itemID = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 itemNum = 4;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NpcTrade.GTtoGMReqBuyItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 npcid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMReqBuyItem* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMReqSellItem : public ::google::protobuf::Message {
 public:
  GTtoGMReqSellItem();
  virtual ~GTtoGMReqSellItem();

  GTtoGMReqSellItem(const GTtoGMReqSellItem& from);

  inline GTtoGMReqSellItem& operator=(const GTtoGMReqSellItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMReqSellItem& default_instance();

  void Swap(GTtoGMReqSellItem* other);

  // implements Message ----------------------------------------------

  GTtoGMReqSellItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMReqSellItem& from);
  void MergeFrom(const GTtoGMReqSellItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 PacketGridID = 2;
  inline bool has_packetgridid() const;
  inline void clear_packetgridid();
  static const int kPacketGridIDFieldNumber = 2;
  inline ::google::protobuf::int32 packetgridid() const;
  inline void set_packetgridid(::google::protobuf::int32 value);

  // optional int32 BeSureSell = 3;
  inline bool has_besuresell() const;
  inline void clear_besuresell();
  static const int kBeSureSellFieldNumber = 3;
  inline ::google::protobuf::int32 besuresell() const;
  inline void set_besuresell(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NpcTrade.GTtoGMReqSellItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_packetgridid();
  inline void clear_has_packetgridid();
  inline void set_has_besuresell();
  inline void clear_has_besuresell();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 packetgridid_;
  ::google::protobuf::int32 besuresell_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMReqSellItem* default_instance_;
};
// -------------------------------------------------------------------

class GMAckToGTSellItem : public ::google::protobuf::Message {
 public:
  GMAckToGTSellItem();
  virtual ~GMAckToGTSellItem();

  GMAckToGTSellItem(const GMAckToGTSellItem& from);

  inline GMAckToGTSellItem& operator=(const GMAckToGTSellItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAckToGTSellItem& default_instance();

  void Swap(GMAckToGTSellItem* other);

  // implements Message ----------------------------------------------

  GMAckToGTSellItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAckToGTSellItem& from);
  void MergeFrom(const GMAckToGTSellItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 StatusID = 2;
  inline bool has_statusid() const;
  inline void clear_statusid();
  static const int kStatusIDFieldNumber = 2;
  inline ::google::protobuf::int32 statusid() const;
  inline void set_statusid(::google::protobuf::int32 value);

  // required .CharLogin.ClientItemInfo itemInfo = 3;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 3;
  inline const ::CharLogin::ClientItemInfo& iteminfo() const;
  inline ::CharLogin::ClientItemInfo* mutable_iteminfo();
  inline ::CharLogin::ClientItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::CharLogin::ClientItemInfo* iteminfo);

  // @@protoc_insertion_point(class_scope:NpcTrade.GMAckToGTSellItem)
 private:
  inline void set_has_statusid();
  inline void clear_has_statusid();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CharLogin::ClientItemInfo* iteminfo_;
  ::google::protobuf::int32 statusid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static GMAckToGTSellItem* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMReqBuyBack : public ::google::protobuf::Message {
 public:
  GTtoGMReqBuyBack();
  virtual ~GTtoGMReqBuyBack();

  GTtoGMReqBuyBack(const GTtoGMReqBuyBack& from);

  inline GTtoGMReqBuyBack& operator=(const GTtoGMReqBuyBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMReqBuyBack& default_instance();

  void Swap(GTtoGMReqBuyBack* other);

  // implements Message ----------------------------------------------

  GTtoGMReqBuyBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMReqBuyBack& from);
  void MergeFrom(const GTtoGMReqBuyBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 buyBackIndex = 2;
  inline bool has_buybackindex() const;
  inline void clear_buybackindex();
  static const int kBuyBackIndexFieldNumber = 2;
  inline ::google::protobuf::int32 buybackindex() const;
  inline void set_buybackindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NpcTrade.GTtoGMReqBuyBack)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_buybackindex();
  inline void clear_has_buybackindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 buybackindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fNpcTrade_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fNpcTrade_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMReqBuyBack* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientReqBuyItem

// required int32 NpcID = 1;
inline bool ClientReqBuyItem::has_npcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqBuyItem::set_has_npcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqBuyItem::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqBuyItem::clear_npcid() {
  npcid_ = 0;
  clear_has_npcid();
}
inline ::google::protobuf::int32 ClientReqBuyItem::npcid() const {
  return npcid_;
}
inline void ClientReqBuyItem::set_npcid(::google::protobuf::int32 value) {
  set_has_npcid();
  npcid_ = value;
}

// required int32 itemID = 2;
inline bool ClientReqBuyItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqBuyItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqBuyItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqBuyItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ClientReqBuyItem::itemid() const {
  return itemid_;
}
inline void ClientReqBuyItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 itemNum = 3;
inline bool ClientReqBuyItem::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqBuyItem::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqBuyItem::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqBuyItem::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 ClientReqBuyItem::itemnum() const {
  return itemnum_;
}
inline void ClientReqBuyItem::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// -------------------------------------------------------------------

// ClientReqSellItem

// required int32 PacketGridID = 1;
inline bool ClientReqSellItem::has_packetgridid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqSellItem::set_has_packetgridid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqSellItem::clear_has_packetgridid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqSellItem::clear_packetgridid() {
  packetgridid_ = 0;
  clear_has_packetgridid();
}
inline ::google::protobuf::int32 ClientReqSellItem::packetgridid() const {
  return packetgridid_;
}
inline void ClientReqSellItem::set_packetgridid(::google::protobuf::int32 value) {
  set_has_packetgridid();
  packetgridid_ = value;
}

// optional int32 BeSureSell = 2;
inline bool ClientReqSellItem::has_besuresell() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqSellItem::set_has_besuresell() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqSellItem::clear_has_besuresell() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqSellItem::clear_besuresell() {
  besuresell_ = 0;
  clear_has_besuresell();
}
inline ::google::protobuf::int32 ClientReqSellItem::besuresell() const {
  return besuresell_;
}
inline void ClientReqSellItem::set_besuresell(::google::protobuf::int32 value) {
  set_has_besuresell();
  besuresell_ = value;
}

// -------------------------------------------------------------------

// GTAckToCSellItem

// required int32 StatusID = 1;
inline bool GTAckToCSellItem::has_statusid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckToCSellItem::set_has_statusid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckToCSellItem::clear_has_statusid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckToCSellItem::clear_statusid() {
  statusid_ = 0;
  clear_has_statusid();
}
inline ::google::protobuf::int32 GTAckToCSellItem::statusid() const {
  return statusid_;
}
inline void GTAckToCSellItem::set_statusid(::google::protobuf::int32 value) {
  set_has_statusid();
  statusid_ = value;
}

// optional .CharLogin.ClientItemInfo itemInfo = 2;
inline bool GTAckToCSellItem::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckToCSellItem::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckToCSellItem::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckToCSellItem::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CharLogin::ClientItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::CharLogin::ClientItemInfo& GTAckToCSellItem::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::CharLogin::ClientItemInfo* GTAckToCSellItem::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::CharLogin::ClientItemInfo;
  return iteminfo_;
}
inline ::CharLogin::ClientItemInfo* GTAckToCSellItem::release_iteminfo() {
  clear_has_iteminfo();
  ::CharLogin::ClientItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void GTAckToCSellItem::set_allocated_iteminfo(::CharLogin::ClientItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// -------------------------------------------------------------------

// ClientReqBuyBack

// required int32 buyBackIndex = 1;
inline bool ClientReqBuyBack::has_buybackindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqBuyBack::set_has_buybackindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqBuyBack::clear_has_buybackindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqBuyBack::clear_buybackindex() {
  buybackindex_ = 0;
  clear_has_buybackindex();
}
inline ::google::protobuf::int32 ClientReqBuyBack::buybackindex() const {
  return buybackindex_;
}
inline void ClientReqBuyBack::set_buybackindex(::google::protobuf::int32 value) {
  set_has_buybackindex();
  buybackindex_ = value;
}

// -------------------------------------------------------------------

// GTtoGMReqBuyItem

// required int64 charid = 1;
inline bool GTtoGMReqBuyItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMReqBuyItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMReqBuyItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMReqBuyItem::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMReqBuyItem::charid() const {
  return charid_;
}
inline void GTtoGMReqBuyItem::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 NpcID = 2;
inline bool GTtoGMReqBuyItem::has_npcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMReqBuyItem::set_has_npcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMReqBuyItem::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMReqBuyItem::clear_npcid() {
  npcid_ = 0;
  clear_has_npcid();
}
inline ::google::protobuf::int32 GTtoGMReqBuyItem::npcid() const {
  return npcid_;
}
inline void GTtoGMReqBuyItem::set_npcid(::google::protobuf::int32 value) {
  set_has_npcid();
  npcid_ = value;
}

// required int32 itemID = 3;
inline bool GTtoGMReqBuyItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTtoGMReqBuyItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTtoGMReqBuyItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTtoGMReqBuyItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 GTtoGMReqBuyItem::itemid() const {
  return itemid_;
}
inline void GTtoGMReqBuyItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 itemNum = 4;
inline bool GTtoGMReqBuyItem::has_itemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GTtoGMReqBuyItem::set_has_itemnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GTtoGMReqBuyItem::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GTtoGMReqBuyItem::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 GTtoGMReqBuyItem::itemnum() const {
  return itemnum_;
}
inline void GTtoGMReqBuyItem::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// -------------------------------------------------------------------

// GTtoGMReqSellItem

// required int64 charid = 1;
inline bool GTtoGMReqSellItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMReqSellItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMReqSellItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMReqSellItem::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMReqSellItem::charid() const {
  return charid_;
}
inline void GTtoGMReqSellItem::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 PacketGridID = 2;
inline bool GTtoGMReqSellItem::has_packetgridid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMReqSellItem::set_has_packetgridid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMReqSellItem::clear_has_packetgridid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMReqSellItem::clear_packetgridid() {
  packetgridid_ = 0;
  clear_has_packetgridid();
}
inline ::google::protobuf::int32 GTtoGMReqSellItem::packetgridid() const {
  return packetgridid_;
}
inline void GTtoGMReqSellItem::set_packetgridid(::google::protobuf::int32 value) {
  set_has_packetgridid();
  packetgridid_ = value;
}

// optional int32 BeSureSell = 3;
inline bool GTtoGMReqSellItem::has_besuresell() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTtoGMReqSellItem::set_has_besuresell() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTtoGMReqSellItem::clear_has_besuresell() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTtoGMReqSellItem::clear_besuresell() {
  besuresell_ = 0;
  clear_has_besuresell();
}
inline ::google::protobuf::int32 GTtoGMReqSellItem::besuresell() const {
  return besuresell_;
}
inline void GTtoGMReqSellItem::set_besuresell(::google::protobuf::int32 value) {
  set_has_besuresell();
  besuresell_ = value;
}

// -------------------------------------------------------------------

// GMAckToGTSellItem

// required int32 StatusID = 2;
inline bool GMAckToGTSellItem::has_statusid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAckToGTSellItem::set_has_statusid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAckToGTSellItem::clear_has_statusid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAckToGTSellItem::clear_statusid() {
  statusid_ = 0;
  clear_has_statusid();
}
inline ::google::protobuf::int32 GMAckToGTSellItem::statusid() const {
  return statusid_;
}
inline void GMAckToGTSellItem::set_statusid(::google::protobuf::int32 value) {
  set_has_statusid();
  statusid_ = value;
}

// required .CharLogin.ClientItemInfo itemInfo = 3;
inline bool GMAckToGTSellItem::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMAckToGTSellItem::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMAckToGTSellItem::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMAckToGTSellItem::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CharLogin::ClientItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::CharLogin::ClientItemInfo& GMAckToGTSellItem::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::CharLogin::ClientItemInfo* GMAckToGTSellItem::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::CharLogin::ClientItemInfo;
  return iteminfo_;
}
inline ::CharLogin::ClientItemInfo* GMAckToGTSellItem::release_iteminfo() {
  clear_has_iteminfo();
  ::CharLogin::ClientItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void GMAckToGTSellItem::set_allocated_iteminfo(::CharLogin::ClientItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// -------------------------------------------------------------------

// GTtoGMReqBuyBack

// required int64 charid = 1;
inline bool GTtoGMReqBuyBack::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMReqBuyBack::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMReqBuyBack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMReqBuyBack::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMReqBuyBack::charid() const {
  return charid_;
}
inline void GTtoGMReqBuyBack::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 buyBackIndex = 2;
inline bool GTtoGMReqBuyBack::has_buybackindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMReqBuyBack::set_has_buybackindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMReqBuyBack::clear_has_buybackindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMReqBuyBack::clear_buybackindex() {
  buybackindex_ = 0;
  clear_has_buybackindex();
}
inline ::google::protobuf::int32 GTtoGMReqBuyBack::buybackindex() const {
  return buybackindex_;
}
inline void GTtoGMReqBuyBack::set_buybackindex(::google::protobuf::int32 value) {
  set_has_buybackindex();
  buybackindex_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NpcTrade

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fNpcTrade_2eproto__INCLUDED
