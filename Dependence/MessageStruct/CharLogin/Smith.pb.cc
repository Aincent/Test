// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/Smith.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CharLogin/Smith.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace EquipSmith {

namespace {

const ::google::protobuf::Descriptor* ReqGMAddDelStone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGMAddDelStone_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddDelStone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddDelStone_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqGMStoneCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGMStoneCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqInlayStoneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqInlayStoneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetInlayStoneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetInlayStoneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InlayStoneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InlayStoneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoneCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoneCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* SectorItemCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SectorItemCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqRefineEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqRefineEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* GTtoGMRefineEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GTtoGMRefineEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnNewAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnNewAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClintReqAffirmRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClintReqAffirmRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* GTtoGMAffirmRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GTtoGMAffirmRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnAffirmRefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnAffirmRefine_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqStrengthEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqStrengthEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* GTReqGMStrengthEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GTReqGMStrengthEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqUpgradeEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqUpgradeEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqSucceedEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqSucceedEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefineAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefineAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqMeterialSyn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqMeterialSyn_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetMeterialSyn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetMeterialSyn_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqUpgradeStone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqUpgradeStone_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetUpgradeStone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetUpgradeStone_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CharLogin_2fSmith_2eproto() {
  protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CharLogin/Smith.proto");
  GOOGLE_CHECK(file != NULL);
  ReqGMAddDelStone_descriptor_ = file->message_type(0);
  static const int ReqGMAddDelStone_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMAddDelStone, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMAddDelStone, stone_),
  };
  ReqGMAddDelStone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGMAddDelStone_descriptor_,
      ReqGMAddDelStone::default_instance_,
      ReqGMAddDelStone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMAddDelStone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMAddDelStone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGMAddDelStone));
  AddDelStone_descriptor_ = file->message_type(1);
  static const int AddDelStone_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDelStone, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDelStone, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDelStone, stonepos_),
  };
  AddDelStone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddDelStone_descriptor_,
      AddDelStone::default_instance_,
      AddDelStone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDelStone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDelStone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddDelStone));
  ReqGMStoneCreate_descriptor_ = file->message_type(2);
  static const int ReqGMStoneCreate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMStoneCreate, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMStoneCreate, stone_),
  };
  ReqGMStoneCreate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGMStoneCreate_descriptor_,
      ReqGMStoneCreate::default_instance_,
      ReqGMStoneCreate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMStoneCreate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGMStoneCreate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGMStoneCreate));
  ReqInlayStoneInfo_descriptor_ = file->message_type(3);
  static const int ReqInlayStoneInfo_offsets_[1] = {
  };
  ReqInlayStoneInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqInlayStoneInfo_descriptor_,
      ReqInlayStoneInfo::default_instance_,
      ReqInlayStoneInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqInlayStoneInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqInlayStoneInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqInlayStoneInfo));
  RetInlayStoneInfo_descriptor_ = file->message_type(4);
  static const int RetInlayStoneInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetInlayStoneInfo, inlaystoneinfo_),
  };
  RetInlayStoneInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetInlayStoneInfo_descriptor_,
      RetInlayStoneInfo::default_instance_,
      RetInlayStoneInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetInlayStoneInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetInlayStoneInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetInlayStoneInfo));
  InlayStoneInfo_descriptor_ = file->message_type(5);
  static const int InlayStoneInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InlayStoneInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InlayStoneInfo, stonepos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InlayStoneInfo, stoneid_),
  };
  InlayStoneInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InlayStoneInfo_descriptor_,
      InlayStoneInfo::default_instance_,
      InlayStoneInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InlayStoneInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InlayStoneInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InlayStoneInfo));
  StoneCreate_descriptor_ = file->message_type(6);
  static const int StoneCreate_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoneCreate, stoneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoneCreate, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoneCreate, flag_),
  };
  StoneCreate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoneCreate_descriptor_,
      StoneCreate::default_instance_,
      StoneCreate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoneCreate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoneCreate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoneCreate));
  SectorItemCount_descriptor_ = file->message_type(7);
  static const int SectorItemCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectorItemCount, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectorItemCount, count_),
  };
  SectorItemCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SectorItemCount_descriptor_,
      SectorItemCount::default_instance_,
      SectorItemCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectorItemCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SectorItemCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SectorItemCount));
  ItemPos_descriptor_ = file->message_type(8);
  static const int ItemPos_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPos, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPos, pos_),
  };
  ItemPos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemPos_descriptor_,
      ItemPos::default_instance_,
      ItemPos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemPos));
  ClientReqRefineEquip_descriptor_ = file->message_type(9);
  static const int ClientReqRefineEquip_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, toplvpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, ismusttoplv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, isautobuy_),
  };
  ClientReqRefineEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqRefineEquip_descriptor_,
      ClientReqRefineEquip::default_instance_,
      ClientReqRefineEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRefineEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqRefineEquip));
  GTtoGMRefineEquip_descriptor_ = file->message_type(10);
  static const int GTtoGMRefineEquip_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, toplvpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, ismusttoplv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, isautobuy_),
  };
  GTtoGMRefineEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GTtoGMRefineEquip_descriptor_,
      GTtoGMRefineEquip::default_instance_,
      GTtoGMRefineEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMRefineEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GTtoGMRefineEquip));
  ReturnNewAttr_descriptor_ = file->message_type(11);
  static const int ReturnNewAttr_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnNewAttr, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnNewAttr, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnNewAttr, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnNewAttr, attrinfo_),
  };
  ReturnNewAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnNewAttr_descriptor_,
      ReturnNewAttr::default_instance_,
      ReturnNewAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnNewAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnNewAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnNewAttr));
  ClintReqAffirmRefine_descriptor_ = file->message_type(12);
  static const int ClintReqAffirmRefine_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClintReqAffirmRefine, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClintReqAffirmRefine, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClintReqAffirmRefine, lockpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClintReqAffirmRefine, isautobuy_),
  };
  ClintReqAffirmRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClintReqAffirmRefine_descriptor_,
      ClintReqAffirmRefine::default_instance_,
      ClintReqAffirmRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClintReqAffirmRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClintReqAffirmRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClintReqAffirmRefine));
  GTtoGMAffirmRefine_descriptor_ = file->message_type(13);
  static const int GTtoGMAffirmRefine_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, lockpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, isautobuy_),
  };
  GTtoGMAffirmRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GTtoGMAffirmRefine_descriptor_,
      GTtoGMAffirmRefine::default_instance_,
      GTtoGMAffirmRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTtoGMAffirmRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GTtoGMAffirmRefine));
  ReturnAffirmRefine_descriptor_ = file->message_type(14);
  static const int ReturnAffirmRefine_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnAffirmRefine, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnAffirmRefine, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnAffirmRefine, equipid_),
  };
  ReturnAffirmRefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnAffirmRefine_descriptor_,
      ReturnAffirmRefine::default_instance_,
      ReturnAffirmRefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnAffirmRefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnAffirmRefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnAffirmRefine));
  ClientReqStrengthEquip_descriptor_ = file->message_type(15);
  static const int ClientReqStrengthEquip_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, equippos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, bmeterial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, bgolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, onekeystrenght_),
  };
  ClientReqStrengthEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqStrengthEquip_descriptor_,
      ClientReqStrengthEquip::default_instance_,
      ClientReqStrengthEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqStrengthEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqStrengthEquip));
  GTReqGMStrengthEquip_descriptor_ = file->message_type(16);
  static const int GTReqGMStrengthEquip_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMStrengthEquip, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMStrengthEquip, equip_),
  };
  GTReqGMStrengthEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GTReqGMStrengthEquip_descriptor_,
      GTReqGMStrengthEquip::default_instance_,
      GTReqGMStrengthEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMStrengthEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMStrengthEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GTReqGMStrengthEquip));
  ClientReqUpgradeEquip_descriptor_ = file->message_type(17);
  static const int ClientReqUpgradeEquip_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeEquip, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeEquip, equippos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeEquip, bgolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeEquip, isprotect_),
  };
  ClientReqUpgradeEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqUpgradeEquip_descriptor_,
      ClientReqUpgradeEquip::default_instance_,
      ClientReqUpgradeEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqUpgradeEquip));
  ClientReqSucceedEquip_descriptor_ = file->message_type(18);
  static const int ClientReqSucceedEquip_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, containerf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, posf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, containers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, poss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, bgolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, isrefine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, isprotect_),
  };
  ClientReqSucceedEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqSucceedEquip_descriptor_,
      ClientReqSucceedEquip::default_instance_,
      ClientReqSucceedEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqSucceedEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqSucceedEquip));
  RefineAttr_descriptor_ = file->message_type(19);
  static const int RefineAttr_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineAttr, attrtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineAttr, attrvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineAttr, attrlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineAttr, attrpos_),
  };
  RefineAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefineAttr_descriptor_,
      RefineAttr::default_instance_,
      RefineAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefineAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefineAttr));
  ClientReqMeterialSyn_descriptor_ = file->message_type(20);
  static const int ClientReqMeterialSyn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqMeterialSyn, destmeterialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqMeterialSyn, count_),
  };
  ClientReqMeterialSyn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqMeterialSyn_descriptor_,
      ClientReqMeterialSyn::default_instance_,
      ClientReqMeterialSyn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqMeterialSyn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqMeterialSyn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqMeterialSyn));
  RetMeterialSyn_descriptor_ = file->message_type(21);
  static const int RetMeterialSyn_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetMeterialSyn, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetMeterialSyn, destmeterialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetMeterialSyn, count_),
  };
  RetMeterialSyn_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetMeterialSyn_descriptor_,
      RetMeterialSyn::default_instance_,
      RetMeterialSyn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetMeterialSyn, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetMeterialSyn, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetMeterialSyn));
  ClientReqUpgradeStone_descriptor_ = file->message_type(22);
  static const int ClientReqUpgradeStone_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeStone, stoneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeStone, stonepos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeStone, equippos_),
  };
  ClientReqUpgradeStone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqUpgradeStone_descriptor_,
      ClientReqUpgradeStone::default_instance_,
      ClientReqUpgradeStone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeStone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqUpgradeStone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqUpgradeStone));
  RetUpgradeStone_descriptor_ = file->message_type(23);
  static const int RetUpgradeStone_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetUpgradeStone, err_),
  };
  RetUpgradeStone_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetUpgradeStone_descriptor_,
      RetUpgradeStone::default_instance_,
      RetUpgradeStone_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetUpgradeStone, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetUpgradeStone, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetUpgradeStone));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CharLogin_2fSmith_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGMAddDelStone_descriptor_, &ReqGMAddDelStone::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddDelStone_descriptor_, &AddDelStone::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGMStoneCreate_descriptor_, &ReqGMStoneCreate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqInlayStoneInfo_descriptor_, &ReqInlayStoneInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetInlayStoneInfo_descriptor_, &RetInlayStoneInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InlayStoneInfo_descriptor_, &InlayStoneInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoneCreate_descriptor_, &StoneCreate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SectorItemCount_descriptor_, &SectorItemCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemPos_descriptor_, &ItemPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqRefineEquip_descriptor_, &ClientReqRefineEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GTtoGMRefineEquip_descriptor_, &GTtoGMRefineEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnNewAttr_descriptor_, &ReturnNewAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClintReqAffirmRefine_descriptor_, &ClintReqAffirmRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GTtoGMAffirmRefine_descriptor_, &GTtoGMAffirmRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnAffirmRefine_descriptor_, &ReturnAffirmRefine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqStrengthEquip_descriptor_, &ClientReqStrengthEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GTReqGMStrengthEquip_descriptor_, &GTReqGMStrengthEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqUpgradeEquip_descriptor_, &ClientReqUpgradeEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqSucceedEquip_descriptor_, &ClientReqSucceedEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefineAttr_descriptor_, &RefineAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqMeterialSyn_descriptor_, &ClientReqMeterialSyn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetMeterialSyn_descriptor_, &RetMeterialSyn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqUpgradeStone_descriptor_, &ClientReqUpgradeStone::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetUpgradeStone_descriptor_, &RetUpgradeStone::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CharLogin_2fSmith_2eproto() {
  delete ReqGMAddDelStone::default_instance_;
  delete ReqGMAddDelStone_reflection_;
  delete AddDelStone::default_instance_;
  delete AddDelStone_reflection_;
  delete ReqGMStoneCreate::default_instance_;
  delete ReqGMStoneCreate_reflection_;
  delete ReqInlayStoneInfo::default_instance_;
  delete ReqInlayStoneInfo_reflection_;
  delete RetInlayStoneInfo::default_instance_;
  delete RetInlayStoneInfo_reflection_;
  delete InlayStoneInfo::default_instance_;
  delete InlayStoneInfo_reflection_;
  delete StoneCreate::default_instance_;
  delete StoneCreate_reflection_;
  delete SectorItemCount::default_instance_;
  delete SectorItemCount_reflection_;
  delete ItemPos::default_instance_;
  delete ItemPos_reflection_;
  delete ClientReqRefineEquip::default_instance_;
  delete ClientReqRefineEquip_reflection_;
  delete GTtoGMRefineEquip::default_instance_;
  delete GTtoGMRefineEquip_reflection_;
  delete ReturnNewAttr::default_instance_;
  delete ReturnNewAttr_reflection_;
  delete ClintReqAffirmRefine::default_instance_;
  delete ClintReqAffirmRefine_reflection_;
  delete GTtoGMAffirmRefine::default_instance_;
  delete GTtoGMAffirmRefine_reflection_;
  delete ReturnAffirmRefine::default_instance_;
  delete ReturnAffirmRefine_reflection_;
  delete ClientReqStrengthEquip::default_instance_;
  delete ClientReqStrengthEquip_reflection_;
  delete GTReqGMStrengthEquip::default_instance_;
  delete GTReqGMStrengthEquip_reflection_;
  delete ClientReqUpgradeEquip::default_instance_;
  delete ClientReqUpgradeEquip_reflection_;
  delete ClientReqSucceedEquip::default_instance_;
  delete ClientReqSucceedEquip_reflection_;
  delete RefineAttr::default_instance_;
  delete RefineAttr_reflection_;
  delete ClientReqMeterialSyn::default_instance_;
  delete ClientReqMeterialSyn_reflection_;
  delete RetMeterialSyn::default_instance_;
  delete RetMeterialSyn_reflection_;
  delete ClientReqUpgradeStone::default_instance_;
  delete ClientReqUpgradeStone_reflection_;
  delete RetUpgradeStone::default_instance_;
  delete RetUpgradeStone_reflection_;
}

void protobuf_AddDesc_CharLogin_2fSmith_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025CharLogin/Smith.proto\022\nEquipSmith\"J\n\020R"
    "eqGMAddDelStone\022\016\n\006charid\030\001 \002(\003\022&\n\005stone"
    "\030\002 \001(\0132\027.EquipSmith.AddDelStone\"Q\n\013AddDe"
    "lStone\022\014\n\004type\030\001 \002(\010\022\"\n\005equip\030\002 \001(\0132\023.Eq"
    "uipSmith.ItemPos\022\020\n\010stonepos\030\003 \001(\005\"J\n\020Re"
    "qGMStoneCreate\022\016\n\006charid\030\001 \002(\003\022&\n\005stone\030"
    "\002 \001(\0132\027.EquipSmith.StoneCreate\"\023\n\021ReqInl"
    "ayStoneInfo\"G\n\021RetInlayStoneInfo\0222\n\016inla"
    "yStoneInfo\030\001 \003(\0132\032.EquipSmith.InlayStone"
    "Info\"@\n\016InlayStoneInfo\022\013\n\003pos\030\001 \002(\005\022\020\n\010s"
    "tonePos\030\002 \003(\005\022\017\n\007stoneID\030\003 \003(\005\";\n\013StoneC"
    "reate\022\017\n\007stoneid\030\001 \002(\005\022\r\n\005count\030\002 \002(\005\022\014\n"
    "\004flag\030\003 \002(\010\"-\n\017SectorItemCount\022\013\n\003pos\030\001 "
    "\002(\005\022\r\n\005count\030\002 \001(\005\")\n\007ItemPos\022\021\n\tcontain"
    "er\030\001 \002(\005\022\013\n\003pos\030\002 \002(\005\"t\n\024ClientReqRefine"
    "Equip\022\021\n\tcontainer\030\001 \002(\005\022\017\n\007equipid\030\002 \002("
    "\005\022\020\n\010topLvPos\030\003 \003(\005\022\023\n\013isMustTopLv\030\004 \001(\010"
    "\022\021\n\tisAutoBuy\030\005 \001(\010\"\201\001\n\021GTtoGMRefineEqui"
    "p\022\016\n\006charid\030\001 \002(\003\022\021\n\tcontainer\030\002 \002(\005\022\017\n\007"
    "equipid\030\003 \002(\005\022\020\n\010topLvPos\030\004 \003(\005\022\023\n\013isMus"
    "tTopLv\030\005 \001(\010\022\021\n\tisAutoBuy\030\006 \001(\010\"m\n\rRetur"
    "nNewAttr\022\016\n\006status\030\001 \002(\005\022\021\n\tcontainer\030\002 "
    "\002(\005\022\017\n\007equipid\030\003 \002(\005\022(\n\010attrInfo\030\004 \003(\0132\026"
    ".EquipSmith.RefineAttr\"^\n\024ClintReqAffirm"
    "Refine\022\021\n\tcontainer\030\001 \002(\005\022\017\n\007equipid\030\002 \002"
    "(\005\022\017\n\007lockPos\030\003 \003(\r\022\021\n\tisAutoBuy\030\004 \001(\010\"l"
    "\n\022GTtoGMAffirmRefine\022\016\n\006charid\030\001 \002(\003\022\021\n\t"
    "container\030\002 \002(\005\022\017\n\007equipid\030\003 \002(\005\022\017\n\007lock"
    "Pos\030\004 \003(\r\022\021\n\tisAutoBuy\030\005 \001(\010\"H\n\022ReturnAf"
    "firmRefine\022\016\n\006status\030\001 \002(\005\022\021\n\tcontainer\030"
    "\002 \002(\005\022\017\n\007equipid\030\003 \002(\005\"y\n\026ClientReqStren"
    "gthEquip\022\021\n\tcontainer\030\001 \002(\005\022\020\n\010equippos\030"
    "\002 \002(\005\022\021\n\tbmeterial\030\003 \002(\010\022\017\n\007bGolden\030\004 \002("
    "\010\022\026\n\016oneKeyStrenght\030\005 \001(\005\"Y\n\024GTReqGMStre"
    "ngthEquip\022\016\n\006charid\030\001 \002(\003\0221\n\005equip\030\002 \002(\013"
    "2\".EquipSmith.ClientReqStrengthEquip\"`\n\025"
    "ClientReqUpgradeEquip\022\021\n\tcontainer\030\001 \002(\005"
    "\022\020\n\010equippos\030\002 \002(\005\022\017\n\007bGolden\030\003 \002(\010\022\021\n\ti"
    "sProtect\030\004 \001(\010\"\221\001\n\025ClientReqSucceedEquip"
    "\022\022\n\ncontainerf\030\001 \002(\005\022\014\n\004posf\030\002 \002(\005\022\022\n\nco"
    "ntainers\030\003 \002(\005\022\014\n\004poss\030\004 \002(\005\022\017\n\007bGolden\030"
    "\005 \002(\010\022\020\n\010isRefine\030\006 \002(\010\022\021\n\tisProtect\030\007 \001"
    "(\010\"U\n\nRefineAttr\022\020\n\010attrType\030\001 \002(\005\022\021\n\tat"
    "trValue\030\002 \002(\005\022\021\n\tattrLevel\030\003 \002(\005\022\017\n\007attr"
    "Pos\030\004 \001(\005\"=\n\024ClientReqMeterialSyn\022\026\n\016des"
    "tMeterialID\030\001 \002(\005\022\r\n\005count\030\002 \002(\005\"D\n\016RetM"
    "eterialSyn\022\013\n\003err\030\001 \002(\005\022\026\n\016destMeterialI"
    "D\030\002 \001(\005\022\r\n\005count\030\003 \001(\005\"L\n\025ClientReqUpgra"
    "deStone\022\017\n\007stoneID\030\001 \002(\005\022\020\n\010stonePos\030\002 \002"
    "(\005\022\020\n\010equipPos\030\003 \001(\005\"\036\n\017RetUpgradeStone\022"
    "\013\n\003err\030\001 \002(\005", 2012);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CharLogin/Smith.proto", &protobuf_RegisterTypes);
  ReqGMAddDelStone::default_instance_ = new ReqGMAddDelStone();
  AddDelStone::default_instance_ = new AddDelStone();
  ReqGMStoneCreate::default_instance_ = new ReqGMStoneCreate();
  ReqInlayStoneInfo::default_instance_ = new ReqInlayStoneInfo();
  RetInlayStoneInfo::default_instance_ = new RetInlayStoneInfo();
  InlayStoneInfo::default_instance_ = new InlayStoneInfo();
  StoneCreate::default_instance_ = new StoneCreate();
  SectorItemCount::default_instance_ = new SectorItemCount();
  ItemPos::default_instance_ = new ItemPos();
  ClientReqRefineEquip::default_instance_ = new ClientReqRefineEquip();
  GTtoGMRefineEquip::default_instance_ = new GTtoGMRefineEquip();
  ReturnNewAttr::default_instance_ = new ReturnNewAttr();
  ClintReqAffirmRefine::default_instance_ = new ClintReqAffirmRefine();
  GTtoGMAffirmRefine::default_instance_ = new GTtoGMAffirmRefine();
  ReturnAffirmRefine::default_instance_ = new ReturnAffirmRefine();
  ClientReqStrengthEquip::default_instance_ = new ClientReqStrengthEquip();
  GTReqGMStrengthEquip::default_instance_ = new GTReqGMStrengthEquip();
  ClientReqUpgradeEquip::default_instance_ = new ClientReqUpgradeEquip();
  ClientReqSucceedEquip::default_instance_ = new ClientReqSucceedEquip();
  RefineAttr::default_instance_ = new RefineAttr();
  ClientReqMeterialSyn::default_instance_ = new ClientReqMeterialSyn();
  RetMeterialSyn::default_instance_ = new RetMeterialSyn();
  ClientReqUpgradeStone::default_instance_ = new ClientReqUpgradeStone();
  RetUpgradeStone::default_instance_ = new RetUpgradeStone();
  ReqGMAddDelStone::default_instance_->InitAsDefaultInstance();
  AddDelStone::default_instance_->InitAsDefaultInstance();
  ReqGMStoneCreate::default_instance_->InitAsDefaultInstance();
  ReqInlayStoneInfo::default_instance_->InitAsDefaultInstance();
  RetInlayStoneInfo::default_instance_->InitAsDefaultInstance();
  InlayStoneInfo::default_instance_->InitAsDefaultInstance();
  StoneCreate::default_instance_->InitAsDefaultInstance();
  SectorItemCount::default_instance_->InitAsDefaultInstance();
  ItemPos::default_instance_->InitAsDefaultInstance();
  ClientReqRefineEquip::default_instance_->InitAsDefaultInstance();
  GTtoGMRefineEquip::default_instance_->InitAsDefaultInstance();
  ReturnNewAttr::default_instance_->InitAsDefaultInstance();
  ClintReqAffirmRefine::default_instance_->InitAsDefaultInstance();
  GTtoGMAffirmRefine::default_instance_->InitAsDefaultInstance();
  ReturnAffirmRefine::default_instance_->InitAsDefaultInstance();
  ClientReqStrengthEquip::default_instance_->InitAsDefaultInstance();
  GTReqGMStrengthEquip::default_instance_->InitAsDefaultInstance();
  ClientReqUpgradeEquip::default_instance_->InitAsDefaultInstance();
  ClientReqSucceedEquip::default_instance_->InitAsDefaultInstance();
  RefineAttr::default_instance_->InitAsDefaultInstance();
  ClientReqMeterialSyn::default_instance_->InitAsDefaultInstance();
  RetMeterialSyn::default_instance_->InitAsDefaultInstance();
  ClientReqUpgradeStone::default_instance_->InitAsDefaultInstance();
  RetUpgradeStone::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CharLogin_2fSmith_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CharLogin_2fSmith_2eproto {
  StaticDescriptorInitializer_CharLogin_2fSmith_2eproto() {
    protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  }
} static_descriptor_initializer_CharLogin_2fSmith_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReqGMAddDelStone::kCharidFieldNumber;
const int ReqGMAddDelStone::kStoneFieldNumber;
#endif  // !_MSC_VER

ReqGMAddDelStone::ReqGMAddDelStone()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqGMAddDelStone::InitAsDefaultInstance() {
  stone_ = const_cast< ::EquipSmith::AddDelStone*>(&::EquipSmith::AddDelStone::default_instance());
}

ReqGMAddDelStone::ReqGMAddDelStone(const ReqGMAddDelStone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqGMAddDelStone::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  stone_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGMAddDelStone::~ReqGMAddDelStone() {
  SharedDtor();
}

void ReqGMAddDelStone::SharedDtor() {
  if (this != default_instance_) {
    delete stone_;
  }
}

void ReqGMAddDelStone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGMAddDelStone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGMAddDelStone_descriptor_;
}

const ReqGMAddDelStone& ReqGMAddDelStone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ReqGMAddDelStone* ReqGMAddDelStone::default_instance_ = NULL;

ReqGMAddDelStone* ReqGMAddDelStone::New() const {
  return new ReqGMAddDelStone;
}

void ReqGMAddDelStone::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    if (has_stone()) {
      if (stone_ != NULL) stone_->::EquipSmith::AddDelStone::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGMAddDelStone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stone;
        break;
      }

      // optional .EquipSmith.AddDelStone stone = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stone()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqGMAddDelStone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // optional .EquipSmith.AddDelStone stone = 2;
  if (has_stone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stone(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqGMAddDelStone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // optional .EquipSmith.AddDelStone stone = 2;
  if (has_stone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->stone(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqGMAddDelStone::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional .EquipSmith.AddDelStone stone = 2;
    if (has_stone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stone());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGMAddDelStone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGMAddDelStone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGMAddDelStone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGMAddDelStone::MergeFrom(const ReqGMAddDelStone& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_stone()) {
      mutable_stone()->::EquipSmith::AddDelStone::MergeFrom(from.stone());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGMAddDelStone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGMAddDelStone::CopyFrom(const ReqGMAddDelStone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGMAddDelStone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_stone()) {
    if (!this->stone().IsInitialized()) return false;
  }
  return true;
}

void ReqGMAddDelStone::Swap(ReqGMAddDelStone* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(stone_, other->stone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGMAddDelStone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGMAddDelStone_descriptor_;
  metadata.reflection = ReqGMAddDelStone_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddDelStone::kTypeFieldNumber;
const int AddDelStone::kEquipFieldNumber;
const int AddDelStone::kStoneposFieldNumber;
#endif  // !_MSC_VER

AddDelStone::AddDelStone()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AddDelStone::InitAsDefaultInstance() {
  equip_ = const_cast< ::EquipSmith::ItemPos*>(&::EquipSmith::ItemPos::default_instance());
}

AddDelStone::AddDelStone(const AddDelStone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AddDelStone::SharedCtor() {
  _cached_size_ = 0;
  type_ = false;
  equip_ = NULL;
  stonepos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddDelStone::~AddDelStone() {
  SharedDtor();
}

void AddDelStone::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
  }
}

void AddDelStone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDelStone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddDelStone_descriptor_;
}

const AddDelStone& AddDelStone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

AddDelStone* AddDelStone::default_instance_ = NULL;

AddDelStone* AddDelStone::New() const {
  return new AddDelStone;
}

void AddDelStone::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = false;
    if (has_equip()) {
      if (equip_ != NULL) equip_->::EquipSmith::ItemPos::Clear();
    }
    stonepos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddDelStone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equip;
        break;
      }

      // optional .EquipSmith.ItemPos equip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stonepos;
        break;
      }

      // optional int32 stonepos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stonepos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stonepos_)));
          set_has_stonepos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AddDelStone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->type(), output);
  }

  // optional .EquipSmith.ItemPos equip = 2;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equip(), output);
  }

  // optional int32 stonepos = 3;
  if (has_stonepos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stonepos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AddDelStone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->type(), target);
  }

  // optional .EquipSmith.ItemPos equip = 2;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equip(), target);
  }

  // optional int32 stonepos = 3;
  if (has_stonepos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stonepos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AddDelStone::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool type = 1;
    if (has_type()) {
      total_size += 1 + 1;
    }

    // optional .EquipSmith.ItemPos equip = 2;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

    // optional int32 stonepos = 3;
    if (has_stonepos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stonepos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDelStone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddDelStone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddDelStone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddDelStone::MergeFrom(const AddDelStone& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_equip()) {
      mutable_equip()->::EquipSmith::ItemPos::MergeFrom(from.equip());
    }
    if (from.has_stonepos()) {
      set_stonepos(from.stonepos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddDelStone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDelStone::CopyFrom(const AddDelStone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDelStone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_equip()) {
    if (!this->equip().IsInitialized()) return false;
  }
  return true;
}

void AddDelStone::Swap(AddDelStone* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(equip_, other->equip_);
    std::swap(stonepos_, other->stonepos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddDelStone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddDelStone_descriptor_;
  metadata.reflection = AddDelStone_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqGMStoneCreate::kCharidFieldNumber;
const int ReqGMStoneCreate::kStoneFieldNumber;
#endif  // !_MSC_VER

ReqGMStoneCreate::ReqGMStoneCreate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqGMStoneCreate::InitAsDefaultInstance() {
  stone_ = const_cast< ::EquipSmith::StoneCreate*>(&::EquipSmith::StoneCreate::default_instance());
}

ReqGMStoneCreate::ReqGMStoneCreate(const ReqGMStoneCreate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqGMStoneCreate::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  stone_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGMStoneCreate::~ReqGMStoneCreate() {
  SharedDtor();
}

void ReqGMStoneCreate::SharedDtor() {
  if (this != default_instance_) {
    delete stone_;
  }
}

void ReqGMStoneCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGMStoneCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGMStoneCreate_descriptor_;
}

const ReqGMStoneCreate& ReqGMStoneCreate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ReqGMStoneCreate* ReqGMStoneCreate::default_instance_ = NULL;

ReqGMStoneCreate* ReqGMStoneCreate::New() const {
  return new ReqGMStoneCreate;
}

void ReqGMStoneCreate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    if (has_stone()) {
      if (stone_ != NULL) stone_->::EquipSmith::StoneCreate::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGMStoneCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stone;
        break;
      }

      // optional .EquipSmith.StoneCreate stone = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stone()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqGMStoneCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // optional .EquipSmith.StoneCreate stone = 2;
  if (has_stone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stone(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqGMStoneCreate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // optional .EquipSmith.StoneCreate stone = 2;
  if (has_stone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->stone(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqGMStoneCreate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional .EquipSmith.StoneCreate stone = 2;
    if (has_stone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stone());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGMStoneCreate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGMStoneCreate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGMStoneCreate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGMStoneCreate::MergeFrom(const ReqGMStoneCreate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_stone()) {
      mutable_stone()->::EquipSmith::StoneCreate::MergeFrom(from.stone());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGMStoneCreate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGMStoneCreate::CopyFrom(const ReqGMStoneCreate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGMStoneCreate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_stone()) {
    if (!this->stone().IsInitialized()) return false;
  }
  return true;
}

void ReqGMStoneCreate::Swap(ReqGMStoneCreate* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(stone_, other->stone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGMStoneCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGMStoneCreate_descriptor_;
  metadata.reflection = ReqGMStoneCreate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqInlayStoneInfo::ReqInlayStoneInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqInlayStoneInfo::InitAsDefaultInstance() {
}

ReqInlayStoneInfo::ReqInlayStoneInfo(const ReqInlayStoneInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqInlayStoneInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqInlayStoneInfo::~ReqInlayStoneInfo() {
  SharedDtor();
}

void ReqInlayStoneInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqInlayStoneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqInlayStoneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqInlayStoneInfo_descriptor_;
}

const ReqInlayStoneInfo& ReqInlayStoneInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ReqInlayStoneInfo* ReqInlayStoneInfo::default_instance_ = NULL;

ReqInlayStoneInfo* ReqInlayStoneInfo::New() const {
  return new ReqInlayStoneInfo;
}

void ReqInlayStoneInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqInlayStoneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ReqInlayStoneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqInlayStoneInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqInlayStoneInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqInlayStoneInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqInlayStoneInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqInlayStoneInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqInlayStoneInfo::MergeFrom(const ReqInlayStoneInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqInlayStoneInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqInlayStoneInfo::CopyFrom(const ReqInlayStoneInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqInlayStoneInfo::IsInitialized() const {

  return true;
}

void ReqInlayStoneInfo::Swap(ReqInlayStoneInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqInlayStoneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqInlayStoneInfo_descriptor_;
  metadata.reflection = ReqInlayStoneInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetInlayStoneInfo::kInlayStoneInfoFieldNumber;
#endif  // !_MSC_VER

RetInlayStoneInfo::RetInlayStoneInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetInlayStoneInfo::InitAsDefaultInstance() {
}

RetInlayStoneInfo::RetInlayStoneInfo(const RetInlayStoneInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetInlayStoneInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetInlayStoneInfo::~RetInlayStoneInfo() {
  SharedDtor();
}

void RetInlayStoneInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetInlayStoneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetInlayStoneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetInlayStoneInfo_descriptor_;
}

const RetInlayStoneInfo& RetInlayStoneInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

RetInlayStoneInfo* RetInlayStoneInfo::default_instance_ = NULL;

RetInlayStoneInfo* RetInlayStoneInfo::New() const {
  return new RetInlayStoneInfo;
}

void RetInlayStoneInfo::Clear() {
  inlaystoneinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetInlayStoneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .EquipSmith.InlayStoneInfo inlayStoneInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inlayStoneInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inlaystoneinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_inlayStoneInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetInlayStoneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .EquipSmith.InlayStoneInfo inlayStoneInfo = 1;
  for (int i = 0; i < this->inlaystoneinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inlaystoneinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetInlayStoneInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .EquipSmith.InlayStoneInfo inlayStoneInfo = 1;
  for (int i = 0; i < this->inlaystoneinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->inlaystoneinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetInlayStoneInfo::ByteSize() const {
  int total_size = 0;

  // repeated .EquipSmith.InlayStoneInfo inlayStoneInfo = 1;
  total_size += 1 * this->inlaystoneinfo_size();
  for (int i = 0; i < this->inlaystoneinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inlaystoneinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetInlayStoneInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetInlayStoneInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetInlayStoneInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetInlayStoneInfo::MergeFrom(const RetInlayStoneInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  inlaystoneinfo_.MergeFrom(from.inlaystoneinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetInlayStoneInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetInlayStoneInfo::CopyFrom(const RetInlayStoneInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetInlayStoneInfo::IsInitialized() const {

  for (int i = 0; i < inlaystoneinfo_size(); i++) {
    if (!this->inlaystoneinfo(i).IsInitialized()) return false;
  }
  return true;
}

void RetInlayStoneInfo::Swap(RetInlayStoneInfo* other) {
  if (other != this) {
    inlaystoneinfo_.Swap(&other->inlaystoneinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetInlayStoneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetInlayStoneInfo_descriptor_;
  metadata.reflection = RetInlayStoneInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InlayStoneInfo::kPosFieldNumber;
const int InlayStoneInfo::kStonePosFieldNumber;
const int InlayStoneInfo::kStoneIDFieldNumber;
#endif  // !_MSC_VER

InlayStoneInfo::InlayStoneInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InlayStoneInfo::InitAsDefaultInstance() {
}

InlayStoneInfo::InlayStoneInfo(const InlayStoneInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InlayStoneInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InlayStoneInfo::~InlayStoneInfo() {
  SharedDtor();
}

void InlayStoneInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InlayStoneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InlayStoneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InlayStoneInfo_descriptor_;
}

const InlayStoneInfo& InlayStoneInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

InlayStoneInfo* InlayStoneInfo::default_instance_ = NULL;

InlayStoneInfo* InlayStoneInfo::New() const {
  return new InlayStoneInfo;
}

void InlayStoneInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
  }
  stonepos_.Clear();
  stoneid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InlayStoneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stonePos;
        break;
      }

      // repeated int32 stonePos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stonePos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_stonepos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stonepos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stonePos;
        if (input->ExpectTag(24)) goto parse_stoneID;
        break;
      }

      // repeated int32 stoneID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stoneID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_stoneid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stoneid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stoneID;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InlayStoneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // repeated int32 stonePos = 2;
  for (int i = 0; i < this->stonepos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->stonepos(i), output);
  }

  // repeated int32 stoneID = 3;
  for (int i = 0; i < this->stoneid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->stoneid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InlayStoneInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // repeated int32 stonePos = 2;
  for (int i = 0; i < this->stonepos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->stonepos(i), target);
  }

  // repeated int32 stoneID = 3;
  for (int i = 0; i < this->stoneid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->stoneid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InlayStoneInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  // repeated int32 stonePos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->stonepos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stonepos(i));
    }
    total_size += 1 * this->stonepos_size() + data_size;
  }

  // repeated int32 stoneID = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->stoneid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stoneid(i));
    }
    total_size += 1 * this->stoneid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InlayStoneInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InlayStoneInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InlayStoneInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InlayStoneInfo::MergeFrom(const InlayStoneInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  stonepos_.MergeFrom(from.stonepos_);
  stoneid_.MergeFrom(from.stoneid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InlayStoneInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InlayStoneInfo::CopyFrom(const InlayStoneInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InlayStoneInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InlayStoneInfo::Swap(InlayStoneInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    stonepos_.Swap(&other->stonepos_);
    stoneid_.Swap(&other->stoneid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InlayStoneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InlayStoneInfo_descriptor_;
  metadata.reflection = InlayStoneInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StoneCreate::kStoneidFieldNumber;
const int StoneCreate::kCountFieldNumber;
const int StoneCreate::kFlagFieldNumber;
#endif  // !_MSC_VER

StoneCreate::StoneCreate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoneCreate::InitAsDefaultInstance() {
}

StoneCreate::StoneCreate(const StoneCreate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoneCreate::SharedCtor() {
  _cached_size_ = 0;
  stoneid_ = 0;
  count_ = 0;
  flag_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoneCreate::~StoneCreate() {
  SharedDtor();
}

void StoneCreate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoneCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoneCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoneCreate_descriptor_;
}

const StoneCreate& StoneCreate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

StoneCreate* StoneCreate::default_instance_ = NULL;

StoneCreate* StoneCreate::New() const {
  return new StoneCreate;
}

void StoneCreate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stoneid_ = 0;
    count_ = 0;
    flag_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoneCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stoneid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stoneid_)));
          set_has_stoneid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_flag;
        break;
      }

      // required bool flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoneCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 stoneid = 1;
  if (has_stoneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stoneid(), output);
  }

  // required int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // required bool flag = 3;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoneCreate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 stoneid = 1;
  if (has_stoneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stoneid(), target);
  }

  // required int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // required bool flag = 3;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoneCreate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stoneid = 1;
    if (has_stoneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stoneid());
    }

    // required int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // required bool flag = 3;
    if (has_flag()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoneCreate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoneCreate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoneCreate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoneCreate::MergeFrom(const StoneCreate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stoneid()) {
      set_stoneid(from.stoneid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoneCreate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoneCreate::CopyFrom(const StoneCreate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoneCreate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void StoneCreate::Swap(StoneCreate* other) {
  if (other != this) {
    std::swap(stoneid_, other->stoneid_);
    std::swap(count_, other->count_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoneCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoneCreate_descriptor_;
  metadata.reflection = StoneCreate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SectorItemCount::kPosFieldNumber;
const int SectorItemCount::kCountFieldNumber;
#endif  // !_MSC_VER

SectorItemCount::SectorItemCount()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SectorItemCount::InitAsDefaultInstance() {
}

SectorItemCount::SectorItemCount(const SectorItemCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SectorItemCount::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SectorItemCount::~SectorItemCount() {
  SharedDtor();
}

void SectorItemCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SectorItemCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SectorItemCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SectorItemCount_descriptor_;
}

const SectorItemCount& SectorItemCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

SectorItemCount* SectorItemCount::default_instance_ = NULL;

SectorItemCount* SectorItemCount::New() const {
  return new SectorItemCount;
}

void SectorItemCount::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SectorItemCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SectorItemCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SectorItemCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SectorItemCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SectorItemCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SectorItemCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SectorItemCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SectorItemCount::MergeFrom(const SectorItemCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SectorItemCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SectorItemCount::CopyFrom(const SectorItemCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SectorItemCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SectorItemCount::Swap(SectorItemCount* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SectorItemCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SectorItemCount_descriptor_;
  metadata.reflection = SectorItemCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemPos::kContainerFieldNumber;
const int ItemPos::kPosFieldNumber;
#endif  // !_MSC_VER

ItemPos::ItemPos()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemPos::InitAsDefaultInstance() {
}

ItemPos::ItemPos(const ItemPos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemPos::SharedCtor() {
  _cached_size_ = 0;
  container_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemPos::~ItemPos() {
  SharedDtor();
}

void ItemPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemPos_descriptor_;
}

const ItemPos& ItemPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ItemPos* ItemPos::default_instance_ = NULL;

ItemPos* ItemPos::New() const {
  return new ItemPos;
}

void ItemPos::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    container_ = 0;
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 container = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 container = 1;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->container(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 container = 1;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->container(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemPos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 container = 1;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemPos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemPos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemPos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemPos::MergeFrom(const ItemPos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemPos::CopyFrom(const ItemPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemPos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ItemPos::Swap(ItemPos* other) {
  if (other != this) {
    std::swap(container_, other->container_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemPos_descriptor_;
  metadata.reflection = ItemPos_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqRefineEquip::kContainerFieldNumber;
const int ClientReqRefineEquip::kEquipidFieldNumber;
const int ClientReqRefineEquip::kTopLvPosFieldNumber;
const int ClientReqRefineEquip::kIsMustTopLvFieldNumber;
const int ClientReqRefineEquip::kIsAutoBuyFieldNumber;
#endif  // !_MSC_VER

ClientReqRefineEquip::ClientReqRefineEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqRefineEquip::InitAsDefaultInstance() {
}

ClientReqRefineEquip::ClientReqRefineEquip(const ClientReqRefineEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqRefineEquip::SharedCtor() {
  _cached_size_ = 0;
  container_ = 0;
  equipid_ = 0;
  ismusttoplv_ = false;
  isautobuy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqRefineEquip::~ClientReqRefineEquip() {
  SharedDtor();
}

void ClientReqRefineEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqRefineEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqRefineEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqRefineEquip_descriptor_;
}

const ClientReqRefineEquip& ClientReqRefineEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClientReqRefineEquip* ClientReqRefineEquip::default_instance_ = NULL;

ClientReqRefineEquip* ClientReqRefineEquip::New() const {
  return new ClientReqRefineEquip;
}

void ClientReqRefineEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    container_ = 0;
    equipid_ = 0;
    ismusttoplv_ = false;
    isautobuy_ = false;
  }
  toplvpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqRefineEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 container = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equipid;
        break;
      }

      // required int32 equipid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_topLvPos;
        break;
      }

      // repeated int32 topLvPos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_topLvPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_toplvpos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_toplvpos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_topLvPos;
        if (input->ExpectTag(32)) goto parse_isMustTopLv;
        break;
      }

      // optional bool isMustTopLv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isMustTopLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismusttoplv_)));
          set_has_ismusttoplv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_isAutoBuy;
        break;
      }

      // optional bool isAutoBuy = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isAutoBuy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isautobuy_)));
          set_has_isautobuy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqRefineEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 container = 1;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->container(), output);
  }

  // required int32 equipid = 2;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equipid(), output);
  }

  // repeated int32 topLvPos = 3;
  for (int i = 0; i < this->toplvpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->toplvpos(i), output);
  }

  // optional bool isMustTopLv = 4;
  if (has_ismusttoplv()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ismusttoplv(), output);
  }

  // optional bool isAutoBuy = 5;
  if (has_isautobuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isautobuy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqRefineEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 container = 1;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->container(), target);
  }

  // required int32 equipid = 2;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equipid(), target);
  }

  // repeated int32 topLvPos = 3;
  for (int i = 0; i < this->toplvpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->toplvpos(i), target);
  }

  // optional bool isMustTopLv = 4;
  if (has_ismusttoplv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ismusttoplv(), target);
  }

  // optional bool isAutoBuy = 5;
  if (has_isautobuy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isautobuy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqRefineEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 container = 1;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equipid = 2;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

    // optional bool isMustTopLv = 4;
    if (has_ismusttoplv()) {
      total_size += 1 + 1;
    }

    // optional bool isAutoBuy = 5;
    if (has_isautobuy()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 topLvPos = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->toplvpos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->toplvpos(i));
    }
    total_size += 1 * this->toplvpos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqRefineEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqRefineEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqRefineEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqRefineEquip::MergeFrom(const ClientReqRefineEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  toplvpos_.MergeFrom(from.toplvpos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_ismusttoplv()) {
      set_ismusttoplv(from.ismusttoplv());
    }
    if (from.has_isautobuy()) {
      set_isautobuy(from.isautobuy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqRefineEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqRefineEquip::CopyFrom(const ClientReqRefineEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqRefineEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ClientReqRefineEquip::Swap(ClientReqRefineEquip* other) {
  if (other != this) {
    std::swap(container_, other->container_);
    std::swap(equipid_, other->equipid_);
    toplvpos_.Swap(&other->toplvpos_);
    std::swap(ismusttoplv_, other->ismusttoplv_);
    std::swap(isautobuy_, other->isautobuy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqRefineEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqRefineEquip_descriptor_;
  metadata.reflection = ClientReqRefineEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GTtoGMRefineEquip::kCharidFieldNumber;
const int GTtoGMRefineEquip::kContainerFieldNumber;
const int GTtoGMRefineEquip::kEquipidFieldNumber;
const int GTtoGMRefineEquip::kTopLvPosFieldNumber;
const int GTtoGMRefineEquip::kIsMustTopLvFieldNumber;
const int GTtoGMRefineEquip::kIsAutoBuyFieldNumber;
#endif  // !_MSC_VER

GTtoGMRefineEquip::GTtoGMRefineEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GTtoGMRefineEquip::InitAsDefaultInstance() {
}

GTtoGMRefineEquip::GTtoGMRefineEquip(const GTtoGMRefineEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GTtoGMRefineEquip::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  container_ = 0;
  equipid_ = 0;
  ismusttoplv_ = false;
  isautobuy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GTtoGMRefineEquip::~GTtoGMRefineEquip() {
  SharedDtor();
}

void GTtoGMRefineEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GTtoGMRefineEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GTtoGMRefineEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GTtoGMRefineEquip_descriptor_;
}

const GTtoGMRefineEquip& GTtoGMRefineEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

GTtoGMRefineEquip* GTtoGMRefineEquip::default_instance_ = NULL;

GTtoGMRefineEquip* GTtoGMRefineEquip::New() const {
  return new GTtoGMRefineEquip;
}

void GTtoGMRefineEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    container_ = 0;
    equipid_ = 0;
    ismusttoplv_ = false;
    isautobuy_ = false;
  }
  toplvpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GTtoGMRefineEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_container;
        break;
      }

      // required int32 container = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_container:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_equipid;
        break;
      }

      // required int32 equipid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_topLvPos;
        break;
      }

      // repeated int32 topLvPos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_topLvPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_toplvpos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_toplvpos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_topLvPos;
        if (input->ExpectTag(40)) goto parse_isMustTopLv;
        break;
      }

      // optional bool isMustTopLv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isMustTopLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismusttoplv_)));
          set_has_ismusttoplv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isAutoBuy;
        break;
      }

      // optional bool isAutoBuy = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isAutoBuy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isautobuy_)));
          set_has_isautobuy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GTtoGMRefineEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required int32 container = 2;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->container(), output);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equipid(), output);
  }

  // repeated int32 topLvPos = 4;
  for (int i = 0; i < this->toplvpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->toplvpos(i), output);
  }

  // optional bool isMustTopLv = 5;
  if (has_ismusttoplv()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ismusttoplv(), output);
  }

  // optional bool isAutoBuy = 6;
  if (has_isautobuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isautobuy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GTtoGMRefineEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required int32 container = 2;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->container(), target);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equipid(), target);
  }

  // repeated int32 topLvPos = 4;
  for (int i = 0; i < this->toplvpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->toplvpos(i), target);
  }

  // optional bool isMustTopLv = 5;
  if (has_ismusttoplv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ismusttoplv(), target);
  }

  // optional bool isAutoBuy = 6;
  if (has_isautobuy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isautobuy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GTtoGMRefineEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 container = 2;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equipid = 3;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

    // optional bool isMustTopLv = 5;
    if (has_ismusttoplv()) {
      total_size += 1 + 1;
    }

    // optional bool isAutoBuy = 6;
    if (has_isautobuy()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 topLvPos = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->toplvpos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->toplvpos(i));
    }
    total_size += 1 * this->toplvpos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GTtoGMRefineEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GTtoGMRefineEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GTtoGMRefineEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GTtoGMRefineEquip::MergeFrom(const GTtoGMRefineEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  toplvpos_.MergeFrom(from.toplvpos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_ismusttoplv()) {
      set_ismusttoplv(from.ismusttoplv());
    }
    if (from.has_isautobuy()) {
      set_isautobuy(from.isautobuy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GTtoGMRefineEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GTtoGMRefineEquip::CopyFrom(const GTtoGMRefineEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GTtoGMRefineEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GTtoGMRefineEquip::Swap(GTtoGMRefineEquip* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(container_, other->container_);
    std::swap(equipid_, other->equipid_);
    toplvpos_.Swap(&other->toplvpos_);
    std::swap(ismusttoplv_, other->ismusttoplv_);
    std::swap(isautobuy_, other->isautobuy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GTtoGMRefineEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GTtoGMRefineEquip_descriptor_;
  metadata.reflection = GTtoGMRefineEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnNewAttr::kStatusFieldNumber;
const int ReturnNewAttr::kContainerFieldNumber;
const int ReturnNewAttr::kEquipidFieldNumber;
const int ReturnNewAttr::kAttrInfoFieldNumber;
#endif  // !_MSC_VER

ReturnNewAttr::ReturnNewAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReturnNewAttr::InitAsDefaultInstance() {
}

ReturnNewAttr::ReturnNewAttr(const ReturnNewAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReturnNewAttr::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  container_ = 0;
  equipid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnNewAttr::~ReturnNewAttr() {
  SharedDtor();
}

void ReturnNewAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReturnNewAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnNewAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnNewAttr_descriptor_;
}

const ReturnNewAttr& ReturnNewAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ReturnNewAttr* ReturnNewAttr::default_instance_ = NULL;

ReturnNewAttr* ReturnNewAttr::New() const {
  return new ReturnNewAttr;
}

void ReturnNewAttr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    container_ = 0;
    equipid_ = 0;
  }
  attrinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnNewAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_container;
        break;
      }

      // required int32 container = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_container:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_equipid;
        break;
      }

      // required int32 equipid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attrInfo;
        break;
      }

      // repeated .EquipSmith.RefineAttr attrInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attrInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attrinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attrInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReturnNewAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // required int32 container = 2;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->container(), output);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equipid(), output);
  }

  // repeated .EquipSmith.RefineAttr attrInfo = 4;
  for (int i = 0; i < this->attrinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attrinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReturnNewAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // required int32 container = 2;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->container(), target);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equipid(), target);
  }

  // repeated .EquipSmith.RefineAttr attrInfo = 4;
  for (int i = 0; i < this->attrinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attrinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReturnNewAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // required int32 container = 2;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equipid = 3;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

  }
  // repeated .EquipSmith.RefineAttr attrInfo = 4;
  total_size += 1 * this->attrinfo_size();
  for (int i = 0; i < this->attrinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attrinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnNewAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnNewAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnNewAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnNewAttr::MergeFrom(const ReturnNewAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  attrinfo_.MergeFrom(from.attrinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnNewAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnNewAttr::CopyFrom(const ReturnNewAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnNewAttr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  for (int i = 0; i < attrinfo_size(); i++) {
    if (!this->attrinfo(i).IsInitialized()) return false;
  }
  return true;
}

void ReturnNewAttr::Swap(ReturnNewAttr* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(container_, other->container_);
    std::swap(equipid_, other->equipid_);
    attrinfo_.Swap(&other->attrinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnNewAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnNewAttr_descriptor_;
  metadata.reflection = ReturnNewAttr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClintReqAffirmRefine::kContainerFieldNumber;
const int ClintReqAffirmRefine::kEquipidFieldNumber;
const int ClintReqAffirmRefine::kLockPosFieldNumber;
const int ClintReqAffirmRefine::kIsAutoBuyFieldNumber;
#endif  // !_MSC_VER

ClintReqAffirmRefine::ClintReqAffirmRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClintReqAffirmRefine::InitAsDefaultInstance() {
}

ClintReqAffirmRefine::ClintReqAffirmRefine(const ClintReqAffirmRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClintReqAffirmRefine::SharedCtor() {
  _cached_size_ = 0;
  container_ = 0;
  equipid_ = 0;
  isautobuy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClintReqAffirmRefine::~ClintReqAffirmRefine() {
  SharedDtor();
}

void ClintReqAffirmRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClintReqAffirmRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClintReqAffirmRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClintReqAffirmRefine_descriptor_;
}

const ClintReqAffirmRefine& ClintReqAffirmRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClintReqAffirmRefine* ClintReqAffirmRefine::default_instance_ = NULL;

ClintReqAffirmRefine* ClintReqAffirmRefine::New() const {
  return new ClintReqAffirmRefine;
}

void ClintReqAffirmRefine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    container_ = 0;
    equipid_ = 0;
    isautobuy_ = false;
  }
  lockpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClintReqAffirmRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 container = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equipid;
        break;
      }

      // required int32 equipid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lockPos;
        break;
      }

      // repeated uint32 lockPos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lockPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_lockpos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lockpos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lockPos;
        if (input->ExpectTag(32)) goto parse_isAutoBuy;
        break;
      }

      // optional bool isAutoBuy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isAutoBuy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isautobuy_)));
          set_has_isautobuy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClintReqAffirmRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 container = 1;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->container(), output);
  }

  // required int32 equipid = 2;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equipid(), output);
  }

  // repeated uint32 lockPos = 3;
  for (int i = 0; i < this->lockpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->lockpos(i), output);
  }

  // optional bool isAutoBuy = 4;
  if (has_isautobuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isautobuy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClintReqAffirmRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 container = 1;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->container(), target);
  }

  // required int32 equipid = 2;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equipid(), target);
  }

  // repeated uint32 lockPos = 3;
  for (int i = 0; i < this->lockpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->lockpos(i), target);
  }

  // optional bool isAutoBuy = 4;
  if (has_isautobuy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isautobuy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClintReqAffirmRefine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 container = 1;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equipid = 2;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

    // optional bool isAutoBuy = 4;
    if (has_isautobuy()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 lockPos = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->lockpos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lockpos(i));
    }
    total_size += 1 * this->lockpos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClintReqAffirmRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClintReqAffirmRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClintReqAffirmRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClintReqAffirmRefine::MergeFrom(const ClintReqAffirmRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  lockpos_.MergeFrom(from.lockpos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_isautobuy()) {
      set_isautobuy(from.isautobuy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClintReqAffirmRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClintReqAffirmRefine::CopyFrom(const ClintReqAffirmRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClintReqAffirmRefine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ClintReqAffirmRefine::Swap(ClintReqAffirmRefine* other) {
  if (other != this) {
    std::swap(container_, other->container_);
    std::swap(equipid_, other->equipid_);
    lockpos_.Swap(&other->lockpos_);
    std::swap(isautobuy_, other->isautobuy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClintReqAffirmRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClintReqAffirmRefine_descriptor_;
  metadata.reflection = ClintReqAffirmRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GTtoGMAffirmRefine::kCharidFieldNumber;
const int GTtoGMAffirmRefine::kContainerFieldNumber;
const int GTtoGMAffirmRefine::kEquipidFieldNumber;
const int GTtoGMAffirmRefine::kLockPosFieldNumber;
const int GTtoGMAffirmRefine::kIsAutoBuyFieldNumber;
#endif  // !_MSC_VER

GTtoGMAffirmRefine::GTtoGMAffirmRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GTtoGMAffirmRefine::InitAsDefaultInstance() {
}

GTtoGMAffirmRefine::GTtoGMAffirmRefine(const GTtoGMAffirmRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GTtoGMAffirmRefine::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  container_ = 0;
  equipid_ = 0;
  isautobuy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GTtoGMAffirmRefine::~GTtoGMAffirmRefine() {
  SharedDtor();
}

void GTtoGMAffirmRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GTtoGMAffirmRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GTtoGMAffirmRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GTtoGMAffirmRefine_descriptor_;
}

const GTtoGMAffirmRefine& GTtoGMAffirmRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

GTtoGMAffirmRefine* GTtoGMAffirmRefine::default_instance_ = NULL;

GTtoGMAffirmRefine* GTtoGMAffirmRefine::New() const {
  return new GTtoGMAffirmRefine;
}

void GTtoGMAffirmRefine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    container_ = 0;
    equipid_ = 0;
    isautobuy_ = false;
  }
  lockpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GTtoGMAffirmRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_container;
        break;
      }

      // required int32 container = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_container:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_equipid;
        break;
      }

      // required int32 equipid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lockPos;
        break;
      }

      // repeated uint32 lockPos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lockPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_lockpos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lockpos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lockPos;
        if (input->ExpectTag(40)) goto parse_isAutoBuy;
        break;
      }

      // optional bool isAutoBuy = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isAutoBuy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isautobuy_)));
          set_has_isautobuy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GTtoGMAffirmRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required int32 container = 2;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->container(), output);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equipid(), output);
  }

  // repeated uint32 lockPos = 4;
  for (int i = 0; i < this->lockpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->lockpos(i), output);
  }

  // optional bool isAutoBuy = 5;
  if (has_isautobuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isautobuy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GTtoGMAffirmRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required int32 container = 2;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->container(), target);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equipid(), target);
  }

  // repeated uint32 lockPos = 4;
  for (int i = 0; i < this->lockpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->lockpos(i), target);
  }

  // optional bool isAutoBuy = 5;
  if (has_isautobuy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isautobuy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GTtoGMAffirmRefine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 container = 2;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equipid = 3;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

    // optional bool isAutoBuy = 5;
    if (has_isautobuy()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 lockPos = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->lockpos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->lockpos(i));
    }
    total_size += 1 * this->lockpos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GTtoGMAffirmRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GTtoGMAffirmRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GTtoGMAffirmRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GTtoGMAffirmRefine::MergeFrom(const GTtoGMAffirmRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  lockpos_.MergeFrom(from.lockpos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_isautobuy()) {
      set_isautobuy(from.isautobuy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GTtoGMAffirmRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GTtoGMAffirmRefine::CopyFrom(const GTtoGMAffirmRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GTtoGMAffirmRefine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GTtoGMAffirmRefine::Swap(GTtoGMAffirmRefine* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(container_, other->container_);
    std::swap(equipid_, other->equipid_);
    lockpos_.Swap(&other->lockpos_);
    std::swap(isautobuy_, other->isautobuy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GTtoGMAffirmRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GTtoGMAffirmRefine_descriptor_;
  metadata.reflection = GTtoGMAffirmRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnAffirmRefine::kStatusFieldNumber;
const int ReturnAffirmRefine::kContainerFieldNumber;
const int ReturnAffirmRefine::kEquipidFieldNumber;
#endif  // !_MSC_VER

ReturnAffirmRefine::ReturnAffirmRefine()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReturnAffirmRefine::InitAsDefaultInstance() {
}

ReturnAffirmRefine::ReturnAffirmRefine(const ReturnAffirmRefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReturnAffirmRefine::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  container_ = 0;
  equipid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnAffirmRefine::~ReturnAffirmRefine() {
  SharedDtor();
}

void ReturnAffirmRefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReturnAffirmRefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnAffirmRefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnAffirmRefine_descriptor_;
}

const ReturnAffirmRefine& ReturnAffirmRefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ReturnAffirmRefine* ReturnAffirmRefine::default_instance_ = NULL;

ReturnAffirmRefine* ReturnAffirmRefine::New() const {
  return new ReturnAffirmRefine;
}

void ReturnAffirmRefine::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    container_ = 0;
    equipid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnAffirmRefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_container;
        break;
      }

      // required int32 container = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_container:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_equipid;
        break;
      }

      // required int32 equipid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReturnAffirmRefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // required int32 container = 2;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->container(), output);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equipid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReturnAffirmRefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // required int32 container = 2;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->container(), target);
  }

  // required int32 equipid = 3;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equipid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReturnAffirmRefine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // required int32 container = 2;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equipid = 3;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnAffirmRefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnAffirmRefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnAffirmRefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnAffirmRefine::MergeFrom(const ReturnAffirmRefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnAffirmRefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnAffirmRefine::CopyFrom(const ReturnAffirmRefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnAffirmRefine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ReturnAffirmRefine::Swap(ReturnAffirmRefine* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(container_, other->container_);
    std::swap(equipid_, other->equipid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnAffirmRefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnAffirmRefine_descriptor_;
  metadata.reflection = ReturnAffirmRefine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqStrengthEquip::kContainerFieldNumber;
const int ClientReqStrengthEquip::kEquipposFieldNumber;
const int ClientReqStrengthEquip::kBmeterialFieldNumber;
const int ClientReqStrengthEquip::kBGoldenFieldNumber;
const int ClientReqStrengthEquip::kOneKeyStrenghtFieldNumber;
#endif  // !_MSC_VER

ClientReqStrengthEquip::ClientReqStrengthEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqStrengthEquip::InitAsDefaultInstance() {
}

ClientReqStrengthEquip::ClientReqStrengthEquip(const ClientReqStrengthEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqStrengthEquip::SharedCtor() {
  _cached_size_ = 0;
  container_ = 0;
  equippos_ = 0;
  bmeterial_ = false;
  bgolden_ = false;
  onekeystrenght_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqStrengthEquip::~ClientReqStrengthEquip() {
  SharedDtor();
}

void ClientReqStrengthEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqStrengthEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqStrengthEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqStrengthEquip_descriptor_;
}

const ClientReqStrengthEquip& ClientReqStrengthEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClientReqStrengthEquip* ClientReqStrengthEquip::default_instance_ = NULL;

ClientReqStrengthEquip* ClientReqStrengthEquip::New() const {
  return new ClientReqStrengthEquip;
}

void ClientReqStrengthEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    container_ = 0;
    equippos_ = 0;
    bmeterial_ = false;
    bgolden_ = false;
    onekeystrenght_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqStrengthEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 container = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equippos;
        break;
      }

      // required int32 equippos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equippos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equippos_)));
          set_has_equippos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bmeterial;
        break;
      }

      // required bool bmeterial = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bmeterial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bmeterial_)));
          set_has_bmeterial();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bGolden;
        break;
      }

      // required bool bGolden = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgolden_)));
          set_has_bgolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_oneKeyStrenght;
        break;
      }

      // optional int32 oneKeyStrenght = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oneKeyStrenght:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &onekeystrenght_)));
          set_has_onekeystrenght();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqStrengthEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 container = 1;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->container(), output);
  }

  // required int32 equippos = 2;
  if (has_equippos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equippos(), output);
  }

  // required bool bmeterial = 3;
  if (has_bmeterial()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bmeterial(), output);
  }

  // required bool bGolden = 4;
  if (has_bgolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bgolden(), output);
  }

  // optional int32 oneKeyStrenght = 5;
  if (has_onekeystrenght()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->onekeystrenght(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqStrengthEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 container = 1;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->container(), target);
  }

  // required int32 equippos = 2;
  if (has_equippos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equippos(), target);
  }

  // required bool bmeterial = 3;
  if (has_bmeterial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bmeterial(), target);
  }

  // required bool bGolden = 4;
  if (has_bgolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bgolden(), target);
  }

  // optional int32 oneKeyStrenght = 5;
  if (has_onekeystrenght()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->onekeystrenght(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqStrengthEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 container = 1;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equippos = 2;
    if (has_equippos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equippos());
    }

    // required bool bmeterial = 3;
    if (has_bmeterial()) {
      total_size += 1 + 1;
    }

    // required bool bGolden = 4;
    if (has_bgolden()) {
      total_size += 1 + 1;
    }

    // optional int32 oneKeyStrenght = 5;
    if (has_onekeystrenght()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->onekeystrenght());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqStrengthEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqStrengthEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqStrengthEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqStrengthEquip::MergeFrom(const ClientReqStrengthEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equippos()) {
      set_equippos(from.equippos());
    }
    if (from.has_bmeterial()) {
      set_bmeterial(from.bmeterial());
    }
    if (from.has_bgolden()) {
      set_bgolden(from.bgolden());
    }
    if (from.has_onekeystrenght()) {
      set_onekeystrenght(from.onekeystrenght());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqStrengthEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqStrengthEquip::CopyFrom(const ClientReqStrengthEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqStrengthEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ClientReqStrengthEquip::Swap(ClientReqStrengthEquip* other) {
  if (other != this) {
    std::swap(container_, other->container_);
    std::swap(equippos_, other->equippos_);
    std::swap(bmeterial_, other->bmeterial_);
    std::swap(bgolden_, other->bgolden_);
    std::swap(onekeystrenght_, other->onekeystrenght_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqStrengthEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqStrengthEquip_descriptor_;
  metadata.reflection = ClientReqStrengthEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GTReqGMStrengthEquip::kCharidFieldNumber;
const int GTReqGMStrengthEquip::kEquipFieldNumber;
#endif  // !_MSC_VER

GTReqGMStrengthEquip::GTReqGMStrengthEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GTReqGMStrengthEquip::InitAsDefaultInstance() {
  equip_ = const_cast< ::EquipSmith::ClientReqStrengthEquip*>(&::EquipSmith::ClientReqStrengthEquip::default_instance());
}

GTReqGMStrengthEquip::GTReqGMStrengthEquip(const GTReqGMStrengthEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GTReqGMStrengthEquip::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  equip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GTReqGMStrengthEquip::~GTReqGMStrengthEquip() {
  SharedDtor();
}

void GTReqGMStrengthEquip::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
  }
}

void GTReqGMStrengthEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GTReqGMStrengthEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GTReqGMStrengthEquip_descriptor_;
}

const GTReqGMStrengthEquip& GTReqGMStrengthEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

GTReqGMStrengthEquip* GTReqGMStrengthEquip::default_instance_ = NULL;

GTReqGMStrengthEquip* GTReqGMStrengthEquip::New() const {
  return new GTReqGMStrengthEquip;
}

void GTReqGMStrengthEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    if (has_equip()) {
      if (equip_ != NULL) equip_->::EquipSmith::ClientReqStrengthEquip::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GTReqGMStrengthEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_equip;
        break;
      }

      // required .EquipSmith.ClientReqStrengthEquip equip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GTReqGMStrengthEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required .EquipSmith.ClientReqStrengthEquip equip = 2;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GTReqGMStrengthEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required .EquipSmith.ClientReqStrengthEquip equip = 2;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GTReqGMStrengthEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required .EquipSmith.ClientReqStrengthEquip equip = 2;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GTReqGMStrengthEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GTReqGMStrengthEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GTReqGMStrengthEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GTReqGMStrengthEquip::MergeFrom(const GTReqGMStrengthEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_equip()) {
      mutable_equip()->::EquipSmith::ClientReqStrengthEquip::MergeFrom(from.equip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GTReqGMStrengthEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GTReqGMStrengthEquip::CopyFrom(const GTReqGMStrengthEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GTReqGMStrengthEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_equip()) {
    if (!this->equip().IsInitialized()) return false;
  }
  return true;
}

void GTReqGMStrengthEquip::Swap(GTReqGMStrengthEquip* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(equip_, other->equip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GTReqGMStrengthEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GTReqGMStrengthEquip_descriptor_;
  metadata.reflection = GTReqGMStrengthEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqUpgradeEquip::kContainerFieldNumber;
const int ClientReqUpgradeEquip::kEquipposFieldNumber;
const int ClientReqUpgradeEquip::kBGoldenFieldNumber;
const int ClientReqUpgradeEquip::kIsProtectFieldNumber;
#endif  // !_MSC_VER

ClientReqUpgradeEquip::ClientReqUpgradeEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqUpgradeEquip::InitAsDefaultInstance() {
}

ClientReqUpgradeEquip::ClientReqUpgradeEquip(const ClientReqUpgradeEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqUpgradeEquip::SharedCtor() {
  _cached_size_ = 0;
  container_ = 0;
  equippos_ = 0;
  bgolden_ = false;
  isprotect_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqUpgradeEquip::~ClientReqUpgradeEquip() {
  SharedDtor();
}

void ClientReqUpgradeEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqUpgradeEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqUpgradeEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqUpgradeEquip_descriptor_;
}

const ClientReqUpgradeEquip& ClientReqUpgradeEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClientReqUpgradeEquip* ClientReqUpgradeEquip::default_instance_ = NULL;

ClientReqUpgradeEquip* ClientReqUpgradeEquip::New() const {
  return new ClientReqUpgradeEquip;
}

void ClientReqUpgradeEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    container_ = 0;
    equippos_ = 0;
    bgolden_ = false;
    isprotect_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqUpgradeEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 container = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_)));
          set_has_container();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equippos;
        break;
      }

      // required int32 equippos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equippos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equippos_)));
          set_has_equippos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bGolden;
        break;
      }

      // required bool bGolden = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgolden_)));
          set_has_bgolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_isProtect;
        break;
      }

      // optional bool isProtect = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isProtect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isprotect_)));
          set_has_isprotect();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqUpgradeEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 container = 1;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->container(), output);
  }

  // required int32 equippos = 2;
  if (has_equippos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equippos(), output);
  }

  // required bool bGolden = 3;
  if (has_bgolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bgolden(), output);
  }

  // optional bool isProtect = 4;
  if (has_isprotect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isprotect(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqUpgradeEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 container = 1;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->container(), target);
  }

  // required int32 equippos = 2;
  if (has_equippos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equippos(), target);
  }

  // required bool bGolden = 3;
  if (has_bgolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bgolden(), target);
  }

  // optional bool isProtect = 4;
  if (has_isprotect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isprotect(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqUpgradeEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 container = 1;
    if (has_container()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container());
    }

    // required int32 equippos = 2;
    if (has_equippos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equippos());
    }

    // required bool bGolden = 3;
    if (has_bgolden()) {
      total_size += 1 + 1;
    }

    // optional bool isProtect = 4;
    if (has_isprotect()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqUpgradeEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqUpgradeEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqUpgradeEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqUpgradeEquip::MergeFrom(const ClientReqUpgradeEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container()) {
      set_container(from.container());
    }
    if (from.has_equippos()) {
      set_equippos(from.equippos());
    }
    if (from.has_bgolden()) {
      set_bgolden(from.bgolden());
    }
    if (from.has_isprotect()) {
      set_isprotect(from.isprotect());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqUpgradeEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqUpgradeEquip::CopyFrom(const ClientReqUpgradeEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqUpgradeEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ClientReqUpgradeEquip::Swap(ClientReqUpgradeEquip* other) {
  if (other != this) {
    std::swap(container_, other->container_);
    std::swap(equippos_, other->equippos_);
    std::swap(bgolden_, other->bgolden_);
    std::swap(isprotect_, other->isprotect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqUpgradeEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqUpgradeEquip_descriptor_;
  metadata.reflection = ClientReqUpgradeEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqSucceedEquip::kContainerfFieldNumber;
const int ClientReqSucceedEquip::kPosfFieldNumber;
const int ClientReqSucceedEquip::kContainersFieldNumber;
const int ClientReqSucceedEquip::kPossFieldNumber;
const int ClientReqSucceedEquip::kBGoldenFieldNumber;
const int ClientReqSucceedEquip::kIsRefineFieldNumber;
const int ClientReqSucceedEquip::kIsProtectFieldNumber;
#endif  // !_MSC_VER

ClientReqSucceedEquip::ClientReqSucceedEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqSucceedEquip::InitAsDefaultInstance() {
}

ClientReqSucceedEquip::ClientReqSucceedEquip(const ClientReqSucceedEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqSucceedEquip::SharedCtor() {
  _cached_size_ = 0;
  containerf_ = 0;
  posf_ = 0;
  containers_ = 0;
  poss_ = 0;
  bgolden_ = false;
  isrefine_ = false;
  isprotect_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqSucceedEquip::~ClientReqSucceedEquip() {
  SharedDtor();
}

void ClientReqSucceedEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqSucceedEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqSucceedEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqSucceedEquip_descriptor_;
}

const ClientReqSucceedEquip& ClientReqSucceedEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClientReqSucceedEquip* ClientReqSucceedEquip::default_instance_ = NULL;

ClientReqSucceedEquip* ClientReqSucceedEquip::New() const {
  return new ClientReqSucceedEquip;
}

void ClientReqSucceedEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    containerf_ = 0;
    posf_ = 0;
    containers_ = 0;
    poss_ = 0;
    bgolden_ = false;
    isrefine_ = false;
    isprotect_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqSucceedEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 containerf = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &containerf_)));
          set_has_containerf();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_posf;
        break;
      }

      // required int32 posf = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_posf:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posf_)));
          set_has_posf();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_containers;
        break;
      }

      // required int32 containers = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_containers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &containers_)));
          set_has_containers();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_poss;
        break;
      }

      // required int32 poss = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_poss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &poss_)));
          set_has_poss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_bGolden;
        break;
      }

      // required bool bGolden = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgolden_)));
          set_has_bgolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isRefine;
        break;
      }

      // required bool isRefine = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isRefine:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isrefine_)));
          set_has_isrefine();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_isProtect;
        break;
      }

      // optional bool isProtect = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isProtect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isprotect_)));
          set_has_isprotect();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqSucceedEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 containerf = 1;
  if (has_containerf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->containerf(), output);
  }

  // required int32 posf = 2;
  if (has_posf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->posf(), output);
  }

  // required int32 containers = 3;
  if (has_containers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->containers(), output);
  }

  // required int32 poss = 4;
  if (has_poss()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->poss(), output);
  }

  // required bool bGolden = 5;
  if (has_bgolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bgolden(), output);
  }

  // required bool isRefine = 6;
  if (has_isrefine()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isrefine(), output);
  }

  // optional bool isProtect = 7;
  if (has_isprotect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isprotect(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqSucceedEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 containerf = 1;
  if (has_containerf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->containerf(), target);
  }

  // required int32 posf = 2;
  if (has_posf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->posf(), target);
  }

  // required int32 containers = 3;
  if (has_containers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->containers(), target);
  }

  // required int32 poss = 4;
  if (has_poss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->poss(), target);
  }

  // required bool bGolden = 5;
  if (has_bgolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bgolden(), target);
  }

  // required bool isRefine = 6;
  if (has_isrefine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isrefine(), target);
  }

  // optional bool isProtect = 7;
  if (has_isprotect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isprotect(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqSucceedEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 containerf = 1;
    if (has_containerf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->containerf());
    }

    // required int32 posf = 2;
    if (has_posf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posf());
    }

    // required int32 containers = 3;
    if (has_containers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->containers());
    }

    // required int32 poss = 4;
    if (has_poss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->poss());
    }

    // required bool bGolden = 5;
    if (has_bgolden()) {
      total_size += 1 + 1;
    }

    // required bool isRefine = 6;
    if (has_isrefine()) {
      total_size += 1 + 1;
    }

    // optional bool isProtect = 7;
    if (has_isprotect()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqSucceedEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqSucceedEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqSucceedEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqSucceedEquip::MergeFrom(const ClientReqSucceedEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_containerf()) {
      set_containerf(from.containerf());
    }
    if (from.has_posf()) {
      set_posf(from.posf());
    }
    if (from.has_containers()) {
      set_containers(from.containers());
    }
    if (from.has_poss()) {
      set_poss(from.poss());
    }
    if (from.has_bgolden()) {
      set_bgolden(from.bgolden());
    }
    if (from.has_isrefine()) {
      set_isrefine(from.isrefine());
    }
    if (from.has_isprotect()) {
      set_isprotect(from.isprotect());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqSucceedEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqSucceedEquip::CopyFrom(const ClientReqSucceedEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqSucceedEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void ClientReqSucceedEquip::Swap(ClientReqSucceedEquip* other) {
  if (other != this) {
    std::swap(containerf_, other->containerf_);
    std::swap(posf_, other->posf_);
    std::swap(containers_, other->containers_);
    std::swap(poss_, other->poss_);
    std::swap(bgolden_, other->bgolden_);
    std::swap(isrefine_, other->isrefine_);
    std::swap(isprotect_, other->isprotect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqSucceedEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqSucceedEquip_descriptor_;
  metadata.reflection = ClientReqSucceedEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RefineAttr::kAttrTypeFieldNumber;
const int RefineAttr::kAttrValueFieldNumber;
const int RefineAttr::kAttrLevelFieldNumber;
const int RefineAttr::kAttrPosFieldNumber;
#endif  // !_MSC_VER

RefineAttr::RefineAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefineAttr::InitAsDefaultInstance() {
}

RefineAttr::RefineAttr(const RefineAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefineAttr::SharedCtor() {
  _cached_size_ = 0;
  attrtype_ = 0;
  attrvalue_ = 0;
  attrlevel_ = 0;
  attrpos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefineAttr::~RefineAttr() {
  SharedDtor();
}

void RefineAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefineAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefineAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefineAttr_descriptor_;
}

const RefineAttr& RefineAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

RefineAttr* RefineAttr::default_instance_ = NULL;

RefineAttr* RefineAttr::New() const {
  return new RefineAttr;
}

void RefineAttr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    attrtype_ = 0;
    attrvalue_ = 0;
    attrlevel_ = 0;
    attrpos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefineAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 attrType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrtype_)));
          set_has_attrtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_attrValue;
        break;
      }

      // required int32 attrValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attrValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrvalue_)));
          set_has_attrvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attrLevel;
        break;
      }

      // required int32 attrLevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attrLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrlevel_)));
          set_has_attrlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_attrPos;
        break;
      }

      // optional int32 attrPos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attrPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrpos_)));
          set_has_attrpos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RefineAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 attrType = 1;
  if (has_attrtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attrtype(), output);
  }

  // required int32 attrValue = 2;
  if (has_attrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attrvalue(), output);
  }

  // required int32 attrLevel = 3;
  if (has_attrlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attrlevel(), output);
  }

  // optional int32 attrPos = 4;
  if (has_attrpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->attrpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefineAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 attrType = 1;
  if (has_attrtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attrtype(), target);
  }

  // required int32 attrValue = 2;
  if (has_attrvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attrvalue(), target);
  }

  // required int32 attrLevel = 3;
  if (has_attrlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attrlevel(), target);
  }

  // optional int32 attrPos = 4;
  if (has_attrpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->attrpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefineAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 attrType = 1;
    if (has_attrtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrtype());
    }

    // required int32 attrValue = 2;
    if (has_attrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrvalue());
    }

    // required int32 attrLevel = 3;
    if (has_attrlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrlevel());
    }

    // optional int32 attrPos = 4;
    if (has_attrpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrpos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefineAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefineAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefineAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefineAttr::MergeFrom(const RefineAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attrtype()) {
      set_attrtype(from.attrtype());
    }
    if (from.has_attrvalue()) {
      set_attrvalue(from.attrvalue());
    }
    if (from.has_attrlevel()) {
      set_attrlevel(from.attrlevel());
    }
    if (from.has_attrpos()) {
      set_attrpos(from.attrpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefineAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefineAttr::CopyFrom(const RefineAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefineAttr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RefineAttr::Swap(RefineAttr* other) {
  if (other != this) {
    std::swap(attrtype_, other->attrtype_);
    std::swap(attrvalue_, other->attrvalue_);
    std::swap(attrlevel_, other->attrlevel_);
    std::swap(attrpos_, other->attrpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefineAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefineAttr_descriptor_;
  metadata.reflection = RefineAttr_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqMeterialSyn::kDestMeterialIDFieldNumber;
const int ClientReqMeterialSyn::kCountFieldNumber;
#endif  // !_MSC_VER

ClientReqMeterialSyn::ClientReqMeterialSyn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqMeterialSyn::InitAsDefaultInstance() {
}

ClientReqMeterialSyn::ClientReqMeterialSyn(const ClientReqMeterialSyn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqMeterialSyn::SharedCtor() {
  _cached_size_ = 0;
  destmeterialid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqMeterialSyn::~ClientReqMeterialSyn() {
  SharedDtor();
}

void ClientReqMeterialSyn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqMeterialSyn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqMeterialSyn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqMeterialSyn_descriptor_;
}

const ClientReqMeterialSyn& ClientReqMeterialSyn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClientReqMeterialSyn* ClientReqMeterialSyn::default_instance_ = NULL;

ClientReqMeterialSyn* ClientReqMeterialSyn::New() const {
  return new ClientReqMeterialSyn;
}

void ClientReqMeterialSyn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    destmeterialid_ = 0;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqMeterialSyn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 destMeterialID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destmeterialid_)));
          set_has_destmeterialid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqMeterialSyn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 destMeterialID = 1;
  if (has_destmeterialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->destmeterialid(), output);
  }

  // required int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqMeterialSyn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 destMeterialID = 1;
  if (has_destmeterialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->destmeterialid(), target);
  }

  // required int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqMeterialSyn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 destMeterialID = 1;
    if (has_destmeterialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destmeterialid());
    }

    // required int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqMeterialSyn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqMeterialSyn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqMeterialSyn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqMeterialSyn::MergeFrom(const ClientReqMeterialSyn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_destmeterialid()) {
      set_destmeterialid(from.destmeterialid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqMeterialSyn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqMeterialSyn::CopyFrom(const ClientReqMeterialSyn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqMeterialSyn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ClientReqMeterialSyn::Swap(ClientReqMeterialSyn* other) {
  if (other != this) {
    std::swap(destmeterialid_, other->destmeterialid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqMeterialSyn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqMeterialSyn_descriptor_;
  metadata.reflection = ClientReqMeterialSyn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetMeterialSyn::kErrFieldNumber;
const int RetMeterialSyn::kDestMeterialIDFieldNumber;
const int RetMeterialSyn::kCountFieldNumber;
#endif  // !_MSC_VER

RetMeterialSyn::RetMeterialSyn()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetMeterialSyn::InitAsDefaultInstance() {
}

RetMeterialSyn::RetMeterialSyn(const RetMeterialSyn& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetMeterialSyn::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  destmeterialid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetMeterialSyn::~RetMeterialSyn() {
  SharedDtor();
}

void RetMeterialSyn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetMeterialSyn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetMeterialSyn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetMeterialSyn_descriptor_;
}

const RetMeterialSyn& RetMeterialSyn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

RetMeterialSyn* RetMeterialSyn::default_instance_ = NULL;

RetMeterialSyn* RetMeterialSyn::New() const {
  return new RetMeterialSyn;
}

void RetMeterialSyn::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    err_ = 0;
    destmeterialid_ = 0;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetMeterialSyn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_destMeterialID;
        break;
      }

      // optional int32 destMeterialID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_destMeterialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destmeterialid_)));
          set_has_destmeterialid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional int32 count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetMeterialSyn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // optional int32 destMeterialID = 2;
  if (has_destmeterialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->destmeterialid(), output);
  }

  // optional int32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetMeterialSyn::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // optional int32 destMeterialID = 2;
  if (has_destmeterialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->destmeterialid(), target);
  }

  // optional int32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetMeterialSyn::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err());
    }

    // optional int32 destMeterialID = 2;
    if (has_destmeterialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destmeterialid());
    }

    // optional int32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetMeterialSyn::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetMeterialSyn* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetMeterialSyn*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetMeterialSyn::MergeFrom(const RetMeterialSyn& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_destmeterialid()) {
      set_destmeterialid(from.destmeterialid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetMeterialSyn::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetMeterialSyn::CopyFrom(const RetMeterialSyn& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetMeterialSyn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetMeterialSyn::Swap(RetMeterialSyn* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(destmeterialid_, other->destmeterialid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetMeterialSyn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetMeterialSyn_descriptor_;
  metadata.reflection = RetMeterialSyn_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqUpgradeStone::kStoneIDFieldNumber;
const int ClientReqUpgradeStone::kStonePosFieldNumber;
const int ClientReqUpgradeStone::kEquipPosFieldNumber;
#endif  // !_MSC_VER

ClientReqUpgradeStone::ClientReqUpgradeStone()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqUpgradeStone::InitAsDefaultInstance() {
}

ClientReqUpgradeStone::ClientReqUpgradeStone(const ClientReqUpgradeStone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqUpgradeStone::SharedCtor() {
  _cached_size_ = 0;
  stoneid_ = 0;
  stonepos_ = 0;
  equippos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqUpgradeStone::~ClientReqUpgradeStone() {
  SharedDtor();
}

void ClientReqUpgradeStone::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqUpgradeStone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqUpgradeStone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqUpgradeStone_descriptor_;
}

const ClientReqUpgradeStone& ClientReqUpgradeStone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

ClientReqUpgradeStone* ClientReqUpgradeStone::default_instance_ = NULL;

ClientReqUpgradeStone* ClientReqUpgradeStone::New() const {
  return new ClientReqUpgradeStone;
}

void ClientReqUpgradeStone::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stoneid_ = 0;
    stonepos_ = 0;
    equippos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqUpgradeStone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stoneID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stoneid_)));
          set_has_stoneid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stonePos;
        break;
      }

      // required int32 stonePos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stonePos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stonepos_)));
          set_has_stonepos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_equipPos;
        break;
      }

      // optional int32 equipPos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equippos_)));
          set_has_equippos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqUpgradeStone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 stoneID = 1;
  if (has_stoneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stoneid(), output);
  }

  // required int32 stonePos = 2;
  if (has_stonepos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stonepos(), output);
  }

  // optional int32 equipPos = 3;
  if (has_equippos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equippos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqUpgradeStone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 stoneID = 1;
  if (has_stoneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stoneid(), target);
  }

  // required int32 stonePos = 2;
  if (has_stonepos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stonepos(), target);
  }

  // optional int32 equipPos = 3;
  if (has_equippos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equippos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqUpgradeStone::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stoneID = 1;
    if (has_stoneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stoneid());
    }

    // required int32 stonePos = 2;
    if (has_stonepos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stonepos());
    }

    // optional int32 equipPos = 3;
    if (has_equippos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equippos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqUpgradeStone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqUpgradeStone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqUpgradeStone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqUpgradeStone::MergeFrom(const ClientReqUpgradeStone& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stoneid()) {
      set_stoneid(from.stoneid());
    }
    if (from.has_stonepos()) {
      set_stonepos(from.stonepos());
    }
    if (from.has_equippos()) {
      set_equippos(from.equippos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqUpgradeStone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqUpgradeStone::CopyFrom(const ClientReqUpgradeStone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqUpgradeStone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ClientReqUpgradeStone::Swap(ClientReqUpgradeStone* other) {
  if (other != this) {
    std::swap(stoneid_, other->stoneid_);
    std::swap(stonepos_, other->stonepos_);
    std::swap(equippos_, other->equippos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqUpgradeStone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqUpgradeStone_descriptor_;
  metadata.reflection = ClientReqUpgradeStone_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetUpgradeStone::kErrFieldNumber;
#endif  // !_MSC_VER

RetUpgradeStone::RetUpgradeStone()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetUpgradeStone::InitAsDefaultInstance() {
}

RetUpgradeStone::RetUpgradeStone(const RetUpgradeStone& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetUpgradeStone::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetUpgradeStone::~RetUpgradeStone() {
  SharedDtor();
}

void RetUpgradeStone::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetUpgradeStone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetUpgradeStone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetUpgradeStone_descriptor_;
}

const RetUpgradeStone& RetUpgradeStone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fSmith_2eproto();
  return *default_instance_;
}

RetUpgradeStone* RetUpgradeStone::default_instance_ = NULL;

RetUpgradeStone* RetUpgradeStone::New() const {
  return new RetUpgradeStone;
}

void RetUpgradeStone::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetUpgradeStone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetUpgradeStone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetUpgradeStone::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetUpgradeStone::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetUpgradeStone::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetUpgradeStone* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetUpgradeStone*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetUpgradeStone::MergeFrom(const RetUpgradeStone& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetUpgradeStone::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetUpgradeStone::CopyFrom(const RetUpgradeStone& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetUpgradeStone::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetUpgradeStone::Swap(RetUpgradeStone* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetUpgradeStone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetUpgradeStone_descriptor_;
  metadata.reflection = RetUpgradeStone_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace EquipSmith

// @@protoc_insertion_point(global_scope)
