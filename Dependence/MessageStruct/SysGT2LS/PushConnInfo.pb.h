// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SysGT2LS/PushConnInfo.proto

#ifndef PROTOBUF_SysGT2LS_2fPushConnInfo_2eproto__INCLUDED
#define PROTOBUF_SysGT2LS_2fPushConnInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ServerMessage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SysGT2LS_2fPushConnInfo_2eproto();
void protobuf_AssignDesc_SysGT2LS_2fPushConnInfo_2eproto();
void protobuf_ShutdownFile_SysGT2LS_2fPushConnInfo_2eproto();

class GtTologinConnInfo;

// ===================================================================

class GtTologinConnInfo : public ::google::protobuf::Message {
 public:
  GtTologinConnInfo();
  virtual ~GtTologinConnInfo();

  GtTologinConnInfo(const GtTologinConnInfo& from);

  inline GtTologinConnInfo& operator=(const GtTologinConnInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GtTologinConnInfo& default_instance();

  void Swap(GtTologinConnInfo* other);

  // implements Message ----------------------------------------------

  GtTologinConnInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GtTologinConnInfo& from);
  void MergeFrom(const GtTologinConnInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // required int32 svrID = 3;
  inline bool has_svrid() const;
  inline void clear_svrid();
  static const int kSvrIDFieldNumber = 3;
  inline ::google::protobuf::int32 svrid() const;
  inline void set_svrid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ServerMessage.GtTologinConnInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_svrid();
  inline void clear_has_svrid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 svrid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SysGT2LS_2fPushConnInfo_2eproto();
  friend void protobuf_AssignDesc_SysGT2LS_2fPushConnInfo_2eproto();
  friend void protobuf_ShutdownFile_SysGT2LS_2fPushConnInfo_2eproto();

  void InitAsDefaultInstance();
  static GtTologinConnInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// GtTologinConnInfo

// required string ip = 1;
inline bool GtTologinConnInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GtTologinConnInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GtTologinConnInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GtTologinConnInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& GtTologinConnInfo::ip() const {
  return *ip_;
}
inline void GtTologinConnInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GtTologinConnInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void GtTologinConnInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GtTologinConnInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* GtTologinConnInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GtTologinConnInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 port = 2;
inline bool GtTologinConnInfo::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GtTologinConnInfo::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GtTologinConnInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GtTologinConnInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 GtTologinConnInfo::port() const {
  return port_;
}
inline void GtTologinConnInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// required int32 svrID = 3;
inline bool GtTologinConnInfo::has_svrid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GtTologinConnInfo::set_has_svrid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GtTologinConnInfo::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GtTologinConnInfo::clear_svrid() {
  svrid_ = 0;
  clear_has_svrid();
}
inline ::google::protobuf::int32 GtTologinConnInfo::svrid() const {
  return svrid_;
}
inline void GtTologinConnInfo::set_svrid(::google::protobuf::int32 value) {
  set_has_svrid();
  svrid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerMessage

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SysGT2LS_2fPushConnInfo_2eproto__INCLUDED
