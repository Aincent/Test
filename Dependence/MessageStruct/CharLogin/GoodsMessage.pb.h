// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/GoodsMessage.proto

#ifndef PROTOBUF_CharLogin_2fGoodsMessage_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fGoodsMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CharLogin/CharBaseInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace Goods {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

class ToGTDropInfo;
class SynToClientDrop;
class DropItemInfo;
class SingleDropItem;
class ToGMPickItem;
class AckGTPickItem;
class PickUpItem;
class PickedItem;
class SynPickUpItem;
class ToGTDeleteDrop;
class DeleteDropItem;
class ClientReqMoveGoods;
class GTAckToCUpdateGoodsRet;
class UpdateGoods;
class ClientReqArrangeGoods;
class ClientReqUseGoods;
class GTAckToCUseGoodsRet;
class ClientReqRecoverGoods;
class CReqToGTOpenGoodsRet;
class GTAckToCOpenGoodsRet;
class GTAckToCSaveGoodsRet;
class ToGTAddItem;
class ClientReqMoveQuickSector;
class GTAckToCMoveQuickSectorRet;
class SplitGoods;
class GTtoGMMoveGoods;
class GTtoGMRecoverGoods;
class GTtoGMArrangeGoods;
class GMAckToCTOpenGoodsRet;
class GTReqToCMOpenGoodsRet;
class GTtoGMUseGoods;
class CTReqGMMoveQuickSector;
class GT2GMSplitGoods;
class UpdateQuickSector;
class MoveUpdateGoodsRet;
class DiscardUpdateGoodsRet;
class DropGoodsInfo;
class SimDropSomeGoods;
class SplitUpdateGoodsRet;

// ===================================================================

class ToGTDropInfo : public ::google::protobuf::Message {
 public:
  ToGTDropInfo();
  virtual ~ToGTDropInfo();

  ToGTDropInfo(const ToGTDropInfo& from);

  inline ToGTDropInfo& operator=(const ToGTDropInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTDropInfo& default_instance();

  void Swap(ToGTDropInfo* other);

  // implements Message ----------------------------------------------

  ToGTDropInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTDropInfo& from);
  void MergeFrom(const ToGTDropInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .Goods.SynToClientDrop item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Goods::SynToClientDrop& item() const;
  inline ::Goods::SynToClientDrop* mutable_item();
  inline ::Goods::SynToClientDrop* release_item();
  inline void set_allocated_item(::Goods::SynToClientDrop* item);

  // @@protoc_insertion_point(class_scope:Goods.ToGTDropInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::SynToClientDrop* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ToGTDropInfo* default_instance_;
};
// -------------------------------------------------------------------

class SynToClientDrop : public ::google::protobuf::Message {
 public:
  SynToClientDrop();
  virtual ~SynToClientDrop();

  SynToClientDrop(const SynToClientDrop& from);

  inline SynToClientDrop& operator=(const SynToClientDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynToClientDrop& default_instance();

  void Swap(SynToClientDrop* other);

  // implements Message ----------------------------------------------

  SynToClientDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynToClientDrop& from);
  void MergeFrom(const SynToClientDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Goods.DropItemInfo item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::Goods::DropItemInfo& item(int index) const;
  inline ::Goods::DropItemInfo* mutable_item(int index);
  inline ::Goods::DropItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::DropItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::DropItemInfo >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:Goods.SynToClientDrop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::DropItemInfo > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static SynToClientDrop* default_instance_;
};
// -------------------------------------------------------------------

class DropItemInfo : public ::google::protobuf::Message {
 public:
  DropItemInfo();
  virtual ~DropItemInfo();

  DropItemInfo(const DropItemInfo& from);

  inline DropItemInfo& operator=(const DropItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropItemInfo& default_instance();

  void Swap(DropItemInfo* other);

  // implements Message ----------------------------------------------

  DropItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropItemInfo& from);
  void MergeFrom(const DropItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated uint32 key = 2;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key(int index) const;
  inline void set_key(int index, ::google::protobuf::uint32 value);
  inline void add_key(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      key() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_key();

  // repeated .Goods.SingleDropItem item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::Goods::SingleDropItem& item(int index) const;
  inline ::Goods::SingleDropItem* mutable_item(int index);
  inline ::Goods::SingleDropItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::SingleDropItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::SingleDropItem >*
      mutable_item();

  // optional bool isBoss = 4;
  inline bool has_isboss() const;
  inline void clear_isboss();
  static const int kIsBossFieldNumber = 4;
  inline bool isboss() const;
  inline void set_isboss(bool value);

  // @@protoc_insertion_point(class_scope:Goods.DropItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_isboss();
  inline void clear_has_isboss();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > key_;
  ::google::protobuf::int32 id_;
  bool isboss_;
  ::google::protobuf::RepeatedPtrField< ::Goods::SingleDropItem > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static DropItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class SingleDropItem : public ::google::protobuf::Message {
 public:
  SingleDropItem();
  virtual ~SingleDropItem();

  SingleDropItem(const SingleDropItem& from);

  inline SingleDropItem& operator=(const SingleDropItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleDropItem& default_instance();

  void Swap(SingleDropItem* other);

  // implements Message ----------------------------------------------

  SingleDropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleDropItem& from);
  void MergeFrom(const SingleDropItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 onlyid = 2;
  inline bool has_onlyid() const;
  inline void clear_onlyid();
  static const int kOnlyidFieldNumber = 2;
  inline ::google::protobuf::int32 onlyid() const;
  inline void set_onlyid(::google::protobuf::int32 value);

  // optional uint32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Goods.SingleDropItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_onlyid();
  inline void clear_has_onlyid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 onlyid_;
  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static SingleDropItem* default_instance_;
};
// -------------------------------------------------------------------

class ToGMPickItem : public ::google::protobuf::Message {
 public:
  ToGMPickItem();
  virtual ~ToGMPickItem();

  ToGMPickItem(const ToGMPickItem& from);

  inline ToGMPickItem& operator=(const ToGMPickItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGMPickItem& default_instance();

  void Swap(ToGMPickItem* other);

  // implements Message ----------------------------------------------

  ToGMPickItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGMPickItem& from);
  void MergeFrom(const ToGMPickItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .Goods.PickUpItem item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Goods::PickUpItem& item() const;
  inline ::Goods::PickUpItem* mutable_item();
  inline ::Goods::PickUpItem* release_item();
  inline void set_allocated_item(::Goods::PickUpItem* item);

  // @@protoc_insertion_point(class_scope:Goods.ToGMPickItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::PickUpItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ToGMPickItem* default_instance_;
};
// -------------------------------------------------------------------

class AckGTPickItem : public ::google::protobuf::Message {
 public:
  AckGTPickItem();
  virtual ~AckGTPickItem();

  AckGTPickItem(const AckGTPickItem& from);

  inline AckGTPickItem& operator=(const AckGTPickItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckGTPickItem& default_instance();

  void Swap(AckGTPickItem* other);

  // implements Message ----------------------------------------------

  AckGTPickItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckGTPickItem& from);
  void MergeFrom(const AckGTPickItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .Goods.SynPickUpItem item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Goods::SynPickUpItem& item() const;
  inline ::Goods::SynPickUpItem* mutable_item();
  inline ::Goods::SynPickUpItem* release_item();
  inline void set_allocated_item(::Goods::SynPickUpItem* item);

  // @@protoc_insertion_point(class_scope:Goods.AckGTPickItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::SynPickUpItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static AckGTPickItem* default_instance_;
};
// -------------------------------------------------------------------

class PickUpItem : public ::google::protobuf::Message {
 public:
  PickUpItem();
  virtual ~PickUpItem();

  PickUpItem(const PickUpItem& from);

  inline PickUpItem& operator=(const PickUpItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PickUpItem& default_instance();

  void Swap(PickUpItem* other);

  // implements Message ----------------------------------------------

  PickUpItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PickUpItem& from);
  void MergeFrom(const PickUpItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Goods.PickedItem item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::Goods::PickedItem& item(int index) const;
  inline ::Goods::PickedItem* mutable_item(int index);
  inline ::Goods::PickedItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:Goods.PickUpItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static PickUpItem* default_instance_;
};
// -------------------------------------------------------------------

class PickedItem : public ::google::protobuf::Message {
 public:
  PickedItem();
  virtual ~PickedItem();

  PickedItem(const PickedItem& from);

  inline PickedItem& operator=(const PickedItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PickedItem& default_instance();

  void Swap(PickedItem* other);

  // implements Message ----------------------------------------------

  PickedItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PickedItem& from);
  void MergeFrom(const PickedItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 onlyid = 2;
  inline bool has_onlyid() const;
  inline void clear_onlyid();
  static const int kOnlyidFieldNumber = 2;
  inline ::google::protobuf::int32 onlyid() const;
  inline void set_onlyid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.PickedItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_onlyid();
  inline void clear_has_onlyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 onlyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static PickedItem* default_instance_;
};
// -------------------------------------------------------------------

class SynPickUpItem : public ::google::protobuf::Message {
 public:
  SynPickUpItem();
  virtual ~SynPickUpItem();

  SynPickUpItem(const SynPickUpItem& from);

  inline SynPickUpItem& operator=(const SynPickUpItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynPickUpItem& default_instance();

  void Swap(SynPickUpItem* other);

  // implements Message ----------------------------------------------

  SynPickUpItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynPickUpItem& from);
  void MergeFrom(const SynPickUpItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Goods.PickedItem item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::Goods::PickedItem& item(int index) const;
  inline ::Goods::PickedItem* mutable_item(int index);
  inline ::Goods::PickedItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >*
      mutable_item();

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.SynPickUpItem)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem > item_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static SynPickUpItem* default_instance_;
};
// -------------------------------------------------------------------

class ToGTDeleteDrop : public ::google::protobuf::Message {
 public:
  ToGTDeleteDrop();
  virtual ~ToGTDeleteDrop();

  ToGTDeleteDrop(const ToGTDeleteDrop& from);

  inline ToGTDeleteDrop& operator=(const ToGTDeleteDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTDeleteDrop& default_instance();

  void Swap(ToGTDeleteDrop* other);

  // implements Message ----------------------------------------------

  ToGTDeleteDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTDeleteDrop& from);
  void MergeFrom(const ToGTDeleteDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .Goods.DeleteDropItem item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Goods::DeleteDropItem& item() const;
  inline ::Goods::DeleteDropItem* mutable_item();
  inline ::Goods::DeleteDropItem* release_item();
  inline void set_allocated_item(::Goods::DeleteDropItem* item);

  // @@protoc_insertion_point(class_scope:Goods.ToGTDeleteDrop)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::DeleteDropItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ToGTDeleteDrop* default_instance_;
};
// -------------------------------------------------------------------

class DeleteDropItem : public ::google::protobuf::Message {
 public:
  DeleteDropItem();
  virtual ~DeleteDropItem();

  DeleteDropItem(const DeleteDropItem& from);

  inline DeleteDropItem& operator=(const DeleteDropItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDropItem& default_instance();

  void Swap(DeleteDropItem* other);

  // implements Message ----------------------------------------------

  DeleteDropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteDropItem& from);
  void MergeFrom(const DeleteDropItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:Goods.DeleteDropItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static DeleteDropItem* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqMoveGoods : public ::google::protobuf::Message {
 public:
  ClientReqMoveGoods();
  virtual ~ClientReqMoveGoods();

  ClientReqMoveGoods(const ClientReqMoveGoods& from);

  inline ClientReqMoveGoods& operator=(const ClientReqMoveGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqMoveGoods& default_instance();

  void Swap(ClientReqMoveGoods* other);

  // implements Message ----------------------------------------------

  ClientReqMoveGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqMoveGoods& from);
  void MergeFrom(const ClientReqMoveGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 startContainer = 1;
  inline bool has_startcontainer() const;
  inline void clear_startcontainer();
  static const int kStartContainerFieldNumber = 1;
  inline ::google::protobuf::int32 startcontainer() const;
  inline void set_startcontainer(::google::protobuf::int32 value);

  // required int32 startPos = 2;
  inline bool has_startpos() const;
  inline void clear_startpos();
  static const int kStartPosFieldNumber = 2;
  inline ::google::protobuf::int32 startpos() const;
  inline void set_startpos(::google::protobuf::int32 value);

  // required int32 endContainer = 3;
  inline bool has_endcontainer() const;
  inline void clear_endcontainer();
  static const int kEndContainerFieldNumber = 3;
  inline ::google::protobuf::int32 endcontainer() const;
  inline void set_endcontainer(::google::protobuf::int32 value);

  // required int32 endPos = 4;
  inline bool has_endpos() const;
  inline void clear_endpos();
  static const int kEndPosFieldNumber = 4;
  inline ::google::protobuf::int32 endpos() const;
  inline void set_endpos(::google::protobuf::int32 value);

  // required int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.ClientReqMoveGoods)
 private:
  inline void set_has_startcontainer();
  inline void clear_has_startcontainer();
  inline void set_has_startpos();
  inline void clear_has_startpos();
  inline void set_has_endcontainer();
  inline void clear_has_endcontainer();
  inline void set_has_endpos();
  inline void clear_has_endpos();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 startcontainer_;
  ::google::protobuf::int32 startpos_;
  ::google::protobuf::int32 endcontainer_;
  ::google::protobuf::int32 endpos_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqMoveGoods* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToCUpdateGoodsRet : public ::google::protobuf::Message {
 public:
  GTAckToCUpdateGoodsRet();
  virtual ~GTAckToCUpdateGoodsRet();

  GTAckToCUpdateGoodsRet(const GTAckToCUpdateGoodsRet& from);

  inline GTAckToCUpdateGoodsRet& operator=(const GTAckToCUpdateGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToCUpdateGoodsRet& default_instance();

  void Swap(GTAckToCUpdateGoodsRet* other);

  // implements Message ----------------------------------------------

  GTAckToCUpdateGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToCUpdateGoodsRet& from);
  void MergeFrom(const GTAckToCUpdateGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .Goods.UpdateGoods updateGoods = 2;
  inline int updategoods_size() const;
  inline void clear_updategoods();
  static const int kUpdateGoodsFieldNumber = 2;
  inline const ::Goods::UpdateGoods& updategoods(int index) const;
  inline ::Goods::UpdateGoods* mutable_updategoods(int index);
  inline ::Goods::UpdateGoods* add_updategoods();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
      updategoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
      mutable_updategoods();

  // optional int32 IsAdd = 3;
  inline bool has_isadd() const;
  inline void clear_isadd();
  static const int kIsAddFieldNumber = 3;
  inline ::google::protobuf::int32 isadd() const;
  inline void set_isadd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTAckToCUpdateGoodsRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_isadd();
  inline void clear_has_isadd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods > updategoods_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 isadd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckToCUpdateGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGoods : public ::google::protobuf::Message {
 public:
  UpdateGoods();
  virtual ~UpdateGoods();

  UpdateGoods(const UpdateGoods& from);

  inline UpdateGoods& operator=(const UpdateGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGoods& default_instance();

  void Swap(UpdateGoods* other);

  // implements Message ----------------------------------------------

  UpdateGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGoods& from);
  void MergeFrom(const UpdateGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 container = 1;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 1;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required .CharLogin.ClientItemInfo itemInfo = 3;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 3;
  inline const ::CharLogin::ClientItemInfo& iteminfo() const;
  inline ::CharLogin::ClientItemInfo* mutable_iteminfo();
  inline ::CharLogin::ClientItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::CharLogin::ClientItemInfo* iteminfo);

  // @@protoc_insertion_point(class_scope:Goods.UpdateGoods)
 private:
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 container_;
  ::google::protobuf::int32 pos_;
  ::CharLogin::ClientItemInfo* iteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateGoods* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqArrangeGoods : public ::google::protobuf::Message {
 public:
  ClientReqArrangeGoods();
  virtual ~ClientReqArrangeGoods();

  ClientReqArrangeGoods(const ClientReqArrangeGoods& from);

  inline ClientReqArrangeGoods& operator=(const ClientReqArrangeGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqArrangeGoods& default_instance();

  void Swap(ClientReqArrangeGoods* other);

  // implements Message ----------------------------------------------

  ClientReqArrangeGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqArrangeGoods& from);
  void MergeFrom(const ClientReqArrangeGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 container = 1;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 1;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.ClientReqArrangeGoods)
 private:
  inline void set_has_container();
  inline void clear_has_container();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 container_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqArrangeGoods* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqUseGoods : public ::google::protobuf::Message {
 public:
  ClientReqUseGoods();
  virtual ~ClientReqUseGoods();

  ClientReqUseGoods(const ClientReqUseGoods& from);

  inline ClientReqUseGoods& operator=(const ClientReqUseGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqUseGoods& default_instance();

  void Swap(ClientReqUseGoods* other);

  // implements Message ----------------------------------------------

  ClientReqUseGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqUseGoods& from);
  void MergeFrom(const ClientReqUseGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 goodID = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIDFieldNumber = 1;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.ClientReqUseGoods)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 goodid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqUseGoods* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToCUseGoodsRet : public ::google::protobuf::Message {
 public:
  GTAckToCUseGoodsRet();
  virtual ~GTAckToCUseGoodsRet();

  GTAckToCUseGoodsRet(const GTAckToCUseGoodsRet& from);

  inline GTAckToCUseGoodsRet& operator=(const GTAckToCUseGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToCUseGoodsRet& default_instance();

  void Swap(GTAckToCUseGoodsRet* other);

  // implements Message ----------------------------------------------

  GTAckToCUseGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToCUseGoodsRet& from);
  void MergeFrom(const GTAckToCUseGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .Goods.UpdateGoods updategoods = 2;
  inline int updategoods_size() const;
  inline void clear_updategoods();
  static const int kUpdategoodsFieldNumber = 2;
  inline const ::Goods::UpdateGoods& updategoods(int index) const;
  inline ::Goods::UpdateGoods* mutable_updategoods(int index);
  inline ::Goods::UpdateGoods* add_updategoods();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
      updategoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
      mutable_updategoods();

  // @@protoc_insertion_point(class_scope:Goods.GTAckToCUseGoodsRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods > updategoods_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckToCUseGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqRecoverGoods : public ::google::protobuf::Message {
 public:
  ClientReqRecoverGoods();
  virtual ~ClientReqRecoverGoods();

  ClientReqRecoverGoods(const ClientReqRecoverGoods& from);

  inline ClientReqRecoverGoods& operator=(const ClientReqRecoverGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqRecoverGoods& default_instance();

  void Swap(ClientReqRecoverGoods* other);

  // implements Message ----------------------------------------------

  ClientReqRecoverGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqRecoverGoods& from);
  void MergeFrom(const ClientReqRecoverGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 container = 1;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 1;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.ClientReqRecoverGoods)
 private:
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 container_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqRecoverGoods* default_instance_;
};
// -------------------------------------------------------------------

class CReqToGTOpenGoodsRet : public ::google::protobuf::Message {
 public:
  CReqToGTOpenGoodsRet();
  virtual ~CReqToGTOpenGoodsRet();

  CReqToGTOpenGoodsRet(const CReqToGTOpenGoodsRet& from);

  inline CReqToGTOpenGoodsRet& operator=(const CReqToGTOpenGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CReqToGTOpenGoodsRet& default_instance();

  void Swap(CReqToGTOpenGoodsRet* other);

  // implements Message ----------------------------------------------

  CReqToGTOpenGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CReqToGTOpenGoodsRet& from);
  void MergeFrom(const CReqToGTOpenGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 container = 1;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 1;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.CReqToGTOpenGoodsRet)
 private:
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 container_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static CReqToGTOpenGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToCOpenGoodsRet : public ::google::protobuf::Message {
 public:
  GTAckToCOpenGoodsRet();
  virtual ~GTAckToCOpenGoodsRet();

  GTAckToCOpenGoodsRet(const GTAckToCOpenGoodsRet& from);

  inline GTAckToCOpenGoodsRet& operator=(const GTAckToCOpenGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToCOpenGoodsRet& default_instance();

  void Swap(GTAckToCOpenGoodsRet* other);

  // implements Message ----------------------------------------------

  GTAckToCOpenGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToCOpenGoodsRet& from);
  void MergeFrom(const GTAckToCOpenGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required int32 container = 2;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 2;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // repeated int32 pos = 3;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::int32 value);
  inline void add_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:Goods.GTAckToCOpenGoodsRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_container();
  inline void clear_has_container();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 container_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckToCOpenGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToCSaveGoodsRet : public ::google::protobuf::Message {
 public:
  GTAckToCSaveGoodsRet();
  virtual ~GTAckToCSaveGoodsRet();

  GTAckToCSaveGoodsRet(const GTAckToCSaveGoodsRet& from);

  inline GTAckToCSaveGoodsRet& operator=(const GTAckToCSaveGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToCSaveGoodsRet& default_instance();

  void Swap(GTAckToCSaveGoodsRet* other);

  // implements Message ----------------------------------------------

  GTAckToCSaveGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToCSaveGoodsRet& from);
  void MergeFrom(const GTAckToCSaveGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Goods.UpdateGoods updategoods = 1;
  inline int updategoods_size() const;
  inline void clear_updategoods();
  static const int kUpdategoodsFieldNumber = 1;
  inline const ::Goods::UpdateGoods& updategoods(int index) const;
  inline ::Goods::UpdateGoods* mutable_updategoods(int index);
  inline ::Goods::UpdateGoods* add_updategoods();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
      updategoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
      mutable_updategoods();

  // @@protoc_insertion_point(class_scope:Goods.GTAckToCSaveGoodsRet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods > updategoods_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckToCSaveGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class ToGTAddItem : public ::google::protobuf::Message {
 public:
  ToGTAddItem();
  virtual ~ToGTAddItem();

  ToGTAddItem(const ToGTAddItem& from);

  inline ToGTAddItem& operator=(const ToGTAddItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTAddItem& default_instance();

  void Swap(ToGTAddItem* other);

  // implements Message ----------------------------------------------

  ToGTAddItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTAddItem& from);
  void MergeFrom(const ToGTAddItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .Goods.GTAckToCUpdateGoodsRet item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Goods::GTAckToCUpdateGoodsRet& item() const;
  inline ::Goods::GTAckToCUpdateGoodsRet* mutable_item();
  inline ::Goods::GTAckToCUpdateGoodsRet* release_item();
  inline void set_allocated_item(::Goods::GTAckToCUpdateGoodsRet* item);

  // @@protoc_insertion_point(class_scope:Goods.ToGTAddItem)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::GTAckToCUpdateGoodsRet* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ToGTAddItem* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqMoveQuickSector : public ::google::protobuf::Message {
 public:
  ClientReqMoveQuickSector();
  virtual ~ClientReqMoveQuickSector();

  ClientReqMoveQuickSector(const ClientReqMoveQuickSector& from);

  inline ClientReqMoveQuickSector& operator=(const ClientReqMoveQuickSector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqMoveQuickSector& default_instance();

  void Swap(ClientReqMoveQuickSector* other);

  // implements Message ----------------------------------------------

  ClientReqMoveQuickSector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqMoveQuickSector& from);
  void MergeFrom(const ClientReqMoveQuickSector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 container = 4;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 4;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.ClientReqMoveQuickSector)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_container();
  inline void clear_has_container();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 container_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqMoveQuickSector* default_instance_;
};
// -------------------------------------------------------------------

class GTAckToCMoveQuickSectorRet : public ::google::protobuf::Message {
 public:
  GTAckToCMoveQuickSectorRet();
  virtual ~GTAckToCMoveQuickSectorRet();

  GTAckToCMoveQuickSectorRet(const GTAckToCMoveQuickSectorRet& from);

  inline GTAckToCMoveQuickSectorRet& operator=(const GTAckToCMoveQuickSectorRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAckToCMoveQuickSectorRet& default_instance();

  void Swap(GTAckToCMoveQuickSectorRet* other);

  // implements Message ----------------------------------------------

  GTAckToCMoveQuickSectorRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAckToCMoveQuickSectorRet& from);
  void MergeFrom(const GTAckToCMoveQuickSectorRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 container = 4;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 4;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // required int32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTAckToCMoveQuickSectorRet)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 container_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTAckToCMoveQuickSectorRet* default_instance_;
};
// -------------------------------------------------------------------

class SplitGoods : public ::google::protobuf::Message {
 public:
  SplitGoods();
  virtual ~SplitGoods();

  SplitGoods(const SplitGoods& from);

  inline SplitGoods& operator=(const SplitGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SplitGoods& default_instance();

  void Swap(SplitGoods* other);

  // implements Message ----------------------------------------------

  SplitGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SplitGoods& from);
  void MergeFrom(const SplitGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.SplitGoods)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static SplitGoods* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMMoveGoods : public ::google::protobuf::Message {
 public:
  GTtoGMMoveGoods();
  virtual ~GTtoGMMoveGoods();

  GTtoGMMoveGoods(const GTtoGMMoveGoods& from);

  inline GTtoGMMoveGoods& operator=(const GTtoGMMoveGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMMoveGoods& default_instance();

  void Swap(GTtoGMMoveGoods* other);

  // implements Message ----------------------------------------------

  GTtoGMMoveGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMMoveGoods& from);
  void MergeFrom(const GTtoGMMoveGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 startContainer = 2;
  inline bool has_startcontainer() const;
  inline void clear_startcontainer();
  static const int kStartContainerFieldNumber = 2;
  inline ::google::protobuf::int32 startcontainer() const;
  inline void set_startcontainer(::google::protobuf::int32 value);

  // required int32 startPos = 3;
  inline bool has_startpos() const;
  inline void clear_startpos();
  static const int kStartPosFieldNumber = 3;
  inline ::google::protobuf::int32 startpos() const;
  inline void set_startpos(::google::protobuf::int32 value);

  // required int32 endContainer = 4;
  inline bool has_endcontainer() const;
  inline void clear_endcontainer();
  static const int kEndContainerFieldNumber = 4;
  inline ::google::protobuf::int32 endcontainer() const;
  inline void set_endcontainer(::google::protobuf::int32 value);

  // required int32 endPos = 5;
  inline bool has_endpos() const;
  inline void clear_endpos();
  static const int kEndPosFieldNumber = 5;
  inline ::google::protobuf::int32 endpos() const;
  inline void set_endpos(::google::protobuf::int32 value);

  // required int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTtoGMMoveGoods)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_startcontainer();
  inline void clear_has_startcontainer();
  inline void set_has_startpos();
  inline void clear_has_startpos();
  inline void set_has_endcontainer();
  inline void clear_has_endcontainer();
  inline void set_has_endpos();
  inline void clear_has_endpos();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 startcontainer_;
  ::google::protobuf::int32 startpos_;
  ::google::protobuf::int32 endcontainer_;
  ::google::protobuf::int32 endpos_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMMoveGoods* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMRecoverGoods : public ::google::protobuf::Message {
 public:
  GTtoGMRecoverGoods();
  virtual ~GTtoGMRecoverGoods();

  GTtoGMRecoverGoods(const GTtoGMRecoverGoods& from);

  inline GTtoGMRecoverGoods& operator=(const GTtoGMRecoverGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMRecoverGoods& default_instance();

  void Swap(GTtoGMRecoverGoods* other);

  // implements Message ----------------------------------------------

  GTtoGMRecoverGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMRecoverGoods& from);
  void MergeFrom(const GTtoGMRecoverGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 container = 2;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 2;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // required int32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTtoGMRecoverGoods)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 container_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMRecoverGoods* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMArrangeGoods : public ::google::protobuf::Message {
 public:
  GTtoGMArrangeGoods();
  virtual ~GTtoGMArrangeGoods();

  GTtoGMArrangeGoods(const GTtoGMArrangeGoods& from);

  inline GTtoGMArrangeGoods& operator=(const GTtoGMArrangeGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMArrangeGoods& default_instance();

  void Swap(GTtoGMArrangeGoods* other);

  // implements Message ----------------------------------------------

  GTtoGMArrangeGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMArrangeGoods& from);
  void MergeFrom(const GTtoGMArrangeGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 container = 2;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 2;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTtoGMArrangeGoods)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_container();
  inline void clear_has_container();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 container_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMArrangeGoods* default_instance_;
};
// -------------------------------------------------------------------

class GMAckToCTOpenGoodsRet : public ::google::protobuf::Message {
 public:
  GMAckToCTOpenGoodsRet();
  virtual ~GMAckToCTOpenGoodsRet();

  GMAckToCTOpenGoodsRet(const GMAckToCTOpenGoodsRet& from);

  inline GMAckToCTOpenGoodsRet& operator=(const GMAckToCTOpenGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMAckToCTOpenGoodsRet& default_instance();

  void Swap(GMAckToCTOpenGoodsRet* other);

  // implements Message ----------------------------------------------

  GMAckToCTOpenGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMAckToCTOpenGoodsRet& from);
  void MergeFrom(const GMAckToCTOpenGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .Goods.GTAckToCOpenGoodsRet ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline const ::Goods::GTAckToCOpenGoodsRet& ret() const;
  inline ::Goods::GTAckToCOpenGoodsRet* mutable_ret();
  inline ::Goods::GTAckToCOpenGoodsRet* release_ret();
  inline void set_allocated_ret(::Goods::GTAckToCOpenGoodsRet* ret);

  // @@protoc_insertion_point(class_scope:Goods.GMAckToCTOpenGoodsRet)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::GTAckToCOpenGoodsRet* ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GMAckToCTOpenGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class GTReqToCMOpenGoodsRet : public ::google::protobuf::Message {
 public:
  GTReqToCMOpenGoodsRet();
  virtual ~GTReqToCMOpenGoodsRet();

  GTReqToCMOpenGoodsRet(const GTReqToCMOpenGoodsRet& from);

  inline GTReqToCMOpenGoodsRet& operator=(const GTReqToCMOpenGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTReqToCMOpenGoodsRet& default_instance();

  void Swap(GTReqToCMOpenGoodsRet* other);

  // implements Message ----------------------------------------------

  GTReqToCMOpenGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTReqToCMOpenGoodsRet& from);
  void MergeFrom(const GTReqToCMOpenGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 container = 2;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 2;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // required int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTReqToCMOpenGoodsRet)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_container();
  inline void clear_has_container();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 container_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTReqToCMOpenGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class GTtoGMUseGoods : public ::google::protobuf::Message {
 public:
  GTtoGMUseGoods();
  virtual ~GTtoGMUseGoods();

  GTtoGMUseGoods(const GTtoGMUseGoods& from);

  inline GTtoGMUseGoods& operator=(const GTtoGMUseGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTtoGMUseGoods& default_instance();

  void Swap(GTtoGMUseGoods* other);

  // implements Message ----------------------------------------------

  GTtoGMUseGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTtoGMUseGoods& from);
  void MergeFrom(const GTtoGMUseGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 goodID = 2;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIDFieldNumber = 2;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);

  // required int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.GTtoGMUseGoods)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 goodid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GTtoGMUseGoods* default_instance_;
};
// -------------------------------------------------------------------

class CTReqGMMoveQuickSector : public ::google::protobuf::Message {
 public:
  CTReqGMMoveQuickSector();
  virtual ~CTReqGMMoveQuickSector();

  CTReqGMMoveQuickSector(const CTReqGMMoveQuickSector& from);

  inline CTReqGMMoveQuickSector& operator=(const CTReqGMMoveQuickSector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTReqGMMoveQuickSector& default_instance();

  void Swap(CTReqGMMoveQuickSector* other);

  // implements Message ----------------------------------------------

  CTReqGMMoveQuickSector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTReqGMMoveQuickSector& from);
  void MergeFrom(const CTReqGMMoveQuickSector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 container = 5;
  inline bool has_container() const;
  inline void clear_container();
  static const int kContainerFieldNumber = 5;
  inline ::google::protobuf::int32 container() const;
  inline void set_container(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.CTReqGMMoveQuickSector)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_container();
  inline void clear_has_container();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 container_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static CTReqGMMoveQuickSector* default_instance_;
};
// -------------------------------------------------------------------

class GT2GMSplitGoods : public ::google::protobuf::Message {
 public:
  GT2GMSplitGoods();
  virtual ~GT2GMSplitGoods();

  GT2GMSplitGoods(const GT2GMSplitGoods& from);

  inline GT2GMSplitGoods& operator=(const GT2GMSplitGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GT2GMSplitGoods& default_instance();

  void Swap(GT2GMSplitGoods* other);

  // implements Message ----------------------------------------------

  GT2GMSplitGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GT2GMSplitGoods& from);
  void MergeFrom(const GT2GMSplitGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .Goods.SplitGoods splitgoods = 2;
  inline bool has_splitgoods() const;
  inline void clear_splitgoods();
  static const int kSplitgoodsFieldNumber = 2;
  inline const ::Goods::SplitGoods& splitgoods() const;
  inline ::Goods::SplitGoods* mutable_splitgoods();
  inline ::Goods::SplitGoods* release_splitgoods();
  inline void set_allocated_splitgoods(::Goods::SplitGoods* splitgoods);

  // @@protoc_insertion_point(class_scope:Goods.GT2GMSplitGoods)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_splitgoods();
  inline void clear_has_splitgoods();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Goods::SplitGoods* splitgoods_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static GT2GMSplitGoods* default_instance_;
};
// -------------------------------------------------------------------

class UpdateQuickSector : public ::google::protobuf::Message {
 public:
  UpdateQuickSector();
  virtual ~UpdateQuickSector();

  UpdateQuickSector(const UpdateQuickSector& from);

  inline UpdateQuickSector& operator=(const UpdateQuickSector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateQuickSector& default_instance();

  void Swap(UpdateQuickSector* other);

  // implements Message ----------------------------------------------

  UpdateQuickSector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateQuickSector& from);
  void MergeFrom(const UpdateQuickSector& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 goodID = 3;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIDFieldNumber = 3;
  inline ::google::protobuf::int32 goodid() const;
  inline void set_goodid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.UpdateQuickSector)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_goodid();
  inline void clear_has_goodid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 goodid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateQuickSector* default_instance_;
};
// -------------------------------------------------------------------

class MoveUpdateGoodsRet : public ::google::protobuf::Message {
 public:
  MoveUpdateGoodsRet();
  virtual ~MoveUpdateGoodsRet();

  MoveUpdateGoodsRet(const MoveUpdateGoodsRet& from);

  inline MoveUpdateGoodsRet& operator=(const MoveUpdateGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveUpdateGoodsRet& default_instance();

  void Swap(MoveUpdateGoodsRet* other);

  // implements Message ----------------------------------------------

  MoveUpdateGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveUpdateGoodsRet& from);
  void MergeFrom(const MoveUpdateGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .Goods.UpdateGoods updateGoods = 2;
  inline int updategoods_size() const;
  inline void clear_updategoods();
  static const int kUpdateGoodsFieldNumber = 2;
  inline const ::Goods::UpdateGoods& updategoods(int index) const;
  inline ::Goods::UpdateGoods* mutable_updategoods(int index);
  inline ::Goods::UpdateGoods* add_updategoods();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
      updategoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
      mutable_updategoods();

  // @@protoc_insertion_point(class_scope:Goods.MoveUpdateGoodsRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods > updategoods_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static MoveUpdateGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class DiscardUpdateGoodsRet : public ::google::protobuf::Message {
 public:
  DiscardUpdateGoodsRet();
  virtual ~DiscardUpdateGoodsRet();

  DiscardUpdateGoodsRet(const DiscardUpdateGoodsRet& from);

  inline DiscardUpdateGoodsRet& operator=(const DiscardUpdateGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiscardUpdateGoodsRet& default_instance();

  void Swap(DiscardUpdateGoodsRet* other);

  // implements Message ----------------------------------------------

  DiscardUpdateGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiscardUpdateGoodsRet& from);
  void MergeFrom(const DiscardUpdateGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required .Goods.UpdateGoods updateGoods = 2;
  inline bool has_updategoods() const;
  inline void clear_updategoods();
  static const int kUpdateGoodsFieldNumber = 2;
  inline const ::Goods::UpdateGoods& updategoods() const;
  inline ::Goods::UpdateGoods* mutable_updategoods();
  inline ::Goods::UpdateGoods* release_updategoods();
  inline void set_allocated_updategoods(::Goods::UpdateGoods* updategoods);

  // required int32 goodsID = 3;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 3;
  inline ::google::protobuf::int32 goodsid() const;
  inline void set_goodsid(::google::protobuf::int32 value);

  // required int32 discardNum = 4;
  inline bool has_discardnum() const;
  inline void clear_discardnum();
  static const int kDiscardNumFieldNumber = 4;
  inline ::google::protobuf::int32 discardnum() const;
  inline void set_discardnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Goods.DiscardUpdateGoodsRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_updategoods();
  inline void clear_has_updategoods();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_discardnum();
  inline void clear_has_discardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Goods::UpdateGoods* updategoods_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 goodsid_;
  ::google::protobuf::int32 discardnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static DiscardUpdateGoodsRet* default_instance_;
};
// -------------------------------------------------------------------

class DropGoodsInfo : public ::google::protobuf::Message {
 public:
  DropGoodsInfo();
  virtual ~DropGoodsInfo();

  DropGoodsInfo(const DropGoodsInfo& from);

  inline DropGoodsInfo& operator=(const DropGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropGoodsInfo& default_instance();

  void Swap(DropGoodsInfo* other);

  // implements Message ----------------------------------------------

  DropGoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropGoodsInfo& from);
  void MergeFrom(const DropGoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Goods.DiscardUpdateGoodsRet goods = 1;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 1;
  inline const ::Goods::DiscardUpdateGoodsRet& goods(int index) const;
  inline ::Goods::DiscardUpdateGoodsRet* mutable_goods(int index);
  inline ::Goods::DiscardUpdateGoodsRet* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::DiscardUpdateGoodsRet >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::DiscardUpdateGoodsRet >*
      mutable_goods();

  // @@protoc_insertion_point(class_scope:Goods.DropGoodsInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::DiscardUpdateGoodsRet > goods_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static DropGoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class SimDropSomeGoods : public ::google::protobuf::Message {
 public:
  SimDropSomeGoods();
  virtual ~SimDropSomeGoods();

  SimDropSomeGoods(const SimDropSomeGoods& from);

  inline SimDropSomeGoods& operator=(const SimDropSomeGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimDropSomeGoods& default_instance();

  void Swap(SimDropSomeGoods* other);

  // implements Message ----------------------------------------------

  SimDropSomeGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimDropSomeGoods& from);
  void MergeFrom(const SimDropSomeGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional .Goods.DropGoodsInfo goodsInfo = 2;
  inline bool has_goodsinfo() const;
  inline void clear_goodsinfo();
  static const int kGoodsInfoFieldNumber = 2;
  inline const ::Goods::DropGoodsInfo& goodsinfo() const;
  inline ::Goods::DropGoodsInfo* mutable_goodsinfo();
  inline ::Goods::DropGoodsInfo* release_goodsinfo();
  inline void set_allocated_goodsinfo(::Goods::DropGoodsInfo* goodsinfo);

  // @@protoc_insertion_point(class_scope:Goods.SimDropSomeGoods)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_goodsinfo();
  inline void clear_has_goodsinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Goods::DropGoodsInfo* goodsinfo_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static SimDropSomeGoods* default_instance_;
};
// -------------------------------------------------------------------

class SplitUpdateGoodsRet : public ::google::protobuf::Message {
 public:
  SplitUpdateGoodsRet();
  virtual ~SplitUpdateGoodsRet();

  SplitUpdateGoodsRet(const SplitUpdateGoodsRet& from);

  inline SplitUpdateGoodsRet& operator=(const SplitUpdateGoodsRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SplitUpdateGoodsRet& default_instance();

  void Swap(SplitUpdateGoodsRet* other);

  // implements Message ----------------------------------------------

  SplitUpdateGoodsRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SplitUpdateGoodsRet& from);
  void MergeFrom(const SplitUpdateGoodsRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .Goods.UpdateGoods updateGoods = 2;
  inline int updategoods_size() const;
  inline void clear_updategoods();
  static const int kUpdateGoodsFieldNumber = 2;
  inline const ::Goods::UpdateGoods& updategoods(int index) const;
  inline ::Goods::UpdateGoods* mutable_updategoods(int index);
  inline ::Goods::UpdateGoods* add_updategoods();
  inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
      updategoods() const;
  inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
      mutable_updategoods();

  // @@protoc_insertion_point(class_scope:Goods.SplitUpdateGoodsRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods > updategoods_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fGoodsMessage_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fGoodsMessage_2eproto();

  void InitAsDefaultInstance();
  static SplitUpdateGoodsRet* default_instance_;
};
// ===================================================================


// ===================================================================

// ToGTDropInfo

// required int64 charid = 1;
inline bool ToGTDropInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTDropInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTDropInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTDropInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTDropInfo::charid() const {
  return charid_;
}
inline void ToGTDropInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .Goods.SynToClientDrop item = 2;
inline bool ToGTDropInfo::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTDropInfo::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTDropInfo::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTDropInfo::clear_item() {
  if (item_ != NULL) item_->::Goods::SynToClientDrop::Clear();
  clear_has_item();
}
inline const ::Goods::SynToClientDrop& ToGTDropInfo::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Goods::SynToClientDrop* ToGTDropInfo::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Goods::SynToClientDrop;
  return item_;
}
inline ::Goods::SynToClientDrop* ToGTDropInfo::release_item() {
  clear_has_item();
  ::Goods::SynToClientDrop* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ToGTDropInfo::set_allocated_item(::Goods::SynToClientDrop* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// SynToClientDrop

// repeated .Goods.DropItemInfo item = 1;
inline int SynToClientDrop::item_size() const {
  return item_.size();
}
inline void SynToClientDrop::clear_item() {
  item_.Clear();
}
inline const ::Goods::DropItemInfo& SynToClientDrop::item(int index) const {
  return item_.Get(index);
}
inline ::Goods::DropItemInfo* SynToClientDrop::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::Goods::DropItemInfo* SynToClientDrop::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::DropItemInfo >&
SynToClientDrop::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::DropItemInfo >*
SynToClientDrop::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// DropItemInfo

// required int32 id = 1;
inline bool DropItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropItemInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DropItemInfo::id() const {
  return id_;
}
inline void DropItemInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 key = 2;
inline int DropItemInfo::key_size() const {
  return key_.size();
}
inline void DropItemInfo::clear_key() {
  key_.Clear();
}
inline ::google::protobuf::uint32 DropItemInfo::key(int index) const {
  return key_.Get(index);
}
inline void DropItemInfo::set_key(int index, ::google::protobuf::uint32 value) {
  key_.Set(index, value);
}
inline void DropItemInfo::add_key(::google::protobuf::uint32 value) {
  key_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DropItemInfo::key() const {
  return key_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DropItemInfo::mutable_key() {
  return &key_;
}

// repeated .Goods.SingleDropItem item = 3;
inline int DropItemInfo::item_size() const {
  return item_.size();
}
inline void DropItemInfo::clear_item() {
  item_.Clear();
}
inline const ::Goods::SingleDropItem& DropItemInfo::item(int index) const {
  return item_.Get(index);
}
inline ::Goods::SingleDropItem* DropItemInfo::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::Goods::SingleDropItem* DropItemInfo::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::SingleDropItem >&
DropItemInfo::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::SingleDropItem >*
DropItemInfo::mutable_item() {
  return &item_;
}

// optional bool isBoss = 4;
inline bool DropItemInfo::has_isboss() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DropItemInfo::set_has_isboss() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DropItemInfo::clear_has_isboss() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DropItemInfo::clear_isboss() {
  isboss_ = false;
  clear_has_isboss();
}
inline bool DropItemInfo::isboss() const {
  return isboss_;
}
inline void DropItemInfo::set_isboss(bool value) {
  set_has_isboss();
  isboss_ = value;
}

// -------------------------------------------------------------------

// SingleDropItem

// required int32 id = 1;
inline bool SingleDropItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleDropItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleDropItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleDropItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SingleDropItem::id() const {
  return id_;
}
inline void SingleDropItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 onlyid = 2;
inline bool SingleDropItem::has_onlyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleDropItem::set_has_onlyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleDropItem::clear_has_onlyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleDropItem::clear_onlyid() {
  onlyid_ = 0;
  clear_has_onlyid();
}
inline ::google::protobuf::int32 SingleDropItem::onlyid() const {
  return onlyid_;
}
inline void SingleDropItem::set_onlyid(::google::protobuf::int32 value) {
  set_has_onlyid();
  onlyid_ = value;
}

// optional uint32 pos = 3;
inline bool SingleDropItem::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleDropItem::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleDropItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleDropItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 SingleDropItem::pos() const {
  return pos_;
}
inline void SingleDropItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// ToGMPickItem

// required int64 charid = 1;
inline bool ToGMPickItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGMPickItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGMPickItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGMPickItem::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGMPickItem::charid() const {
  return charid_;
}
inline void ToGMPickItem::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .Goods.PickUpItem item = 2;
inline bool ToGMPickItem::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGMPickItem::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGMPickItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGMPickItem::clear_item() {
  if (item_ != NULL) item_->::Goods::PickUpItem::Clear();
  clear_has_item();
}
inline const ::Goods::PickUpItem& ToGMPickItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Goods::PickUpItem* ToGMPickItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Goods::PickUpItem;
  return item_;
}
inline ::Goods::PickUpItem* ToGMPickItem::release_item() {
  clear_has_item();
  ::Goods::PickUpItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ToGMPickItem::set_allocated_item(::Goods::PickUpItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// AckGTPickItem

// required int64 charid = 1;
inline bool AckGTPickItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckGTPickItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckGTPickItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckGTPickItem::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AckGTPickItem::charid() const {
  return charid_;
}
inline void AckGTPickItem::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .Goods.SynPickUpItem item = 2;
inline bool AckGTPickItem::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckGTPickItem::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckGTPickItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckGTPickItem::clear_item() {
  if (item_ != NULL) item_->::Goods::SynPickUpItem::Clear();
  clear_has_item();
}
inline const ::Goods::SynPickUpItem& AckGTPickItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Goods::SynPickUpItem* AckGTPickItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Goods::SynPickUpItem;
  return item_;
}
inline ::Goods::SynPickUpItem* AckGTPickItem::release_item() {
  clear_has_item();
  ::Goods::SynPickUpItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void AckGTPickItem::set_allocated_item(::Goods::SynPickUpItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// PickUpItem

// repeated .Goods.PickedItem item = 1;
inline int PickUpItem::item_size() const {
  return item_.size();
}
inline void PickUpItem::clear_item() {
  item_.Clear();
}
inline const ::Goods::PickedItem& PickUpItem::item(int index) const {
  return item_.Get(index);
}
inline ::Goods::PickedItem* PickUpItem::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::Goods::PickedItem* PickUpItem::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >&
PickUpItem::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >*
PickUpItem::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// PickedItem

// required int32 id = 1;
inline bool PickedItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PickedItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PickedItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PickedItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PickedItem::id() const {
  return id_;
}
inline void PickedItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 onlyid = 2;
inline bool PickedItem::has_onlyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PickedItem::set_has_onlyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PickedItem::clear_has_onlyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PickedItem::clear_onlyid() {
  onlyid_ = 0;
  clear_has_onlyid();
}
inline ::google::protobuf::int32 PickedItem::onlyid() const {
  return onlyid_;
}
inline void PickedItem::set_onlyid(::google::protobuf::int32 value) {
  set_has_onlyid();
  onlyid_ = value;
}

// -------------------------------------------------------------------

// SynPickUpItem

// repeated .Goods.PickedItem item = 1;
inline int SynPickUpItem::item_size() const {
  return item_.size();
}
inline void SynPickUpItem::clear_item() {
  item_.Clear();
}
inline const ::Goods::PickedItem& SynPickUpItem::item(int index) const {
  return item_.Get(index);
}
inline ::Goods::PickedItem* SynPickUpItem::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::Goods::PickedItem* SynPickUpItem::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >&
SynPickUpItem::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::PickedItem >*
SynPickUpItem::mutable_item() {
  return &item_;
}

// optional int32 ret = 2;
inline bool SynPickUpItem::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynPickUpItem::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynPickUpItem::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynPickUpItem::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SynPickUpItem::ret() const {
  return ret_;
}
inline void SynPickUpItem::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ToGTDeleteDrop

// required int64 charid = 1;
inline bool ToGTDeleteDrop::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTDeleteDrop::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTDeleteDrop::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTDeleteDrop::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTDeleteDrop::charid() const {
  return charid_;
}
inline void ToGTDeleteDrop::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .Goods.DeleteDropItem item = 2;
inline bool ToGTDeleteDrop::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTDeleteDrop::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTDeleteDrop::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTDeleteDrop::clear_item() {
  if (item_ != NULL) item_->::Goods::DeleteDropItem::Clear();
  clear_has_item();
}
inline const ::Goods::DeleteDropItem& ToGTDeleteDrop::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Goods::DeleteDropItem* ToGTDeleteDrop::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Goods::DeleteDropItem;
  return item_;
}
inline ::Goods::DeleteDropItem* ToGTDeleteDrop::release_item() {
  clear_has_item();
  ::Goods::DeleteDropItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ToGTDeleteDrop::set_allocated_item(::Goods::DeleteDropItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// DeleteDropItem

// repeated int32 id = 1;
inline int DeleteDropItem::id_size() const {
  return id_.size();
}
inline void DeleteDropItem::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 DeleteDropItem::id(int index) const {
  return id_.Get(index);
}
inline void DeleteDropItem::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
}
inline void DeleteDropItem::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DeleteDropItem::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DeleteDropItem::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// ClientReqMoveGoods

// required int32 startContainer = 1;
inline bool ClientReqMoveGoods::has_startcontainer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqMoveGoods::set_has_startcontainer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqMoveGoods::clear_has_startcontainer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqMoveGoods::clear_startcontainer() {
  startcontainer_ = 0;
  clear_has_startcontainer();
}
inline ::google::protobuf::int32 ClientReqMoveGoods::startcontainer() const {
  return startcontainer_;
}
inline void ClientReqMoveGoods::set_startcontainer(::google::protobuf::int32 value) {
  set_has_startcontainer();
  startcontainer_ = value;
}

// required int32 startPos = 2;
inline bool ClientReqMoveGoods::has_startpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqMoveGoods::set_has_startpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqMoveGoods::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqMoveGoods::clear_startpos() {
  startpos_ = 0;
  clear_has_startpos();
}
inline ::google::protobuf::int32 ClientReqMoveGoods::startpos() const {
  return startpos_;
}
inline void ClientReqMoveGoods::set_startpos(::google::protobuf::int32 value) {
  set_has_startpos();
  startpos_ = value;
}

// required int32 endContainer = 3;
inline bool ClientReqMoveGoods::has_endcontainer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqMoveGoods::set_has_endcontainer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqMoveGoods::clear_has_endcontainer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqMoveGoods::clear_endcontainer() {
  endcontainer_ = 0;
  clear_has_endcontainer();
}
inline ::google::protobuf::int32 ClientReqMoveGoods::endcontainer() const {
  return endcontainer_;
}
inline void ClientReqMoveGoods::set_endcontainer(::google::protobuf::int32 value) {
  set_has_endcontainer();
  endcontainer_ = value;
}

// required int32 endPos = 4;
inline bool ClientReqMoveGoods::has_endpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientReqMoveGoods::set_has_endpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientReqMoveGoods::clear_has_endpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientReqMoveGoods::clear_endpos() {
  endpos_ = 0;
  clear_has_endpos();
}
inline ::google::protobuf::int32 ClientReqMoveGoods::endpos() const {
  return endpos_;
}
inline void ClientReqMoveGoods::set_endpos(::google::protobuf::int32 value) {
  set_has_endpos();
  endpos_ = value;
}

// required int32 type = 5;
inline bool ClientReqMoveGoods::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientReqMoveGoods::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientReqMoveGoods::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientReqMoveGoods::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ClientReqMoveGoods::type() const {
  return type_;
}
inline void ClientReqMoveGoods::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GTAckToCUpdateGoodsRet

// required int32 status = 1;
inline bool GTAckToCUpdateGoodsRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckToCUpdateGoodsRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckToCUpdateGoodsRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckToCUpdateGoodsRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GTAckToCUpdateGoodsRet::status() const {
  return status_;
}
inline void GTAckToCUpdateGoodsRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .Goods.UpdateGoods updateGoods = 2;
inline int GTAckToCUpdateGoodsRet::updategoods_size() const {
  return updategoods_.size();
}
inline void GTAckToCUpdateGoodsRet::clear_updategoods() {
  updategoods_.Clear();
}
inline const ::Goods::UpdateGoods& GTAckToCUpdateGoodsRet::updategoods(int index) const {
  return updategoods_.Get(index);
}
inline ::Goods::UpdateGoods* GTAckToCUpdateGoodsRet::mutable_updategoods(int index) {
  return updategoods_.Mutable(index);
}
inline ::Goods::UpdateGoods* GTAckToCUpdateGoodsRet::add_updategoods() {
  return updategoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
GTAckToCUpdateGoodsRet::updategoods() const {
  return updategoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
GTAckToCUpdateGoodsRet::mutable_updategoods() {
  return &updategoods_;
}

// optional int32 IsAdd = 3;
inline bool GTAckToCUpdateGoodsRet::has_isadd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTAckToCUpdateGoodsRet::set_has_isadd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTAckToCUpdateGoodsRet::clear_has_isadd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTAckToCUpdateGoodsRet::clear_isadd() {
  isadd_ = 0;
  clear_has_isadd();
}
inline ::google::protobuf::int32 GTAckToCUpdateGoodsRet::isadd() const {
  return isadd_;
}
inline void GTAckToCUpdateGoodsRet::set_isadd(::google::protobuf::int32 value) {
  set_has_isadd();
  isadd_ = value;
}

// -------------------------------------------------------------------

// UpdateGoods

// required int32 container = 1;
inline bool UpdateGoods::has_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGoods::set_has_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGoods::clear_has_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGoods::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 UpdateGoods::container() const {
  return container_;
}
inline void UpdateGoods::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// required int32 pos = 2;
inline bool UpdateGoods::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGoods::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGoods::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGoods::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 UpdateGoods::pos() const {
  return pos_;
}
inline void UpdateGoods::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required .CharLogin.ClientItemInfo itemInfo = 3;
inline bool UpdateGoods::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGoods::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGoods::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGoods::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CharLogin::ClientItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::CharLogin::ClientItemInfo& UpdateGoods::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::CharLogin::ClientItemInfo* UpdateGoods::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::CharLogin::ClientItemInfo;
  return iteminfo_;
}
inline ::CharLogin::ClientItemInfo* UpdateGoods::release_iteminfo() {
  clear_has_iteminfo();
  ::CharLogin::ClientItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void UpdateGoods::set_allocated_iteminfo(::CharLogin::ClientItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// -------------------------------------------------------------------

// ClientReqArrangeGoods

// required int32 container = 1;
inline bool ClientReqArrangeGoods::has_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqArrangeGoods::set_has_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqArrangeGoods::clear_has_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqArrangeGoods::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 ClientReqArrangeGoods::container() const {
  return container_;
}
inline void ClientReqArrangeGoods::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// -------------------------------------------------------------------

// ClientReqUseGoods

// required int32 goodID = 1;
inline bool ClientReqUseGoods::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqUseGoods::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqUseGoods::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqUseGoods::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 ClientReqUseGoods::goodid() const {
  return goodid_;
}
inline void ClientReqUseGoods::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// required int32 num = 2;
inline bool ClientReqUseGoods::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqUseGoods::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqUseGoods::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqUseGoods::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ClientReqUseGoods::num() const {
  return num_;
}
inline void ClientReqUseGoods::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 pos = 3;
inline bool ClientReqUseGoods::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqUseGoods::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqUseGoods::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqUseGoods::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 ClientReqUseGoods::pos() const {
  return pos_;
}
inline void ClientReqUseGoods::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// GTAckToCUseGoodsRet

// required int32 status = 1;
inline bool GTAckToCUseGoodsRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckToCUseGoodsRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckToCUseGoodsRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckToCUseGoodsRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GTAckToCUseGoodsRet::status() const {
  return status_;
}
inline void GTAckToCUseGoodsRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .Goods.UpdateGoods updategoods = 2;
inline int GTAckToCUseGoodsRet::updategoods_size() const {
  return updategoods_.size();
}
inline void GTAckToCUseGoodsRet::clear_updategoods() {
  updategoods_.Clear();
}
inline const ::Goods::UpdateGoods& GTAckToCUseGoodsRet::updategoods(int index) const {
  return updategoods_.Get(index);
}
inline ::Goods::UpdateGoods* GTAckToCUseGoodsRet::mutable_updategoods(int index) {
  return updategoods_.Mutable(index);
}
inline ::Goods::UpdateGoods* GTAckToCUseGoodsRet::add_updategoods() {
  return updategoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
GTAckToCUseGoodsRet::updategoods() const {
  return updategoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
GTAckToCUseGoodsRet::mutable_updategoods() {
  return &updategoods_;
}

// -------------------------------------------------------------------

// ClientReqRecoverGoods

// required int32 container = 1;
inline bool ClientReqRecoverGoods::has_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqRecoverGoods::set_has_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqRecoverGoods::clear_has_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqRecoverGoods::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 ClientReqRecoverGoods::container() const {
  return container_;
}
inline void ClientReqRecoverGoods::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// required int32 pos = 2;
inline bool ClientReqRecoverGoods::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqRecoverGoods::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqRecoverGoods::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqRecoverGoods::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 ClientReqRecoverGoods::pos() const {
  return pos_;
}
inline void ClientReqRecoverGoods::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CReqToGTOpenGoodsRet

// required int32 container = 1;
inline bool CReqToGTOpenGoodsRet::has_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CReqToGTOpenGoodsRet::set_has_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CReqToGTOpenGoodsRet::clear_has_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CReqToGTOpenGoodsRet::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 CReqToGTOpenGoodsRet::container() const {
  return container_;
}
inline void CReqToGTOpenGoodsRet::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// required int32 num = 2;
inline bool CReqToGTOpenGoodsRet::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CReqToGTOpenGoodsRet::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CReqToGTOpenGoodsRet::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CReqToGTOpenGoodsRet::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CReqToGTOpenGoodsRet::num() const {
  return num_;
}
inline void CReqToGTOpenGoodsRet::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GTAckToCOpenGoodsRet

// required int32 status = 1;
inline bool GTAckToCOpenGoodsRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckToCOpenGoodsRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckToCOpenGoodsRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckToCOpenGoodsRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GTAckToCOpenGoodsRet::status() const {
  return status_;
}
inline void GTAckToCOpenGoodsRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 container = 2;
inline bool GTAckToCOpenGoodsRet::has_container() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckToCOpenGoodsRet::set_has_container() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckToCOpenGoodsRet::clear_has_container() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckToCOpenGoodsRet::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 GTAckToCOpenGoodsRet::container() const {
  return container_;
}
inline void GTAckToCOpenGoodsRet::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// repeated int32 pos = 3;
inline int GTAckToCOpenGoodsRet::pos_size() const {
  return pos_.size();
}
inline void GTAckToCOpenGoodsRet::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 GTAckToCOpenGoodsRet::pos(int index) const {
  return pos_.Get(index);
}
inline void GTAckToCOpenGoodsRet::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
}
inline void GTAckToCOpenGoodsRet::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GTAckToCOpenGoodsRet::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GTAckToCOpenGoodsRet::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// GTAckToCSaveGoodsRet

// repeated .Goods.UpdateGoods updategoods = 1;
inline int GTAckToCSaveGoodsRet::updategoods_size() const {
  return updategoods_.size();
}
inline void GTAckToCSaveGoodsRet::clear_updategoods() {
  updategoods_.Clear();
}
inline const ::Goods::UpdateGoods& GTAckToCSaveGoodsRet::updategoods(int index) const {
  return updategoods_.Get(index);
}
inline ::Goods::UpdateGoods* GTAckToCSaveGoodsRet::mutable_updategoods(int index) {
  return updategoods_.Mutable(index);
}
inline ::Goods::UpdateGoods* GTAckToCSaveGoodsRet::add_updategoods() {
  return updategoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
GTAckToCSaveGoodsRet::updategoods() const {
  return updategoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
GTAckToCSaveGoodsRet::mutable_updategoods() {
  return &updategoods_;
}

// -------------------------------------------------------------------

// ToGTAddItem

// required int64 charid = 1;
inline bool ToGTAddItem::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTAddItem::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTAddItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTAddItem::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTAddItem::charid() const {
  return charid_;
}
inline void ToGTAddItem::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .Goods.GTAckToCUpdateGoodsRet item = 2;
inline bool ToGTAddItem::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTAddItem::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTAddItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTAddItem::clear_item() {
  if (item_ != NULL) item_->::Goods::GTAckToCUpdateGoodsRet::Clear();
  clear_has_item();
}
inline const ::Goods::GTAckToCUpdateGoodsRet& ToGTAddItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Goods::GTAckToCUpdateGoodsRet* ToGTAddItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::Goods::GTAckToCUpdateGoodsRet;
  return item_;
}
inline ::Goods::GTAckToCUpdateGoodsRet* ToGTAddItem::release_item() {
  clear_has_item();
  ::Goods::GTAckToCUpdateGoodsRet* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ToGTAddItem::set_allocated_item(::Goods::GTAckToCUpdateGoodsRet* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// ClientReqMoveQuickSector

// required int32 type = 1;
inline bool ClientReqMoveQuickSector::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqMoveQuickSector::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqMoveQuickSector::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqMoveQuickSector::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ClientReqMoveQuickSector::type() const {
  return type_;
}
inline void ClientReqMoveQuickSector::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id = 2;
inline bool ClientReqMoveQuickSector::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqMoveQuickSector::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqMoveQuickSector::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqMoveQuickSector::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ClientReqMoveQuickSector::id() const {
  return id_;
}
inline void ClientReqMoveQuickSector::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 pos = 3;
inline bool ClientReqMoveQuickSector::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqMoveQuickSector::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqMoveQuickSector::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqMoveQuickSector::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 ClientReqMoveQuickSector::pos() const {
  return pos_;
}
inline void ClientReqMoveQuickSector::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 container = 4;
inline bool ClientReqMoveQuickSector::has_container() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientReqMoveQuickSector::set_has_container() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientReqMoveQuickSector::clear_has_container() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientReqMoveQuickSector::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 ClientReqMoveQuickSector::container() const {
  return container_;
}
inline void ClientReqMoveQuickSector::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// -------------------------------------------------------------------

// GTAckToCMoveQuickSectorRet

// required int32 type = 1;
inline bool GTAckToCMoveQuickSectorRet::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTAckToCMoveQuickSectorRet::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTAckToCMoveQuickSectorRet::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTAckToCMoveQuickSectorRet::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GTAckToCMoveQuickSectorRet::type() const {
  return type_;
}
inline void GTAckToCMoveQuickSectorRet::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id = 2;
inline bool GTAckToCMoveQuickSectorRet::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTAckToCMoveQuickSectorRet::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTAckToCMoveQuickSectorRet::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTAckToCMoveQuickSectorRet::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GTAckToCMoveQuickSectorRet::id() const {
  return id_;
}
inline void GTAckToCMoveQuickSectorRet::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 pos = 3;
inline bool GTAckToCMoveQuickSectorRet::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTAckToCMoveQuickSectorRet::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTAckToCMoveQuickSectorRet::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTAckToCMoveQuickSectorRet::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GTAckToCMoveQuickSectorRet::pos() const {
  return pos_;
}
inline void GTAckToCMoveQuickSectorRet::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 container = 4;
inline bool GTAckToCMoveQuickSectorRet::has_container() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GTAckToCMoveQuickSectorRet::set_has_container() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GTAckToCMoveQuickSectorRet::clear_has_container() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GTAckToCMoveQuickSectorRet::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 GTAckToCMoveQuickSectorRet::container() const {
  return container_;
}
inline void GTAckToCMoveQuickSectorRet::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// required int32 status = 5;
inline bool GTAckToCMoveQuickSectorRet::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GTAckToCMoveQuickSectorRet::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GTAckToCMoveQuickSectorRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GTAckToCMoveQuickSectorRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GTAckToCMoveQuickSectorRet::status() const {
  return status_;
}
inline void GTAckToCMoveQuickSectorRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SplitGoods

// required int32 pos = 1;
inline bool SplitGoods::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SplitGoods::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SplitGoods::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SplitGoods::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 SplitGoods::pos() const {
  return pos_;
}
inline void SplitGoods::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 num = 2;
inline bool SplitGoods::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SplitGoods::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SplitGoods::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SplitGoods::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 SplitGoods::num() const {
  return num_;
}
inline void SplitGoods::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GTtoGMMoveGoods

// required int64 charid = 1;
inline bool GTtoGMMoveGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMMoveGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMMoveGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMMoveGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMMoveGoods::charid() const {
  return charid_;
}
inline void GTtoGMMoveGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 startContainer = 2;
inline bool GTtoGMMoveGoods::has_startcontainer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMMoveGoods::set_has_startcontainer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMMoveGoods::clear_has_startcontainer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMMoveGoods::clear_startcontainer() {
  startcontainer_ = 0;
  clear_has_startcontainer();
}
inline ::google::protobuf::int32 GTtoGMMoveGoods::startcontainer() const {
  return startcontainer_;
}
inline void GTtoGMMoveGoods::set_startcontainer(::google::protobuf::int32 value) {
  set_has_startcontainer();
  startcontainer_ = value;
}

// required int32 startPos = 3;
inline bool GTtoGMMoveGoods::has_startpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTtoGMMoveGoods::set_has_startpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTtoGMMoveGoods::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTtoGMMoveGoods::clear_startpos() {
  startpos_ = 0;
  clear_has_startpos();
}
inline ::google::protobuf::int32 GTtoGMMoveGoods::startpos() const {
  return startpos_;
}
inline void GTtoGMMoveGoods::set_startpos(::google::protobuf::int32 value) {
  set_has_startpos();
  startpos_ = value;
}

// required int32 endContainer = 4;
inline bool GTtoGMMoveGoods::has_endcontainer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GTtoGMMoveGoods::set_has_endcontainer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GTtoGMMoveGoods::clear_has_endcontainer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GTtoGMMoveGoods::clear_endcontainer() {
  endcontainer_ = 0;
  clear_has_endcontainer();
}
inline ::google::protobuf::int32 GTtoGMMoveGoods::endcontainer() const {
  return endcontainer_;
}
inline void GTtoGMMoveGoods::set_endcontainer(::google::protobuf::int32 value) {
  set_has_endcontainer();
  endcontainer_ = value;
}

// required int32 endPos = 5;
inline bool GTtoGMMoveGoods::has_endpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GTtoGMMoveGoods::set_has_endpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GTtoGMMoveGoods::clear_has_endpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GTtoGMMoveGoods::clear_endpos() {
  endpos_ = 0;
  clear_has_endpos();
}
inline ::google::protobuf::int32 GTtoGMMoveGoods::endpos() const {
  return endpos_;
}
inline void GTtoGMMoveGoods::set_endpos(::google::protobuf::int32 value) {
  set_has_endpos();
  endpos_ = value;
}

// required int32 type = 6;
inline bool GTtoGMMoveGoods::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GTtoGMMoveGoods::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GTtoGMMoveGoods::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GTtoGMMoveGoods::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GTtoGMMoveGoods::type() const {
  return type_;
}
inline void GTtoGMMoveGoods::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GTtoGMRecoverGoods

// required int64 charid = 1;
inline bool GTtoGMRecoverGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMRecoverGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMRecoverGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMRecoverGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMRecoverGoods::charid() const {
  return charid_;
}
inline void GTtoGMRecoverGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 container = 2;
inline bool GTtoGMRecoverGoods::has_container() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMRecoverGoods::set_has_container() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMRecoverGoods::clear_has_container() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMRecoverGoods::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 GTtoGMRecoverGoods::container() const {
  return container_;
}
inline void GTtoGMRecoverGoods::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// required int32 pos = 3;
inline bool GTtoGMRecoverGoods::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTtoGMRecoverGoods::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTtoGMRecoverGoods::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTtoGMRecoverGoods::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GTtoGMRecoverGoods::pos() const {
  return pos_;
}
inline void GTtoGMRecoverGoods::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// GTtoGMArrangeGoods

// required int64 charid = 1;
inline bool GTtoGMArrangeGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMArrangeGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMArrangeGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMArrangeGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMArrangeGoods::charid() const {
  return charid_;
}
inline void GTtoGMArrangeGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 container = 2;
inline bool GTtoGMArrangeGoods::has_container() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMArrangeGoods::set_has_container() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMArrangeGoods::clear_has_container() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMArrangeGoods::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 GTtoGMArrangeGoods::container() const {
  return container_;
}
inline void GTtoGMArrangeGoods::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// -------------------------------------------------------------------

// GMAckToCTOpenGoodsRet

// required int64 charid = 1;
inline bool GMAckToCTOpenGoodsRet::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMAckToCTOpenGoodsRet::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMAckToCTOpenGoodsRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMAckToCTOpenGoodsRet::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GMAckToCTOpenGoodsRet::charid() const {
  return charid_;
}
inline void GMAckToCTOpenGoodsRet::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .Goods.GTAckToCOpenGoodsRet ret = 2;
inline bool GMAckToCTOpenGoodsRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMAckToCTOpenGoodsRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMAckToCTOpenGoodsRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMAckToCTOpenGoodsRet::clear_ret() {
  if (ret_ != NULL) ret_->::Goods::GTAckToCOpenGoodsRet::Clear();
  clear_has_ret();
}
inline const ::Goods::GTAckToCOpenGoodsRet& GMAckToCTOpenGoodsRet::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::Goods::GTAckToCOpenGoodsRet* GMAckToCTOpenGoodsRet::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::Goods::GTAckToCOpenGoodsRet;
  return ret_;
}
inline ::Goods::GTAckToCOpenGoodsRet* GMAckToCTOpenGoodsRet::release_ret() {
  clear_has_ret();
  ::Goods::GTAckToCOpenGoodsRet* temp = ret_;
  ret_ = NULL;
  return temp;
}
inline void GMAckToCTOpenGoodsRet::set_allocated_ret(::Goods::GTAckToCOpenGoodsRet* ret) {
  delete ret_;
  ret_ = ret;
  if (ret) {
    set_has_ret();
  } else {
    clear_has_ret();
  }
}

// -------------------------------------------------------------------

// GTReqToCMOpenGoodsRet

// required int64 charid = 1;
inline bool GTReqToCMOpenGoodsRet::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTReqToCMOpenGoodsRet::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTReqToCMOpenGoodsRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTReqToCMOpenGoodsRet::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTReqToCMOpenGoodsRet::charid() const {
  return charid_;
}
inline void GTReqToCMOpenGoodsRet::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 container = 2;
inline bool GTReqToCMOpenGoodsRet::has_container() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTReqToCMOpenGoodsRet::set_has_container() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTReqToCMOpenGoodsRet::clear_has_container() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTReqToCMOpenGoodsRet::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 GTReqToCMOpenGoodsRet::container() const {
  return container_;
}
inline void GTReqToCMOpenGoodsRet::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// required int32 num = 3;
inline bool GTReqToCMOpenGoodsRet::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTReqToCMOpenGoodsRet::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTReqToCMOpenGoodsRet::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTReqToCMOpenGoodsRet::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GTReqToCMOpenGoodsRet::num() const {
  return num_;
}
inline void GTReqToCMOpenGoodsRet::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GTtoGMUseGoods

// required int64 charid = 1;
inline bool GTtoGMUseGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTtoGMUseGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTtoGMUseGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTtoGMUseGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTtoGMUseGoods::charid() const {
  return charid_;
}
inline void GTtoGMUseGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 goodID = 2;
inline bool GTtoGMUseGoods::has_goodid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTtoGMUseGoods::set_has_goodid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTtoGMUseGoods::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTtoGMUseGoods::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 GTtoGMUseGoods::goodid() const {
  return goodid_;
}
inline void GTtoGMUseGoods::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// required int32 num = 3;
inline bool GTtoGMUseGoods::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTtoGMUseGoods::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTtoGMUseGoods::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTtoGMUseGoods::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GTtoGMUseGoods::num() const {
  return num_;
}
inline void GTtoGMUseGoods::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 pos = 4;
inline bool GTtoGMUseGoods::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GTtoGMUseGoods::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GTtoGMUseGoods::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GTtoGMUseGoods::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 GTtoGMUseGoods::pos() const {
  return pos_;
}
inline void GTtoGMUseGoods::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CTReqGMMoveQuickSector

// required int64 charid = 1;
inline bool CTReqGMMoveQuickSector::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTReqGMMoveQuickSector::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTReqGMMoveQuickSector::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTReqGMMoveQuickSector::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 CTReqGMMoveQuickSector::charid() const {
  return charid_;
}
inline void CTReqGMMoveQuickSector::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool CTReqGMMoveQuickSector::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTReqGMMoveQuickSector::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTReqGMMoveQuickSector::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTReqGMMoveQuickSector::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CTReqGMMoveQuickSector::type() const {
  return type_;
}
inline void CTReqGMMoveQuickSector::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id = 3;
inline bool CTReqGMMoveQuickSector::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTReqGMMoveQuickSector::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTReqGMMoveQuickSector::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTReqGMMoveQuickSector::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CTReqGMMoveQuickSector::id() const {
  return id_;
}
inline void CTReqGMMoveQuickSector::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 pos = 4;
inline bool CTReqGMMoveQuickSector::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTReqGMMoveQuickSector::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTReqGMMoveQuickSector::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTReqGMMoveQuickSector::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 CTReqGMMoveQuickSector::pos() const {
  return pos_;
}
inline void CTReqGMMoveQuickSector::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 container = 5;
inline bool CTReqGMMoveQuickSector::has_container() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTReqGMMoveQuickSector::set_has_container() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTReqGMMoveQuickSector::clear_has_container() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTReqGMMoveQuickSector::clear_container() {
  container_ = 0;
  clear_has_container();
}
inline ::google::protobuf::int32 CTReqGMMoveQuickSector::container() const {
  return container_;
}
inline void CTReqGMMoveQuickSector::set_container(::google::protobuf::int32 value) {
  set_has_container();
  container_ = value;
}

// -------------------------------------------------------------------

// GT2GMSplitGoods

// required int64 charid = 1;
inline bool GT2GMSplitGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GT2GMSplitGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GT2GMSplitGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GT2GMSplitGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GT2GMSplitGoods::charid() const {
  return charid_;
}
inline void GT2GMSplitGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .Goods.SplitGoods splitgoods = 2;
inline bool GT2GMSplitGoods::has_splitgoods() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GT2GMSplitGoods::set_has_splitgoods() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GT2GMSplitGoods::clear_has_splitgoods() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GT2GMSplitGoods::clear_splitgoods() {
  if (splitgoods_ != NULL) splitgoods_->::Goods::SplitGoods::Clear();
  clear_has_splitgoods();
}
inline const ::Goods::SplitGoods& GT2GMSplitGoods::splitgoods() const {
  return splitgoods_ != NULL ? *splitgoods_ : *default_instance_->splitgoods_;
}
inline ::Goods::SplitGoods* GT2GMSplitGoods::mutable_splitgoods() {
  set_has_splitgoods();
  if (splitgoods_ == NULL) splitgoods_ = new ::Goods::SplitGoods;
  return splitgoods_;
}
inline ::Goods::SplitGoods* GT2GMSplitGoods::release_splitgoods() {
  clear_has_splitgoods();
  ::Goods::SplitGoods* temp = splitgoods_;
  splitgoods_ = NULL;
  return temp;
}
inline void GT2GMSplitGoods::set_allocated_splitgoods(::Goods::SplitGoods* splitgoods) {
  delete splitgoods_;
  splitgoods_ = splitgoods;
  if (splitgoods) {
    set_has_splitgoods();
  } else {
    clear_has_splitgoods();
  }
}

// -------------------------------------------------------------------

// UpdateQuickSector

// required int32 type = 1;
inline bool UpdateQuickSector::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateQuickSector::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateQuickSector::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateQuickSector::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UpdateQuickSector::type() const {
  return type_;
}
inline void UpdateQuickSector::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 pos = 2;
inline bool UpdateQuickSector::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateQuickSector::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateQuickSector::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateQuickSector::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 UpdateQuickSector::pos() const {
  return pos_;
}
inline void UpdateQuickSector::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 goodID = 3;
inline bool UpdateQuickSector::has_goodid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateQuickSector::set_has_goodid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateQuickSector::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateQuickSector::clear_goodid() {
  goodid_ = 0;
  clear_has_goodid();
}
inline ::google::protobuf::int32 UpdateQuickSector::goodid() const {
  return goodid_;
}
inline void UpdateQuickSector::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
}

// -------------------------------------------------------------------

// MoveUpdateGoodsRet

// required int32 status = 1;
inline bool MoveUpdateGoodsRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveUpdateGoodsRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveUpdateGoodsRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveUpdateGoodsRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 MoveUpdateGoodsRet::status() const {
  return status_;
}
inline void MoveUpdateGoodsRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .Goods.UpdateGoods updateGoods = 2;
inline int MoveUpdateGoodsRet::updategoods_size() const {
  return updategoods_.size();
}
inline void MoveUpdateGoodsRet::clear_updategoods() {
  updategoods_.Clear();
}
inline const ::Goods::UpdateGoods& MoveUpdateGoodsRet::updategoods(int index) const {
  return updategoods_.Get(index);
}
inline ::Goods::UpdateGoods* MoveUpdateGoodsRet::mutable_updategoods(int index) {
  return updategoods_.Mutable(index);
}
inline ::Goods::UpdateGoods* MoveUpdateGoodsRet::add_updategoods() {
  return updategoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
MoveUpdateGoodsRet::updategoods() const {
  return updategoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
MoveUpdateGoodsRet::mutable_updategoods() {
  return &updategoods_;
}

// -------------------------------------------------------------------

// DiscardUpdateGoodsRet

// required int32 status = 1;
inline bool DiscardUpdateGoodsRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiscardUpdateGoodsRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiscardUpdateGoodsRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiscardUpdateGoodsRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DiscardUpdateGoodsRet::status() const {
  return status_;
}
inline void DiscardUpdateGoodsRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required .Goods.UpdateGoods updateGoods = 2;
inline bool DiscardUpdateGoodsRet::has_updategoods() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiscardUpdateGoodsRet::set_has_updategoods() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiscardUpdateGoodsRet::clear_has_updategoods() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiscardUpdateGoodsRet::clear_updategoods() {
  if (updategoods_ != NULL) updategoods_->::Goods::UpdateGoods::Clear();
  clear_has_updategoods();
}
inline const ::Goods::UpdateGoods& DiscardUpdateGoodsRet::updategoods() const {
  return updategoods_ != NULL ? *updategoods_ : *default_instance_->updategoods_;
}
inline ::Goods::UpdateGoods* DiscardUpdateGoodsRet::mutable_updategoods() {
  set_has_updategoods();
  if (updategoods_ == NULL) updategoods_ = new ::Goods::UpdateGoods;
  return updategoods_;
}
inline ::Goods::UpdateGoods* DiscardUpdateGoodsRet::release_updategoods() {
  clear_has_updategoods();
  ::Goods::UpdateGoods* temp = updategoods_;
  updategoods_ = NULL;
  return temp;
}
inline void DiscardUpdateGoodsRet::set_allocated_updategoods(::Goods::UpdateGoods* updategoods) {
  delete updategoods_;
  updategoods_ = updategoods;
  if (updategoods) {
    set_has_updategoods();
  } else {
    clear_has_updategoods();
  }
}

// required int32 goodsID = 3;
inline bool DiscardUpdateGoodsRet::has_goodsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DiscardUpdateGoodsRet::set_has_goodsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DiscardUpdateGoodsRet::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DiscardUpdateGoodsRet::clear_goodsid() {
  goodsid_ = 0;
  clear_has_goodsid();
}
inline ::google::protobuf::int32 DiscardUpdateGoodsRet::goodsid() const {
  return goodsid_;
}
inline void DiscardUpdateGoodsRet::set_goodsid(::google::protobuf::int32 value) {
  set_has_goodsid();
  goodsid_ = value;
}

// required int32 discardNum = 4;
inline bool DiscardUpdateGoodsRet::has_discardnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DiscardUpdateGoodsRet::set_has_discardnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DiscardUpdateGoodsRet::clear_has_discardnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DiscardUpdateGoodsRet::clear_discardnum() {
  discardnum_ = 0;
  clear_has_discardnum();
}
inline ::google::protobuf::int32 DiscardUpdateGoodsRet::discardnum() const {
  return discardnum_;
}
inline void DiscardUpdateGoodsRet::set_discardnum(::google::protobuf::int32 value) {
  set_has_discardnum();
  discardnum_ = value;
}

// -------------------------------------------------------------------

// DropGoodsInfo

// repeated .Goods.DiscardUpdateGoodsRet goods = 1;
inline int DropGoodsInfo::goods_size() const {
  return goods_.size();
}
inline void DropGoodsInfo::clear_goods() {
  goods_.Clear();
}
inline const ::Goods::DiscardUpdateGoodsRet& DropGoodsInfo::goods(int index) const {
  return goods_.Get(index);
}
inline ::Goods::DiscardUpdateGoodsRet* DropGoodsInfo::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::Goods::DiscardUpdateGoodsRet* DropGoodsInfo::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::DiscardUpdateGoodsRet >&
DropGoodsInfo::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::DiscardUpdateGoodsRet >*
DropGoodsInfo::mutable_goods() {
  return &goods_;
}

// -------------------------------------------------------------------

// SimDropSomeGoods

// required int32 error = 1;
inline bool SimDropSomeGoods::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimDropSomeGoods::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimDropSomeGoods::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimDropSomeGoods::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 SimDropSomeGoods::error() const {
  return error_;
}
inline void SimDropSomeGoods::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional .Goods.DropGoodsInfo goodsInfo = 2;
inline bool SimDropSomeGoods::has_goodsinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimDropSomeGoods::set_has_goodsinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimDropSomeGoods::clear_has_goodsinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimDropSomeGoods::clear_goodsinfo() {
  if (goodsinfo_ != NULL) goodsinfo_->::Goods::DropGoodsInfo::Clear();
  clear_has_goodsinfo();
}
inline const ::Goods::DropGoodsInfo& SimDropSomeGoods::goodsinfo() const {
  return goodsinfo_ != NULL ? *goodsinfo_ : *default_instance_->goodsinfo_;
}
inline ::Goods::DropGoodsInfo* SimDropSomeGoods::mutable_goodsinfo() {
  set_has_goodsinfo();
  if (goodsinfo_ == NULL) goodsinfo_ = new ::Goods::DropGoodsInfo;
  return goodsinfo_;
}
inline ::Goods::DropGoodsInfo* SimDropSomeGoods::release_goodsinfo() {
  clear_has_goodsinfo();
  ::Goods::DropGoodsInfo* temp = goodsinfo_;
  goodsinfo_ = NULL;
  return temp;
}
inline void SimDropSomeGoods::set_allocated_goodsinfo(::Goods::DropGoodsInfo* goodsinfo) {
  delete goodsinfo_;
  goodsinfo_ = goodsinfo;
  if (goodsinfo) {
    set_has_goodsinfo();
  } else {
    clear_has_goodsinfo();
  }
}

// -------------------------------------------------------------------

// SplitUpdateGoodsRet

// required int32 status = 1;
inline bool SplitUpdateGoodsRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SplitUpdateGoodsRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SplitUpdateGoodsRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SplitUpdateGoodsRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SplitUpdateGoodsRet::status() const {
  return status_;
}
inline void SplitUpdateGoodsRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .Goods.UpdateGoods updateGoods = 2;
inline int SplitUpdateGoodsRet::updategoods_size() const {
  return updategoods_.size();
}
inline void SplitUpdateGoodsRet::clear_updategoods() {
  updategoods_.Clear();
}
inline const ::Goods::UpdateGoods& SplitUpdateGoodsRet::updategoods(int index) const {
  return updategoods_.Get(index);
}
inline ::Goods::UpdateGoods* SplitUpdateGoodsRet::mutable_updategoods(int index) {
  return updategoods_.Mutable(index);
}
inline ::Goods::UpdateGoods* SplitUpdateGoodsRet::add_updategoods() {
  return updategoods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >&
SplitUpdateGoodsRet::updategoods() const {
  return updategoods_;
}
inline ::google::protobuf::RepeatedPtrField< ::Goods::UpdateGoods >*
SplitUpdateGoodsRet::mutable_updategoods() {
  return &updategoods_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Goods

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fGoodsMessage_2eproto__INCLUDED
