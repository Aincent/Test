// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_Mail.proto

#ifndef PROTOBUF_MSProtoc_2fMS_5fMail_2eproto__INCLUDED
#define PROTOBUF_MSProtoc_2fMS_5fMail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MS_MailInfo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

class SpecialItem;
class SpecialMailItemList;
class ClientItemInfo;
class MSSimDBSendMail;
class MailBaseInfo;
class MSReqMailList;
class MSRetMailList;
class MSReqMailInfo;
class MSRetMailInfo;

// ===================================================================

class SpecialItem : public ::google::protobuf::Message {
 public:
  SpecialItem();
  virtual ~SpecialItem();

  SpecialItem(const SpecialItem& from);

  inline SpecialItem& operator=(const SpecialItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialItem& default_instance();

  void Swap(SpecialItem* other);

  // implements Message ----------------------------------------------

  SpecialItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecialItem& from);
  void MergeFrom(const SpecialItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_MailInfo.SpecialItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static SpecialItem* default_instance_;
};
// -------------------------------------------------------------------

class SpecialMailItemList : public ::google::protobuf::Message {
 public:
  SpecialMailItemList();
  virtual ~SpecialMailItemList();

  SpecialMailItemList(const SpecialMailItemList& from);

  inline SpecialMailItemList& operator=(const SpecialMailItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialMailItemList& default_instance();

  void Swap(SpecialMailItemList* other);

  // implements Message ----------------------------------------------

  SpecialMailItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpecialMailItemList& from);
  void MergeFrom(const SpecialMailItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MS_MailInfo.SpecialItem itemList = 1;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 1;
  inline const ::MS_MailInfo::SpecialItem& itemlist(int index) const;
  inline ::MS_MailInfo::SpecialItem* mutable_itemlist(int index);
  inline ::MS_MailInfo::SpecialItem* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::SpecialItem >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::SpecialItem >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:MS_MailInfo.SpecialMailItemList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::SpecialItem > itemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static SpecialMailItemList* default_instance_;
};
// -------------------------------------------------------------------

class ClientItemInfo : public ::google::protobuf::Message {
 public:
  ClientItemInfo();
  virtual ~ClientItemInfo();

  ClientItemInfo(const ClientItemInfo& from);

  inline ClientItemInfo& operator=(const ClientItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientItemInfo& default_instance();

  void Swap(ClientItemInfo* other);

  // implements Message ----------------------------------------------

  ClientItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientItemInfo& from);
  void MergeFrom(const ClientItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated int32 newattr = 3;
  inline int newattr_size() const;
  inline void clear_newattr();
  static const int kNewattrFieldNumber = 3;
  inline ::google::protobuf::int32 newattr(int index) const;
  inline void set_newattr(int index, ::google::protobuf::int32 value);
  inline void add_newattr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      newattr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_newattr();

  // repeated int32 stoneid = 4;
  inline int stoneid_size() const;
  inline void clear_stoneid();
  static const int kStoneidFieldNumber = 4;
  inline ::google::protobuf::int32 stoneid(int index) const;
  inline void set_stoneid(int index, ::google::protobuf::int32 value);
  inline void add_stoneid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stoneid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stoneid();

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 num = 6;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 6;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // repeated int32 inlayPos = 7;
  inline int inlaypos_size() const;
  inline void clear_inlaypos();
  static const int kInlayPosFieldNumber = 7;
  inline ::google::protobuf::int32 inlaypos(int index) const;
  inline void set_inlaypos(int index, ::google::protobuf::int32 value);
  inline void add_inlaypos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      inlaypos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_inlaypos();

  // repeated int32 refineAttrLv = 8;
  inline int refineattrlv_size() const;
  inline void clear_refineattrlv();
  static const int kRefineAttrLvFieldNumber = 8;
  inline ::google::protobuf::int32 refineattrlv(int index) const;
  inline void set_refineattrlv(int index, ::google::protobuf::int32 value);
  inline void add_refineattrlv(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      refineattrlv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_refineattrlv();

  // @@protoc_insertion_point(class_scope:MS_MailInfo.ClientItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > newattr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stoneid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > inlaypos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > refineattrlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static ClientItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class MSSimDBSendMail : public ::google::protobuf::Message {
 public:
  MSSimDBSendMail();
  virtual ~MSSimDBSendMail();

  MSSimDBSendMail(const MSSimDBSendMail& from);

  inline MSSimDBSendMail& operator=(const MSSimDBSendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSSimDBSendMail& default_instance();

  void Swap(MSSimDBSendMail* other);

  // implements Message ----------------------------------------------

  MSSimDBSendMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSSimDBSendMail& from);
  void MergeFrom(const MSSimDBSendMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sendname = 1;
  inline bool has_sendname() const;
  inline void clear_sendname();
  static const int kSendnameFieldNumber = 1;
  inline const ::std::string& sendname() const;
  inline void set_sendname(const ::std::string& value);
  inline void set_sendname(const char* value);
  inline void set_sendname(const char* value, size_t size);
  inline ::std::string* mutable_sendname();
  inline ::std::string* release_sendname();
  inline void set_allocated_sendname(::std::string* sendname);

  // repeated string endname = 2;
  inline int endname_size() const;
  inline void clear_endname();
  static const int kEndnameFieldNumber = 2;
  inline const ::std::string& endname(int index) const;
  inline ::std::string* mutable_endname(int index);
  inline void set_endname(int index, const ::std::string& value);
  inline void set_endname(int index, const char* value);
  inline void set_endname(int index, const char* value, size_t size);
  inline ::std::string* add_endname();
  inline void add_endname(const ::std::string& value);
  inline void add_endname(const char* value);
  inline void add_endname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& endname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_endname();

  // optional string theme = 3;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 3;
  inline const ::std::string& theme() const;
  inline void set_theme(const ::std::string& value);
  inline void set_theme(const char* value);
  inline void set_theme(const char* value, size_t size);
  inline ::std::string* mutable_theme();
  inline ::std::string* release_theme();
  inline void set_allocated_theme(::std::string* theme);

  // optional string substance = 4;
  inline bool has_substance() const;
  inline void clear_substance();
  static const int kSubstanceFieldNumber = 4;
  inline const ::std::string& substance() const;
  inline void set_substance(const ::std::string& value);
  inline void set_substance(const char* value);
  inline void set_substance(const char* value, size_t size);
  inline ::std::string* mutable_substance();
  inline ::std::string* release_substance();
  inline void set_allocated_substance(::std::string* substance);

  // repeated .MS_MailInfo.ClientItemInfo goods = 5;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 5;
  inline const ::MS_MailInfo::ClientItemInfo& goods(int index) const;
  inline ::MS_MailInfo::ClientItemInfo* mutable_goods(int index);
  inline ::MS_MailInfo::ClientItemInfo* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::ClientItemInfo >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::ClientItemInfo >*
      mutable_goods();

  // optional .MS_MailInfo.SpecialMailItemList itemList = 6;
  inline bool has_itemlist() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 6;
  inline const ::MS_MailInfo::SpecialMailItemList& itemlist() const;
  inline ::MS_MailInfo::SpecialMailItemList* mutable_itemlist();
  inline ::MS_MailInfo::SpecialMailItemList* release_itemlist();
  inline void set_allocated_itemlist(::MS_MailInfo::SpecialMailItemList* itemlist);

  // required int32 type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int64 endCharIDList = 8;
  inline int endcharidlist_size() const;
  inline void clear_endcharidlist();
  static const int kEndCharIDListFieldNumber = 8;
  inline ::google::protobuf::int64 endcharidlist(int index) const;
  inline void set_endcharidlist(int index, ::google::protobuf::int64 value);
  inline void add_endcharidlist(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      endcharidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_endcharidlist();

  // repeated string openIDList = 9;
  inline int openidlist_size() const;
  inline void clear_openidlist();
  static const int kOpenIDListFieldNumber = 9;
  inline const ::std::string& openidlist(int index) const;
  inline ::std::string* mutable_openidlist(int index);
  inline void set_openidlist(int index, const ::std::string& value);
  inline void set_openidlist(int index, const char* value);
  inline void set_openidlist(int index, const char* value, size_t size);
  inline ::std::string* add_openidlist();
  inline void add_openidlist(const ::std::string& value);
  inline void add_openidlist(const char* value);
  inline void add_openidlist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& openidlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_openidlist();

  // @@protoc_insertion_point(class_scope:MS_MailInfo.MSSimDBSendMail)
 private:
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_theme();
  inline void clear_has_theme();
  inline void set_has_substance();
  inline void clear_has_substance();
  inline void set_has_itemlist();
  inline void clear_has_itemlist();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sendname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> endname_;
  ::std::string* theme_;
  ::std::string* substance_;
  ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::ClientItemInfo > goods_;
  ::MS_MailInfo::SpecialMailItemList* itemlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > endcharidlist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> openidlist_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static MSSimDBSendMail* default_instance_;
};
// -------------------------------------------------------------------

class MailBaseInfo : public ::google::protobuf::Message {
 public:
  MailBaseInfo();
  virtual ~MailBaseInfo();

  MailBaseInfo(const MailBaseInfo& from);

  inline MailBaseInfo& operator=(const MailBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailBaseInfo& default_instance();

  void Swap(MailBaseInfo* other);

  // implements Message ----------------------------------------------

  MailBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailBaseInfo& from);
  void MergeFrom(const MailBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);

  // optional string theme = 2;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 2;
  inline const ::std::string& theme() const;
  inline void set_theme(const ::std::string& value);
  inline void set_theme(const char* value);
  inline void set_theme(const char* value, size_t size);
  inline ::std::string* mutable_theme();
  inline ::std::string* release_theme();
  inline void set_allocated_theme(::std::string* theme);

  // optional int64 sendTime = 3;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendTimeFieldNumber = 3;
  inline ::google::protobuf::int64 sendtime() const;
  inline void set_sendtime(::google::protobuf::int64 value);

  // optional int32 opened = 4;
  inline bool has_opened() const;
  inline void clear_opened();
  static const int kOpenedFieldNumber = 4;
  inline ::google::protobuf::int32 opened() const;
  inline void set_opened(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_MailInfo.MailBaseInfo)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_theme();
  inline void clear_has_theme();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_opened();
  inline void clear_has_opened();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mailid_;
  ::std::string* theme_;
  ::google::protobuf::int64 sendtime_;
  ::google::protobuf::int32 opened_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static MailBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class MSReqMailList : public ::google::protobuf::Message {
 public:
  MSReqMailList();
  virtual ~MSReqMailList();

  MSReqMailList(const MSReqMailList& from);

  inline MSReqMailList& operator=(const MSReqMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSReqMailList& default_instance();

  void Swap(MSReqMailList* other);

  // implements Message ----------------------------------------------

  MSReqMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSReqMailList& from);
  void MergeFrom(const MSReqMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 begin = 3;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 3;
  inline ::google::protobuf::int32 begin() const;
  inline void set_begin(::google::protobuf::int32 value);

  // required int32 end = 4;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 4;
  inline ::google::protobuf::int32 end() const;
  inline void set_end(::google::protobuf::int32 value);

  // required int64 beginTime = 5;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 5;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // required int64 endTime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MS_MailInfo.MSReqMailList)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 begin_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 end_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static MSReqMailList* default_instance_;
};
// -------------------------------------------------------------------

class MSRetMailList : public ::google::protobuf::Message {
 public:
  MSRetMailList();
  virtual ~MSRetMailList();

  MSRetMailList(const MSRetMailList& from);

  inline MSRetMailList& operator=(const MSRetMailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSRetMailList& default_instance();

  void Swap(MSRetMailList* other);

  // implements Message ----------------------------------------------

  MSRetMailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSRetMailList& from);
  void MergeFrom(const MSRetMailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .MS_MailInfo.MailBaseInfo mailList = 2;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 2;
  inline const ::MS_MailInfo::MailBaseInfo& maillist(int index) const;
  inline ::MS_MailInfo::MailBaseInfo* mutable_maillist(int index);
  inline ::MS_MailInfo::MailBaseInfo* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::MailBaseInfo >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::MailBaseInfo >*
      mutable_maillist();

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_MailInfo.MSRetMailList)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::MailBaseInfo > maillist_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static MSRetMailList* default_instance_;
};
// -------------------------------------------------------------------

class MSReqMailInfo : public ::google::protobuf::Message {
 public:
  MSReqMailInfo();
  virtual ~MSReqMailInfo();

  MSReqMailInfo(const MSReqMailInfo& from);

  inline MSReqMailInfo& operator=(const MSReqMailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSReqMailInfo& default_instance();

  void Swap(MSReqMailInfo* other);

  // implements Message ----------------------------------------------

  MSReqMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSReqMailInfo& from);
  void MergeFrom(const MSReqMailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_MailInfo.MSReqMailInfo)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mailid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static MSReqMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class MSRetMailInfo : public ::google::protobuf::Message {
 public:
  MSRetMailInfo();
  virtual ~MSRetMailInfo();

  MSRetMailInfo(const MSRetMailInfo& from);

  inline MSRetMailInfo& operator=(const MSRetMailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSRetMailInfo& default_instance();

  void Swap(MSRetMailInfo* other);

  // implements Message ----------------------------------------------

  MSRetMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSRetMailInfo& from);
  void MergeFrom(const MSRetMailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .MS_MailInfo.MSSimDBSendMail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::MS_MailInfo::MSSimDBSendMail& mail() const;
  inline ::MS_MailInfo::MSSimDBSendMail* mutable_mail();
  inline ::MS_MailInfo::MSSimDBSendMail* release_mail();
  inline void set_allocated_mail(::MS_MailInfo::MSSimDBSendMail* mail);

  // @@protoc_insertion_point(class_scope:MS_MailInfo.MSRetMailInfo)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MS_MailInfo::MSSimDBSendMail* mail_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMail_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMail_2eproto();

  void InitAsDefaultInstance();
  static MSRetMailInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SpecialItem

// required int32 itemID = 1;
inline bool SpecialItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 SpecialItem::itemid() const {
  return itemid_;
}
inline void SpecialItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 num = 2;
inline bool SpecialItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 SpecialItem::num() const {
  return num_;
}
inline void SpecialItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// SpecialMailItemList

// repeated .MS_MailInfo.SpecialItem itemList = 1;
inline int SpecialMailItemList::itemlist_size() const {
  return itemlist_.size();
}
inline void SpecialMailItemList::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::MS_MailInfo::SpecialItem& SpecialMailItemList::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::MS_MailInfo::SpecialItem* SpecialMailItemList::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::MS_MailInfo::SpecialItem* SpecialMailItemList::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::SpecialItem >&
SpecialMailItemList::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::SpecialItem >*
SpecialMailItemList::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// ClientItemInfo

// required int32 id = 1;
inline bool ClientItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientItemInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ClientItemInfo::id() const {
  return id_;
}
inline void ClientItemInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 flag = 2;
inline bool ClientItemInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientItemInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientItemInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientItemInfo::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 ClientItemInfo::flag() const {
  return flag_;
}
inline void ClientItemInfo::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// repeated int32 newattr = 3;
inline int ClientItemInfo::newattr_size() const {
  return newattr_.size();
}
inline void ClientItemInfo::clear_newattr() {
  newattr_.Clear();
}
inline ::google::protobuf::int32 ClientItemInfo::newattr(int index) const {
  return newattr_.Get(index);
}
inline void ClientItemInfo::set_newattr(int index, ::google::protobuf::int32 value) {
  newattr_.Set(index, value);
}
inline void ClientItemInfo::add_newattr(::google::protobuf::int32 value) {
  newattr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientItemInfo::newattr() const {
  return newattr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientItemInfo::mutable_newattr() {
  return &newattr_;
}

// repeated int32 stoneid = 4;
inline int ClientItemInfo::stoneid_size() const {
  return stoneid_.size();
}
inline void ClientItemInfo::clear_stoneid() {
  stoneid_.Clear();
}
inline ::google::protobuf::int32 ClientItemInfo::stoneid(int index) const {
  return stoneid_.Get(index);
}
inline void ClientItemInfo::set_stoneid(int index, ::google::protobuf::int32 value) {
  stoneid_.Set(index, value);
}
inline void ClientItemInfo::add_stoneid(::google::protobuf::int32 value) {
  stoneid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientItemInfo::stoneid() const {
  return stoneid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientItemInfo::mutable_stoneid() {
  return &stoneid_;
}

// optional int32 time = 5;
inline bool ClientItemInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientItemInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientItemInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientItemInfo::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ClientItemInfo::time() const {
  return time_;
}
inline void ClientItemInfo::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 num = 6;
inline bool ClientItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientItemInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ClientItemInfo::num() const {
  return num_;
}
inline void ClientItemInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// repeated int32 inlayPos = 7;
inline int ClientItemInfo::inlaypos_size() const {
  return inlaypos_.size();
}
inline void ClientItemInfo::clear_inlaypos() {
  inlaypos_.Clear();
}
inline ::google::protobuf::int32 ClientItemInfo::inlaypos(int index) const {
  return inlaypos_.Get(index);
}
inline void ClientItemInfo::set_inlaypos(int index, ::google::protobuf::int32 value) {
  inlaypos_.Set(index, value);
}
inline void ClientItemInfo::add_inlaypos(::google::protobuf::int32 value) {
  inlaypos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientItemInfo::inlaypos() const {
  return inlaypos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientItemInfo::mutable_inlaypos() {
  return &inlaypos_;
}

// repeated int32 refineAttrLv = 8;
inline int ClientItemInfo::refineattrlv_size() const {
  return refineattrlv_.size();
}
inline void ClientItemInfo::clear_refineattrlv() {
  refineattrlv_.Clear();
}
inline ::google::protobuf::int32 ClientItemInfo::refineattrlv(int index) const {
  return refineattrlv_.Get(index);
}
inline void ClientItemInfo::set_refineattrlv(int index, ::google::protobuf::int32 value) {
  refineattrlv_.Set(index, value);
}
inline void ClientItemInfo::add_refineattrlv(::google::protobuf::int32 value) {
  refineattrlv_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientItemInfo::refineattrlv() const {
  return refineattrlv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientItemInfo::mutable_refineattrlv() {
  return &refineattrlv_;
}

// -------------------------------------------------------------------

// MSSimDBSendMail

// required string sendname = 1;
inline bool MSSimDBSendMail::has_sendname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSSimDBSendMail::set_has_sendname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSSimDBSendMail::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSSimDBSendMail::clear_sendname() {
  if (sendname_ != &::google::protobuf::internal::kEmptyString) {
    sendname_->clear();
  }
  clear_has_sendname();
}
inline const ::std::string& MSSimDBSendMail::sendname() const {
  return *sendname_;
}
inline void MSSimDBSendMail::set_sendname(const ::std::string& value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
}
inline void MSSimDBSendMail::set_sendname(const char* value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
}
inline void MSSimDBSendMail::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSSimDBSendMail::mutable_sendname() {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  return sendname_;
}
inline ::std::string* MSSimDBSendMail::release_sendname() {
  clear_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendname_;
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSSimDBSendMail::set_allocated_sendname(::std::string* sendname) {
  if (sendname_ != &::google::protobuf::internal::kEmptyString) {
    delete sendname_;
  }
  if (sendname) {
    set_has_sendname();
    sendname_ = sendname;
  } else {
    clear_has_sendname();
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string endname = 2;
inline int MSSimDBSendMail::endname_size() const {
  return endname_.size();
}
inline void MSSimDBSendMail::clear_endname() {
  endname_.Clear();
}
inline const ::std::string& MSSimDBSendMail::endname(int index) const {
  return endname_.Get(index);
}
inline ::std::string* MSSimDBSendMail::mutable_endname(int index) {
  return endname_.Mutable(index);
}
inline void MSSimDBSendMail::set_endname(int index, const ::std::string& value) {
  endname_.Mutable(index)->assign(value);
}
inline void MSSimDBSendMail::set_endname(int index, const char* value) {
  endname_.Mutable(index)->assign(value);
}
inline void MSSimDBSendMail::set_endname(int index, const char* value, size_t size) {
  endname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSSimDBSendMail::add_endname() {
  return endname_.Add();
}
inline void MSSimDBSendMail::add_endname(const ::std::string& value) {
  endname_.Add()->assign(value);
}
inline void MSSimDBSendMail::add_endname(const char* value) {
  endname_.Add()->assign(value);
}
inline void MSSimDBSendMail::add_endname(const char* value, size_t size) {
  endname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MSSimDBSendMail::endname() const {
  return endname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MSSimDBSendMail::mutable_endname() {
  return &endname_;
}

// optional string theme = 3;
inline bool MSSimDBSendMail::has_theme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSSimDBSendMail::set_has_theme() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSSimDBSendMail::clear_has_theme() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSSimDBSendMail::clear_theme() {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    theme_->clear();
  }
  clear_has_theme();
}
inline const ::std::string& MSSimDBSendMail::theme() const {
  return *theme_;
}
inline void MSSimDBSendMail::set_theme(const ::std::string& value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void MSSimDBSendMail::set_theme(const char* value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void MSSimDBSendMail::set_theme(const char* value, size_t size) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSSimDBSendMail::mutable_theme() {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  return theme_;
}
inline ::std::string* MSSimDBSendMail::release_theme() {
  clear_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = theme_;
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSSimDBSendMail::set_allocated_theme(::std::string* theme) {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    delete theme_;
  }
  if (theme) {
    set_has_theme();
    theme_ = theme;
  } else {
    clear_has_theme();
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string substance = 4;
inline bool MSSimDBSendMail::has_substance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSSimDBSendMail::set_has_substance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSSimDBSendMail::clear_has_substance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSSimDBSendMail::clear_substance() {
  if (substance_ != &::google::protobuf::internal::kEmptyString) {
    substance_->clear();
  }
  clear_has_substance();
}
inline const ::std::string& MSSimDBSendMail::substance() const {
  return *substance_;
}
inline void MSSimDBSendMail::set_substance(const ::std::string& value) {
  set_has_substance();
  if (substance_ == &::google::protobuf::internal::kEmptyString) {
    substance_ = new ::std::string;
  }
  substance_->assign(value);
}
inline void MSSimDBSendMail::set_substance(const char* value) {
  set_has_substance();
  if (substance_ == &::google::protobuf::internal::kEmptyString) {
    substance_ = new ::std::string;
  }
  substance_->assign(value);
}
inline void MSSimDBSendMail::set_substance(const char* value, size_t size) {
  set_has_substance();
  if (substance_ == &::google::protobuf::internal::kEmptyString) {
    substance_ = new ::std::string;
  }
  substance_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSSimDBSendMail::mutable_substance() {
  set_has_substance();
  if (substance_ == &::google::protobuf::internal::kEmptyString) {
    substance_ = new ::std::string;
  }
  return substance_;
}
inline ::std::string* MSSimDBSendMail::release_substance() {
  clear_has_substance();
  if (substance_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = substance_;
    substance_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSSimDBSendMail::set_allocated_substance(::std::string* substance) {
  if (substance_ != &::google::protobuf::internal::kEmptyString) {
    delete substance_;
  }
  if (substance) {
    set_has_substance();
    substance_ = substance;
  } else {
    clear_has_substance();
    substance_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .MS_MailInfo.ClientItemInfo goods = 5;
inline int MSSimDBSendMail::goods_size() const {
  return goods_.size();
}
inline void MSSimDBSendMail::clear_goods() {
  goods_.Clear();
}
inline const ::MS_MailInfo::ClientItemInfo& MSSimDBSendMail::goods(int index) const {
  return goods_.Get(index);
}
inline ::MS_MailInfo::ClientItemInfo* MSSimDBSendMail::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::MS_MailInfo::ClientItemInfo* MSSimDBSendMail::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::ClientItemInfo >&
MSSimDBSendMail::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::ClientItemInfo >*
MSSimDBSendMail::mutable_goods() {
  return &goods_;
}

// optional .MS_MailInfo.SpecialMailItemList itemList = 6;
inline bool MSSimDBSendMail::has_itemlist() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSSimDBSendMail::set_has_itemlist() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSSimDBSendMail::clear_has_itemlist() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSSimDBSendMail::clear_itemlist() {
  if (itemlist_ != NULL) itemlist_->::MS_MailInfo::SpecialMailItemList::Clear();
  clear_has_itemlist();
}
inline const ::MS_MailInfo::SpecialMailItemList& MSSimDBSendMail::itemlist() const {
  return itemlist_ != NULL ? *itemlist_ : *default_instance_->itemlist_;
}
inline ::MS_MailInfo::SpecialMailItemList* MSSimDBSendMail::mutable_itemlist() {
  set_has_itemlist();
  if (itemlist_ == NULL) itemlist_ = new ::MS_MailInfo::SpecialMailItemList;
  return itemlist_;
}
inline ::MS_MailInfo::SpecialMailItemList* MSSimDBSendMail::release_itemlist() {
  clear_has_itemlist();
  ::MS_MailInfo::SpecialMailItemList* temp = itemlist_;
  itemlist_ = NULL;
  return temp;
}
inline void MSSimDBSendMail::set_allocated_itemlist(::MS_MailInfo::SpecialMailItemList* itemlist) {
  delete itemlist_;
  itemlist_ = itemlist;
  if (itemlist) {
    set_has_itemlist();
  } else {
    clear_has_itemlist();
  }
}

// required int32 type = 7;
inline bool MSSimDBSendMail::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSSimDBSendMail::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSSimDBSendMail::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSSimDBSendMail::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSSimDBSendMail::type() const {
  return type_;
}
inline void MSSimDBSendMail::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int64 endCharIDList = 8;
inline int MSSimDBSendMail::endcharidlist_size() const {
  return endcharidlist_.size();
}
inline void MSSimDBSendMail::clear_endcharidlist() {
  endcharidlist_.Clear();
}
inline ::google::protobuf::int64 MSSimDBSendMail::endcharidlist(int index) const {
  return endcharidlist_.Get(index);
}
inline void MSSimDBSendMail::set_endcharidlist(int index, ::google::protobuf::int64 value) {
  endcharidlist_.Set(index, value);
}
inline void MSSimDBSendMail::add_endcharidlist(::google::protobuf::int64 value) {
  endcharidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MSSimDBSendMail::endcharidlist() const {
  return endcharidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MSSimDBSendMail::mutable_endcharidlist() {
  return &endcharidlist_;
}

// repeated string openIDList = 9;
inline int MSSimDBSendMail::openidlist_size() const {
  return openidlist_.size();
}
inline void MSSimDBSendMail::clear_openidlist() {
  openidlist_.Clear();
}
inline const ::std::string& MSSimDBSendMail::openidlist(int index) const {
  return openidlist_.Get(index);
}
inline ::std::string* MSSimDBSendMail::mutable_openidlist(int index) {
  return openidlist_.Mutable(index);
}
inline void MSSimDBSendMail::set_openidlist(int index, const ::std::string& value) {
  openidlist_.Mutable(index)->assign(value);
}
inline void MSSimDBSendMail::set_openidlist(int index, const char* value) {
  openidlist_.Mutable(index)->assign(value);
}
inline void MSSimDBSendMail::set_openidlist(int index, const char* value, size_t size) {
  openidlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSSimDBSendMail::add_openidlist() {
  return openidlist_.Add();
}
inline void MSSimDBSendMail::add_openidlist(const ::std::string& value) {
  openidlist_.Add()->assign(value);
}
inline void MSSimDBSendMail::add_openidlist(const char* value) {
  openidlist_.Add()->assign(value);
}
inline void MSSimDBSendMail::add_openidlist(const char* value, size_t size) {
  openidlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MSSimDBSendMail::openidlist() const {
  return openidlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MSSimDBSendMail::mutable_openidlist() {
  return &openidlist_;
}

// -------------------------------------------------------------------

// MailBaseInfo

// required int64 mailID = 1;
inline bool MailBaseInfo::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailBaseInfo::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailBaseInfo::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailBaseInfo::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 MailBaseInfo::mailid() const {
  return mailid_;
}
inline void MailBaseInfo::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional string theme = 2;
inline bool MailBaseInfo::has_theme() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailBaseInfo::set_has_theme() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailBaseInfo::clear_has_theme() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailBaseInfo::clear_theme() {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    theme_->clear();
  }
  clear_has_theme();
}
inline const ::std::string& MailBaseInfo::theme() const {
  return *theme_;
}
inline void MailBaseInfo::set_theme(const ::std::string& value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void MailBaseInfo::set_theme(const char* value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void MailBaseInfo::set_theme(const char* value, size_t size) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailBaseInfo::mutable_theme() {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  return theme_;
}
inline ::std::string* MailBaseInfo::release_theme() {
  clear_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = theme_;
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailBaseInfo::set_allocated_theme(::std::string* theme) {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    delete theme_;
  }
  if (theme) {
    set_has_theme();
    theme_ = theme;
  } else {
    clear_has_theme();
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 sendTime = 3;
inline bool MailBaseInfo::has_sendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailBaseInfo::set_has_sendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailBaseInfo::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailBaseInfo::clear_sendtime() {
  sendtime_ = GOOGLE_LONGLONG(0);
  clear_has_sendtime();
}
inline ::google::protobuf::int64 MailBaseInfo::sendtime() const {
  return sendtime_;
}
inline void MailBaseInfo::set_sendtime(::google::protobuf::int64 value) {
  set_has_sendtime();
  sendtime_ = value;
}

// optional int32 opened = 4;
inline bool MailBaseInfo::has_opened() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailBaseInfo::set_has_opened() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailBaseInfo::clear_has_opened() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailBaseInfo::clear_opened() {
  opened_ = 0;
  clear_has_opened();
}
inline ::google::protobuf::int32 MailBaseInfo::opened() const {
  return opened_;
}
inline void MailBaseInfo::set_opened(::google::protobuf::int32 value) {
  set_has_opened();
  opened_ = value;
}

// -------------------------------------------------------------------

// MSReqMailList

// required int64 charID = 1;
inline bool MSReqMailList::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSReqMailList::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSReqMailList::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSReqMailList::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 MSReqMailList::charid() const {
  return charid_;
}
inline void MSReqMailList::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool MSReqMailList::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSReqMailList::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSReqMailList::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSReqMailList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSReqMailList::type() const {
  return type_;
}
inline void MSReqMailList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 begin = 3;
inline bool MSReqMailList::has_begin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSReqMailList::set_has_begin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSReqMailList::clear_has_begin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSReqMailList::clear_begin() {
  begin_ = 0;
  clear_has_begin();
}
inline ::google::protobuf::int32 MSReqMailList::begin() const {
  return begin_;
}
inline void MSReqMailList::set_begin(::google::protobuf::int32 value) {
  set_has_begin();
  begin_ = value;
}

// required int32 end = 4;
inline bool MSReqMailList::has_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSReqMailList::set_has_end() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSReqMailList::clear_has_end() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSReqMailList::clear_end() {
  end_ = 0;
  clear_has_end();
}
inline ::google::protobuf::int32 MSReqMailList::end() const {
  return end_;
}
inline void MSReqMailList::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
}

// required int64 beginTime = 5;
inline bool MSReqMailList::has_begintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSReqMailList::set_has_begintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSReqMailList::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSReqMailList::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 MSReqMailList::begintime() const {
  return begintime_;
}
inline void MSReqMailList::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// required int64 endTime = 6;
inline bool MSReqMailList::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSReqMailList::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSReqMailList::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSReqMailList::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 MSReqMailList::endtime() const {
  return endtime_;
}
inline void MSReqMailList::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// MSRetMailList

// required int32 ret = 1;
inline bool MSRetMailList::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSRetMailList::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSRetMailList::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSRetMailList::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MSRetMailList::ret() const {
  return ret_;
}
inline void MSRetMailList::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .MS_MailInfo.MailBaseInfo mailList = 2;
inline int MSRetMailList::maillist_size() const {
  return maillist_.size();
}
inline void MSRetMailList::clear_maillist() {
  maillist_.Clear();
}
inline const ::MS_MailInfo::MailBaseInfo& MSRetMailList::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::MS_MailInfo::MailBaseInfo* MSRetMailList::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::MS_MailInfo::MailBaseInfo* MSRetMailList::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::MailBaseInfo >&
MSRetMailList::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_MailInfo::MailBaseInfo >*
MSRetMailList::mutable_maillist() {
  return &maillist_;
}

// optional int32 count = 3;
inline bool MSRetMailList::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSRetMailList::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSRetMailList::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSRetMailList::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 MSRetMailList::count() const {
  return count_;
}
inline void MSRetMailList::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// MSReqMailInfo

// required int64 mailID = 1;
inline bool MSReqMailInfo::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSReqMailInfo::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSReqMailInfo::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSReqMailInfo::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 MSReqMailInfo::mailid() const {
  return mailid_;
}
inline void MSReqMailInfo::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
}

// required int32 type = 2;
inline bool MSReqMailInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSReqMailInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSReqMailInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSReqMailInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSReqMailInfo::type() const {
  return type_;
}
inline void MSReqMailInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MSRetMailInfo

// required int32 ret = 1;
inline bool MSRetMailInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSRetMailInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSRetMailInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSRetMailInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MSRetMailInfo::ret() const {
  return ret_;
}
inline void MSRetMailInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .MS_MailInfo.MSSimDBSendMail mail = 2;
inline bool MSRetMailInfo::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSRetMailInfo::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSRetMailInfo::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSRetMailInfo::clear_mail() {
  if (mail_ != NULL) mail_->::MS_MailInfo::MSSimDBSendMail::Clear();
  clear_has_mail();
}
inline const ::MS_MailInfo::MSSimDBSendMail& MSRetMailInfo::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MS_MailInfo::MSSimDBSendMail* MSRetMailInfo::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MS_MailInfo::MSSimDBSendMail;
  return mail_;
}
inline ::MS_MailInfo::MSSimDBSendMail* MSRetMailInfo::release_mail() {
  clear_has_mail();
  ::MS_MailInfo::MSSimDBSendMail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void MSRetMailInfo::set_allocated_mail(::MS_MailInfo::MSSimDBSendMail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MS_MailInfo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSProtoc_2fMS_5fMail_2eproto__INCLUDED
