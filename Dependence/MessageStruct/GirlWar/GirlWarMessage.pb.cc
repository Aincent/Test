// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GirlWar/GirlWarMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GirlWar/GirlWarMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace GirlWarMessageInfo {

namespace {

const ::google::protobuf::Descriptor* FromClientGirlWarInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FromClientGirlWarInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClientGirlWarInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClientGirlWarInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClentNotHaveGirlWar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClentNotHaveGirlWar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClentEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClentEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* FromClentUplv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FromClentUplv_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClentUplv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClentUplv_reflection_ = NULL;
const ::google::protobuf::Descriptor* FromClentFight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FromClentFight_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClentFight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClentFight_reflection_ = NULL;
const ::google::protobuf::Descriptor* FromClentRevive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FromClentRevive_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClientActivate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClientActivate_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientModifyUIState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientModifyUIState_reflection_ = NULL;
const ::google::protobuf::Descriptor* GirlWarEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GirlWarEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetGirlWarEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetGirlWarEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* GirlWarOneKeyEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GirlWarOneKeyEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetGirlWarOneKeyEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetGirlWarOneKeyEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* GirlWarUpQuality_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GirlWarUpQuality_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetGirlWarUpQuality_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetGirlWarUpQuality_reflection_ = NULL;
const ::google::protobuf::Descriptor* GirlWarUpSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GirlWarUpSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetGirlWarUpSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetGirlWarUpSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* FromClientUpStar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FromClientUpStar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClientUpStar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClientUpStar_reflection_ = NULL;
const ::google::protobuf::Descriptor* FromClientGetGirlWar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FromClientGetGirlWar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToClientGetGirlWar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToClientGetGirlWar_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GirlWar_2fGirlWarMessage_2eproto() {
  protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GirlWar/GirlWarMessage.proto");
  GOOGLE_CHECK(file != NULL);
  FromClientGirlWarInfo_descriptor_ = file->message_type(0);
  static const int FromClientGirlWarInfo_offsets_[1] = {
  };
  FromClientGirlWarInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FromClientGirlWarInfo_descriptor_,
      FromClientGirlWarInfo::default_instance_,
      FromClientGirlWarInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientGirlWarInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientGirlWarInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FromClientGirlWarInfo));
  ToClientGirlWarInfo_descriptor_ = file->message_type(1);
  static const int ToClientGirlWarInfo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, need_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, starrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, deadtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, skill1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, skill2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, skill3_),
  };
  ToClientGirlWarInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClientGirlWarInfo_descriptor_,
      ToClientGirlWarInfo::default_instance_,
      ToClientGirlWarInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGirlWarInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClientGirlWarInfo));
  ToClentNotHaveGirlWar_descriptor_ = file->message_type(2);
  static const int ToClentNotHaveGirlWar_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentNotHaveGirlWar, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentNotHaveGirlWar, ref_),
  };
  ToClentNotHaveGirlWar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClentNotHaveGirlWar_descriptor_,
      ToClentNotHaveGirlWar::default_instance_,
      ToClentNotHaveGirlWar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentNotHaveGirlWar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentNotHaveGirlWar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClentNotHaveGirlWar));
  ToClentEquip_descriptor_ = file->message_type(3);
  static const int ToClentEquip_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentEquip, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentEquip, id_),
  };
  ToClentEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClentEquip_descriptor_,
      ToClentEquip::default_instance_,
      ToClentEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClentEquip));
  FromClentUplv_descriptor_ = file->message_type(4);
  static const int FromClentUplv_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentUplv, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentUplv, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentUplv, isbuy_),
  };
  FromClentUplv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FromClentUplv_descriptor_,
      FromClentUplv::default_instance_,
      FromClentUplv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentUplv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentUplv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FromClentUplv));
  ToClentUplv_descriptor_ = file->message_type(5);
  static const int ToClentUplv_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentUplv, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentUplv, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentUplv, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentUplv, lv_),
  };
  ToClentUplv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClentUplv_descriptor_,
      ToClentUplv::default_instance_,
      ToClentUplv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentUplv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentUplv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClentUplv));
  FromClentFight_descriptor_ = file->message_type(6);
  static const int FromClentFight_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentFight, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentFight, id_),
  };
  FromClentFight_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FromClentFight_descriptor_,
      FromClentFight::default_instance_,
      FromClentFight_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentFight, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentFight, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FromClentFight));
  ToClentFight_descriptor_ = file->message_type(7);
  static const int ToClentFight_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentFight, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentFight, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentFight, type_),
  };
  ToClentFight_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClentFight_descriptor_,
      ToClentFight::default_instance_,
      ToClentFight_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentFight, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClentFight, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClentFight));
  FromClentRevive_descriptor_ = file->message_type(8);
  static const int FromClentRevive_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentRevive, id_),
  };
  FromClentRevive_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FromClentRevive_descriptor_,
      FromClentRevive::default_instance_,
      FromClentRevive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentRevive, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClentRevive, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FromClentRevive));
  ToClientActivate_descriptor_ = file->message_type(9);
  static const int ToClientActivate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientActivate, id_),
  };
  ToClientActivate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClientActivate_descriptor_,
      ToClientActivate::default_instance_,
      ToClientActivate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientActivate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientActivate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClientActivate));
  ClientModifyUIState_descriptor_ = file->message_type(10);
  static const int ClientModifyUIState_offsets_[1] = {
  };
  ClientModifyUIState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientModifyUIState_descriptor_,
      ClientModifyUIState::default_instance_,
      ClientModifyUIState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientModifyUIState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientModifyUIState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientModifyUIState));
  GirlWarEquip_descriptor_ = file->message_type(11);
  static const int GirlWarEquip_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarEquip, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarEquip, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarEquip, index_),
  };
  GirlWarEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GirlWarEquip_descriptor_,
      GirlWarEquip::default_instance_,
      GirlWarEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GirlWarEquip));
  RetGirlWarEquip_descriptor_ = file->message_type(12);
  static const int RetGirlWarEquip_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarEquip, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarEquip, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarEquip, equip_),
  };
  RetGirlWarEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetGirlWarEquip_descriptor_,
      RetGirlWarEquip::default_instance_,
      RetGirlWarEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetGirlWarEquip));
  GirlWarOneKeyEquip_descriptor_ = file->message_type(13);
  static const int GirlWarOneKeyEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarOneKeyEquip, id_),
  };
  GirlWarOneKeyEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GirlWarOneKeyEquip_descriptor_,
      GirlWarOneKeyEquip::default_instance_,
      GirlWarOneKeyEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarOneKeyEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarOneKeyEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GirlWarOneKeyEquip));
  RetGirlWarOneKeyEquip_descriptor_ = file->message_type(14);
  static const int RetGirlWarOneKeyEquip_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarOneKeyEquip, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarOneKeyEquip, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarOneKeyEquip, equip_),
  };
  RetGirlWarOneKeyEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetGirlWarOneKeyEquip_descriptor_,
      RetGirlWarOneKeyEquip::default_instance_,
      RetGirlWarOneKeyEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarOneKeyEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarOneKeyEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetGirlWarOneKeyEquip));
  GirlWarUpQuality_descriptor_ = file->message_type(15);
  static const int GirlWarUpQuality_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpQuality, id_),
  };
  GirlWarUpQuality_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GirlWarUpQuality_descriptor_,
      GirlWarUpQuality::default_instance_,
      GirlWarUpQuality_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpQuality, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpQuality, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GirlWarUpQuality));
  RetGirlWarUpQuality_descriptor_ = file->message_type(16);
  static const int RetGirlWarUpQuality_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, skill1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, skill2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, skill3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, quality_),
  };
  RetGirlWarUpQuality_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetGirlWarUpQuality_descriptor_,
      RetGirlWarUpQuality::default_instance_,
      RetGirlWarUpQuality_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpQuality, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetGirlWarUpQuality));
  GirlWarUpSkill_descriptor_ = file->message_type(17);
  static const int GirlWarUpSkill_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpSkill, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpSkill, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpSkill, index_),
  };
  GirlWarUpSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GirlWarUpSkill_descriptor_,
      GirlWarUpSkill::default_instance_,
      GirlWarUpSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GirlWarUpSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GirlWarUpSkill));
  RetGirlWarUpSkill_descriptor_ = file->message_type(18);
  static const int RetGirlWarUpSkill_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpSkill, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpSkill, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpSkill, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpSkill, index_),
  };
  RetGirlWarUpSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetGirlWarUpSkill_descriptor_,
      RetGirlWarUpSkill::default_instance_,
      RetGirlWarUpSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetGirlWarUpSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetGirlWarUpSkill));
  FromClientUpStar_descriptor_ = file->message_type(19);
  static const int FromClientUpStar_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientUpStar, id_),
  };
  FromClientUpStar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FromClientUpStar_descriptor_,
      FromClientUpStar::default_instance_,
      FromClientUpStar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientUpStar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientUpStar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FromClientUpStar));
  ToClientUpStar_descriptor_ = file->message_type(20);
  static const int ToClientUpStar_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientUpStar, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientUpStar, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientUpStar, starrank_),
  };
  ToClientUpStar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClientUpStar_descriptor_,
      ToClientUpStar::default_instance_,
      ToClientUpStar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientUpStar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientUpStar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClientUpStar));
  FromClientGetGirlWar_descriptor_ = file->message_type(21);
  static const int FromClientGetGirlWar_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientGetGirlWar, id_),
  };
  FromClientGetGirlWar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FromClientGetGirlWar_descriptor_,
      FromClientGetGirlWar::default_instance_,
      FromClientGetGirlWar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientGetGirlWar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FromClientGetGirlWar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FromClientGetGirlWar));
  ToClientGetGirlWar_descriptor_ = file->message_type(22);
  static const int ToClientGetGirlWar_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGetGirlWar, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGetGirlWar, id_),
  };
  ToClientGetGirlWar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ToClientGetGirlWar_descriptor_,
      ToClientGetGirlWar::default_instance_,
      ToClientGetGirlWar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGetGirlWar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToClientGetGirlWar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ToClientGetGirlWar));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GirlWar_2fGirlWarMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FromClientGirlWarInfo_descriptor_, &FromClientGirlWarInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClientGirlWarInfo_descriptor_, &ToClientGirlWarInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClentNotHaveGirlWar_descriptor_, &ToClentNotHaveGirlWar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClentEquip_descriptor_, &ToClentEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FromClentUplv_descriptor_, &FromClentUplv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClentUplv_descriptor_, &ToClentUplv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FromClentFight_descriptor_, &FromClentFight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClentFight_descriptor_, &ToClentFight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FromClentRevive_descriptor_, &FromClentRevive::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClientActivate_descriptor_, &ToClientActivate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientModifyUIState_descriptor_, &ClientModifyUIState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GirlWarEquip_descriptor_, &GirlWarEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetGirlWarEquip_descriptor_, &RetGirlWarEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GirlWarOneKeyEquip_descriptor_, &GirlWarOneKeyEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetGirlWarOneKeyEquip_descriptor_, &RetGirlWarOneKeyEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GirlWarUpQuality_descriptor_, &GirlWarUpQuality::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetGirlWarUpQuality_descriptor_, &RetGirlWarUpQuality::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GirlWarUpSkill_descriptor_, &GirlWarUpSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetGirlWarUpSkill_descriptor_, &RetGirlWarUpSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FromClientUpStar_descriptor_, &FromClientUpStar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClientUpStar_descriptor_, &ToClientUpStar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FromClientGetGirlWar_descriptor_, &FromClientGetGirlWar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ToClientGetGirlWar_descriptor_, &ToClientGetGirlWar::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GirlWar_2fGirlWarMessage_2eproto() {
  delete FromClientGirlWarInfo::default_instance_;
  delete FromClientGirlWarInfo_reflection_;
  delete ToClientGirlWarInfo::default_instance_;
  delete ToClientGirlWarInfo_reflection_;
  delete ToClentNotHaveGirlWar::default_instance_;
  delete ToClentNotHaveGirlWar_reflection_;
  delete ToClentEquip::default_instance_;
  delete ToClentEquip_reflection_;
  delete FromClentUplv::default_instance_;
  delete FromClentUplv_reflection_;
  delete ToClentUplv::default_instance_;
  delete ToClentUplv_reflection_;
  delete FromClentFight::default_instance_;
  delete FromClentFight_reflection_;
  delete ToClentFight::default_instance_;
  delete ToClentFight_reflection_;
  delete FromClentRevive::default_instance_;
  delete FromClentRevive_reflection_;
  delete ToClientActivate::default_instance_;
  delete ToClientActivate_reflection_;
  delete ClientModifyUIState::default_instance_;
  delete ClientModifyUIState_reflection_;
  delete GirlWarEquip::default_instance_;
  delete GirlWarEquip_reflection_;
  delete RetGirlWarEquip::default_instance_;
  delete RetGirlWarEquip_reflection_;
  delete GirlWarOneKeyEquip::default_instance_;
  delete GirlWarOneKeyEquip_reflection_;
  delete RetGirlWarOneKeyEquip::default_instance_;
  delete RetGirlWarOneKeyEquip_reflection_;
  delete GirlWarUpQuality::default_instance_;
  delete GirlWarUpQuality_reflection_;
  delete RetGirlWarUpQuality::default_instance_;
  delete RetGirlWarUpQuality_reflection_;
  delete GirlWarUpSkill::default_instance_;
  delete GirlWarUpSkill_reflection_;
  delete RetGirlWarUpSkill::default_instance_;
  delete RetGirlWarUpSkill_reflection_;
  delete FromClientUpStar::default_instance_;
  delete FromClientUpStar_reflection_;
  delete ToClientUpStar::default_instance_;
  delete ToClientUpStar_reflection_;
  delete FromClientGetGirlWar::default_instance_;
  delete FromClientGetGirlWar_reflection_;
  delete ToClientGetGirlWar::default_instance_;
  delete ToClientGetGirlWar_reflection_;
}

void protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034GirlWar/GirlWarMessage.proto\022\022GirlWarM"
    "essageInfo\"\027\n\025FromClientGirlWarInfo\"\242\002\n\023"
    "ToClientGirlWarInfo\022\013\n\003ret\030\001 \003(\005\022\n\n\002id\030\002"
    " \003(\005\0227\n\004need\030\003 \003(\0132).GirlWarMessageInfo."
    "ToClentNotHaveGirlWar\022\n\n\002lv\030\004 \003(\005\022\n\n\002hp\030"
    "\005 \003(\005\022\020\n\010starrank\030\006 \003(\005\022\017\n\007Quality\030\007 \003(\005"
    "\022\020\n\010deadtime\030\010 \003(\001\022\013\n\003exp\030\t \003(\001\022/\n\005equip"
    "\030\n \003(\0132 .GirlWarMessageInfo.ToClentEquip"
    "\022\016\n\006skill1\030\013 \003(\005\022\016\n\006skill2\030\014 \003(\005\022\016\n\006skil"
    "l3\030\r \003(\005\"2\n\025ToClentNotHaveGirlWar\022\014\n\004typ"
    "e\030\001 \003(\005\022\013\n\003ref\030\002 \003(\005\")\n\014ToClentEquip\022\r\n\005"
    "index\030\001 \003(\005\022\n\n\002id\030\002 \003(\005\"8\n\rFromClentUplv"
    "\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \001(\005\022\r\n\005isbuy\030\003 \001("
    "\010\"\?\n\013ToClentUplv\022\013\n\003ret\030\001 \002(\005\022\n\n\002id\030\002 \001("
    "\005\022\013\n\003exp\030\003 \001(\001\022\n\n\002lv\030\004 \001(\005\")\n\016FromClentF"
    "ight\022\013\n\003ret\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\"5\n\014ToClent"
    "Fight\022\013\n\003ret\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\022\014\n\004type\030\003"
    " \001(\005\"\035\n\017FromClentRevive\022\n\n\002id\030\001 \002(\005\"\036\n\020T"
    "oClientActivate\022\n\n\002id\030\001 \002(\005\"\025\n\023ClientMod"
    "ifyUIState\":\n\014GirlWarEquip\022\n\n\002id\030\001 \002(\005\022\017"
    "\n\007equipid\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\"[\n\017RetGir"
    "lWarEquip\022\013\n\003ret\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\022/\n\005eq"
    "uip\030\003 \001(\0132 .GirlWarMessageInfo.ToClentEq"
    "uip\" \n\022GirlWarOneKeyEquip\022\n\n\002id\030\001 \002(\005\"a\n"
    "\025RetGirlWarOneKeyEquip\022\013\n\003ret\030\001 \002(\005\022\n\n\002i"
    "d\030\002 \001(\005\022/\n\005equip\030\003 \001(\0132 .GirlWarMessageI"
    "nfo.ToClentEquip\"\036\n\020GirlWarUpQuality\022\n\n\002"
    "id\030\001 \002(\005\"o\n\023RetGirlWarUpQuality\022\013\n\003ret\030\001"
    " \002(\005\022\n\n\002id\030\002 \001(\005\022\016\n\006skill1\030\003 \001(\005\022\016\n\006skil"
    "l2\030\004 \001(\005\022\016\n\006skill3\030\005 \001(\005\022\017\n\007quality\030\006 \001("
    "\005\"<\n\016GirlWarUpSkill\022\n\n\002id\030\001 \002(\005\022\017\n\007skill"
    "id\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\"L\n\021RetGirlWarUpS"
    "kill\022\013\n\003ret\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\022\017\n\007skillid"
    "\030\003 \001(\005\022\r\n\005index\030\004 \001(\005\"\036\n\020FromClientUpSta"
    "r\022\n\n\002id\030\001 \002(\005\";\n\016ToClientUpStar\022\013\n\003ret\030\001"
    " \002(\005\022\n\n\002id\030\002 \001(\005\022\020\n\010starrank\030\003 \001(\005\"\"\n\024Fr"
    "omClientGetGirlWar\022\n\n\002id\030\001 \002(\005\"-\n\022ToClie"
    "ntGetGirlWar\022\013\n\003ret\030\001 \002(\005\022\n\n\002id\030\002 \001(\005", 1517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GirlWar/GirlWarMessage.proto", &protobuf_RegisterTypes);
  FromClientGirlWarInfo::default_instance_ = new FromClientGirlWarInfo();
  ToClientGirlWarInfo::default_instance_ = new ToClientGirlWarInfo();
  ToClentNotHaveGirlWar::default_instance_ = new ToClentNotHaveGirlWar();
  ToClentEquip::default_instance_ = new ToClentEquip();
  FromClentUplv::default_instance_ = new FromClentUplv();
  ToClentUplv::default_instance_ = new ToClentUplv();
  FromClentFight::default_instance_ = new FromClentFight();
  ToClentFight::default_instance_ = new ToClentFight();
  FromClentRevive::default_instance_ = new FromClentRevive();
  ToClientActivate::default_instance_ = new ToClientActivate();
  ClientModifyUIState::default_instance_ = new ClientModifyUIState();
  GirlWarEquip::default_instance_ = new GirlWarEquip();
  RetGirlWarEquip::default_instance_ = new RetGirlWarEquip();
  GirlWarOneKeyEquip::default_instance_ = new GirlWarOneKeyEquip();
  RetGirlWarOneKeyEquip::default_instance_ = new RetGirlWarOneKeyEquip();
  GirlWarUpQuality::default_instance_ = new GirlWarUpQuality();
  RetGirlWarUpQuality::default_instance_ = new RetGirlWarUpQuality();
  GirlWarUpSkill::default_instance_ = new GirlWarUpSkill();
  RetGirlWarUpSkill::default_instance_ = new RetGirlWarUpSkill();
  FromClientUpStar::default_instance_ = new FromClientUpStar();
  ToClientUpStar::default_instance_ = new ToClientUpStar();
  FromClientGetGirlWar::default_instance_ = new FromClientGetGirlWar();
  ToClientGetGirlWar::default_instance_ = new ToClientGetGirlWar();
  FromClientGirlWarInfo::default_instance_->InitAsDefaultInstance();
  ToClientGirlWarInfo::default_instance_->InitAsDefaultInstance();
  ToClentNotHaveGirlWar::default_instance_->InitAsDefaultInstance();
  ToClentEquip::default_instance_->InitAsDefaultInstance();
  FromClentUplv::default_instance_->InitAsDefaultInstance();
  ToClentUplv::default_instance_->InitAsDefaultInstance();
  FromClentFight::default_instance_->InitAsDefaultInstance();
  ToClentFight::default_instance_->InitAsDefaultInstance();
  FromClentRevive::default_instance_->InitAsDefaultInstance();
  ToClientActivate::default_instance_->InitAsDefaultInstance();
  ClientModifyUIState::default_instance_->InitAsDefaultInstance();
  GirlWarEquip::default_instance_->InitAsDefaultInstance();
  RetGirlWarEquip::default_instance_->InitAsDefaultInstance();
  GirlWarOneKeyEquip::default_instance_->InitAsDefaultInstance();
  RetGirlWarOneKeyEquip::default_instance_->InitAsDefaultInstance();
  GirlWarUpQuality::default_instance_->InitAsDefaultInstance();
  RetGirlWarUpQuality::default_instance_->InitAsDefaultInstance();
  GirlWarUpSkill::default_instance_->InitAsDefaultInstance();
  RetGirlWarUpSkill::default_instance_->InitAsDefaultInstance();
  FromClientUpStar::default_instance_->InitAsDefaultInstance();
  ToClientUpStar::default_instance_->InitAsDefaultInstance();
  FromClientGetGirlWar::default_instance_->InitAsDefaultInstance();
  ToClientGetGirlWar::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GirlWar_2fGirlWarMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GirlWar_2fGirlWarMessage_2eproto {
  StaticDescriptorInitializer_GirlWar_2fGirlWarMessage_2eproto() {
    protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  }
} static_descriptor_initializer_GirlWar_2fGirlWarMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

FromClientGirlWarInfo::FromClientGirlWarInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FromClientGirlWarInfo::InitAsDefaultInstance() {
}

FromClientGirlWarInfo::FromClientGirlWarInfo(const FromClientGirlWarInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FromClientGirlWarInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FromClientGirlWarInfo::~FromClientGirlWarInfo() {
  SharedDtor();
}

void FromClientGirlWarInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FromClientGirlWarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromClientGirlWarInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FromClientGirlWarInfo_descriptor_;
}

const FromClientGirlWarInfo& FromClientGirlWarInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

FromClientGirlWarInfo* FromClientGirlWarInfo::default_instance_ = NULL;

FromClientGirlWarInfo* FromClientGirlWarInfo::New() const {
  return new FromClientGirlWarInfo;
}

void FromClientGirlWarInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FromClientGirlWarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FromClientGirlWarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FromClientGirlWarInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FromClientGirlWarInfo::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromClientGirlWarInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FromClientGirlWarInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FromClientGirlWarInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FromClientGirlWarInfo::MergeFrom(const FromClientGirlWarInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FromClientGirlWarInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromClientGirlWarInfo::CopyFrom(const FromClientGirlWarInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromClientGirlWarInfo::IsInitialized() const {

  return true;
}

void FromClientGirlWarInfo::Swap(FromClientGirlWarInfo* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FromClientGirlWarInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FromClientGirlWarInfo_descriptor_;
  metadata.reflection = FromClientGirlWarInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClientGirlWarInfo::kRetFieldNumber;
const int ToClientGirlWarInfo::kIdFieldNumber;
const int ToClientGirlWarInfo::kNeedFieldNumber;
const int ToClientGirlWarInfo::kLvFieldNumber;
const int ToClientGirlWarInfo::kHpFieldNumber;
const int ToClientGirlWarInfo::kStarrankFieldNumber;
const int ToClientGirlWarInfo::kQualityFieldNumber;
const int ToClientGirlWarInfo::kDeadtimeFieldNumber;
const int ToClientGirlWarInfo::kExpFieldNumber;
const int ToClientGirlWarInfo::kEquipFieldNumber;
const int ToClientGirlWarInfo::kSkill1FieldNumber;
const int ToClientGirlWarInfo::kSkill2FieldNumber;
const int ToClientGirlWarInfo::kSkill3FieldNumber;
#endif  // !_MSC_VER

ToClientGirlWarInfo::ToClientGirlWarInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClientGirlWarInfo::InitAsDefaultInstance() {
}

ToClientGirlWarInfo::ToClientGirlWarInfo(const ToClientGirlWarInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClientGirlWarInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClientGirlWarInfo::~ToClientGirlWarInfo() {
  SharedDtor();
}

void ToClientGirlWarInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClientGirlWarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClientGirlWarInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClientGirlWarInfo_descriptor_;
}

const ToClientGirlWarInfo& ToClientGirlWarInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClientGirlWarInfo* ToClientGirlWarInfo::default_instance_ = NULL;

ToClientGirlWarInfo* ToClientGirlWarInfo::New() const {
  return new ToClientGirlWarInfo;
}

void ToClientGirlWarInfo::Clear() {
  ret_.Clear();
  id_.Clear();
  need_.Clear();
  lv_.Clear();
  hp_.Clear();
  starrank_.Clear();
  quality_.Clear();
  deadtime_.Clear();
  exp_.Clear();
  equip_.Clear();
  skill1_.Clear();
  skill2_.Clear();
  skill3_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClientGirlWarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_ret())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ret())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_ret;
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // repeated int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        if (input->ExpectTag(26)) goto parse_need;
        break;
      }

      // repeated .GirlWarMessageInfo.ToClentNotHaveGirlWar need = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_need:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_need()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_need;
        if (input->ExpectTag(32)) goto parse_lv;
        break;
      }

      // repeated int32 lv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_lv())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lv())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lv;
        if (input->ExpectTag(40)) goto parse_hp;
        break;
      }

      // repeated int32 hp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_hp())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hp())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_hp;
        if (input->ExpectTag(48)) goto parse_starrank;
        break;
      }

      // repeated int32 starrank = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starrank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_starrank())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_starrank())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_starrank;
        if (input->ExpectTag(56)) goto parse_Quality;
        break;
      }

      // repeated int32 Quality = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_quality())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_quality())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_Quality;
        if (input->ExpectTag(65)) goto parse_deadtime;
        break;
      }

      // repeated double deadtime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_deadtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65, input, this->mutable_deadtime())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_deadtime())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_deadtime;
        if (input->ExpectTag(73)) goto parse_exp;
        break;
      }

      // repeated double exp = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 73, input, this->mutable_exp())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_exp())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_exp;
        if (input->ExpectTag(82)) goto parse_equip;
        break;
      }

      // repeated .GirlWarMessageInfo.ToClentEquip equip = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_equip;
        if (input->ExpectTag(88)) goto parse_skill1;
        break;
      }

      // repeated int32 skill1 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88, input, this->mutable_skill1())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill1())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_skill1;
        if (input->ExpectTag(96)) goto parse_skill2;
        break;
      }

      // repeated int32 skill2 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_skill2())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill2())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_skill2;
        if (input->ExpectTag(104)) goto parse_skill3;
        break;
      }

      // repeated int32 skill3 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_skill3())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill3())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_skill3;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClientGirlWarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 ret = 1;
  for (int i = 0; i < this->ret_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->ret(i), output);
  }

  // repeated int32 id = 2;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->id(i), output);
  }

  // repeated .GirlWarMessageInfo.ToClentNotHaveGirlWar need = 3;
  for (int i = 0; i < this->need_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->need(i), output);
  }

  // repeated int32 lv = 4;
  for (int i = 0; i < this->lv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->lv(i), output);
  }

  // repeated int32 hp = 5;
  for (int i = 0; i < this->hp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->hp(i), output);
  }

  // repeated int32 starrank = 6;
  for (int i = 0; i < this->starrank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->starrank(i), output);
  }

  // repeated int32 Quality = 7;
  for (int i = 0; i < this->quality_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->quality(i), output);
  }

  // repeated double deadtime = 8;
  for (int i = 0; i < this->deadtime_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->deadtime(i), output);
  }

  // repeated double exp = 9;
  for (int i = 0; i < this->exp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      9, this->exp(i), output);
  }

  // repeated .GirlWarMessageInfo.ToClentEquip equip = 10;
  for (int i = 0; i < this->equip_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->equip(i), output);
  }

  // repeated int32 skill1 = 11;
  for (int i = 0; i < this->skill1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->skill1(i), output);
  }

  // repeated int32 skill2 = 12;
  for (int i = 0; i < this->skill2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->skill2(i), output);
  }

  // repeated int32 skill3 = 13;
  for (int i = 0; i < this->skill3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->skill3(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClientGirlWarInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 ret = 1;
  for (int i = 0; i < this->ret_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->ret(i), target);
  }

  // repeated int32 id = 2;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->id(i), target);
  }

  // repeated .GirlWarMessageInfo.ToClentNotHaveGirlWar need = 3;
  for (int i = 0; i < this->need_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->need(i), target);
  }

  // repeated int32 lv = 4;
  for (int i = 0; i < this->lv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->lv(i), target);
  }

  // repeated int32 hp = 5;
  for (int i = 0; i < this->hp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->hp(i), target);
  }

  // repeated int32 starrank = 6;
  for (int i = 0; i < this->starrank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->starrank(i), target);
  }

  // repeated int32 Quality = 7;
  for (int i = 0; i < this->quality_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->quality(i), target);
  }

  // repeated double deadtime = 8;
  for (int i = 0; i < this->deadtime_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(8, this->deadtime(i), target);
  }

  // repeated double exp = 9;
  for (int i = 0; i < this->exp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(9, this->exp(i), target);
  }

  // repeated .GirlWarMessageInfo.ToClentEquip equip = 10;
  for (int i = 0; i < this->equip_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->equip(i), target);
  }

  // repeated int32 skill1 = 11;
  for (int i = 0; i < this->skill1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(11, this->skill1(i), target);
  }

  // repeated int32 skill2 = 12;
  for (int i = 0; i < this->skill2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->skill2(i), target);
  }

  // repeated int32 skill3 = 13;
  for (int i = 0; i < this->skill3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->skill3(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClientGirlWarInfo::ByteSize() const {
  int total_size = 0;

  // repeated int32 ret = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ret_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ret(i));
    }
    total_size += 1 * this->ret_size() + data_size;
  }

  // repeated int32 id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  // repeated .GirlWarMessageInfo.ToClentNotHaveGirlWar need = 3;
  total_size += 1 * this->need_size();
  for (int i = 0; i < this->need_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->need(i));
  }

  // repeated int32 lv = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->lv_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lv(i));
    }
    total_size += 1 * this->lv_size() + data_size;
  }

  // repeated int32 hp = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->hp_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hp(i));
    }
    total_size += 1 * this->hp_size() + data_size;
  }

  // repeated int32 starrank = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->starrank_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->starrank(i));
    }
    total_size += 1 * this->starrank_size() + data_size;
  }

  // repeated int32 Quality = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->quality_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->quality(i));
    }
    total_size += 1 * this->quality_size() + data_size;
  }

  // repeated double deadtime = 8;
  {
    int data_size = 0;
    data_size = 8 * this->deadtime_size();
    total_size += 1 * this->deadtime_size() + data_size;
  }

  // repeated double exp = 9;
  {
    int data_size = 0;
    data_size = 8 * this->exp_size();
    total_size += 1 * this->exp_size() + data_size;
  }

  // repeated .GirlWarMessageInfo.ToClentEquip equip = 10;
  total_size += 1 * this->equip_size();
  for (int i = 0; i < this->equip_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip(i));
  }

  // repeated int32 skill1 = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill1(i));
    }
    total_size += 1 * this->skill1_size() + data_size;
  }

  // repeated int32 skill2 = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill2_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill2(i));
    }
    total_size += 1 * this->skill2_size() + data_size;
  }

  // repeated int32 skill3 = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill3_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill3(i));
    }
    total_size += 1 * this->skill3_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClientGirlWarInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClientGirlWarInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClientGirlWarInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClientGirlWarInfo::MergeFrom(const ToClientGirlWarInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  ret_.MergeFrom(from.ret_);
  id_.MergeFrom(from.id_);
  need_.MergeFrom(from.need_);
  lv_.MergeFrom(from.lv_);
  hp_.MergeFrom(from.hp_);
  starrank_.MergeFrom(from.starrank_);
  quality_.MergeFrom(from.quality_);
  deadtime_.MergeFrom(from.deadtime_);
  exp_.MergeFrom(from.exp_);
  equip_.MergeFrom(from.equip_);
  skill1_.MergeFrom(from.skill1_);
  skill2_.MergeFrom(from.skill2_);
  skill3_.MergeFrom(from.skill3_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClientGirlWarInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClientGirlWarInfo::CopyFrom(const ToClientGirlWarInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClientGirlWarInfo::IsInitialized() const {

  return true;
}

void ToClientGirlWarInfo::Swap(ToClientGirlWarInfo* other) {
  if (other != this) {
    ret_.Swap(&other->ret_);
    id_.Swap(&other->id_);
    need_.Swap(&other->need_);
    lv_.Swap(&other->lv_);
    hp_.Swap(&other->hp_);
    starrank_.Swap(&other->starrank_);
    quality_.Swap(&other->quality_);
    deadtime_.Swap(&other->deadtime_);
    exp_.Swap(&other->exp_);
    equip_.Swap(&other->equip_);
    skill1_.Swap(&other->skill1_);
    skill2_.Swap(&other->skill2_);
    skill3_.Swap(&other->skill3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClientGirlWarInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClientGirlWarInfo_descriptor_;
  metadata.reflection = ToClientGirlWarInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClentNotHaveGirlWar::kTypeFieldNumber;
const int ToClentNotHaveGirlWar::kRefFieldNumber;
#endif  // !_MSC_VER

ToClentNotHaveGirlWar::ToClentNotHaveGirlWar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClentNotHaveGirlWar::InitAsDefaultInstance() {
}

ToClentNotHaveGirlWar::ToClentNotHaveGirlWar(const ToClentNotHaveGirlWar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClentNotHaveGirlWar::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClentNotHaveGirlWar::~ToClentNotHaveGirlWar() {
  SharedDtor();
}

void ToClentNotHaveGirlWar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClentNotHaveGirlWar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClentNotHaveGirlWar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClentNotHaveGirlWar_descriptor_;
}

const ToClentNotHaveGirlWar& ToClentNotHaveGirlWar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClentNotHaveGirlWar* ToClentNotHaveGirlWar::default_instance_ = NULL;

ToClentNotHaveGirlWar* ToClentNotHaveGirlWar::New() const {
  return new ToClentNotHaveGirlWar;
}

void ToClentNotHaveGirlWar::Clear() {
  type_.Clear();
  ref_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClentNotHaveGirlWar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_type())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_type;
        if (input->ExpectTag(16)) goto parse_ref;
        break;
      }

      // repeated int32 ref = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ref:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_ref())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ref())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ref;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClentNotHaveGirlWar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 type = 1;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->type(i), output);
  }

  // repeated int32 ref = 2;
  for (int i = 0; i < this->ref_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->ref(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClentNotHaveGirlWar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 type = 1;
  for (int i = 0; i < this->type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->type(i), target);
  }

  // repeated int32 ref = 2;
  for (int i = 0; i < this->ref_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->ref(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClentNotHaveGirlWar::ByteSize() const {
  int total_size = 0;

  // repeated int32 type = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->type(i));
    }
    total_size += 1 * this->type_size() + data_size;
  }

  // repeated int32 ref = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->ref_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ref(i));
    }
    total_size += 1 * this->ref_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClentNotHaveGirlWar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClentNotHaveGirlWar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClentNotHaveGirlWar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClentNotHaveGirlWar::MergeFrom(const ToClentNotHaveGirlWar& from) {
  GOOGLE_CHECK_NE(&from, this);
  type_.MergeFrom(from.type_);
  ref_.MergeFrom(from.ref_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClentNotHaveGirlWar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClentNotHaveGirlWar::CopyFrom(const ToClentNotHaveGirlWar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClentNotHaveGirlWar::IsInitialized() const {

  return true;
}

void ToClentNotHaveGirlWar::Swap(ToClentNotHaveGirlWar* other) {
  if (other != this) {
    type_.Swap(&other->type_);
    ref_.Swap(&other->ref_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClentNotHaveGirlWar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClentNotHaveGirlWar_descriptor_;
  metadata.reflection = ToClentNotHaveGirlWar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClentEquip::kIndexFieldNumber;
const int ToClentEquip::kIdFieldNumber;
#endif  // !_MSC_VER

ToClentEquip::ToClentEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClentEquip::InitAsDefaultInstance() {
}

ToClentEquip::ToClentEquip(const ToClentEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClentEquip::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClentEquip::~ToClentEquip() {
  SharedDtor();
}

void ToClentEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClentEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClentEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClentEquip_descriptor_;
}

const ToClentEquip& ToClentEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClentEquip* ToClentEquip::default_instance_ = NULL;

ToClentEquip* ToClentEquip::New() const {
  return new ToClentEquip;
}

void ToClentEquip::Clear() {
  index_.Clear();
  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClentEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_index;
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // repeated int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClentEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->index(i), output);
  }

  // repeated int32 id = 2;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClentEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->index(i), target);
  }

  // repeated int32 id = 2;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClentEquip::ByteSize() const {
  int total_size = 0;

  // repeated int32 index = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }

  // repeated int32 id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClentEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClentEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClentEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClentEquip::MergeFrom(const ToClentEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  index_.MergeFrom(from.index_);
  id_.MergeFrom(from.id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClentEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClentEquip::CopyFrom(const ToClentEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClentEquip::IsInitialized() const {

  return true;
}

void ToClentEquip::Swap(ToClentEquip* other) {
  if (other != this) {
    index_.Swap(&other->index_);
    id_.Swap(&other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClentEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClentEquip_descriptor_;
  metadata.reflection = ToClentEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FromClentUplv::kIdFieldNumber;
const int FromClentUplv::kTypeFieldNumber;
const int FromClentUplv::kIsbuyFieldNumber;
#endif  // !_MSC_VER

FromClentUplv::FromClentUplv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FromClentUplv::InitAsDefaultInstance() {
}

FromClentUplv::FromClentUplv(const FromClentUplv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FromClentUplv::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  isbuy_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FromClentUplv::~FromClentUplv() {
  SharedDtor();
}

void FromClentUplv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FromClentUplv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromClentUplv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FromClentUplv_descriptor_;
}

const FromClentUplv& FromClentUplv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

FromClentUplv* FromClentUplv::default_instance_ = NULL;

FromClentUplv* FromClentUplv::New() const {
  return new FromClentUplv;
}

void FromClentUplv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 0;
    isbuy_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FromClentUplv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_isbuy;
        break;
      }

      // optional bool isbuy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isbuy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isbuy_)));
          set_has_isbuy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FromClentUplv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional bool isbuy = 3;
  if (has_isbuy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isbuy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FromClentUplv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional bool isbuy = 3;
  if (has_isbuy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isbuy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FromClentUplv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bool isbuy = 3;
    if (has_isbuy()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromClentUplv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FromClentUplv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FromClentUplv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FromClentUplv::MergeFrom(const FromClentUplv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_isbuy()) {
      set_isbuy(from.isbuy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FromClentUplv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromClentUplv::CopyFrom(const FromClentUplv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromClentUplv::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FromClentUplv::Swap(FromClentUplv* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(isbuy_, other->isbuy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FromClentUplv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FromClentUplv_descriptor_;
  metadata.reflection = FromClentUplv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClentUplv::kRetFieldNumber;
const int ToClentUplv::kIdFieldNumber;
const int ToClentUplv::kExpFieldNumber;
const int ToClentUplv::kLvFieldNumber;
#endif  // !_MSC_VER

ToClentUplv::ToClentUplv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClentUplv::InitAsDefaultInstance() {
}

ToClentUplv::ToClentUplv(const ToClentUplv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClentUplv::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  exp_ = 0;
  lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClentUplv::~ToClentUplv() {
  SharedDtor();
}

void ToClentUplv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClentUplv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClentUplv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClentUplv_descriptor_;
}

const ToClentUplv& ToClentUplv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClentUplv* ToClentUplv::default_instance_ = NULL;

ToClentUplv* ToClentUplv::New() const {
  return new ToClentUplv;
}

void ToClentUplv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    exp_ = 0;
    lv_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClentUplv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_exp;
        break;
      }

      // optional double exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lv;
        break;
      }

      // optional int32 lv = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClentUplv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional double exp = 3;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->exp(), output);
  }

  // optional int32 lv = 4;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClentUplv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional double exp = 3;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->exp(), target);
  }

  // optional int32 lv = 4;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClentUplv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional double exp = 3;
    if (has_exp()) {
      total_size += 1 + 8;
    }

    // optional int32 lv = 4;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClentUplv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClentUplv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClentUplv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClentUplv::MergeFrom(const ToClentUplv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClentUplv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClentUplv::CopyFrom(const ToClentUplv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClentUplv::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ToClentUplv::Swap(ToClentUplv* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(exp_, other->exp_);
    std::swap(lv_, other->lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClentUplv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClentUplv_descriptor_;
  metadata.reflection = ToClentUplv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FromClentFight::kRetFieldNumber;
const int FromClentFight::kIdFieldNumber;
#endif  // !_MSC_VER

FromClentFight::FromClentFight()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FromClentFight::InitAsDefaultInstance() {
}

FromClentFight::FromClentFight(const FromClentFight& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FromClentFight::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FromClentFight::~FromClentFight() {
  SharedDtor();
}

void FromClentFight::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FromClentFight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromClentFight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FromClentFight_descriptor_;
}

const FromClentFight& FromClentFight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

FromClentFight* FromClentFight::default_instance_ = NULL;

FromClentFight* FromClentFight::New() const {
  return new FromClentFight;
}

void FromClentFight::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FromClentFight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FromClentFight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FromClentFight::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FromClentFight::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromClentFight::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FromClentFight* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FromClentFight*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FromClentFight::MergeFrom(const FromClentFight& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FromClentFight::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromClentFight::CopyFrom(const FromClentFight& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromClentFight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FromClentFight::Swap(FromClentFight* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FromClentFight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FromClentFight_descriptor_;
  metadata.reflection = FromClentFight_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClentFight::kRetFieldNumber;
const int ToClentFight::kIdFieldNumber;
const int ToClentFight::kTypeFieldNumber;
#endif  // !_MSC_VER

ToClentFight::ToClentFight()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClentFight::InitAsDefaultInstance() {
}

ToClentFight::ToClentFight(const ToClentFight& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClentFight::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClentFight::~ToClentFight() {
  SharedDtor();
}

void ToClentFight::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClentFight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClentFight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClentFight_descriptor_;
}

const ToClentFight& ToClentFight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClentFight* ToClentFight::default_instance_ = NULL;

ToClentFight* ToClentFight::New() const {
  return new ToClentFight;
}

void ToClentFight::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClentFight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClentFight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClentFight::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClentFight::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClentFight::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClentFight* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClentFight*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClentFight::MergeFrom(const ToClentFight& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClentFight::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClentFight::CopyFrom(const ToClentFight& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClentFight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ToClentFight::Swap(ToClentFight* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClentFight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClentFight_descriptor_;
  metadata.reflection = ToClentFight_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FromClentRevive::kIdFieldNumber;
#endif  // !_MSC_VER

FromClentRevive::FromClentRevive()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FromClentRevive::InitAsDefaultInstance() {
}

FromClentRevive::FromClentRevive(const FromClentRevive& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FromClentRevive::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FromClentRevive::~FromClentRevive() {
  SharedDtor();
}

void FromClentRevive::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FromClentRevive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromClentRevive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FromClentRevive_descriptor_;
}

const FromClentRevive& FromClentRevive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

FromClentRevive* FromClentRevive::default_instance_ = NULL;

FromClentRevive* FromClentRevive::New() const {
  return new FromClentRevive;
}

void FromClentRevive::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FromClentRevive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FromClentRevive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FromClentRevive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FromClentRevive::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromClentRevive::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FromClentRevive* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FromClentRevive*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FromClentRevive::MergeFrom(const FromClentRevive& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FromClentRevive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromClentRevive::CopyFrom(const FromClentRevive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromClentRevive::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FromClentRevive::Swap(FromClentRevive* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FromClentRevive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FromClentRevive_descriptor_;
  metadata.reflection = FromClentRevive_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClientActivate::kIdFieldNumber;
#endif  // !_MSC_VER

ToClientActivate::ToClientActivate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClientActivate::InitAsDefaultInstance() {
}

ToClientActivate::ToClientActivate(const ToClientActivate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClientActivate::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClientActivate::~ToClientActivate() {
  SharedDtor();
}

void ToClientActivate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClientActivate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClientActivate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClientActivate_descriptor_;
}

const ToClientActivate& ToClientActivate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClientActivate* ToClientActivate::default_instance_ = NULL;

ToClientActivate* ToClientActivate::New() const {
  return new ToClientActivate;
}

void ToClientActivate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClientActivate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClientActivate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClientActivate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClientActivate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClientActivate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClientActivate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClientActivate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClientActivate::MergeFrom(const ToClientActivate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClientActivate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClientActivate::CopyFrom(const ToClientActivate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClientActivate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ToClientActivate::Swap(ToClientActivate* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClientActivate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClientActivate_descriptor_;
  metadata.reflection = ToClientActivate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ClientModifyUIState::ClientModifyUIState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientModifyUIState::InitAsDefaultInstance() {
}

ClientModifyUIState::ClientModifyUIState(const ClientModifyUIState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientModifyUIState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientModifyUIState::~ClientModifyUIState() {
  SharedDtor();
}

void ClientModifyUIState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientModifyUIState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientModifyUIState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientModifyUIState_descriptor_;
}

const ClientModifyUIState& ClientModifyUIState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ClientModifyUIState* ClientModifyUIState::default_instance_ = NULL;

ClientModifyUIState* ClientModifyUIState::New() const {
  return new ClientModifyUIState;
}

void ClientModifyUIState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientModifyUIState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ClientModifyUIState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientModifyUIState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientModifyUIState::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientModifyUIState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientModifyUIState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientModifyUIState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientModifyUIState::MergeFrom(const ClientModifyUIState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientModifyUIState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientModifyUIState::CopyFrom(const ClientModifyUIState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientModifyUIState::IsInitialized() const {

  return true;
}

void ClientModifyUIState::Swap(ClientModifyUIState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientModifyUIState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientModifyUIState_descriptor_;
  metadata.reflection = ClientModifyUIState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GirlWarEquip::kIdFieldNumber;
const int GirlWarEquip::kEquipidFieldNumber;
const int GirlWarEquip::kIndexFieldNumber;
#endif  // !_MSC_VER

GirlWarEquip::GirlWarEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GirlWarEquip::InitAsDefaultInstance() {
}

GirlWarEquip::GirlWarEquip(const GirlWarEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GirlWarEquip::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  equipid_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GirlWarEquip::~GirlWarEquip() {
  SharedDtor();
}

void GirlWarEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GirlWarEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GirlWarEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GirlWarEquip_descriptor_;
}

const GirlWarEquip& GirlWarEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

GirlWarEquip* GirlWarEquip::default_instance_ = NULL;

GirlWarEquip* GirlWarEquip::New() const {
  return new GirlWarEquip;
}

void GirlWarEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    equipid_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GirlWarEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equipid;
        break;
      }

      // optional int32 equipid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GirlWarEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 equipid = 2;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equipid(), output);
  }

  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GirlWarEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 equipid = 2;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equipid(), target);
  }

  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GirlWarEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 equipid = 2;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipid());
    }

    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GirlWarEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GirlWarEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GirlWarEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GirlWarEquip::MergeFrom(const GirlWarEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GirlWarEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GirlWarEquip::CopyFrom(const GirlWarEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GirlWarEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GirlWarEquip::Swap(GirlWarEquip* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(equipid_, other->equipid_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GirlWarEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GirlWarEquip_descriptor_;
  metadata.reflection = GirlWarEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetGirlWarEquip::kRetFieldNumber;
const int RetGirlWarEquip::kIdFieldNumber;
const int RetGirlWarEquip::kEquipFieldNumber;
#endif  // !_MSC_VER

RetGirlWarEquip::RetGirlWarEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetGirlWarEquip::InitAsDefaultInstance() {
  equip_ = const_cast< ::GirlWarMessageInfo::ToClentEquip*>(&::GirlWarMessageInfo::ToClentEquip::default_instance());
}

RetGirlWarEquip::RetGirlWarEquip(const RetGirlWarEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetGirlWarEquip::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  equip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetGirlWarEquip::~RetGirlWarEquip() {
  SharedDtor();
}

void RetGirlWarEquip::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
  }
}

void RetGirlWarEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetGirlWarEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetGirlWarEquip_descriptor_;
}

const RetGirlWarEquip& RetGirlWarEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

RetGirlWarEquip* RetGirlWarEquip::default_instance_ = NULL;

RetGirlWarEquip* RetGirlWarEquip::New() const {
  return new RetGirlWarEquip;
}

void RetGirlWarEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    if (has_equip()) {
      if (equip_ != NULL) equip_->::GirlWarMessageInfo::ToClentEquip::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetGirlWarEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_equip;
        break;
      }

      // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetGirlWarEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->equip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetGirlWarEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->equip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetGirlWarEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetGirlWarEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetGirlWarEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetGirlWarEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetGirlWarEquip::MergeFrom(const RetGirlWarEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_equip()) {
      mutable_equip()->::GirlWarMessageInfo::ToClentEquip::MergeFrom(from.equip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetGirlWarEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetGirlWarEquip::CopyFrom(const RetGirlWarEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetGirlWarEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetGirlWarEquip::Swap(RetGirlWarEquip* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(equip_, other->equip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetGirlWarEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetGirlWarEquip_descriptor_;
  metadata.reflection = RetGirlWarEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GirlWarOneKeyEquip::kIdFieldNumber;
#endif  // !_MSC_VER

GirlWarOneKeyEquip::GirlWarOneKeyEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GirlWarOneKeyEquip::InitAsDefaultInstance() {
}

GirlWarOneKeyEquip::GirlWarOneKeyEquip(const GirlWarOneKeyEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GirlWarOneKeyEquip::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GirlWarOneKeyEquip::~GirlWarOneKeyEquip() {
  SharedDtor();
}

void GirlWarOneKeyEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GirlWarOneKeyEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GirlWarOneKeyEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GirlWarOneKeyEquip_descriptor_;
}

const GirlWarOneKeyEquip& GirlWarOneKeyEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

GirlWarOneKeyEquip* GirlWarOneKeyEquip::default_instance_ = NULL;

GirlWarOneKeyEquip* GirlWarOneKeyEquip::New() const {
  return new GirlWarOneKeyEquip;
}

void GirlWarOneKeyEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GirlWarOneKeyEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GirlWarOneKeyEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GirlWarOneKeyEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GirlWarOneKeyEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GirlWarOneKeyEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GirlWarOneKeyEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GirlWarOneKeyEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GirlWarOneKeyEquip::MergeFrom(const GirlWarOneKeyEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GirlWarOneKeyEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GirlWarOneKeyEquip::CopyFrom(const GirlWarOneKeyEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GirlWarOneKeyEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GirlWarOneKeyEquip::Swap(GirlWarOneKeyEquip* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GirlWarOneKeyEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GirlWarOneKeyEquip_descriptor_;
  metadata.reflection = GirlWarOneKeyEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetGirlWarOneKeyEquip::kRetFieldNumber;
const int RetGirlWarOneKeyEquip::kIdFieldNumber;
const int RetGirlWarOneKeyEquip::kEquipFieldNumber;
#endif  // !_MSC_VER

RetGirlWarOneKeyEquip::RetGirlWarOneKeyEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetGirlWarOneKeyEquip::InitAsDefaultInstance() {
  equip_ = const_cast< ::GirlWarMessageInfo::ToClentEquip*>(&::GirlWarMessageInfo::ToClentEquip::default_instance());
}

RetGirlWarOneKeyEquip::RetGirlWarOneKeyEquip(const RetGirlWarOneKeyEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetGirlWarOneKeyEquip::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  equip_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetGirlWarOneKeyEquip::~RetGirlWarOneKeyEquip() {
  SharedDtor();
}

void RetGirlWarOneKeyEquip::SharedDtor() {
  if (this != default_instance_) {
    delete equip_;
  }
}

void RetGirlWarOneKeyEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetGirlWarOneKeyEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetGirlWarOneKeyEquip_descriptor_;
}

const RetGirlWarOneKeyEquip& RetGirlWarOneKeyEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

RetGirlWarOneKeyEquip* RetGirlWarOneKeyEquip::default_instance_ = NULL;

RetGirlWarOneKeyEquip* RetGirlWarOneKeyEquip::New() const {
  return new RetGirlWarOneKeyEquip;
}

void RetGirlWarOneKeyEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    if (has_equip()) {
      if (equip_ != NULL) equip_->::GirlWarMessageInfo::ToClentEquip::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetGirlWarOneKeyEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_equip;
        break;
      }

      // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetGirlWarOneKeyEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->equip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetGirlWarOneKeyEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->equip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetGirlWarOneKeyEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .GirlWarMessageInfo.ToClentEquip equip = 3;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetGirlWarOneKeyEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetGirlWarOneKeyEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetGirlWarOneKeyEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetGirlWarOneKeyEquip::MergeFrom(const RetGirlWarOneKeyEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_equip()) {
      mutable_equip()->::GirlWarMessageInfo::ToClentEquip::MergeFrom(from.equip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetGirlWarOneKeyEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetGirlWarOneKeyEquip::CopyFrom(const RetGirlWarOneKeyEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetGirlWarOneKeyEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetGirlWarOneKeyEquip::Swap(RetGirlWarOneKeyEquip* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(equip_, other->equip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetGirlWarOneKeyEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetGirlWarOneKeyEquip_descriptor_;
  metadata.reflection = RetGirlWarOneKeyEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GirlWarUpQuality::kIdFieldNumber;
#endif  // !_MSC_VER

GirlWarUpQuality::GirlWarUpQuality()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GirlWarUpQuality::InitAsDefaultInstance() {
}

GirlWarUpQuality::GirlWarUpQuality(const GirlWarUpQuality& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GirlWarUpQuality::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GirlWarUpQuality::~GirlWarUpQuality() {
  SharedDtor();
}

void GirlWarUpQuality::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GirlWarUpQuality::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GirlWarUpQuality::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GirlWarUpQuality_descriptor_;
}

const GirlWarUpQuality& GirlWarUpQuality::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

GirlWarUpQuality* GirlWarUpQuality::default_instance_ = NULL;

GirlWarUpQuality* GirlWarUpQuality::New() const {
  return new GirlWarUpQuality;
}

void GirlWarUpQuality::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GirlWarUpQuality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GirlWarUpQuality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GirlWarUpQuality::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GirlWarUpQuality::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GirlWarUpQuality::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GirlWarUpQuality* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GirlWarUpQuality*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GirlWarUpQuality::MergeFrom(const GirlWarUpQuality& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GirlWarUpQuality::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GirlWarUpQuality::CopyFrom(const GirlWarUpQuality& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GirlWarUpQuality::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GirlWarUpQuality::Swap(GirlWarUpQuality* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GirlWarUpQuality::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GirlWarUpQuality_descriptor_;
  metadata.reflection = GirlWarUpQuality_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetGirlWarUpQuality::kRetFieldNumber;
const int RetGirlWarUpQuality::kIdFieldNumber;
const int RetGirlWarUpQuality::kSkill1FieldNumber;
const int RetGirlWarUpQuality::kSkill2FieldNumber;
const int RetGirlWarUpQuality::kSkill3FieldNumber;
const int RetGirlWarUpQuality::kQualityFieldNumber;
#endif  // !_MSC_VER

RetGirlWarUpQuality::RetGirlWarUpQuality()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetGirlWarUpQuality::InitAsDefaultInstance() {
}

RetGirlWarUpQuality::RetGirlWarUpQuality(const RetGirlWarUpQuality& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetGirlWarUpQuality::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  skill1_ = 0;
  skill2_ = 0;
  skill3_ = 0;
  quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetGirlWarUpQuality::~RetGirlWarUpQuality() {
  SharedDtor();
}

void RetGirlWarUpQuality::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetGirlWarUpQuality::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetGirlWarUpQuality::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetGirlWarUpQuality_descriptor_;
}

const RetGirlWarUpQuality& RetGirlWarUpQuality::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

RetGirlWarUpQuality* RetGirlWarUpQuality::default_instance_ = NULL;

RetGirlWarUpQuality* RetGirlWarUpQuality::New() const {
  return new RetGirlWarUpQuality;
}

void RetGirlWarUpQuality::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    skill1_ = 0;
    skill2_ = 0;
    skill3_ = 0;
    quality_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetGirlWarUpQuality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill1;
        break;
      }

      // optional int32 skill1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill1_)));
          set_has_skill1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill2;
        break;
      }

      // optional int32 skill2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill2_)));
          set_has_skill2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_skill3;
        break;
      }

      // optional int32 skill3 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill3_)));
          set_has_skill3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_quality;
        break;
      }

      // optional int32 quality = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetGirlWarUpQuality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 skill1 = 3;
  if (has_skill1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill1(), output);
  }

  // optional int32 skill2 = 4;
  if (has_skill2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill2(), output);
  }

  // optional int32 skill3 = 5;
  if (has_skill3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill3(), output);
  }

  // optional int32 quality = 6;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->quality(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetGirlWarUpQuality::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 skill1 = 3;
  if (has_skill1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill1(), target);
  }

  // optional int32 skill2 = 4;
  if (has_skill2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill2(), target);
  }

  // optional int32 skill3 = 5;
  if (has_skill3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill3(), target);
  }

  // optional int32 quality = 6;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->quality(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetGirlWarUpQuality::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 skill1 = 3;
    if (has_skill1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill1());
    }

    // optional int32 skill2 = 4;
    if (has_skill2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill2());
    }

    // optional int32 skill3 = 5;
    if (has_skill3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill3());
    }

    // optional int32 quality = 6;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetGirlWarUpQuality::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetGirlWarUpQuality* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetGirlWarUpQuality*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetGirlWarUpQuality::MergeFrom(const RetGirlWarUpQuality& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_skill1()) {
      set_skill1(from.skill1());
    }
    if (from.has_skill2()) {
      set_skill2(from.skill2());
    }
    if (from.has_skill3()) {
      set_skill3(from.skill3());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetGirlWarUpQuality::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetGirlWarUpQuality::CopyFrom(const RetGirlWarUpQuality& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetGirlWarUpQuality::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetGirlWarUpQuality::Swap(RetGirlWarUpQuality* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(skill1_, other->skill1_);
    std::swap(skill2_, other->skill2_);
    std::swap(skill3_, other->skill3_);
    std::swap(quality_, other->quality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetGirlWarUpQuality::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetGirlWarUpQuality_descriptor_;
  metadata.reflection = RetGirlWarUpQuality_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GirlWarUpSkill::kIdFieldNumber;
const int GirlWarUpSkill::kSkillidFieldNumber;
const int GirlWarUpSkill::kIndexFieldNumber;
#endif  // !_MSC_VER

GirlWarUpSkill::GirlWarUpSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GirlWarUpSkill::InitAsDefaultInstance() {
}

GirlWarUpSkill::GirlWarUpSkill(const GirlWarUpSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GirlWarUpSkill::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  skillid_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GirlWarUpSkill::~GirlWarUpSkill() {
  SharedDtor();
}

void GirlWarUpSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GirlWarUpSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GirlWarUpSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GirlWarUpSkill_descriptor_;
}

const GirlWarUpSkill& GirlWarUpSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

GirlWarUpSkill* GirlWarUpSkill::default_instance_ = NULL;

GirlWarUpSkill* GirlWarUpSkill::New() const {
  return new GirlWarUpSkill;
}

void GirlWarUpSkill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    skillid_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GirlWarUpSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skillid;
        break;
      }

      // optional int32 skillid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GirlWarUpSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 skillid = 2;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skillid(), output);
  }

  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GirlWarUpSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 skillid = 2;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skillid(), target);
  }

  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GirlWarUpSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 skillid = 2;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GirlWarUpSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GirlWarUpSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GirlWarUpSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GirlWarUpSkill::MergeFrom(const GirlWarUpSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GirlWarUpSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GirlWarUpSkill::CopyFrom(const GirlWarUpSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GirlWarUpSkill::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GirlWarUpSkill::Swap(GirlWarUpSkill* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(skillid_, other->skillid_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GirlWarUpSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GirlWarUpSkill_descriptor_;
  metadata.reflection = GirlWarUpSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetGirlWarUpSkill::kRetFieldNumber;
const int RetGirlWarUpSkill::kIdFieldNumber;
const int RetGirlWarUpSkill::kSkillidFieldNumber;
const int RetGirlWarUpSkill::kIndexFieldNumber;
#endif  // !_MSC_VER

RetGirlWarUpSkill::RetGirlWarUpSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RetGirlWarUpSkill::InitAsDefaultInstance() {
}

RetGirlWarUpSkill::RetGirlWarUpSkill(const RetGirlWarUpSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RetGirlWarUpSkill::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  skillid_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetGirlWarUpSkill::~RetGirlWarUpSkill() {
  SharedDtor();
}

void RetGirlWarUpSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RetGirlWarUpSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetGirlWarUpSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetGirlWarUpSkill_descriptor_;
}

const RetGirlWarUpSkill& RetGirlWarUpSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

RetGirlWarUpSkill* RetGirlWarUpSkill::default_instance_ = NULL;

RetGirlWarUpSkill* RetGirlWarUpSkill::New() const {
  return new RetGirlWarUpSkill;
}

void RetGirlWarUpSkill::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    skillid_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetGirlWarUpSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skillid;
        break;
      }

      // optional int32 skillid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_index;
        break;
      }

      // optional int32 index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RetGirlWarUpSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 skillid = 3;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skillid(), output);
  }

  // optional int32 index = 4;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RetGirlWarUpSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 skillid = 3;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skillid(), target);
  }

  // optional int32 index = 4;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RetGirlWarUpSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 skillid = 3;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 index = 4;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetGirlWarUpSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetGirlWarUpSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetGirlWarUpSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetGirlWarUpSkill::MergeFrom(const RetGirlWarUpSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetGirlWarUpSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetGirlWarUpSkill::CopyFrom(const RetGirlWarUpSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetGirlWarUpSkill::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetGirlWarUpSkill::Swap(RetGirlWarUpSkill* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(skillid_, other->skillid_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetGirlWarUpSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetGirlWarUpSkill_descriptor_;
  metadata.reflection = RetGirlWarUpSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FromClientUpStar::kIdFieldNumber;
#endif  // !_MSC_VER

FromClientUpStar::FromClientUpStar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FromClientUpStar::InitAsDefaultInstance() {
}

FromClientUpStar::FromClientUpStar(const FromClientUpStar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FromClientUpStar::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FromClientUpStar::~FromClientUpStar() {
  SharedDtor();
}

void FromClientUpStar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FromClientUpStar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromClientUpStar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FromClientUpStar_descriptor_;
}

const FromClientUpStar& FromClientUpStar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

FromClientUpStar* FromClientUpStar::default_instance_ = NULL;

FromClientUpStar* FromClientUpStar::New() const {
  return new FromClientUpStar;
}

void FromClientUpStar::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FromClientUpStar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FromClientUpStar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FromClientUpStar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FromClientUpStar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromClientUpStar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FromClientUpStar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FromClientUpStar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FromClientUpStar::MergeFrom(const FromClientUpStar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FromClientUpStar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromClientUpStar::CopyFrom(const FromClientUpStar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromClientUpStar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FromClientUpStar::Swap(FromClientUpStar* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FromClientUpStar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FromClientUpStar_descriptor_;
  metadata.reflection = FromClientUpStar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClientUpStar::kRetFieldNumber;
const int ToClientUpStar::kIdFieldNumber;
const int ToClientUpStar::kStarrankFieldNumber;
#endif  // !_MSC_VER

ToClientUpStar::ToClientUpStar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClientUpStar::InitAsDefaultInstance() {
}

ToClientUpStar::ToClientUpStar(const ToClientUpStar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClientUpStar::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  starrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClientUpStar::~ToClientUpStar() {
  SharedDtor();
}

void ToClientUpStar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClientUpStar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClientUpStar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClientUpStar_descriptor_;
}

const ToClientUpStar& ToClientUpStar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClientUpStar* ToClientUpStar::default_instance_ = NULL;

ToClientUpStar* ToClientUpStar::New() const {
  return new ToClientUpStar;
}

void ToClientUpStar::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
    starrank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClientUpStar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_starrank;
        break;
      }

      // optional int32 starrank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starrank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starrank_)));
          set_has_starrank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClientUpStar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 starrank = 3;
  if (has_starrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->starrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClientUpStar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 starrank = 3;
  if (has_starrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->starrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClientUpStar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 starrank = 3;
    if (has_starrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starrank());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClientUpStar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClientUpStar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClientUpStar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClientUpStar::MergeFrom(const ToClientUpStar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_starrank()) {
      set_starrank(from.starrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClientUpStar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClientUpStar::CopyFrom(const ToClientUpStar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClientUpStar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ToClientUpStar::Swap(ToClientUpStar* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(starrank_, other->starrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClientUpStar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClientUpStar_descriptor_;
  metadata.reflection = ToClientUpStar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FromClientGetGirlWar::kIdFieldNumber;
#endif  // !_MSC_VER

FromClientGetGirlWar::FromClientGetGirlWar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FromClientGetGirlWar::InitAsDefaultInstance() {
}

FromClientGetGirlWar::FromClientGetGirlWar(const FromClientGetGirlWar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FromClientGetGirlWar::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FromClientGetGirlWar::~FromClientGetGirlWar() {
  SharedDtor();
}

void FromClientGetGirlWar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FromClientGetGirlWar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromClientGetGirlWar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FromClientGetGirlWar_descriptor_;
}

const FromClientGetGirlWar& FromClientGetGirlWar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

FromClientGetGirlWar* FromClientGetGirlWar::default_instance_ = NULL;

FromClientGetGirlWar* FromClientGetGirlWar::New() const {
  return new FromClientGetGirlWar;
}

void FromClientGetGirlWar::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FromClientGetGirlWar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FromClientGetGirlWar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FromClientGetGirlWar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FromClientGetGirlWar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromClientGetGirlWar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FromClientGetGirlWar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FromClientGetGirlWar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FromClientGetGirlWar::MergeFrom(const FromClientGetGirlWar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FromClientGetGirlWar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromClientGetGirlWar::CopyFrom(const FromClientGetGirlWar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromClientGetGirlWar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FromClientGetGirlWar::Swap(FromClientGetGirlWar* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FromClientGetGirlWar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FromClientGetGirlWar_descriptor_;
  metadata.reflection = FromClientGetGirlWar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ToClientGetGirlWar::kRetFieldNumber;
const int ToClientGetGirlWar::kIdFieldNumber;
#endif  // !_MSC_VER

ToClientGetGirlWar::ToClientGetGirlWar()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ToClientGetGirlWar::InitAsDefaultInstance() {
}

ToClientGetGirlWar::ToClientGetGirlWar(const ToClientGetGirlWar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ToClientGetGirlWar::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToClientGetGirlWar::~ToClientGetGirlWar() {
  SharedDtor();
}

void ToClientGetGirlWar::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToClientGetGirlWar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToClientGetGirlWar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToClientGetGirlWar_descriptor_;
}

const ToClientGetGirlWar& ToClientGetGirlWar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GirlWar_2fGirlWarMessage_2eproto();
  return *default_instance_;
}

ToClientGetGirlWar* ToClientGetGirlWar::default_instance_ = NULL;

ToClientGetGirlWar* ToClientGetGirlWar::New() const {
  return new ToClientGetGirlWar;
}

void ToClientGetGirlWar::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ToClientGetGirlWar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ToClientGetGirlWar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ToClientGetGirlWar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ToClientGetGirlWar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToClientGetGirlWar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ToClientGetGirlWar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToClientGetGirlWar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToClientGetGirlWar::MergeFrom(const ToClientGetGirlWar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ToClientGetGirlWar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToClientGetGirlWar::CopyFrom(const ToClientGetGirlWar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToClientGetGirlWar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ToClientGetGirlWar::Swap(ToClientGetGirlWar* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ToClientGetGirlWar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToClientGetGirlWar_descriptor_;
  metadata.reflection = ToClientGetGirlWar_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GirlWarMessageInfo

// @@protoc_insertion_point(global_scope)
