// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InterfaceAnswer/InterfaceAnswer.proto

#ifndef PROTOBUF_InterfaceAnswer_2fInterfaceAnswer_2eproto__INCLUDED
#define PROTOBUF_InterfaceAnswer_2fInterfaceAnswer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace InterfaceAnswer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

class AnswerData;
class GetAllAnswerData;
class ExcludeOneWrongData;
class TitleData;
class ResultData;
class RewardData;
class RankingData;
class SendBuckleAtt;
class ReturnBuckleAtt;
class AnswerGiveItem;
class AnswerActivity;
class WS2GMAnswerState;
class WS2GMPlayerAnswerState;

// ===================================================================

class AnswerData : public ::google::protobuf::Message {
 public:
  AnswerData();
  virtual ~AnswerData();

  AnswerData(const AnswerData& from);

  inline AnswerData& operator=(const AnswerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerData& default_instance();

  void Swap(AnswerData* other);

  // implements Message ----------------------------------------------

  AnswerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerData& from);
  void MergeFrom(const AnswerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional .InterfaceAnswer.TitleData title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::InterfaceAnswer::TitleData& title() const;
  inline ::InterfaceAnswer::TitleData* mutable_title();
  inline ::InterfaceAnswer::TitleData* release_title();
  inline void set_allocated_title(::InterfaceAnswer::TitleData* title);

  // optional .InterfaceAnswer.ResultData result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::InterfaceAnswer::ResultData& result() const;
  inline ::InterfaceAnswer::ResultData* mutable_result();
  inline ::InterfaceAnswer::ResultData* release_result();
  inline void set_allocated_result(::InterfaceAnswer::ResultData* result);

  // optional .InterfaceAnswer.RewardData reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline const ::InterfaceAnswer::RewardData& reward() const;
  inline ::InterfaceAnswer::RewardData* mutable_reward();
  inline ::InterfaceAnswer::RewardData* release_reward();
  inline void set_allocated_reward(::InterfaceAnswer::RewardData* reward);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.AnswerData)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::InterfaceAnswer::TitleData* title_;
  ::InterfaceAnswer::ResultData* result_;
  ::InterfaceAnswer::RewardData* reward_;
  ::google::protobuf::int32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static AnswerData* default_instance_;
};
// -------------------------------------------------------------------

class GetAllAnswerData : public ::google::protobuf::Message {
 public:
  GetAllAnswerData();
  virtual ~GetAllAnswerData();

  GetAllAnswerData(const GetAllAnswerData& from);

  inline GetAllAnswerData& operator=(const GetAllAnswerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllAnswerData& default_instance();

  void Swap(GetAllAnswerData* other);

  // implements Message ----------------------------------------------

  GetAllAnswerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllAnswerData& from);
  void MergeFrom(const GetAllAnswerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int32 timeCounts = 2;
  inline bool has_timecounts() const;
  inline void clear_timecounts();
  static const int kTimeCountsFieldNumber = 2;
  inline ::google::protobuf::int32 timecounts() const;
  inline void set_timecounts(::google::protobuf::int32 value);

  // optional int32 ExcludeTCounts = 3;
  inline bool has_excludetcounts() const;
  inline void clear_excludetcounts();
  static const int kExcludeTCountsFieldNumber = 3;
  inline ::google::protobuf::int32 excludetcounts() const;
  inline void set_excludetcounts(::google::protobuf::int32 value);

  // optional .InterfaceAnswer.TitleData title = 4;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 4;
  inline const ::InterfaceAnswer::TitleData& title() const;
  inline ::InterfaceAnswer::TitleData* mutable_title();
  inline ::InterfaceAnswer::TitleData* release_title();
  inline void set_allocated_title(::InterfaceAnswer::TitleData* title);

  // optional int32 countDownTime = 5;
  inline bool has_countdowntime() const;
  inline void clear_countdowntime();
  static const int kCountDownTimeFieldNumber = 5;
  inline ::google::protobuf::int32 countdowntime() const;
  inline void set_countdowntime(::google::protobuf::int32 value);

  // optional .InterfaceAnswer.ResultData result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline const ::InterfaceAnswer::ResultData& result() const;
  inline ::InterfaceAnswer::ResultData* mutable_result();
  inline ::InterfaceAnswer::ResultData* release_result();
  inline void set_allocated_result(::InterfaceAnswer::ResultData* result);

  // optional .InterfaceAnswer.RewardData reward = 7;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 7;
  inline const ::InterfaceAnswer::RewardData& reward() const;
  inline ::InterfaceAnswer::RewardData* mutable_reward();
  inline ::InterfaceAnswer::RewardData* release_reward();
  inline void set_allocated_reward(::InterfaceAnswer::RewardData* reward);

  // optional int32 error = 8;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 8;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.GetAllAnswerData)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_timecounts();
  inline void clear_has_timecounts();
  inline void set_has_excludetcounts();
  inline void clear_has_excludetcounts();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_countdowntime();
  inline void clear_has_countdowntime();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 timecounts_;
  ::InterfaceAnswer::TitleData* title_;
  ::google::protobuf::int32 excludetcounts_;
  ::google::protobuf::int32 countdowntime_;
  ::InterfaceAnswer::ResultData* result_;
  ::InterfaceAnswer::RewardData* reward_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static GetAllAnswerData* default_instance_;
};
// -------------------------------------------------------------------

class ExcludeOneWrongData : public ::google::protobuf::Message {
 public:
  ExcludeOneWrongData();
  virtual ~ExcludeOneWrongData();

  ExcludeOneWrongData(const ExcludeOneWrongData& from);

  inline ExcludeOneWrongData& operator=(const ExcludeOneWrongData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExcludeOneWrongData& default_instance();

  void Swap(ExcludeOneWrongData* other);

  // implements Message ----------------------------------------------

  ExcludeOneWrongData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExcludeOneWrongData& from);
  void MergeFrom(const ExcludeOneWrongData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 error = 3;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 3;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.ExcludeOneWrongData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static ExcludeOneWrongData* default_instance_;
};
// -------------------------------------------------------------------

class TitleData : public ::google::protobuf::Message {
 public:
  TitleData();
  virtual ~TitleData();

  TitleData(const TitleData& from);

  inline TitleData& operator=(const TitleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleData& default_instance();

  void Swap(TitleData* other);

  // implements Message ----------------------------------------------

  TitleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleData& from);
  void MergeFrom(const TitleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 currentCounts = 2;
  inline bool has_currentcounts() const;
  inline void clear_currentcounts();
  static const int kCurrentCountsFieldNumber = 2;
  inline ::google::protobuf::int32 currentcounts() const;
  inline void set_currentcounts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.TitleData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_currentcounts();
  inline void clear_has_currentcounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 currentcounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static TitleData* default_instance_;
};
// -------------------------------------------------------------------

class ResultData : public ::google::protobuf::Message {
 public:
  ResultData();
  virtual ~ResultData();

  ResultData(const ResultData& from);

  inline ResultData& operator=(const ResultData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultData& default_instance();

  void Swap(ResultData* other);

  // implements Message ----------------------------------------------

  ResultData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResultData& from);
  void MergeFrom(const ResultData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 rightCounts = 2;
  inline bool has_rightcounts() const;
  inline void clear_rightcounts();
  static const int kRightCountsFieldNumber = 2;
  inline ::google::protobuf::int32 rightcounts() const;
  inline void set_rightcounts(::google::protobuf::int32 value);

  // optional int32 wrongCounts = 3;
  inline bool has_wrongcounts() const;
  inline void clear_wrongcounts();
  static const int kWrongCountsFieldNumber = 3;
  inline ::google::protobuf::int32 wrongcounts() const;
  inline void set_wrongcounts(::google::protobuf::int32 value);

  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 straightCounts = 5;
  inline bool has_straightcounts() const;
  inline void clear_straightcounts();
  static const int kStraightCountsFieldNumber = 5;
  inline ::google::protobuf::int32 straightcounts() const;
  inline void set_straightcounts(::google::protobuf::int32 value);

  // optional int32 selfRanking = 6;
  inline bool has_selfranking() const;
  inline void clear_selfranking();
  static const int kSelfRankingFieldNumber = 6;
  inline ::google::protobuf::int32 selfranking() const;
  inline void set_selfranking(::google::protobuf::int32 value);

  // optional int32 selfRightCounts = 7;
  inline bool has_selfrightcounts() const;
  inline void clear_selfrightcounts();
  static const int kSelfRightCountsFieldNumber = 7;
  inline ::google::protobuf::int32 selfrightcounts() const;
  inline void set_selfrightcounts(::google::protobuf::int32 value);

  // repeated .InterfaceAnswer.RankingData rankingList = 8;
  inline int rankinglist_size() const;
  inline void clear_rankinglist();
  static const int kRankingListFieldNumber = 8;
  inline const ::InterfaceAnswer::RankingData& rankinglist(int index) const;
  inline ::InterfaceAnswer::RankingData* mutable_rankinglist(int index);
  inline ::InterfaceAnswer::RankingData* add_rankinglist();
  inline const ::google::protobuf::RepeatedPtrField< ::InterfaceAnswer::RankingData >&
      rankinglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::InterfaceAnswer::RankingData >*
      mutable_rankinglist();

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.ResultData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_rightcounts();
  inline void clear_has_rightcounts();
  inline void set_has_wrongcounts();
  inline void clear_has_wrongcounts();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_straightcounts();
  inline void clear_has_straightcounts();
  inline void set_has_selfranking();
  inline void clear_has_selfranking();
  inline void set_has_selfrightcounts();
  inline void clear_has_selfrightcounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 rightcounts_;
  ::google::protobuf::int32 wrongcounts_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 straightcounts_;
  ::google::protobuf::int32 selfranking_;
  ::google::protobuf::RepeatedPtrField< ::InterfaceAnswer::RankingData > rankinglist_;
  ::google::protobuf::int32 selfrightcounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static ResultData* default_instance_;
};
// -------------------------------------------------------------------

class RewardData : public ::google::protobuf::Message {
 public:
  RewardData();
  virtual ~RewardData();

  RewardData(const RewardData& from);

  inline RewardData& operator=(const RewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardData& default_instance();

  void Swap(RewardData* other);

  // implements Message ----------------------------------------------

  RewardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardData& from);
  void MergeFrom(const RewardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ranking = 1;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 1;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // optional int32 answer = 2;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 2;
  inline ::google::protobuf::int32 answer() const;
  inline void set_answer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.RewardData)
 private:
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 answer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static RewardData* default_instance_;
};
// -------------------------------------------------------------------

class RankingData : public ::google::protobuf::Message {
 public:
  RankingData();
  virtual ~RankingData();

  RankingData(const RankingData& from);

  inline RankingData& operator=(const RankingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankingData& default_instance();

  void Swap(RankingData* other);

  // implements Message ----------------------------------------------

  RankingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankingData& from);
  void MergeFrom(const RankingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vipLevel = 1;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 1;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.RankingData)
 private:
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static RankingData* default_instance_;
};
// -------------------------------------------------------------------

class SendBuckleAtt : public ::google::protobuf::Message {
 public:
  SendBuckleAtt();
  virtual ~SendBuckleAtt();

  SendBuckleAtt(const SendBuckleAtt& from);

  inline SendBuckleAtt& operator=(const SendBuckleAtt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendBuckleAtt& default_instance();

  void Swap(SendBuckleAtt* other);

  // implements Message ----------------------------------------------

  SendBuckleAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendBuckleAtt& from);
  void MergeFrom(const SendBuckleAtt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional int32 attID = 2;
  inline bool has_attid() const;
  inline void clear_attid();
  static const int kAttIDFieldNumber = 2;
  inline ::google::protobuf::int32 attid() const;
  inline void set_attid(::google::protobuf::int32 value);

  // optional int32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.SendBuckleAtt)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_attid();
  inline void clear_has_attid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 attid_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static SendBuckleAtt* default_instance_;
};
// -------------------------------------------------------------------

class ReturnBuckleAtt : public ::google::protobuf::Message {
 public:
  ReturnBuckleAtt();
  virtual ~ReturnBuckleAtt();

  ReturnBuckleAtt(const ReturnBuckleAtt& from);

  inline ReturnBuckleAtt& operator=(const ReturnBuckleAtt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnBuckleAtt& default_instance();

  void Swap(ReturnBuckleAtt* other);

  // implements Message ----------------------------------------------

  ReturnBuckleAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnBuckleAtt& from);
  void MergeFrom(const ReturnBuckleAtt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.ReturnBuckleAtt)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static ReturnBuckleAtt* default_instance_;
};
// -------------------------------------------------------------------

class AnswerGiveItem : public ::google::protobuf::Message {
 public:
  AnswerGiveItem();
  virtual ~AnswerGiveItem();

  AnswerGiveItem(const AnswerGiveItem& from);

  inline AnswerGiveItem& operator=(const AnswerGiveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerGiveItem& default_instance();

  void Swap(AnswerGiveItem* other);

  // implements Message ----------------------------------------------

  AnswerGiveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerGiveItem& from);
  void MergeFrom(const AnswerGiveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // repeated int32 ID = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::int32 value);
  inline void add_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.AnswerGiveItem)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static AnswerGiveItem* default_instance_;
};
// -------------------------------------------------------------------

class AnswerActivity : public ::google::protobuf::Message {
 public:
  AnswerActivity();
  virtual ~AnswerActivity();

  AnswerActivity(const AnswerActivity& from);

  inline AnswerActivity& operator=(const AnswerActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerActivity& default_instance();

  void Swap(AnswerActivity* other);

  // implements Message ----------------------------------------------

  AnswerActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerActivity& from);
  void MergeFrom(const AnswerActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.AnswerActivity)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static AnswerActivity* default_instance_;
};
// -------------------------------------------------------------------

class WS2GMAnswerState : public ::google::protobuf::Message {
 public:
  WS2GMAnswerState();
  virtual ~WS2GMAnswerState();

  WS2GMAnswerState(const WS2GMAnswerState& from);

  inline WS2GMAnswerState& operator=(const WS2GMAnswerState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WS2GMAnswerState& default_instance();

  void Swap(WS2GMAnswerState* other);

  // implements Message ----------------------------------------------

  WS2GMAnswerState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WS2GMAnswerState& from);
  void MergeFrom(const WS2GMAnswerState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.WS2GMAnswerState)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static WS2GMAnswerState* default_instance_;
};
// -------------------------------------------------------------------

class WS2GMPlayerAnswerState : public ::google::protobuf::Message {
 public:
  WS2GMPlayerAnswerState();
  virtual ~WS2GMPlayerAnswerState();

  WS2GMPlayerAnswerState(const WS2GMPlayerAnswerState& from);

  inline WS2GMPlayerAnswerState& operator=(const WS2GMPlayerAnswerState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WS2GMPlayerAnswerState& default_instance();

  void Swap(WS2GMPlayerAnswerState* other);

  // implements Message ----------------------------------------------

  WS2GMPlayerAnswerState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WS2GMPlayerAnswerState& from);
  void MergeFrom(const WS2GMPlayerAnswerState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required bool flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:InterfaceAnswer.WS2GMPlayerAnswerState)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_AssignDesc_InterfaceAnswer_2fInterfaceAnswer_2eproto();
  friend void protobuf_ShutdownFile_InterfaceAnswer_2fInterfaceAnswer_2eproto();

  void InitAsDefaultInstance();
  static WS2GMPlayerAnswerState* default_instance_;
};
// ===================================================================


// ===================================================================

// AnswerData

// optional int32 stage = 1;
inline bool AnswerData::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerData::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerData::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerData::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 AnswerData::stage() const {
  return stage_;
}
inline void AnswerData::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional .InterfaceAnswer.TitleData title = 2;
inline bool AnswerData::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnswerData::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnswerData::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnswerData::clear_title() {
  if (title_ != NULL) title_->::InterfaceAnswer::TitleData::Clear();
  clear_has_title();
}
inline const ::InterfaceAnswer::TitleData& AnswerData::title() const {
  return title_ != NULL ? *title_ : *default_instance_->title_;
}
inline ::InterfaceAnswer::TitleData* AnswerData::mutable_title() {
  set_has_title();
  if (title_ == NULL) title_ = new ::InterfaceAnswer::TitleData;
  return title_;
}
inline ::InterfaceAnswer::TitleData* AnswerData::release_title() {
  clear_has_title();
  ::InterfaceAnswer::TitleData* temp = title_;
  title_ = NULL;
  return temp;
}
inline void AnswerData::set_allocated_title(::InterfaceAnswer::TitleData* title) {
  delete title_;
  title_ = title;
  if (title) {
    set_has_title();
  } else {
    clear_has_title();
  }
}

// optional .InterfaceAnswer.ResultData result = 3;
inline bool AnswerData::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnswerData::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnswerData::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnswerData::clear_result() {
  if (result_ != NULL) result_->::InterfaceAnswer::ResultData::Clear();
  clear_has_result();
}
inline const ::InterfaceAnswer::ResultData& AnswerData::result() const {
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::InterfaceAnswer::ResultData* AnswerData::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::InterfaceAnswer::ResultData;
  return result_;
}
inline ::InterfaceAnswer::ResultData* AnswerData::release_result() {
  clear_has_result();
  ::InterfaceAnswer::ResultData* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AnswerData::set_allocated_result(::InterfaceAnswer::ResultData* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
}

// optional .InterfaceAnswer.RewardData reward = 4;
inline bool AnswerData::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnswerData::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnswerData::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnswerData::clear_reward() {
  if (reward_ != NULL) reward_->::InterfaceAnswer::RewardData::Clear();
  clear_has_reward();
}
inline const ::InterfaceAnswer::RewardData& AnswerData::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::InterfaceAnswer::RewardData* AnswerData::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::InterfaceAnswer::RewardData;
  return reward_;
}
inline ::InterfaceAnswer::RewardData* AnswerData::release_reward() {
  clear_has_reward();
  ::InterfaceAnswer::RewardData* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void AnswerData::set_allocated_reward(::InterfaceAnswer::RewardData* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// GetAllAnswerData

// optional int32 stage = 1;
inline bool GetAllAnswerData::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAllAnswerData::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAllAnswerData::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAllAnswerData::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 GetAllAnswerData::stage() const {
  return stage_;
}
inline void GetAllAnswerData::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional int32 timeCounts = 2;
inline bool GetAllAnswerData::has_timecounts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAllAnswerData::set_has_timecounts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAllAnswerData::clear_has_timecounts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAllAnswerData::clear_timecounts() {
  timecounts_ = 0;
  clear_has_timecounts();
}
inline ::google::protobuf::int32 GetAllAnswerData::timecounts() const {
  return timecounts_;
}
inline void GetAllAnswerData::set_timecounts(::google::protobuf::int32 value) {
  set_has_timecounts();
  timecounts_ = value;
}

// optional int32 ExcludeTCounts = 3;
inline bool GetAllAnswerData::has_excludetcounts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAllAnswerData::set_has_excludetcounts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAllAnswerData::clear_has_excludetcounts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAllAnswerData::clear_excludetcounts() {
  excludetcounts_ = 0;
  clear_has_excludetcounts();
}
inline ::google::protobuf::int32 GetAllAnswerData::excludetcounts() const {
  return excludetcounts_;
}
inline void GetAllAnswerData::set_excludetcounts(::google::protobuf::int32 value) {
  set_has_excludetcounts();
  excludetcounts_ = value;
}

// optional .InterfaceAnswer.TitleData title = 4;
inline bool GetAllAnswerData::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAllAnswerData::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAllAnswerData::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAllAnswerData::clear_title() {
  if (title_ != NULL) title_->::InterfaceAnswer::TitleData::Clear();
  clear_has_title();
}
inline const ::InterfaceAnswer::TitleData& GetAllAnswerData::title() const {
  return title_ != NULL ? *title_ : *default_instance_->title_;
}
inline ::InterfaceAnswer::TitleData* GetAllAnswerData::mutable_title() {
  set_has_title();
  if (title_ == NULL) title_ = new ::InterfaceAnswer::TitleData;
  return title_;
}
inline ::InterfaceAnswer::TitleData* GetAllAnswerData::release_title() {
  clear_has_title();
  ::InterfaceAnswer::TitleData* temp = title_;
  title_ = NULL;
  return temp;
}
inline void GetAllAnswerData::set_allocated_title(::InterfaceAnswer::TitleData* title) {
  delete title_;
  title_ = title;
  if (title) {
    set_has_title();
  } else {
    clear_has_title();
  }
}

// optional int32 countDownTime = 5;
inline bool GetAllAnswerData::has_countdowntime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAllAnswerData::set_has_countdowntime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAllAnswerData::clear_has_countdowntime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAllAnswerData::clear_countdowntime() {
  countdowntime_ = 0;
  clear_has_countdowntime();
}
inline ::google::protobuf::int32 GetAllAnswerData::countdowntime() const {
  return countdowntime_;
}
inline void GetAllAnswerData::set_countdowntime(::google::protobuf::int32 value) {
  set_has_countdowntime();
  countdowntime_ = value;
}

// optional .InterfaceAnswer.ResultData result = 6;
inline bool GetAllAnswerData::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetAllAnswerData::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetAllAnswerData::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetAllAnswerData::clear_result() {
  if (result_ != NULL) result_->::InterfaceAnswer::ResultData::Clear();
  clear_has_result();
}
inline const ::InterfaceAnswer::ResultData& GetAllAnswerData::result() const {
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::InterfaceAnswer::ResultData* GetAllAnswerData::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::InterfaceAnswer::ResultData;
  return result_;
}
inline ::InterfaceAnswer::ResultData* GetAllAnswerData::release_result() {
  clear_has_result();
  ::InterfaceAnswer::ResultData* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetAllAnswerData::set_allocated_result(::InterfaceAnswer::ResultData* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
}

// optional .InterfaceAnswer.RewardData reward = 7;
inline bool GetAllAnswerData::has_reward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetAllAnswerData::set_has_reward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetAllAnswerData::clear_has_reward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetAllAnswerData::clear_reward() {
  if (reward_ != NULL) reward_->::InterfaceAnswer::RewardData::Clear();
  clear_has_reward();
}
inline const ::InterfaceAnswer::RewardData& GetAllAnswerData::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::InterfaceAnswer::RewardData* GetAllAnswerData::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::InterfaceAnswer::RewardData;
  return reward_;
}
inline ::InterfaceAnswer::RewardData* GetAllAnswerData::release_reward() {
  clear_has_reward();
  ::InterfaceAnswer::RewardData* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GetAllAnswerData::set_allocated_reward(::InterfaceAnswer::RewardData* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// optional int32 error = 8;
inline bool GetAllAnswerData::has_error() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetAllAnswerData::set_has_error() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetAllAnswerData::clear_has_error() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetAllAnswerData::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAllAnswerData::error() const {
  return error_;
}
inline void GetAllAnswerData::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// ExcludeOneWrongData

// optional int32 index = 1;
inline bool ExcludeOneWrongData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExcludeOneWrongData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExcludeOneWrongData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExcludeOneWrongData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ExcludeOneWrongData::index() const {
  return index_;
}
inline void ExcludeOneWrongData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 type = 2;
inline bool ExcludeOneWrongData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExcludeOneWrongData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExcludeOneWrongData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExcludeOneWrongData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ExcludeOneWrongData::type() const {
  return type_;
}
inline void ExcludeOneWrongData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 error = 3;
inline bool ExcludeOneWrongData::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExcludeOneWrongData::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExcludeOneWrongData::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExcludeOneWrongData::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ExcludeOneWrongData::error() const {
  return error_;
}
inline void ExcludeOneWrongData::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// TitleData

// optional int32 id = 1;
inline bool TitleData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TitleData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TitleData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TitleData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TitleData::id() const {
  return id_;
}
inline void TitleData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 currentCounts = 2;
inline bool TitleData::has_currentcounts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TitleData::set_has_currentcounts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TitleData::clear_has_currentcounts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TitleData::clear_currentcounts() {
  currentcounts_ = 0;
  clear_has_currentcounts();
}
inline ::google::protobuf::int32 TitleData::currentcounts() const {
  return currentcounts_;
}
inline void TitleData::set_currentcounts(::google::protobuf::int32 value) {
  set_has_currentcounts();
  currentcounts_ = value;
}

// -------------------------------------------------------------------

// ResultData

// optional int32 index = 1;
inline bool ResultData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResultData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResultData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResultData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ResultData::index() const {
  return index_;
}
inline void ResultData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 rightCounts = 2;
inline bool ResultData::has_rightcounts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResultData::set_has_rightcounts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResultData::clear_has_rightcounts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResultData::clear_rightcounts() {
  rightcounts_ = 0;
  clear_has_rightcounts();
}
inline ::google::protobuf::int32 ResultData::rightcounts() const {
  return rightcounts_;
}
inline void ResultData::set_rightcounts(::google::protobuf::int32 value) {
  set_has_rightcounts();
  rightcounts_ = value;
}

// optional int32 wrongCounts = 3;
inline bool ResultData::has_wrongcounts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResultData::set_has_wrongcounts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResultData::clear_has_wrongcounts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResultData::clear_wrongcounts() {
  wrongcounts_ = 0;
  clear_has_wrongcounts();
}
inline ::google::protobuf::int32 ResultData::wrongcounts() const {
  return wrongcounts_;
}
inline void ResultData::set_wrongcounts(::google::protobuf::int32 value) {
  set_has_wrongcounts();
  wrongcounts_ = value;
}

// optional int32 score = 4;
inline bool ResultData::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResultData::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResultData::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResultData::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ResultData::score() const {
  return score_;
}
inline void ResultData::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 straightCounts = 5;
inline bool ResultData::has_straightcounts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResultData::set_has_straightcounts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResultData::clear_has_straightcounts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResultData::clear_straightcounts() {
  straightcounts_ = 0;
  clear_has_straightcounts();
}
inline ::google::protobuf::int32 ResultData::straightcounts() const {
  return straightcounts_;
}
inline void ResultData::set_straightcounts(::google::protobuf::int32 value) {
  set_has_straightcounts();
  straightcounts_ = value;
}

// optional int32 selfRanking = 6;
inline bool ResultData::has_selfranking() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResultData::set_has_selfranking() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResultData::clear_has_selfranking() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResultData::clear_selfranking() {
  selfranking_ = 0;
  clear_has_selfranking();
}
inline ::google::protobuf::int32 ResultData::selfranking() const {
  return selfranking_;
}
inline void ResultData::set_selfranking(::google::protobuf::int32 value) {
  set_has_selfranking();
  selfranking_ = value;
}

// optional int32 selfRightCounts = 7;
inline bool ResultData::has_selfrightcounts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResultData::set_has_selfrightcounts() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResultData::clear_has_selfrightcounts() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResultData::clear_selfrightcounts() {
  selfrightcounts_ = 0;
  clear_has_selfrightcounts();
}
inline ::google::protobuf::int32 ResultData::selfrightcounts() const {
  return selfrightcounts_;
}
inline void ResultData::set_selfrightcounts(::google::protobuf::int32 value) {
  set_has_selfrightcounts();
  selfrightcounts_ = value;
}

// repeated .InterfaceAnswer.RankingData rankingList = 8;
inline int ResultData::rankinglist_size() const {
  return rankinglist_.size();
}
inline void ResultData::clear_rankinglist() {
  rankinglist_.Clear();
}
inline const ::InterfaceAnswer::RankingData& ResultData::rankinglist(int index) const {
  return rankinglist_.Get(index);
}
inline ::InterfaceAnswer::RankingData* ResultData::mutable_rankinglist(int index) {
  return rankinglist_.Mutable(index);
}
inline ::InterfaceAnswer::RankingData* ResultData::add_rankinglist() {
  return rankinglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InterfaceAnswer::RankingData >&
ResultData::rankinglist() const {
  return rankinglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::InterfaceAnswer::RankingData >*
ResultData::mutable_rankinglist() {
  return &rankinglist_;
}

// -------------------------------------------------------------------

// RewardData

// optional int32 ranking = 1;
inline bool RewardData::has_ranking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardData::set_has_ranking() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardData::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardData::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 RewardData::ranking() const {
  return ranking_;
}
inline void RewardData::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// optional int32 answer = 2;
inline bool RewardData::has_answer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardData::set_has_answer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardData::clear_has_answer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardData::clear_answer() {
  answer_ = 0;
  clear_has_answer();
}
inline ::google::protobuf::int32 RewardData::answer() const {
  return answer_;
}
inline void RewardData::set_answer(::google::protobuf::int32 value) {
  set_has_answer();
  answer_ = value;
}

// -------------------------------------------------------------------

// RankingData

// optional int32 vipLevel = 1;
inline bool RankingData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankingData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankingData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankingData::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 RankingData::viplevel() const {
  return viplevel_;
}
inline void RankingData::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional string name = 2;
inline bool RankingData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankingData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankingData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankingData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RankingData::name() const {
  return *name_;
}
inline void RankingData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RankingData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RankingData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankingData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RankingData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RankingData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 score = 3;
inline bool RankingData::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankingData::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankingData::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankingData::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 RankingData::score() const {
  return score_;
}
inline void RankingData::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// SendBuckleAtt

// optional int64 playerID = 1;
inline bool SendBuckleAtt::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendBuckleAtt::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendBuckleAtt::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendBuckleAtt::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 SendBuckleAtt::playerid() const {
  return playerid_;
}
inline void SendBuckleAtt::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional int32 attID = 2;
inline bool SendBuckleAtt::has_attid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendBuckleAtt::set_has_attid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendBuckleAtt::clear_has_attid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendBuckleAtt::clear_attid() {
  attid_ = 0;
  clear_has_attid();
}
inline ::google::protobuf::int32 SendBuckleAtt::attid() const {
  return attid_;
}
inline void SendBuckleAtt::set_attid(::google::protobuf::int32 value) {
  set_has_attid();
  attid_ = value;
}

// optional int32 value = 3;
inline bool SendBuckleAtt::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendBuckleAtt::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendBuckleAtt::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendBuckleAtt::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 SendBuckleAtt::value() const {
  return value_;
}
inline void SendBuckleAtt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ReturnBuckleAtt

// optional int32 error = 1;
inline bool ReturnBuckleAtt::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnBuckleAtt::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnBuckleAtt::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnBuckleAtt::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ReturnBuckleAtt::error() const {
  return error_;
}
inline void ReturnBuckleAtt::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// AnswerGiveItem

// optional int64 playerID = 1;
inline bool AnswerGiveItem::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerGiveItem::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerGiveItem::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerGiveItem::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 AnswerGiveItem::playerid() const {
  return playerid_;
}
inline void AnswerGiveItem::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// repeated int32 ID = 2;
inline int AnswerGiveItem::id_size() const {
  return id_.size();
}
inline void AnswerGiveItem::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 AnswerGiveItem::id(int index) const {
  return id_.Get(index);
}
inline void AnswerGiveItem::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
}
inline void AnswerGiveItem::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AnswerGiveItem::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AnswerGiveItem::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// AnswerActivity

// optional int64 playerID = 1;
inline bool AnswerActivity::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerActivity::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerActivity::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerActivity::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 AnswerActivity::playerid() const {
  return playerid_;
}
inline void AnswerActivity::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// WS2GMAnswerState

// required bool flag = 1;
inline bool WS2GMAnswerState::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WS2GMAnswerState::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WS2GMAnswerState::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WS2GMAnswerState::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WS2GMAnswerState::flag() const {
  return flag_;
}
inline void WS2GMAnswerState::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// WS2GMPlayerAnswerState

// required int64 charID = 1;
inline bool WS2GMPlayerAnswerState::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WS2GMPlayerAnswerState::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WS2GMPlayerAnswerState::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WS2GMPlayerAnswerState::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WS2GMPlayerAnswerState::charid() const {
  return charid_;
}
inline void WS2GMPlayerAnswerState::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required bool flag = 2;
inline bool WS2GMPlayerAnswerState::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WS2GMPlayerAnswerState::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WS2GMPlayerAnswerState::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WS2GMPlayerAnswerState::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool WS2GMPlayerAnswerState::flag() const {
  return flag_;
}
inline void WS2GMPlayerAnswerState::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace InterfaceAnswer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InterfaceAnswer_2fInterfaceAnswer_2eproto__INCLUDED
