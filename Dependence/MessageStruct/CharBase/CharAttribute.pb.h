// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharBase/CharAttribute.proto

#ifndef PROTOBUF_CharBase_2fCharAttribute_2eproto__INCLUDED
#define PROTOBUF_CharBase_2fCharAttribute_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CharBase {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

class CharAttr;
class CharAttriToGate;
class AttChangeToGate;
class AttChangeToWorld;
class CharAttChange;
class SynchObjectAttr;
class SynchObjectAttrToGT;
class AttChangeToGame;
class CharAttChangeToGame;

// ===================================================================

class CharAttr : public ::google::protobuf::Message {
 public:
  CharAttr();
  virtual ~CharAttr();

  CharAttr(const CharAttr& from);

  inline CharAttr& operator=(const CharAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharAttr& default_instance();

  void Swap(CharAttr* other);

  // implements Message ----------------------------------------------

  CharAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharAttr& from);
  void MergeFrom(const CharAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 strength = 1;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 1;
  inline ::google::protobuf::int32 strength() const;
  inline void set_strength(::google::protobuf::int32 value);

  // required int32 cleverpower = 2;
  inline bool has_cleverpower() const;
  inline void clear_cleverpower();
  static const int kCleverpowerFieldNumber = 2;
  inline ::google::protobuf::int32 cleverpower() const;
  inline void set_cleverpower(::google::protobuf::int32 value);

  // required int32 cleverair = 3;
  inline bool has_cleverair() const;
  inline void clear_cleverair();
  static const int kCleverairFieldNumber = 3;
  inline ::google::protobuf::int32 cleverair() const;
  inline void set_cleverair(::google::protobuf::int32 value);

  // required int32 physicalpower = 4;
  inline bool has_physicalpower() const;
  inline void clear_physicalpower();
  static const int kPhysicalpowerFieldNumber = 4;
  inline ::google::protobuf::int32 physicalpower() const;
  inline void set_physicalpower(::google::protobuf::int32 value);

  // required int32 patience = 5;
  inline bool has_patience() const;
  inline void clear_patience();
  static const int kPatienceFieldNumber = 5;
  inline ::google::protobuf::int32 patience() const;
  inline void set_patience(::google::protobuf::int32 value);

  // required int32 agility = 6;
  inline bool has_agility() const;
  inline void clear_agility();
  static const int kAgilityFieldNumber = 6;
  inline ::google::protobuf::int32 agility() const;
  inline void set_agility(::google::protobuf::int32 value);

  // optional int32 lphyattack = 7;
  inline bool has_lphyattack() const;
  inline void clear_lphyattack();
  static const int kLphyattackFieldNumber = 7;
  inline ::google::protobuf::int32 lphyattack() const;
  inline void set_lphyattack(::google::protobuf::int32 value);

  // required int32 hphyattack = 8;
  inline bool has_hphyattack() const;
  inline void clear_hphyattack();
  static const int kHphyattackFieldNumber = 8;
  inline ::google::protobuf::int32 hphyattack() const;
  inline void set_hphyattack(::google::protobuf::int32 value);

  // optional int32 lmagattack = 9;
  inline bool has_lmagattack() const;
  inline void clear_lmagattack();
  static const int kLmagattackFieldNumber = 9;
  inline ::google::protobuf::int32 lmagattack() const;
  inline void set_lmagattack(::google::protobuf::int32 value);

  // optional int32 hmagattack = 10;
  inline bool has_hmagattack() const;
  inline void clear_hmagattack();
  static const int kHmagattackFieldNumber = 10;
  inline ::google::protobuf::int32 hmagattack() const;
  inline void set_hmagattack(::google::protobuf::int32 value);

  // required int32 phydefence = 11;
  inline bool has_phydefence() const;
  inline void clear_phydefence();
  static const int kPhydefenceFieldNumber = 11;
  inline ::google::protobuf::int32 phydefence() const;
  inline void set_phydefence(::google::protobuf::int32 value);

  // optional int32 magdefence = 12;
  inline bool has_magdefence() const;
  inline void clear_magdefence();
  static const int kMagdefenceFieldNumber = 12;
  inline ::google::protobuf::int32 magdefence() const;
  inline void set_magdefence(::google::protobuf::int32 value);

  // required int32 hitrate = 13;
  inline bool has_hitrate() const;
  inline void clear_hitrate();
  static const int kHitrateFieldNumber = 13;
  inline ::google::protobuf::int32 hitrate() const;
  inline void set_hitrate(::google::protobuf::int32 value);

  // required int32 avoidattack = 14;
  inline bool has_avoidattack() const;
  inline void clear_avoidattack();
  static const int kAvoidattackFieldNumber = 14;
  inline ::google::protobuf::int32 avoidattack() const;
  inline void set_avoidattack(::google::protobuf::int32 value);

  // required int32 crackdown = 15;
  inline bool has_crackdown() const;
  inline void clear_crackdown();
  static const int kCrackdownFieldNumber = 15;
  inline ::google::protobuf::int32 crackdown() const;
  inline void set_crackdown(::google::protobuf::int32 value);

  // optional int32 avoidcrack = 16;
  inline bool has_avoidcrack() const;
  inline void clear_avoidcrack();
  static const int kAvoidcrackFieldNumber = 16;
  inline ::google::protobuf::int32 avoidcrack() const;
  inline void set_avoidcrack(::google::protobuf::int32 value);

  // optional int32 lucky = 17;
  inline bool has_lucky() const;
  inline void clear_lucky();
  static const int kLuckyFieldNumber = 17;
  inline ::google::protobuf::int32 lucky() const;
  inline void set_lucky(::google::protobuf::int32 value);

  // optional int32 fight = 18;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 18;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional int32 power = 19;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 19;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // optional int32 powermax = 20;
  inline bool has_powermax() const;
  inline void clear_powermax();
  static const int kPowermaxFieldNumber = 20;
  inline ::google::protobuf::int32 powermax() const;
  inline void set_powermax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBase.CharAttr)
 private:
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_cleverpower();
  inline void clear_has_cleverpower();
  inline void set_has_cleverair();
  inline void clear_has_cleverair();
  inline void set_has_physicalpower();
  inline void clear_has_physicalpower();
  inline void set_has_patience();
  inline void clear_has_patience();
  inline void set_has_agility();
  inline void clear_has_agility();
  inline void set_has_lphyattack();
  inline void clear_has_lphyattack();
  inline void set_has_hphyattack();
  inline void clear_has_hphyattack();
  inline void set_has_lmagattack();
  inline void clear_has_lmagattack();
  inline void set_has_hmagattack();
  inline void clear_has_hmagattack();
  inline void set_has_phydefence();
  inline void clear_has_phydefence();
  inline void set_has_magdefence();
  inline void clear_has_magdefence();
  inline void set_has_hitrate();
  inline void clear_has_hitrate();
  inline void set_has_avoidattack();
  inline void clear_has_avoidattack();
  inline void set_has_crackdown();
  inline void clear_has_crackdown();
  inline void set_has_avoidcrack();
  inline void clear_has_avoidcrack();
  inline void set_has_lucky();
  inline void clear_has_lucky();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_powermax();
  inline void clear_has_powermax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 strength_;
  ::google::protobuf::int32 cleverpower_;
  ::google::protobuf::int32 cleverair_;
  ::google::protobuf::int32 physicalpower_;
  ::google::protobuf::int32 patience_;
  ::google::protobuf::int32 agility_;
  ::google::protobuf::int32 lphyattack_;
  ::google::protobuf::int32 hphyattack_;
  ::google::protobuf::int32 lmagattack_;
  ::google::protobuf::int32 hmagattack_;
  ::google::protobuf::int32 phydefence_;
  ::google::protobuf::int32 magdefence_;
  ::google::protobuf::int32 hitrate_;
  ::google::protobuf::int32 avoidattack_;
  ::google::protobuf::int32 crackdown_;
  ::google::protobuf::int32 avoidcrack_;
  ::google::protobuf::int32 lucky_;
  ::google::protobuf::int32 fight_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 powermax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static CharAttr* default_instance_;
};
// -------------------------------------------------------------------

class CharAttriToGate : public ::google::protobuf::Message {
 public:
  CharAttriToGate();
  virtual ~CharAttriToGate();

  CharAttriToGate(const CharAttriToGate& from);

  inline CharAttriToGate& operator=(const CharAttriToGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharAttriToGate& default_instance();

  void Swap(CharAttriToGate* other);

  // implements Message ----------------------------------------------

  CharAttriToGate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharAttriToGate& from);
  void MergeFrom(const CharAttriToGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBase.CharAttr attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::CharBase::CharAttr& attr() const;
  inline ::CharBase::CharAttr* mutable_attr();
  inline ::CharBase::CharAttr* release_attr();
  inline void set_allocated_attr(::CharBase::CharAttr* attr);

  // @@protoc_insertion_point(class_scope:CharBase.CharAttriToGate)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBase::CharAttr* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static CharAttriToGate* default_instance_;
};
// -------------------------------------------------------------------

class AttChangeToGate : public ::google::protobuf::Message {
 public:
  AttChangeToGate();
  virtual ~AttChangeToGate();

  AttChangeToGate(const AttChangeToGate& from);

  inline AttChangeToGate& operator=(const AttChangeToGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttChangeToGate& default_instance();

  void Swap(AttChangeToGate* other);

  // implements Message ----------------------------------------------

  AttChangeToGate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttChangeToGate& from);
  void MergeFrom(const AttChangeToGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBase.CharAttChange attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::CharBase::CharAttChange& attr() const;
  inline ::CharBase::CharAttChange* mutable_attr();
  inline ::CharBase::CharAttChange* release_attr();
  inline void set_allocated_attr(::CharBase::CharAttChange* attr);

  // @@protoc_insertion_point(class_scope:CharBase.AttChangeToGate)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBase::CharAttChange* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static AttChangeToGate* default_instance_;
};
// -------------------------------------------------------------------

class AttChangeToWorld : public ::google::protobuf::Message {
 public:
  AttChangeToWorld();
  virtual ~AttChangeToWorld();

  AttChangeToWorld(const AttChangeToWorld& from);

  inline AttChangeToWorld& operator=(const AttChangeToWorld& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttChangeToWorld& default_instance();

  void Swap(AttChangeToWorld* other);

  // implements Message ----------------------------------------------

  AttChangeToWorld* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttChangeToWorld& from);
  void MergeFrom(const AttChangeToWorld& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBase.CharAttChange attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::CharBase::CharAttChange& attr() const;
  inline ::CharBase::CharAttChange* mutable_attr();
  inline ::CharBase::CharAttChange* release_attr();
  inline void set_allocated_attr(::CharBase::CharAttChange* attr);

  // @@protoc_insertion_point(class_scope:CharBase.AttChangeToWorld)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBase::CharAttChange* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static AttChangeToWorld* default_instance_;
};
// -------------------------------------------------------------------

class CharAttChange : public ::google::protobuf::Message {
 public:
  CharAttChange();
  virtual ~CharAttChange();

  CharAttChange(const CharAttChange& from);

  inline CharAttChange& operator=(const CharAttChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharAttChange& default_instance();

  void Swap(CharAttChange* other);

  // implements Message ----------------------------------------------

  CharAttChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharAttChange& from);
  void MergeFrom(const CharAttChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 type = 1;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type(int index) const;
  inline void set_type(int index, ::google::protobuf::int32 value);
  inline void add_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type();

  // repeated int64 value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value(int index) const;
  inline void set_value(int index, ::google::protobuf::int64 value);
  inline void add_value(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_value();

  // repeated int64 state = 3;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int64 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int64 value);
  inline void add_state(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_state();

  // @@protoc_insertion_point(class_scope:CharBase.CharAttChange)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static CharAttChange* default_instance_;
};
// -------------------------------------------------------------------

class SynchObjectAttr : public ::google::protobuf::Message {
 public:
  SynchObjectAttr();
  virtual ~SynchObjectAttr();

  SynchObjectAttr(const SynchObjectAttr& from);

  inline SynchObjectAttr& operator=(const SynchObjectAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynchObjectAttr& default_instance();

  void Swap(SynchObjectAttr* other);

  // implements Message ----------------------------------------------

  SynchObjectAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynchObjectAttr& from);
  void MergeFrom(const SynchObjectAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // optional int32 attkey = 2;
  inline bool has_attkey() const;
  inline void clear_attkey();
  static const int kAttkeyFieldNumber = 2;
  inline ::google::protobuf::int32 attkey() const;
  inline void set_attkey(::google::protobuf::int32 value);

  // optional .CharBase.CharAttChange attr = 3;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 3;
  inline const ::CharBase::CharAttChange& attr() const;
  inline ::CharBase::CharAttChange* mutable_attr();
  inline ::CharBase::CharAttChange* release_attr();
  inline void set_allocated_attr(::CharBase::CharAttChange* attr);

  // @@protoc_insertion_point(class_scope:CharBase.SynchObjectAttr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_attkey();
  inline void clear_has_attkey();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 attkey_;
  ::CharBase::CharAttChange* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static SynchObjectAttr* default_instance_;
};
// -------------------------------------------------------------------

class SynchObjectAttrToGT : public ::google::protobuf::Message {
 public:
  SynchObjectAttrToGT();
  virtual ~SynchObjectAttrToGT();

  SynchObjectAttrToGT(const SynchObjectAttrToGT& from);

  inline SynchObjectAttrToGT& operator=(const SynchObjectAttrToGT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynchObjectAttrToGT& default_instance();

  void Swap(SynchObjectAttrToGT* other);

  // implements Message ----------------------------------------------

  SynchObjectAttrToGT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynchObjectAttrToGT& from);
  void MergeFrom(const SynchObjectAttrToGT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBase.SynchObjectAttr attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::CharBase::SynchObjectAttr& attr() const;
  inline ::CharBase::SynchObjectAttr* mutable_attr();
  inline ::CharBase::SynchObjectAttr* release_attr();
  inline void set_allocated_attr(::CharBase::SynchObjectAttr* attr);

  // @@protoc_insertion_point(class_scope:CharBase.SynchObjectAttrToGT)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBase::SynchObjectAttr* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static SynchObjectAttrToGT* default_instance_;
};
// -------------------------------------------------------------------

class AttChangeToGame : public ::google::protobuf::Message {
 public:
  AttChangeToGame();
  virtual ~AttChangeToGame();

  AttChangeToGame(const AttChangeToGame& from);

  inline AttChangeToGame& operator=(const AttChangeToGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttChangeToGame& default_instance();

  void Swap(AttChangeToGame* other);

  // implements Message ----------------------------------------------

  AttChangeToGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttChangeToGame& from);
  void MergeFrom(const AttChangeToGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBase.CharAttChangeToGame attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::CharBase::CharAttChangeToGame& attr() const;
  inline ::CharBase::CharAttChangeToGame* mutable_attr();
  inline ::CharBase::CharAttChangeToGame* release_attr();
  inline void set_allocated_attr(::CharBase::CharAttChangeToGame* attr);

  // @@protoc_insertion_point(class_scope:CharBase.AttChangeToGame)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBase::CharAttChangeToGame* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static AttChangeToGame* default_instance_;
};
// -------------------------------------------------------------------

class CharAttChangeToGame : public ::google::protobuf::Message {
 public:
  CharAttChangeToGame();
  virtual ~CharAttChangeToGame();

  CharAttChangeToGame(const CharAttChangeToGame& from);

  inline CharAttChangeToGame& operator=(const CharAttChangeToGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharAttChangeToGame& default_instance();

  void Swap(CharAttChangeToGame* other);

  // implements Message ----------------------------------------------

  CharAttChangeToGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharAttChangeToGame& from);
  void MergeFrom(const CharAttChangeToGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 type = 1;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type(int index) const;
  inline void set_type(int index, ::google::protobuf::int32 value);
  inline void add_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type();

  // repeated string svalue = 2;
  inline int svalue_size() const;
  inline void clear_svalue();
  static const int kSvalueFieldNumber = 2;
  inline const ::std::string& svalue(int index) const;
  inline ::std::string* mutable_svalue(int index);
  inline void set_svalue(int index, const ::std::string& value);
  inline void set_svalue(int index, const char* value);
  inline void set_svalue(int index, const char* value, size_t size);
  inline ::std::string* add_svalue();
  inline void add_svalue(const ::std::string& value);
  inline void add_svalue(const char* value);
  inline void add_svalue(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& svalue() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_svalue();

  // repeated int64 state = 3;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int64 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int64 value);
  inline void add_state(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_state();

  // @@protoc_insertion_point(class_scope:CharBase.CharAttChangeToGame)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> svalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fCharAttribute_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fCharAttribute_2eproto();

  void InitAsDefaultInstance();
  static CharAttChangeToGame* default_instance_;
};
// ===================================================================


// ===================================================================

// CharAttr

// required int32 strength = 1;
inline bool CharAttr::has_strength() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharAttr::set_has_strength() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharAttr::clear_has_strength() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharAttr::clear_strength() {
  strength_ = 0;
  clear_has_strength();
}
inline ::google::protobuf::int32 CharAttr::strength() const {
  return strength_;
}
inline void CharAttr::set_strength(::google::protobuf::int32 value) {
  set_has_strength();
  strength_ = value;
}

// required int32 cleverpower = 2;
inline bool CharAttr::has_cleverpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharAttr::set_has_cleverpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharAttr::clear_has_cleverpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharAttr::clear_cleverpower() {
  cleverpower_ = 0;
  clear_has_cleverpower();
}
inline ::google::protobuf::int32 CharAttr::cleverpower() const {
  return cleverpower_;
}
inline void CharAttr::set_cleverpower(::google::protobuf::int32 value) {
  set_has_cleverpower();
  cleverpower_ = value;
}

// required int32 cleverair = 3;
inline bool CharAttr::has_cleverair() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharAttr::set_has_cleverair() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharAttr::clear_has_cleverair() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharAttr::clear_cleverair() {
  cleverair_ = 0;
  clear_has_cleverair();
}
inline ::google::protobuf::int32 CharAttr::cleverair() const {
  return cleverair_;
}
inline void CharAttr::set_cleverair(::google::protobuf::int32 value) {
  set_has_cleverair();
  cleverair_ = value;
}

// required int32 physicalpower = 4;
inline bool CharAttr::has_physicalpower() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharAttr::set_has_physicalpower() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharAttr::clear_has_physicalpower() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharAttr::clear_physicalpower() {
  physicalpower_ = 0;
  clear_has_physicalpower();
}
inline ::google::protobuf::int32 CharAttr::physicalpower() const {
  return physicalpower_;
}
inline void CharAttr::set_physicalpower(::google::protobuf::int32 value) {
  set_has_physicalpower();
  physicalpower_ = value;
}

// required int32 patience = 5;
inline bool CharAttr::has_patience() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharAttr::set_has_patience() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharAttr::clear_has_patience() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharAttr::clear_patience() {
  patience_ = 0;
  clear_has_patience();
}
inline ::google::protobuf::int32 CharAttr::patience() const {
  return patience_;
}
inline void CharAttr::set_patience(::google::protobuf::int32 value) {
  set_has_patience();
  patience_ = value;
}

// required int32 agility = 6;
inline bool CharAttr::has_agility() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharAttr::set_has_agility() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharAttr::clear_has_agility() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharAttr::clear_agility() {
  agility_ = 0;
  clear_has_agility();
}
inline ::google::protobuf::int32 CharAttr::agility() const {
  return agility_;
}
inline void CharAttr::set_agility(::google::protobuf::int32 value) {
  set_has_agility();
  agility_ = value;
}

// optional int32 lphyattack = 7;
inline bool CharAttr::has_lphyattack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharAttr::set_has_lphyattack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharAttr::clear_has_lphyattack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharAttr::clear_lphyattack() {
  lphyattack_ = 0;
  clear_has_lphyattack();
}
inline ::google::protobuf::int32 CharAttr::lphyattack() const {
  return lphyattack_;
}
inline void CharAttr::set_lphyattack(::google::protobuf::int32 value) {
  set_has_lphyattack();
  lphyattack_ = value;
}

// required int32 hphyattack = 8;
inline bool CharAttr::has_hphyattack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharAttr::set_has_hphyattack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharAttr::clear_has_hphyattack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharAttr::clear_hphyattack() {
  hphyattack_ = 0;
  clear_has_hphyattack();
}
inline ::google::protobuf::int32 CharAttr::hphyattack() const {
  return hphyattack_;
}
inline void CharAttr::set_hphyattack(::google::protobuf::int32 value) {
  set_has_hphyattack();
  hphyattack_ = value;
}

// optional int32 lmagattack = 9;
inline bool CharAttr::has_lmagattack() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CharAttr::set_has_lmagattack() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CharAttr::clear_has_lmagattack() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CharAttr::clear_lmagattack() {
  lmagattack_ = 0;
  clear_has_lmagattack();
}
inline ::google::protobuf::int32 CharAttr::lmagattack() const {
  return lmagattack_;
}
inline void CharAttr::set_lmagattack(::google::protobuf::int32 value) {
  set_has_lmagattack();
  lmagattack_ = value;
}

// optional int32 hmagattack = 10;
inline bool CharAttr::has_hmagattack() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CharAttr::set_has_hmagattack() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CharAttr::clear_has_hmagattack() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CharAttr::clear_hmagattack() {
  hmagattack_ = 0;
  clear_has_hmagattack();
}
inline ::google::protobuf::int32 CharAttr::hmagattack() const {
  return hmagattack_;
}
inline void CharAttr::set_hmagattack(::google::protobuf::int32 value) {
  set_has_hmagattack();
  hmagattack_ = value;
}

// required int32 phydefence = 11;
inline bool CharAttr::has_phydefence() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CharAttr::set_has_phydefence() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CharAttr::clear_has_phydefence() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CharAttr::clear_phydefence() {
  phydefence_ = 0;
  clear_has_phydefence();
}
inline ::google::protobuf::int32 CharAttr::phydefence() const {
  return phydefence_;
}
inline void CharAttr::set_phydefence(::google::protobuf::int32 value) {
  set_has_phydefence();
  phydefence_ = value;
}

// optional int32 magdefence = 12;
inline bool CharAttr::has_magdefence() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CharAttr::set_has_magdefence() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CharAttr::clear_has_magdefence() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CharAttr::clear_magdefence() {
  magdefence_ = 0;
  clear_has_magdefence();
}
inline ::google::protobuf::int32 CharAttr::magdefence() const {
  return magdefence_;
}
inline void CharAttr::set_magdefence(::google::protobuf::int32 value) {
  set_has_magdefence();
  magdefence_ = value;
}

// required int32 hitrate = 13;
inline bool CharAttr::has_hitrate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CharAttr::set_has_hitrate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CharAttr::clear_has_hitrate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CharAttr::clear_hitrate() {
  hitrate_ = 0;
  clear_has_hitrate();
}
inline ::google::protobuf::int32 CharAttr::hitrate() const {
  return hitrate_;
}
inline void CharAttr::set_hitrate(::google::protobuf::int32 value) {
  set_has_hitrate();
  hitrate_ = value;
}

// required int32 avoidattack = 14;
inline bool CharAttr::has_avoidattack() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CharAttr::set_has_avoidattack() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CharAttr::clear_has_avoidattack() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CharAttr::clear_avoidattack() {
  avoidattack_ = 0;
  clear_has_avoidattack();
}
inline ::google::protobuf::int32 CharAttr::avoidattack() const {
  return avoidattack_;
}
inline void CharAttr::set_avoidattack(::google::protobuf::int32 value) {
  set_has_avoidattack();
  avoidattack_ = value;
}

// required int32 crackdown = 15;
inline bool CharAttr::has_crackdown() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CharAttr::set_has_crackdown() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CharAttr::clear_has_crackdown() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CharAttr::clear_crackdown() {
  crackdown_ = 0;
  clear_has_crackdown();
}
inline ::google::protobuf::int32 CharAttr::crackdown() const {
  return crackdown_;
}
inline void CharAttr::set_crackdown(::google::protobuf::int32 value) {
  set_has_crackdown();
  crackdown_ = value;
}

// optional int32 avoidcrack = 16;
inline bool CharAttr::has_avoidcrack() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CharAttr::set_has_avoidcrack() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CharAttr::clear_has_avoidcrack() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CharAttr::clear_avoidcrack() {
  avoidcrack_ = 0;
  clear_has_avoidcrack();
}
inline ::google::protobuf::int32 CharAttr::avoidcrack() const {
  return avoidcrack_;
}
inline void CharAttr::set_avoidcrack(::google::protobuf::int32 value) {
  set_has_avoidcrack();
  avoidcrack_ = value;
}

// optional int32 lucky = 17;
inline bool CharAttr::has_lucky() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CharAttr::set_has_lucky() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CharAttr::clear_has_lucky() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CharAttr::clear_lucky() {
  lucky_ = 0;
  clear_has_lucky();
}
inline ::google::protobuf::int32 CharAttr::lucky() const {
  return lucky_;
}
inline void CharAttr::set_lucky(::google::protobuf::int32 value) {
  set_has_lucky();
  lucky_ = value;
}

// optional int32 fight = 18;
inline bool CharAttr::has_fight() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CharAttr::set_has_fight() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CharAttr::clear_has_fight() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CharAttr::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 CharAttr::fight() const {
  return fight_;
}
inline void CharAttr::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional int32 power = 19;
inline bool CharAttr::has_power() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CharAttr::set_has_power() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CharAttr::clear_has_power() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CharAttr::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 CharAttr::power() const {
  return power_;
}
inline void CharAttr::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// optional int32 powermax = 20;
inline bool CharAttr::has_powermax() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CharAttr::set_has_powermax() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CharAttr::clear_has_powermax() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CharAttr::clear_powermax() {
  powermax_ = 0;
  clear_has_powermax();
}
inline ::google::protobuf::int32 CharAttr::powermax() const {
  return powermax_;
}
inline void CharAttr::set_powermax(::google::protobuf::int32 value) {
  set_has_powermax();
  powermax_ = value;
}

// -------------------------------------------------------------------

// CharAttriToGate

// required int64 charid = 1;
inline bool CharAttriToGate::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharAttriToGate::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharAttriToGate::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharAttriToGate::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 CharAttriToGate::charid() const {
  return charid_;
}
inline void CharAttriToGate::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBase.CharAttr attr = 2;
inline bool CharAttriToGate::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharAttriToGate::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharAttriToGate::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharAttriToGate::clear_attr() {
  if (attr_ != NULL) attr_->::CharBase::CharAttr::Clear();
  clear_has_attr();
}
inline const ::CharBase::CharAttr& CharAttriToGate::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBase::CharAttr* CharAttriToGate::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBase::CharAttr;
  return attr_;
}
inline ::CharBase::CharAttr* CharAttriToGate::release_attr() {
  clear_has_attr();
  ::CharBase::CharAttr* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void CharAttriToGate::set_allocated_attr(::CharBase::CharAttr* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// AttChangeToGate

// required int64 charid = 1;
inline bool AttChangeToGate::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttChangeToGate::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttChangeToGate::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttChangeToGate::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AttChangeToGate::charid() const {
  return charid_;
}
inline void AttChangeToGate::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBase.CharAttChange attr = 2;
inline bool AttChangeToGate::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttChangeToGate::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttChangeToGate::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttChangeToGate::clear_attr() {
  if (attr_ != NULL) attr_->::CharBase::CharAttChange::Clear();
  clear_has_attr();
}
inline const ::CharBase::CharAttChange& AttChangeToGate::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBase::CharAttChange* AttChangeToGate::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBase::CharAttChange;
  return attr_;
}
inline ::CharBase::CharAttChange* AttChangeToGate::release_attr() {
  clear_has_attr();
  ::CharBase::CharAttChange* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void AttChangeToGate::set_allocated_attr(::CharBase::CharAttChange* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// AttChangeToWorld

// required int64 charid = 1;
inline bool AttChangeToWorld::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttChangeToWorld::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttChangeToWorld::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttChangeToWorld::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AttChangeToWorld::charid() const {
  return charid_;
}
inline void AttChangeToWorld::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBase.CharAttChange attr = 2;
inline bool AttChangeToWorld::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttChangeToWorld::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttChangeToWorld::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttChangeToWorld::clear_attr() {
  if (attr_ != NULL) attr_->::CharBase::CharAttChange::Clear();
  clear_has_attr();
}
inline const ::CharBase::CharAttChange& AttChangeToWorld::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBase::CharAttChange* AttChangeToWorld::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBase::CharAttChange;
  return attr_;
}
inline ::CharBase::CharAttChange* AttChangeToWorld::release_attr() {
  clear_has_attr();
  ::CharBase::CharAttChange* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void AttChangeToWorld::set_allocated_attr(::CharBase::CharAttChange* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// CharAttChange

// repeated int32 type = 1;
inline int CharAttChange::type_size() const {
  return type_.size();
}
inline void CharAttChange::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::int32 CharAttChange::type(int index) const {
  return type_.Get(index);
}
inline void CharAttChange::set_type(int index, ::google::protobuf::int32 value) {
  type_.Set(index, value);
}
inline void CharAttChange::add_type(::google::protobuf::int32 value) {
  type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharAttChange::type() const {
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharAttChange::mutable_type() {
  return &type_;
}

// repeated int64 value = 2;
inline int CharAttChange::value_size() const {
  return value_.size();
}
inline void CharAttChange::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::int64 CharAttChange::value(int index) const {
  return value_.Get(index);
}
inline void CharAttChange::set_value(int index, ::google::protobuf::int64 value) {
  value_.Set(index, value);
}
inline void CharAttChange::add_value(::google::protobuf::int64 value) {
  value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CharAttChange::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CharAttChange::mutable_value() {
  return &value_;
}

// repeated int64 state = 3;
inline int CharAttChange::state_size() const {
  return state_.size();
}
inline void CharAttChange::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int64 CharAttChange::state(int index) const {
  return state_.Get(index);
}
inline void CharAttChange::set_state(int index, ::google::protobuf::int64 value) {
  state_.Set(index, value);
}
inline void CharAttChange::add_state(::google::protobuf::int64 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CharAttChange::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CharAttChange::mutable_state() {
  return &state_;
}

// -------------------------------------------------------------------

// SynchObjectAttr

// required int32 key = 1;
inline bool SynchObjectAttr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynchObjectAttr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynchObjectAttr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynchObjectAttr::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 SynchObjectAttr::key() const {
  return key_;
}
inline void SynchObjectAttr::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// optional int32 attkey = 2;
inline bool SynchObjectAttr::has_attkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynchObjectAttr::set_has_attkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynchObjectAttr::clear_has_attkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynchObjectAttr::clear_attkey() {
  attkey_ = 0;
  clear_has_attkey();
}
inline ::google::protobuf::int32 SynchObjectAttr::attkey() const {
  return attkey_;
}
inline void SynchObjectAttr::set_attkey(::google::protobuf::int32 value) {
  set_has_attkey();
  attkey_ = value;
}

// optional .CharBase.CharAttChange attr = 3;
inline bool SynchObjectAttr::has_attr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SynchObjectAttr::set_has_attr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SynchObjectAttr::clear_has_attr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SynchObjectAttr::clear_attr() {
  if (attr_ != NULL) attr_->::CharBase::CharAttChange::Clear();
  clear_has_attr();
}
inline const ::CharBase::CharAttChange& SynchObjectAttr::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBase::CharAttChange* SynchObjectAttr::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBase::CharAttChange;
  return attr_;
}
inline ::CharBase::CharAttChange* SynchObjectAttr::release_attr() {
  clear_has_attr();
  ::CharBase::CharAttChange* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void SynchObjectAttr::set_allocated_attr(::CharBase::CharAttChange* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// SynchObjectAttrToGT

// required int64 charid = 1;
inline bool SynchObjectAttrToGT::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynchObjectAttrToGT::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynchObjectAttrToGT::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynchObjectAttrToGT::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SynchObjectAttrToGT::charid() const {
  return charid_;
}
inline void SynchObjectAttrToGT::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBase.SynchObjectAttr attr = 2;
inline bool SynchObjectAttrToGT::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynchObjectAttrToGT::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynchObjectAttrToGT::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynchObjectAttrToGT::clear_attr() {
  if (attr_ != NULL) attr_->::CharBase::SynchObjectAttr::Clear();
  clear_has_attr();
}
inline const ::CharBase::SynchObjectAttr& SynchObjectAttrToGT::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBase::SynchObjectAttr* SynchObjectAttrToGT::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBase::SynchObjectAttr;
  return attr_;
}
inline ::CharBase::SynchObjectAttr* SynchObjectAttrToGT::release_attr() {
  clear_has_attr();
  ::CharBase::SynchObjectAttr* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void SynchObjectAttrToGT::set_allocated_attr(::CharBase::SynchObjectAttr* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// AttChangeToGame

// required int64 charid = 1;
inline bool AttChangeToGame::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttChangeToGame::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttChangeToGame::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttChangeToGame::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AttChangeToGame::charid() const {
  return charid_;
}
inline void AttChangeToGame::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBase.CharAttChangeToGame attr = 2;
inline bool AttChangeToGame::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttChangeToGame::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttChangeToGame::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttChangeToGame::clear_attr() {
  if (attr_ != NULL) attr_->::CharBase::CharAttChangeToGame::Clear();
  clear_has_attr();
}
inline const ::CharBase::CharAttChangeToGame& AttChangeToGame::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBase::CharAttChangeToGame* AttChangeToGame::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBase::CharAttChangeToGame;
  return attr_;
}
inline ::CharBase::CharAttChangeToGame* AttChangeToGame::release_attr() {
  clear_has_attr();
  ::CharBase::CharAttChangeToGame* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void AttChangeToGame::set_allocated_attr(::CharBase::CharAttChangeToGame* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// CharAttChangeToGame

// repeated int32 type = 1;
inline int CharAttChangeToGame::type_size() const {
  return type_.size();
}
inline void CharAttChangeToGame::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::int32 CharAttChangeToGame::type(int index) const {
  return type_.Get(index);
}
inline void CharAttChangeToGame::set_type(int index, ::google::protobuf::int32 value) {
  type_.Set(index, value);
}
inline void CharAttChangeToGame::add_type(::google::protobuf::int32 value) {
  type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharAttChangeToGame::type() const {
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharAttChangeToGame::mutable_type() {
  return &type_;
}

// repeated string svalue = 2;
inline int CharAttChangeToGame::svalue_size() const {
  return svalue_.size();
}
inline void CharAttChangeToGame::clear_svalue() {
  svalue_.Clear();
}
inline const ::std::string& CharAttChangeToGame::svalue(int index) const {
  return svalue_.Get(index);
}
inline ::std::string* CharAttChangeToGame::mutable_svalue(int index) {
  return svalue_.Mutable(index);
}
inline void CharAttChangeToGame::set_svalue(int index, const ::std::string& value) {
  svalue_.Mutable(index)->assign(value);
}
inline void CharAttChangeToGame::set_svalue(int index, const char* value) {
  svalue_.Mutable(index)->assign(value);
}
inline void CharAttChangeToGame::set_svalue(int index, const char* value, size_t size) {
  svalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharAttChangeToGame::add_svalue() {
  return svalue_.Add();
}
inline void CharAttChangeToGame::add_svalue(const ::std::string& value) {
  svalue_.Add()->assign(value);
}
inline void CharAttChangeToGame::add_svalue(const char* value) {
  svalue_.Add()->assign(value);
}
inline void CharAttChangeToGame::add_svalue(const char* value, size_t size) {
  svalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CharAttChangeToGame::svalue() const {
  return svalue_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CharAttChangeToGame::mutable_svalue() {
  return &svalue_;
}

// repeated int64 state = 3;
inline int CharAttChangeToGame::state_size() const {
  return state_.size();
}
inline void CharAttChangeToGame::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int64 CharAttChangeToGame::state(int index) const {
  return state_.Get(index);
}
inline void CharAttChangeToGame::set_state(int index, ::google::protobuf::int64 value) {
  state_.Set(index, value);
}
inline void CharAttChangeToGame::add_state(::google::protobuf::int64 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CharAttChangeToGame::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CharAttChangeToGame::mutable_state() {
  return &state_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CharBase

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharBase_2fCharAttribute_2eproto__INCLUDED
