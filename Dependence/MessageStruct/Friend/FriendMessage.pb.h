// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Friend/FriendMessage.proto

#ifndef PROTOBUF_Friend_2fFriendMessage_2eproto__INCLUDED
#define PROTOBUF_Friend_2fFriendMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Friend {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

class ClientReqFindFriend;
class FriendList;
class AddFriend;
class AskAddFriend;
class DeleteFriend;
class UpdateDeleteFriend;
class BlessFriend;
class ClientReqBlessFriend;
class FriendInfo;
class SynOnlineFrined;
class AskBlessFriend;
class GTReqWSOpenFriend;
class GTReqWSFindFriend;
class GTReqWSAddFriend;
class GTReqWSDeleteFriend;
class WSTOGTSynOnlineFrined;
class WSTOGTFriendInfo;
class WSTOGTBlessFriend;
class GTReqWSBlessFriend;
class WSTOGTAskBlessFriend;
class AddPlayerHarted;
class AskAttacked;
class AckReqRecommendFriend;
class WSsendGMGainExp;
class AddFriendList;
class AskAddFriendList;
class FriendRecommendation;
class PlayerReturnInfo;
class FriendReturnError;
class ReqReplyAddFriend;
class AckReqReplyAddFriend;
class NoticeAddFriend;

// ===================================================================

class ClientReqFindFriend : public ::google::protobuf::Message {
 public:
  ClientReqFindFriend();
  virtual ~ClientReqFindFriend();

  ClientReqFindFriend(const ClientReqFindFriend& from);

  inline ClientReqFindFriend& operator=(const ClientReqFindFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqFindFriend& default_instance();

  void Swap(ClientReqFindFriend* other);

  // implements Message ----------------------------------------------

  ClientReqFindFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqFindFriend& from);
  void MergeFrom(const ClientReqFindFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string friendname = 1;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 1;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // @@protoc_insertion_point(class_scope:Friend.ClientReqFindFriend)
 private:
  inline void set_has_friendname();
  inline void clear_has_friendname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* friendname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqFindFriend* default_instance_;
};
// -------------------------------------------------------------------

class FriendList : public ::google::protobuf::Message {
 public:
  FriendList();
  virtual ~FriendList();

  FriendList(const FriendList& from);

  inline FriendList& operator=(const FriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendList& default_instance();

  void Swap(FriendList* other);

  // implements Message ----------------------------------------------

  FriendList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendList& from);
  void MergeFrom(const FriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .Friend.FriendInfo friendinfo = 2;
  inline int friendinfo_size() const;
  inline void clear_friendinfo();
  static const int kFriendinfoFieldNumber = 2;
  inline const ::Friend::FriendInfo& friendinfo(int index) const;
  inline ::Friend::FriendInfo* mutable_friendinfo(int index);
  inline ::Friend::FriendInfo* add_friendinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >&
      friendinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >*
      mutable_friendinfo();

  // @@protoc_insertion_point(class_scope:Friend.FriendList)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo > friendinfo_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static FriendList* default_instance_;
};
// -------------------------------------------------------------------

class AddFriend : public ::google::protobuf::Message {
 public:
  AddFriend();
  virtual ~AddFriend();

  AddFriend(const AddFriend& from);

  inline AddFriend& operator=(const AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriend& default_instance();

  void Swap(AddFriend* other);

  // implements Message ----------------------------------------------

  AddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriend& from);
  void MergeFrom(const AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 attack = 3;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 3;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.AddFriend)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_attack();
  inline void clear_has_attack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 attack_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class AskAddFriend : public ::google::protobuf::Message {
 public:
  AskAddFriend();
  virtual ~AskAddFriend();

  AskAddFriend(const AskAddFriend& from);

  inline AskAddFriend& operator=(const AskAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriend& default_instance();

  void Swap(AskAddFriend* other);

  // implements Message ----------------------------------------------

  AskAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskAddFriend& from);
  void MergeFrom(const AskAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .Friend.FriendInfo friendInfo = 2;
  inline bool has_friendinfo() const;
  inline void clear_friendinfo();
  static const int kFriendInfoFieldNumber = 2;
  inline const ::Friend::FriendInfo& friendinfo() const;
  inline ::Friend::FriendInfo* mutable_friendinfo();
  inline ::Friend::FriendInfo* release_friendinfo();
  inline void set_allocated_friendinfo(::Friend::FriendInfo* friendinfo);

  // @@protoc_insertion_point(class_scope:Friend.AskAddFriend)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_friendinfo();
  inline void clear_has_friendinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Friend::FriendInfo* friendinfo_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AskAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriend : public ::google::protobuf::Message {
 public:
  DeleteFriend();
  virtual ~DeleteFriend();

  DeleteFriend(const DeleteFriend& from);

  inline DeleteFriend& operator=(const DeleteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriend& default_instance();

  void Swap(DeleteFriend* other);

  // implements Message ----------------------------------------------

  DeleteFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFriend& from);
  void MergeFrom(const DeleteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Friend.DeleteFriend)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriend* default_instance_;
};
// -------------------------------------------------------------------

class UpdateDeleteFriend : public ::google::protobuf::Message {
 public:
  UpdateDeleteFriend();
  virtual ~UpdateDeleteFriend();

  UpdateDeleteFriend(const UpdateDeleteFriend& from);

  inline UpdateDeleteFriend& operator=(const UpdateDeleteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDeleteFriend& default_instance();

  void Swap(UpdateDeleteFriend* other);

  // implements Message ----------------------------------------------

  UpdateDeleteFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDeleteFriend& from);
  void MergeFrom(const UpdateDeleteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Friend.UpdateDeleteFriend)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static UpdateDeleteFriend* default_instance_;
};
// -------------------------------------------------------------------

class BlessFriend : public ::google::protobuf::Message {
 public:
  BlessFriend();
  virtual ~BlessFriend();

  BlessFriend(const BlessFriend& from);

  inline BlessFriend& operator=(const BlessFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlessFriend& default_instance();

  void Swap(BlessFriend* other);

  // implements Message ----------------------------------------------

  BlessFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlessFriend& from);
  void MergeFrom(const BlessFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required string friendname = 2;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 2;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // required int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 surplusSendCounts = 4;
  inline bool has_surplussendcounts() const;
  inline void clear_surplussendcounts();
  static const int kSurplusSendCountsFieldNumber = 4;
  inline ::google::protobuf::int32 surplussendcounts() const;
  inline void set_surplussendcounts(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.BlessFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_friendname();
  inline void clear_has_friendname();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_surplussendcounts();
  inline void clear_has_surplussendcounts();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* friendname_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 surplussendcounts_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static BlessFriend* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqBlessFriend : public ::google::protobuf::Message {
 public:
  ClientReqBlessFriend();
  virtual ~ClientReqBlessFriend();

  ClientReqBlessFriend(const ClientReqBlessFriend& from);

  inline ClientReqBlessFriend& operator=(const ClientReqBlessFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqBlessFriend& default_instance();

  void Swap(ClientReqBlessFriend* other);

  // implements Message ----------------------------------------------

  ClientReqBlessFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqBlessFriend& from);
  void MergeFrom(const ClientReqBlessFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 charid = 1;
  inline int charid_size() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid(int index) const;
  inline void set_charid(int index, ::google::protobuf::int64 value);
  inline void add_charid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      charid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_charid();

  // @@protoc_insertion_point(class_scope:Friend.ClientReqBlessFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientReqBlessFriend* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  void Swap(FriendInfo* other);

  // implements Message ----------------------------------------------

  FriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string friendname = 3;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 3;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // required int32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 profession = 5;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 5;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // optional int32 hatred = 6;
  inline bool has_hatred() const;
  inline void clear_hatred();
  static const int kHatredFieldNumber = 6;
  inline ::google::protobuf::int32 hatred() const;
  inline void set_hatred(::google::protobuf::int32 value);

  // optional int32 online = 7;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 7;
  inline ::google::protobuf::int32 online() const;
  inline void set_online(::google::protobuf::int32 value);

  // optional int32 viplv = 8;
  inline bool has_viplv() const;
  inline void clear_viplv();
  static const int kViplvFieldNumber = 8;
  inline ::google::protobuf::int32 viplv() const;
  inline void set_viplv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.FriendInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_friendname();
  inline void clear_has_friendname();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_hatred();
  inline void clear_has_hatred();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_viplv();
  inline void clear_has_viplv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* friendname_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::int32 hatred_;
  ::google::protobuf::int32 online_;
  ::google::protobuf::int32 viplv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class SynOnlineFrined : public ::google::protobuf::Message {
 public:
  SynOnlineFrined();
  virtual ~SynOnlineFrined();

  SynOnlineFrined(const SynOnlineFrined& from);

  inline SynOnlineFrined& operator=(const SynOnlineFrined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynOnlineFrined& default_instance();

  void Swap(SynOnlineFrined* other);

  // implements Message ----------------------------------------------

  SynOnlineFrined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynOnlineFrined& from);
  void MergeFrom(const SynOnlineFrined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 online = 2;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 2;
  inline ::google::protobuf::int32 online() const;
  inline void set_online(::google::protobuf::int32 value);

  // required int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.SynOnlineFrined)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 online_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static SynOnlineFrined* default_instance_;
};
// -------------------------------------------------------------------

class AskBlessFriend : public ::google::protobuf::Message {
 public:
  AskBlessFriend();
  virtual ~AskBlessFriend();

  AskBlessFriend(const AskBlessFriend& from);

  inline AskBlessFriend& operator=(const AskBlessFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskBlessFriend& default_instance();

  void Swap(AskBlessFriend* other);

  // implements Message ----------------------------------------------

  AskBlessFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskBlessFriend& from);
  void MergeFrom(const AskBlessFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required string friendname = 2;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 2;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // required int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 surplusReceiveCounts = 4;
  inline bool has_surplusreceivecounts() const;
  inline void clear_surplusreceivecounts();
  static const int kSurplusReceiveCountsFieldNumber = 4;
  inline ::google::protobuf::int32 surplusreceivecounts() const;
  inline void set_surplusreceivecounts(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.AskBlessFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_friendname();
  inline void clear_has_friendname();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_surplusreceivecounts();
  inline void clear_has_surplusreceivecounts();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* friendname_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 surplusreceivecounts_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AskBlessFriend* default_instance_;
};
// -------------------------------------------------------------------

class GTReqWSOpenFriend : public ::google::protobuf::Message {
 public:
  GTReqWSOpenFriend();
  virtual ~GTReqWSOpenFriend();

  GTReqWSOpenFriend(const GTReqWSOpenFriend& from);

  inline GTReqWSOpenFriend& operator=(const GTReqWSOpenFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTReqWSOpenFriend& default_instance();

  void Swap(GTReqWSOpenFriend* other);

  // implements Message ----------------------------------------------

  GTReqWSOpenFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTReqWSOpenFriend& from);
  void MergeFrom(const GTReqWSOpenFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Friend.GTReqWSOpenFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GTReqWSOpenFriend* default_instance_;
};
// -------------------------------------------------------------------

class GTReqWSFindFriend : public ::google::protobuf::Message {
 public:
  GTReqWSFindFriend();
  virtual ~GTReqWSFindFriend();

  GTReqWSFindFriend(const GTReqWSFindFriend& from);

  inline GTReqWSFindFriend& operator=(const GTReqWSFindFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTReqWSFindFriend& default_instance();

  void Swap(GTReqWSFindFriend* other);

  // implements Message ----------------------------------------------

  GTReqWSFindFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTReqWSFindFriend& from);
  void MergeFrom(const GTReqWSFindFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required string friendname = 2;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 2;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // @@protoc_insertion_point(class_scope:Friend.GTReqWSFindFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_friendname();
  inline void clear_has_friendname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* friendname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GTReqWSFindFriend* default_instance_;
};
// -------------------------------------------------------------------

class GTReqWSAddFriend : public ::google::protobuf::Message {
 public:
  GTReqWSAddFriend();
  virtual ~GTReqWSAddFriend();

  GTReqWSAddFriend(const GTReqWSAddFriend& from);

  inline GTReqWSAddFriend& operator=(const GTReqWSAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTReqWSAddFriend& default_instance();

  void Swap(GTReqWSAddFriend* other);

  // implements Message ----------------------------------------------

  GTReqWSAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTReqWSAddFriend& from);
  void MergeFrom(const GTReqWSAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 otherid = 3;
  inline bool has_otherid() const;
  inline void clear_otherid();
  static const int kOtheridFieldNumber = 3;
  inline ::google::protobuf::int64 otherid() const;
  inline void set_otherid(::google::protobuf::int64 value);

  // required int32 attack = 4;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 4;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.GTReqWSAddFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_otherid();
  inline void clear_has_otherid();
  inline void set_has_attack();
  inline void clear_has_attack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 otherid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 attack_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GTReqWSAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class GTReqWSDeleteFriend : public ::google::protobuf::Message {
 public:
  GTReqWSDeleteFriend();
  virtual ~GTReqWSDeleteFriend();

  GTReqWSDeleteFriend(const GTReqWSDeleteFriend& from);

  inline GTReqWSDeleteFriend& operator=(const GTReqWSDeleteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTReqWSDeleteFriend& default_instance();

  void Swap(GTReqWSDeleteFriend* other);

  // implements Message ----------------------------------------------

  GTReqWSDeleteFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTReqWSDeleteFriend& from);
  void MergeFrom(const GTReqWSDeleteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 otherid = 3;
  inline bool has_otherid() const;
  inline void clear_otherid();
  static const int kOtheridFieldNumber = 3;
  inline ::google::protobuf::int64 otherid() const;
  inline void set_otherid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Friend.GTReqWSDeleteFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_otherid();
  inline void clear_has_otherid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 otherid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GTReqWSDeleteFriend* default_instance_;
};
// -------------------------------------------------------------------

class WSTOGTSynOnlineFrined : public ::google::protobuf::Message {
 public:
  WSTOGTSynOnlineFrined();
  virtual ~WSTOGTSynOnlineFrined();

  WSTOGTSynOnlineFrined(const WSTOGTSynOnlineFrined& from);

  inline WSTOGTSynOnlineFrined& operator=(const WSTOGTSynOnlineFrined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSTOGTSynOnlineFrined& default_instance();

  void Swap(WSTOGTSynOnlineFrined* other);

  // implements Message ----------------------------------------------

  WSTOGTSynOnlineFrined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSTOGTSynOnlineFrined& from);
  void MergeFrom(const WSTOGTSynOnlineFrined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 mycharid = 1;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMycharidFieldNumber = 1;
  inline ::google::protobuf::int64 mycharid() const;
  inline void set_mycharid(::google::protobuf::int64 value);

  // required .Friend.SynOnlineFrined friend = 2;
  inline bool has_friend_() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 2;
  inline const ::Friend::SynOnlineFrined& friend_() const;
  inline ::Friend::SynOnlineFrined* mutable_friend_();
  inline ::Friend::SynOnlineFrined* release_friend_();
  inline void set_allocated_friend_(::Friend::SynOnlineFrined* friend_);

  // @@protoc_insertion_point(class_scope:Friend.WSTOGTSynOnlineFrined)
 private:
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_friend_();
  inline void clear_has_friend_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mycharid_;
  ::Friend::SynOnlineFrined* friend__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static WSTOGTSynOnlineFrined* default_instance_;
};
// -------------------------------------------------------------------

class WSTOGTFriendInfo : public ::google::protobuf::Message {
 public:
  WSTOGTFriendInfo();
  virtual ~WSTOGTFriendInfo();

  WSTOGTFriendInfo(const WSTOGTFriendInfo& from);

  inline WSTOGTFriendInfo& operator=(const WSTOGTFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSTOGTFriendInfo& default_instance();

  void Swap(WSTOGTFriendInfo* other);

  // implements Message ----------------------------------------------

  WSTOGTFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSTOGTFriendInfo& from);
  void MergeFrom(const WSTOGTFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .Friend.FriendInfo friendinfo = 2;
  inline bool has_friendinfo() const;
  inline void clear_friendinfo();
  static const int kFriendinfoFieldNumber = 2;
  inline const ::Friend::FriendInfo& friendinfo() const;
  inline ::Friend::FriendInfo* mutable_friendinfo();
  inline ::Friend::FriendInfo* release_friendinfo();
  inline void set_allocated_friendinfo(::Friend::FriendInfo* friendinfo);

  // @@protoc_insertion_point(class_scope:Friend.WSTOGTFriendInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_friendinfo();
  inline void clear_has_friendinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Friend::FriendInfo* friendinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static WSTOGTFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class WSTOGTBlessFriend : public ::google::protobuf::Message {
 public:
  WSTOGTBlessFriend();
  virtual ~WSTOGTBlessFriend();

  WSTOGTBlessFriend(const WSTOGTBlessFriend& from);

  inline WSTOGTBlessFriend& operator=(const WSTOGTBlessFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSTOGTBlessFriend& default_instance();

  void Swap(WSTOGTBlessFriend* other);

  // implements Message ----------------------------------------------

  WSTOGTBlessFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSTOGTBlessFriend& from);
  void MergeFrom(const WSTOGTBlessFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int64 othercharid = 2;
  inline bool has_othercharid() const;
  inline void clear_othercharid();
  static const int kOthercharidFieldNumber = 2;
  inline ::google::protobuf::int64 othercharid() const;
  inline void set_othercharid(::google::protobuf::int64 value);

  // required string friendname = 3;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendnameFieldNumber = 3;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // required int32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.WSTOGTBlessFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_othercharid();
  inline void clear_has_othercharid();
  inline void set_has_friendname();
  inline void clear_has_friendname();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int64 othercharid_;
  ::std::string* friendname_;
  ::google::protobuf::int32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static WSTOGTBlessFriend* default_instance_;
};
// -------------------------------------------------------------------

class GTReqWSBlessFriend : public ::google::protobuf::Message {
 public:
  GTReqWSBlessFriend();
  virtual ~GTReqWSBlessFriend();

  GTReqWSBlessFriend(const GTReqWSBlessFriend& from);

  inline GTReqWSBlessFriend& operator=(const GTReqWSBlessFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GTReqWSBlessFriend& default_instance();

  void Swap(GTReqWSBlessFriend* other);

  // implements Message ----------------------------------------------

  GTReqWSBlessFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTReqWSBlessFriend& from);
  void MergeFrom(const GTReqWSBlessFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 mycharid = 1;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMycharidFieldNumber = 1;
  inline ::google::protobuf::int64 mycharid() const;
  inline void set_mycharid(::google::protobuf::int64 value);

  // required .Friend.ClientReqBlessFriend bressFriend = 2;
  inline bool has_bressfriend() const;
  inline void clear_bressfriend();
  static const int kBressFriendFieldNumber = 2;
  inline const ::Friend::ClientReqBlessFriend& bressfriend() const;
  inline ::Friend::ClientReqBlessFriend* mutable_bressfriend();
  inline ::Friend::ClientReqBlessFriend* release_bressfriend();
  inline void set_allocated_bressfriend(::Friend::ClientReqBlessFriend* bressfriend);

  // @@protoc_insertion_point(class_scope:Friend.GTReqWSBlessFriend)
 private:
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_bressfriend();
  inline void clear_has_bressfriend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mycharid_;
  ::Friend::ClientReqBlessFriend* bressfriend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static GTReqWSBlessFriend* default_instance_;
};
// -------------------------------------------------------------------

class WSTOGTAskBlessFriend : public ::google::protobuf::Message {
 public:
  WSTOGTAskBlessFriend();
  virtual ~WSTOGTAskBlessFriend();

  WSTOGTAskBlessFriend(const WSTOGTAskBlessFriend& from);

  inline WSTOGTAskBlessFriend& operator=(const WSTOGTAskBlessFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSTOGTAskBlessFriend& default_instance();

  void Swap(WSTOGTAskBlessFriend* other);

  // implements Message ----------------------------------------------

  WSTOGTAskBlessFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSTOGTAskBlessFriend& from);
  void MergeFrom(const WSTOGTAskBlessFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .Friend.AskBlessFriend blessfriend = 2;
  inline bool has_blessfriend() const;
  inline void clear_blessfriend();
  static const int kBlessfriendFieldNumber = 2;
  inline const ::Friend::AskBlessFriend& blessfriend() const;
  inline ::Friend::AskBlessFriend* mutable_blessfriend();
  inline ::Friend::AskBlessFriend* release_blessfriend();
  inline void set_allocated_blessfriend(::Friend::AskBlessFriend* blessfriend);

  // @@protoc_insertion_point(class_scope:Friend.WSTOGTAskBlessFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_blessfriend();
  inline void clear_has_blessfriend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::Friend::AskBlessFriend* blessfriend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static WSTOGTAskBlessFriend* default_instance_;
};
// -------------------------------------------------------------------

class AddPlayerHarted : public ::google::protobuf::Message {
 public:
  AddPlayerHarted();
  virtual ~AddPlayerHarted();

  AddPlayerHarted(const AddPlayerHarted& from);

  inline AddPlayerHarted& operator=(const AddPlayerHarted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPlayerHarted& default_instance();

  void Swap(AddPlayerHarted* other);

  // implements Message ----------------------------------------------

  AddPlayerHarted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPlayerHarted& from);
  void MergeFrom(const AddPlayerHarted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 myself = 1;
  inline bool has_myself() const;
  inline void clear_myself();
  static const int kMyselfFieldNumber = 1;
  inline ::google::protobuf::int64 myself() const;
  inline void set_myself(::google::protobuf::int64 value);

  // required int64 other = 2;
  inline bool has_other() const;
  inline void clear_other();
  static const int kOtherFieldNumber = 2;
  inline ::google::protobuf::int64 other() const;
  inline void set_other(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Friend.AddPlayerHarted)
 private:
  inline void set_has_myself();
  inline void clear_has_myself();
  inline void set_has_other();
  inline void clear_has_other();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 myself_;
  ::google::protobuf::int64 other_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AddPlayerHarted* default_instance_;
};
// -------------------------------------------------------------------

class AskAttacked : public ::google::protobuf::Message {
 public:
  AskAttacked();
  virtual ~AskAttacked();

  AskAttacked(const AskAttacked& from);

  inline AskAttacked& operator=(const AskAttacked& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAttacked& default_instance();

  void Swap(AskAttacked* other);

  // implements Message ----------------------------------------------

  AskAttacked* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskAttacked& from);
  void MergeFrom(const AskAttacked& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Friend.AskAttacked)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AskAttacked* default_instance_;
};
// -------------------------------------------------------------------

class AckReqRecommendFriend : public ::google::protobuf::Message {
 public:
  AckReqRecommendFriend();
  virtual ~AckReqRecommendFriend();

  AckReqRecommendFriend(const AckReqRecommendFriend& from);

  inline AckReqRecommendFriend& operator=(const AckReqRecommendFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqRecommendFriend& default_instance();

  void Swap(AckReqRecommendFriend* other);

  // implements Message ----------------------------------------------

  AckReqRecommendFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqRecommendFriend& from);
  void MergeFrom(const AckReqRecommendFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 charid = 1;
  inline int charid_size() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid(int index) const;
  inline void set_charid(int index, ::google::protobuf::int64 value);
  inline void add_charid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      charid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_charid();

  // repeated string name = 2;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated int32 lv = 3;
  inline int lv_size() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv(int index) const;
  inline void set_lv(int index, ::google::protobuf::int32 value);
  inline void add_lv(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lv() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lv();

  // @@protoc_insertion_point(class_scope:Friend.AckReqRecommendFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > charid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AckReqRecommendFriend* default_instance_;
};
// -------------------------------------------------------------------

class WSsendGMGainExp : public ::google::protobuf::Message {
 public:
  WSsendGMGainExp();
  virtual ~WSsendGMGainExp();

  WSsendGMGainExp(const WSsendGMGainExp& from);

  inline WSsendGMGainExp& operator=(const WSsendGMGainExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSsendGMGainExp& default_instance();

  void Swap(WSsendGMGainExp* other);

  // implements Message ----------------------------------------------

  WSsendGMGainExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSsendGMGainExp& from);
  void MergeFrom(const WSsendGMGainExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 playerID = 1;
  inline int playerid_size() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid(int index) const;
  inline void set_playerid(int index, ::google::protobuf::int64 value);
  inline void add_playerid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      playerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_playerid();

  // repeated int32 level = 2;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level(int index) const;
  inline void set_level(int index, ::google::protobuf::int32 value);
  inline void add_level(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_level();

  // @@protoc_insertion_point(class_scope:Friend.WSsendGMGainExp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static WSsendGMGainExp* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendList : public ::google::protobuf::Message {
 public:
  AddFriendList();
  virtual ~AddFriendList();

  AddFriendList(const AddFriendList& from);

  inline AddFriendList& operator=(const AddFriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendList& default_instance();

  void Swap(AddFriendList* other);

  // implements Message ----------------------------------------------

  AddFriendList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendList& from);
  void MergeFrom(const AddFriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Friend.AddFriend friendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::Friend::AddFriend& friendlist(int index) const;
  inline ::Friend::AddFriend* mutable_friendlist(int index);
  inline ::Friend::AddFriend* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Friend::AddFriend >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Friend::AddFriend >*
      mutable_friendlist();

  // @@protoc_insertion_point(class_scope:Friend.AddFriendList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Friend::AddFriend > friendlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AddFriendList* default_instance_;
};
// -------------------------------------------------------------------

class AskAddFriendList : public ::google::protobuf::Message {
 public:
  AskAddFriendList();
  virtual ~AskAddFriendList();

  AskAddFriendList(const AskAddFriendList& from);

  inline AskAddFriendList& operator=(const AskAddFriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriendList& default_instance();

  void Swap(AskAddFriendList* other);

  // implements Message ----------------------------------------------

  AskAddFriendList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskAddFriendList& from);
  void MergeFrom(const AskAddFriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Friend.AskAddFriend askFriendList = 2;
  inline int askfriendlist_size() const;
  inline void clear_askfriendlist();
  static const int kAskFriendListFieldNumber = 2;
  inline const ::Friend::AskAddFriend& askfriendlist(int index) const;
  inline ::Friend::AskAddFriend* mutable_askfriendlist(int index);
  inline ::Friend::AskAddFriend* add_askfriendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Friend::AskAddFriend >&
      askfriendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Friend::AskAddFriend >*
      mutable_askfriendlist();

  // @@protoc_insertion_point(class_scope:Friend.AskAddFriendList)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Friend::AskAddFriend > askfriendlist_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AskAddFriendList* default_instance_;
};
// -------------------------------------------------------------------

class FriendRecommendation : public ::google::protobuf::Message {
 public:
  FriendRecommendation();
  virtual ~FriendRecommendation();

  FriendRecommendation(const FriendRecommendation& from);

  inline FriendRecommendation& operator=(const FriendRecommendation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendRecommendation& default_instance();

  void Swap(FriendRecommendation* other);

  // implements Message ----------------------------------------------

  FriendRecommendation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendRecommendation& from);
  void MergeFrom(const FriendRecommendation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 playerID = 1;
  inline int playerid_size() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid(int index) const;
  inline void set_playerid(int index, ::google::protobuf::int64 value);
  inline void add_playerid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      playerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_playerid();

  // repeated int32 profession = 2;
  inline int profession_size() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 2;
  inline ::google::protobuf::int32 profession(int index) const;
  inline void set_profession(int index, ::google::protobuf::int32 value);
  inline void add_profession(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      profession() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_profession();

  // repeated int32 gender = 3;
  inline int gender_size() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 3;
  inline ::google::protobuf::int32 gender(int index) const;
  inline void set_gender(int index, ::google::protobuf::int32 value);
  inline void add_gender(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gender() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gender();

  // repeated string name = 4;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // @@protoc_insertion_point(class_scope:Friend.FriendRecommendation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > profession_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gender_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static FriendRecommendation* default_instance_;
};
// -------------------------------------------------------------------

class PlayerReturnInfo : public ::google::protobuf::Message {
 public:
  PlayerReturnInfo();
  virtual ~PlayerReturnInfo();

  PlayerReturnInfo(const PlayerReturnInfo& from);

  inline PlayerReturnInfo& operator=(const PlayerReturnInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReturnInfo& default_instance();

  void Swap(PlayerReturnInfo* other);

  // implements Message ----------------------------------------------

  PlayerReturnInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerReturnInfo& from);
  void MergeFrom(const PlayerReturnInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional int32 error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.PlayerReturnInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerReturnInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendReturnError : public ::google::protobuf::Message {
 public:
  FriendReturnError();
  virtual ~FriendReturnError();

  FriendReturnError(const FriendReturnError& from);

  inline FriendReturnError& operator=(const FriendReturnError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendReturnError& default_instance();

  void Swap(FriendReturnError* other);

  // implements Message ----------------------------------------------

  FriendReturnError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendReturnError& from);
  void MergeFrom(const FriendReturnError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Friend.PlayerReturnInfo playerInfo = 2;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::Friend::PlayerReturnInfo& playerinfo(int index) const;
  inline ::Friend::PlayerReturnInfo* mutable_playerinfo(int index);
  inline ::Friend::PlayerReturnInfo* add_playerinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Friend::PlayerReturnInfo >&
      playerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Friend::PlayerReturnInfo >*
      mutable_playerinfo();

  // optional int32 SurplusCounts = 3;
  inline bool has_surpluscounts() const;
  inline void clear_surpluscounts();
  static const int kSurplusCountsFieldNumber = 3;
  inline ::google::protobuf::int32 surpluscounts() const;
  inline void set_surpluscounts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Friend.FriendReturnError)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_surpluscounts();
  inline void clear_has_surpluscounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Friend::PlayerReturnInfo > playerinfo_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 surpluscounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static FriendReturnError* default_instance_;
};
// -------------------------------------------------------------------

class ReqReplyAddFriend : public ::google::protobuf::Message {
 public:
  ReqReplyAddFriend();
  virtual ~ReqReplyAddFriend();

  ReqReplyAddFriend(const ReqReplyAddFriend& from);

  inline ReqReplyAddFriend& operator=(const ReqReplyAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReplyAddFriend& default_instance();

  void Swap(ReqReplyAddFriend* other);

  // implements Message ----------------------------------------------

  ReqReplyAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReplyAddFriend& from);
  void MergeFrom(const ReqReplyAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated int64 targetid = 2;
  inline int targetid_size() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 2;
  inline ::google::protobuf::int64 targetid(int index) const;
  inline void set_targetid(int index, ::google::protobuf::int64 value);
  inline void add_targetid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      targetid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_targetid();

  // @@protoc_insertion_point(class_scope:Friend.ReqReplyAddFriend)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > targetid_;
  ::google::protobuf::int32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static ReqReplyAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class AckReqReplyAddFriend : public ::google::protobuf::Message {
 public:
  AckReqReplyAddFriend();
  virtual ~AckReqReplyAddFriend();

  AckReqReplyAddFriend(const AckReqReplyAddFriend& from);

  inline AckReqReplyAddFriend& operator=(const AckReqReplyAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqReplyAddFriend& default_instance();

  void Swap(AckReqReplyAddFriend* other);

  // implements Message ----------------------------------------------

  AckReqReplyAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqReplyAddFriend& from);
  void MergeFrom(const AckReqReplyAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // repeated int64 targetid = 3;
  inline int targetid_size() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::int64 targetid(int index) const;
  inline void set_targetid(int index, ::google::protobuf::int64 value);
  inline void add_targetid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      targetid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_targetid();

  // @@protoc_insertion_point(class_scope:Friend.AckReqReplyAddFriend)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > targetid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static AckReqReplyAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class NoticeAddFriend : public ::google::protobuf::Message {
 public:
  NoticeAddFriend();
  virtual ~NoticeAddFriend();

  NoticeAddFriend(const NoticeAddFriend& from);

  inline NoticeAddFriend& operator=(const NoticeAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoticeAddFriend& default_instance();

  void Swap(NoticeAddFriend* other);

  // implements Message ----------------------------------------------

  NoticeAddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoticeAddFriend& from);
  void MergeFrom(const NoticeAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Friend.FriendInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Friend::FriendInfo& info(int index) const;
  inline ::Friend::FriendInfo* mutable_info(int index);
  inline ::Friend::FriendInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Friend.NoticeAddFriend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_AssignDesc_Friend_2fFriendMessage_2eproto();
  friend void protobuf_ShutdownFile_Friend_2fFriendMessage_2eproto();

  void InitAsDefaultInstance();
  static NoticeAddFriend* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientReqFindFriend

// required string friendname = 1;
inline bool ClientReqFindFriend::has_friendname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqFindFriend::set_has_friendname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqFindFriend::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqFindFriend::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& ClientReqFindFriend::friendname() const {
  return *friendname_;
}
inline void ClientReqFindFriend::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void ClientReqFindFriend::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void ClientReqFindFriend::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientReqFindFriend::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* ClientReqFindFriend::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientReqFindFriend::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FriendList

// required int32 ret = 1;
inline bool FriendList::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendList::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendList::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendList::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 FriendList::ret() const {
  return ret_;
}
inline void FriendList::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .Friend.FriendInfo friendinfo = 2;
inline int FriendList::friendinfo_size() const {
  return friendinfo_.size();
}
inline void FriendList::clear_friendinfo() {
  friendinfo_.Clear();
}
inline const ::Friend::FriendInfo& FriendList::friendinfo(int index) const {
  return friendinfo_.Get(index);
}
inline ::Friend::FriendInfo* FriendList::mutable_friendinfo(int index) {
  return friendinfo_.Mutable(index);
}
inline ::Friend::FriendInfo* FriendList::add_friendinfo() {
  return friendinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >&
FriendList::friendinfo() const {
  return friendinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >*
FriendList::mutable_friendinfo() {
  return &friendinfo_;
}

// -------------------------------------------------------------------

// AddFriend

// required int32 type = 1;
inline bool AddFriend::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriend::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AddFriend::type() const {
  return type_;
}
inline void AddFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 charid = 2;
inline bool AddFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AddFriend::charid() const {
  return charid_;
}
inline void AddFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 attack = 3;
inline bool AddFriend::has_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriend::set_has_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriend::clear_has_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriend::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 AddFriend::attack() const {
  return attack_;
}
inline void AddFriend::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
}

// -------------------------------------------------------------------

// AskAddFriend

// required int32 status = 1;
inline bool AskAddFriend::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskAddFriend::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskAddFriend::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskAddFriend::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AskAddFriend::status() const {
  return status_;
}
inline void AskAddFriend::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional .Friend.FriendInfo friendInfo = 2;
inline bool AskAddFriend::has_friendinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskAddFriend::set_has_friendinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskAddFriend::clear_has_friendinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskAddFriend::clear_friendinfo() {
  if (friendinfo_ != NULL) friendinfo_->::Friend::FriendInfo::Clear();
  clear_has_friendinfo();
}
inline const ::Friend::FriendInfo& AskAddFriend::friendinfo() const {
  return friendinfo_ != NULL ? *friendinfo_ : *default_instance_->friendinfo_;
}
inline ::Friend::FriendInfo* AskAddFriend::mutable_friendinfo() {
  set_has_friendinfo();
  if (friendinfo_ == NULL) friendinfo_ = new ::Friend::FriendInfo;
  return friendinfo_;
}
inline ::Friend::FriendInfo* AskAddFriend::release_friendinfo() {
  clear_has_friendinfo();
  ::Friend::FriendInfo* temp = friendinfo_;
  friendinfo_ = NULL;
  return temp;
}
inline void AskAddFriend::set_allocated_friendinfo(::Friend::FriendInfo* friendinfo) {
  delete friendinfo_;
  friendinfo_ = friendinfo;
  if (friendinfo) {
    set_has_friendinfo();
  } else {
    clear_has_friendinfo();
  }
}

// -------------------------------------------------------------------

// DeleteFriend

// required int32 type = 1;
inline bool DeleteFriend::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriend::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DeleteFriend::type() const {
  return type_;
}
inline void DeleteFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 charid = 2;
inline bool DeleteFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 DeleteFriend::charid() const {
  return charid_;
}
inline void DeleteFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// UpdateDeleteFriend

// required int32 status = 1;
inline bool UpdateDeleteFriend::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDeleteFriend::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDeleteFriend::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDeleteFriend::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UpdateDeleteFriend::status() const {
  return status_;
}
inline void UpdateDeleteFriend::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 type = 2;
inline bool UpdateDeleteFriend::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDeleteFriend::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDeleteFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDeleteFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UpdateDeleteFriend::type() const {
  return type_;
}
inline void UpdateDeleteFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 charid = 3;
inline bool UpdateDeleteFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateDeleteFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateDeleteFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateDeleteFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 UpdateDeleteFriend::charid() const {
  return charid_;
}
inline void UpdateDeleteFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// BlessFriend

// required int64 charid = 1;
inline bool BlessFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlessFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlessFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlessFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 BlessFriend::charid() const {
  return charid_;
}
inline void BlessFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required string friendname = 2;
inline bool BlessFriend::has_friendname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlessFriend::set_has_friendname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlessFriend::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlessFriend::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& BlessFriend::friendname() const {
  return *friendname_;
}
inline void BlessFriend::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void BlessFriend::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void BlessFriend::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BlessFriend::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* BlessFriend::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BlessFriend::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 lv = 3;
inline bool BlessFriend::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlessFriend::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlessFriend::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlessFriend::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 BlessFriend::lv() const {
  return lv_;
}
inline void BlessFriend::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 surplusSendCounts = 4;
inline bool BlessFriend::has_surplussendcounts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlessFriend::set_has_surplussendcounts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlessFriend::clear_has_surplussendcounts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlessFriend::clear_surplussendcounts() {
  surplussendcounts_ = 0;
  clear_has_surplussendcounts();
}
inline ::google::protobuf::int32 BlessFriend::surplussendcounts() const {
  return surplussendcounts_;
}
inline void BlessFriend::set_surplussendcounts(::google::protobuf::int32 value) {
  set_has_surplussendcounts();
  surplussendcounts_ = value;
}

// optional int32 exp = 5;
inline bool BlessFriend::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlessFriend::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BlessFriend::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BlessFriend::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 BlessFriend::exp() const {
  return exp_;
}
inline void BlessFriend::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// ClientReqBlessFriend

// repeated int64 charid = 1;
inline int ClientReqBlessFriend::charid_size() const {
  return charid_.size();
}
inline void ClientReqBlessFriend::clear_charid() {
  charid_.Clear();
}
inline ::google::protobuf::int64 ClientReqBlessFriend::charid(int index) const {
  return charid_.Get(index);
}
inline void ClientReqBlessFriend::set_charid(int index, ::google::protobuf::int64 value) {
  charid_.Set(index, value);
}
inline void ClientReqBlessFriend::add_charid(::google::protobuf::int64 value) {
  charid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ClientReqBlessFriend::charid() const {
  return charid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ClientReqBlessFriend::mutable_charid() {
  return &charid_;
}

// -------------------------------------------------------------------

// FriendInfo

// required int64 charid = 1;
inline bool FriendInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 FriendInfo::charid() const {
  return charid_;
}
inline void FriendInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool FriendInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FriendInfo::type() const {
  return type_;
}
inline void FriendInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required string friendname = 3;
inline bool FriendInfo::has_friendname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInfo::set_has_friendname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInfo::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInfo::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& FriendInfo::friendname() const {
  return *friendname_;
}
inline void FriendInfo::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void FriendInfo::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void FriendInfo::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendInfo::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* FriendInfo::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendInfo::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 lv = 4;
inline bool FriendInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 FriendInfo::lv() const {
  return lv_;
}
inline void FriendInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 profession = 5;
inline bool FriendInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendInfo::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 FriendInfo::profession() const {
  return profession_;
}
inline void FriendInfo::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// optional int32 hatred = 6;
inline bool FriendInfo::has_hatred() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendInfo::set_has_hatred() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendInfo::clear_has_hatred() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendInfo::clear_hatred() {
  hatred_ = 0;
  clear_has_hatred();
}
inline ::google::protobuf::int32 FriendInfo::hatred() const {
  return hatred_;
}
inline void FriendInfo::set_hatred(::google::protobuf::int32 value) {
  set_has_hatred();
  hatred_ = value;
}

// optional int32 online = 7;
inline bool FriendInfo::has_online() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendInfo::set_has_online() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendInfo::clear_online() {
  online_ = 0;
  clear_has_online();
}
inline ::google::protobuf::int32 FriendInfo::online() const {
  return online_;
}
inline void FriendInfo::set_online(::google::protobuf::int32 value) {
  set_has_online();
  online_ = value;
}

// optional int32 viplv = 8;
inline bool FriendInfo::has_viplv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendInfo::set_has_viplv() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendInfo::clear_has_viplv() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendInfo::clear_viplv() {
  viplv_ = 0;
  clear_has_viplv();
}
inline ::google::protobuf::int32 FriendInfo::viplv() const {
  return viplv_;
}
inline void FriendInfo::set_viplv(::google::protobuf::int32 value) {
  set_has_viplv();
  viplv_ = value;
}

// -------------------------------------------------------------------

// SynOnlineFrined

// required int64 charid = 1;
inline bool SynOnlineFrined::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynOnlineFrined::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynOnlineFrined::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynOnlineFrined::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SynOnlineFrined::charid() const {
  return charid_;
}
inline void SynOnlineFrined::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 online = 2;
inline bool SynOnlineFrined::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynOnlineFrined::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynOnlineFrined::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynOnlineFrined::clear_online() {
  online_ = 0;
  clear_has_online();
}
inline ::google::protobuf::int32 SynOnlineFrined::online() const {
  return online_;
}
inline void SynOnlineFrined::set_online(::google::protobuf::int32 value) {
  set_has_online();
  online_ = value;
}

// required int32 type = 3;
inline bool SynOnlineFrined::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SynOnlineFrined::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SynOnlineFrined::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SynOnlineFrined::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SynOnlineFrined::type() const {
  return type_;
}
inline void SynOnlineFrined::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// AskBlessFriend

// required int64 charid = 1;
inline bool AskBlessFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskBlessFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskBlessFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskBlessFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AskBlessFriend::charid() const {
  return charid_;
}
inline void AskBlessFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required string friendname = 2;
inline bool AskBlessFriend::has_friendname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskBlessFriend::set_has_friendname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskBlessFriend::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskBlessFriend::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& AskBlessFriend::friendname() const {
  return *friendname_;
}
inline void AskBlessFriend::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void AskBlessFriend::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void AskBlessFriend::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AskBlessFriend::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* AskBlessFriend::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AskBlessFriend::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 lv = 3;
inline bool AskBlessFriend::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskBlessFriend::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskBlessFriend::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskBlessFriend::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 AskBlessFriend::lv() const {
  return lv_;
}
inline void AskBlessFriend::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// optional int32 surplusReceiveCounts = 4;
inline bool AskBlessFriend::has_surplusreceivecounts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskBlessFriend::set_has_surplusreceivecounts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskBlessFriend::clear_has_surplusreceivecounts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskBlessFriend::clear_surplusreceivecounts() {
  surplusreceivecounts_ = 0;
  clear_has_surplusreceivecounts();
}
inline ::google::protobuf::int32 AskBlessFriend::surplusreceivecounts() const {
  return surplusreceivecounts_;
}
inline void AskBlessFriend::set_surplusreceivecounts(::google::protobuf::int32 value) {
  set_has_surplusreceivecounts();
  surplusreceivecounts_ = value;
}

// optional int32 exp = 5;
inline bool AskBlessFriend::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AskBlessFriend::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AskBlessFriend::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AskBlessFriend::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 AskBlessFriend::exp() const {
  return exp_;
}
inline void AskBlessFriend::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// GTReqWSOpenFriend

// required int64 charid = 1;
inline bool GTReqWSOpenFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTReqWSOpenFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTReqWSOpenFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTReqWSOpenFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTReqWSOpenFriend::charid() const {
  return charid_;
}
inline void GTReqWSOpenFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// GTReqWSFindFriend

// required int64 charid = 1;
inline bool GTReqWSFindFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTReqWSFindFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTReqWSFindFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTReqWSFindFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTReqWSFindFriend::charid() const {
  return charid_;
}
inline void GTReqWSFindFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required string friendname = 2;
inline bool GTReqWSFindFriend::has_friendname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTReqWSFindFriend::set_has_friendname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTReqWSFindFriend::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTReqWSFindFriend::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& GTReqWSFindFriend::friendname() const {
  return *friendname_;
}
inline void GTReqWSFindFriend::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void GTReqWSFindFriend::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void GTReqWSFindFriend::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GTReqWSFindFriend::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* GTReqWSFindFriend::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GTReqWSFindFriend::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GTReqWSAddFriend

// required int64 charid = 1;
inline bool GTReqWSAddFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTReqWSAddFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTReqWSAddFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTReqWSAddFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTReqWSAddFriend::charid() const {
  return charid_;
}
inline void GTReqWSAddFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool GTReqWSAddFriend::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTReqWSAddFriend::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTReqWSAddFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTReqWSAddFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GTReqWSAddFriend::type() const {
  return type_;
}
inline void GTReqWSAddFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 otherid = 3;
inline bool GTReqWSAddFriend::has_otherid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTReqWSAddFriend::set_has_otherid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTReqWSAddFriend::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTReqWSAddFriend::clear_otherid() {
  otherid_ = GOOGLE_LONGLONG(0);
  clear_has_otherid();
}
inline ::google::protobuf::int64 GTReqWSAddFriend::otherid() const {
  return otherid_;
}
inline void GTReqWSAddFriend::set_otherid(::google::protobuf::int64 value) {
  set_has_otherid();
  otherid_ = value;
}

// required int32 attack = 4;
inline bool GTReqWSAddFriend::has_attack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GTReqWSAddFriend::set_has_attack() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GTReqWSAddFriend::clear_has_attack() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GTReqWSAddFriend::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 GTReqWSAddFriend::attack() const {
  return attack_;
}
inline void GTReqWSAddFriend::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
}

// -------------------------------------------------------------------

// GTReqWSDeleteFriend

// required int64 charid = 1;
inline bool GTReqWSDeleteFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTReqWSDeleteFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTReqWSDeleteFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTReqWSDeleteFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GTReqWSDeleteFriend::charid() const {
  return charid_;
}
inline void GTReqWSDeleteFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool GTReqWSDeleteFriend::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTReqWSDeleteFriend::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTReqWSDeleteFriend::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTReqWSDeleteFriend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GTReqWSDeleteFriend::type() const {
  return type_;
}
inline void GTReqWSDeleteFriend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 otherid = 3;
inline bool GTReqWSDeleteFriend::has_otherid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GTReqWSDeleteFriend::set_has_otherid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GTReqWSDeleteFriend::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GTReqWSDeleteFriend::clear_otherid() {
  otherid_ = GOOGLE_LONGLONG(0);
  clear_has_otherid();
}
inline ::google::protobuf::int64 GTReqWSDeleteFriend::otherid() const {
  return otherid_;
}
inline void GTReqWSDeleteFriend::set_otherid(::google::protobuf::int64 value) {
  set_has_otherid();
  otherid_ = value;
}

// -------------------------------------------------------------------

// WSTOGTSynOnlineFrined

// required int64 mycharid = 1;
inline bool WSTOGTSynOnlineFrined::has_mycharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSTOGTSynOnlineFrined::set_has_mycharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSTOGTSynOnlineFrined::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSTOGTSynOnlineFrined::clear_mycharid() {
  mycharid_ = GOOGLE_LONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::int64 WSTOGTSynOnlineFrined::mycharid() const {
  return mycharid_;
}
inline void WSTOGTSynOnlineFrined::set_mycharid(::google::protobuf::int64 value) {
  set_has_mycharid();
  mycharid_ = value;
}

// required .Friend.SynOnlineFrined friend = 2;
inline bool WSTOGTSynOnlineFrined::has_friend_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSTOGTSynOnlineFrined::set_has_friend_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSTOGTSynOnlineFrined::clear_has_friend_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSTOGTSynOnlineFrined::clear_friend_() {
  if (friend__ != NULL) friend__->::Friend::SynOnlineFrined::Clear();
  clear_has_friend_();
}
inline const ::Friend::SynOnlineFrined& WSTOGTSynOnlineFrined::friend_() const {
  return friend__ != NULL ? *friend__ : *default_instance_->friend__;
}
inline ::Friend::SynOnlineFrined* WSTOGTSynOnlineFrined::mutable_friend_() {
  set_has_friend_();
  if (friend__ == NULL) friend__ = new ::Friend::SynOnlineFrined;
  return friend__;
}
inline ::Friend::SynOnlineFrined* WSTOGTSynOnlineFrined::release_friend_() {
  clear_has_friend_();
  ::Friend::SynOnlineFrined* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline void WSTOGTSynOnlineFrined::set_allocated_friend_(::Friend::SynOnlineFrined* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    set_has_friend_();
  } else {
    clear_has_friend_();
  }
}

// -------------------------------------------------------------------

// WSTOGTFriendInfo

// required int64 charid = 1;
inline bool WSTOGTFriendInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSTOGTFriendInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSTOGTFriendInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSTOGTFriendInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSTOGTFriendInfo::charid() const {
  return charid_;
}
inline void WSTOGTFriendInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .Friend.FriendInfo friendinfo = 2;
inline bool WSTOGTFriendInfo::has_friendinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSTOGTFriendInfo::set_has_friendinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSTOGTFriendInfo::clear_has_friendinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSTOGTFriendInfo::clear_friendinfo() {
  if (friendinfo_ != NULL) friendinfo_->::Friend::FriendInfo::Clear();
  clear_has_friendinfo();
}
inline const ::Friend::FriendInfo& WSTOGTFriendInfo::friendinfo() const {
  return friendinfo_ != NULL ? *friendinfo_ : *default_instance_->friendinfo_;
}
inline ::Friend::FriendInfo* WSTOGTFriendInfo::mutable_friendinfo() {
  set_has_friendinfo();
  if (friendinfo_ == NULL) friendinfo_ = new ::Friend::FriendInfo;
  return friendinfo_;
}
inline ::Friend::FriendInfo* WSTOGTFriendInfo::release_friendinfo() {
  clear_has_friendinfo();
  ::Friend::FriendInfo* temp = friendinfo_;
  friendinfo_ = NULL;
  return temp;
}
inline void WSTOGTFriendInfo::set_allocated_friendinfo(::Friend::FriendInfo* friendinfo) {
  delete friendinfo_;
  friendinfo_ = friendinfo;
  if (friendinfo) {
    set_has_friendinfo();
  } else {
    clear_has_friendinfo();
  }
}

// -------------------------------------------------------------------

// WSTOGTBlessFriend

// required int64 charid = 1;
inline bool WSTOGTBlessFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSTOGTBlessFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSTOGTBlessFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSTOGTBlessFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSTOGTBlessFriend::charid() const {
  return charid_;
}
inline void WSTOGTBlessFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int64 othercharid = 2;
inline bool WSTOGTBlessFriend::has_othercharid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSTOGTBlessFriend::set_has_othercharid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSTOGTBlessFriend::clear_has_othercharid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSTOGTBlessFriend::clear_othercharid() {
  othercharid_ = GOOGLE_LONGLONG(0);
  clear_has_othercharid();
}
inline ::google::protobuf::int64 WSTOGTBlessFriend::othercharid() const {
  return othercharid_;
}
inline void WSTOGTBlessFriend::set_othercharid(::google::protobuf::int64 value) {
  set_has_othercharid();
  othercharid_ = value;
}

// required string friendname = 3;
inline bool WSTOGTBlessFriend::has_friendname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSTOGTBlessFriend::set_has_friendname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSTOGTBlessFriend::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSTOGTBlessFriend::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& WSTOGTBlessFriend::friendname() const {
  return *friendname_;
}
inline void WSTOGTBlessFriend::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void WSTOGTBlessFriend::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void WSTOGTBlessFriend::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WSTOGTBlessFriend::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* WSTOGTBlessFriend::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WSTOGTBlessFriend::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 lv = 4;
inline bool WSTOGTBlessFriend::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WSTOGTBlessFriend::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WSTOGTBlessFriend::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WSTOGTBlessFriend::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 WSTOGTBlessFriend::lv() const {
  return lv_;
}
inline void WSTOGTBlessFriend::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// GTReqWSBlessFriend

// required int64 mycharid = 1;
inline bool GTReqWSBlessFriend::has_mycharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTReqWSBlessFriend::set_has_mycharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTReqWSBlessFriend::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTReqWSBlessFriend::clear_mycharid() {
  mycharid_ = GOOGLE_LONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::int64 GTReqWSBlessFriend::mycharid() const {
  return mycharid_;
}
inline void GTReqWSBlessFriend::set_mycharid(::google::protobuf::int64 value) {
  set_has_mycharid();
  mycharid_ = value;
}

// required .Friend.ClientReqBlessFriend bressFriend = 2;
inline bool GTReqWSBlessFriend::has_bressfriend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GTReqWSBlessFriend::set_has_bressfriend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GTReqWSBlessFriend::clear_has_bressfriend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GTReqWSBlessFriend::clear_bressfriend() {
  if (bressfriend_ != NULL) bressfriend_->::Friend::ClientReqBlessFriend::Clear();
  clear_has_bressfriend();
}
inline const ::Friend::ClientReqBlessFriend& GTReqWSBlessFriend::bressfriend() const {
  return bressfriend_ != NULL ? *bressfriend_ : *default_instance_->bressfriend_;
}
inline ::Friend::ClientReqBlessFriend* GTReqWSBlessFriend::mutable_bressfriend() {
  set_has_bressfriend();
  if (bressfriend_ == NULL) bressfriend_ = new ::Friend::ClientReqBlessFriend;
  return bressfriend_;
}
inline ::Friend::ClientReqBlessFriend* GTReqWSBlessFriend::release_bressfriend() {
  clear_has_bressfriend();
  ::Friend::ClientReqBlessFriend* temp = bressfriend_;
  bressfriend_ = NULL;
  return temp;
}
inline void GTReqWSBlessFriend::set_allocated_bressfriend(::Friend::ClientReqBlessFriend* bressfriend) {
  delete bressfriend_;
  bressfriend_ = bressfriend;
  if (bressfriend) {
    set_has_bressfriend();
  } else {
    clear_has_bressfriend();
  }
}

// -------------------------------------------------------------------

// WSTOGTAskBlessFriend

// required int64 charid = 1;
inline bool WSTOGTAskBlessFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSTOGTAskBlessFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSTOGTAskBlessFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSTOGTAskBlessFriend::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 WSTOGTAskBlessFriend::charid() const {
  return charid_;
}
inline void WSTOGTAskBlessFriend::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .Friend.AskBlessFriend blessfriend = 2;
inline bool WSTOGTAskBlessFriend::has_blessfriend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSTOGTAskBlessFriend::set_has_blessfriend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSTOGTAskBlessFriend::clear_has_blessfriend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSTOGTAskBlessFriend::clear_blessfriend() {
  if (blessfriend_ != NULL) blessfriend_->::Friend::AskBlessFriend::Clear();
  clear_has_blessfriend();
}
inline const ::Friend::AskBlessFriend& WSTOGTAskBlessFriend::blessfriend() const {
  return blessfriend_ != NULL ? *blessfriend_ : *default_instance_->blessfriend_;
}
inline ::Friend::AskBlessFriend* WSTOGTAskBlessFriend::mutable_blessfriend() {
  set_has_blessfriend();
  if (blessfriend_ == NULL) blessfriend_ = new ::Friend::AskBlessFriend;
  return blessfriend_;
}
inline ::Friend::AskBlessFriend* WSTOGTAskBlessFriend::release_blessfriend() {
  clear_has_blessfriend();
  ::Friend::AskBlessFriend* temp = blessfriend_;
  blessfriend_ = NULL;
  return temp;
}
inline void WSTOGTAskBlessFriend::set_allocated_blessfriend(::Friend::AskBlessFriend* blessfriend) {
  delete blessfriend_;
  blessfriend_ = blessfriend;
  if (blessfriend) {
    set_has_blessfriend();
  } else {
    clear_has_blessfriend();
  }
}

// -------------------------------------------------------------------

// AddPlayerHarted

// required int64 myself = 1;
inline bool AddPlayerHarted::has_myself() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPlayerHarted::set_has_myself() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPlayerHarted::clear_has_myself() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPlayerHarted::clear_myself() {
  myself_ = GOOGLE_LONGLONG(0);
  clear_has_myself();
}
inline ::google::protobuf::int64 AddPlayerHarted::myself() const {
  return myself_;
}
inline void AddPlayerHarted::set_myself(::google::protobuf::int64 value) {
  set_has_myself();
  myself_ = value;
}

// required int64 other = 2;
inline bool AddPlayerHarted::has_other() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddPlayerHarted::set_has_other() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddPlayerHarted::clear_has_other() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddPlayerHarted::clear_other() {
  other_ = GOOGLE_LONGLONG(0);
  clear_has_other();
}
inline ::google::protobuf::int64 AddPlayerHarted::other() const {
  return other_;
}
inline void AddPlayerHarted::set_other(::google::protobuf::int64 value) {
  set_has_other();
  other_ = value;
}

// -------------------------------------------------------------------

// AskAttacked

// required int64 charid = 1;
inline bool AskAttacked::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskAttacked::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskAttacked::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskAttacked::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AskAttacked::charid() const {
  return charid_;
}
inline void AskAttacked::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// AckReqRecommendFriend

// repeated int64 charid = 1;
inline int AckReqRecommendFriend::charid_size() const {
  return charid_.size();
}
inline void AckReqRecommendFriend::clear_charid() {
  charid_.Clear();
}
inline ::google::protobuf::int64 AckReqRecommendFriend::charid(int index) const {
  return charid_.Get(index);
}
inline void AckReqRecommendFriend::set_charid(int index, ::google::protobuf::int64 value) {
  charid_.Set(index, value);
}
inline void AckReqRecommendFriend::add_charid(::google::protobuf::int64 value) {
  charid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AckReqRecommendFriend::charid() const {
  return charid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AckReqRecommendFriend::mutable_charid() {
  return &charid_;
}

// repeated string name = 2;
inline int AckReqRecommendFriend::name_size() const {
  return name_.size();
}
inline void AckReqRecommendFriend::clear_name() {
  name_.Clear();
}
inline const ::std::string& AckReqRecommendFriend::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* AckReqRecommendFriend::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void AckReqRecommendFriend::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void AckReqRecommendFriend::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void AckReqRecommendFriend::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AckReqRecommendFriend::add_name() {
  return name_.Add();
}
inline void AckReqRecommendFriend::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void AckReqRecommendFriend::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void AckReqRecommendFriend::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AckReqRecommendFriend::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AckReqRecommendFriend::mutable_name() {
  return &name_;
}

// repeated int32 lv = 3;
inline int AckReqRecommendFriend::lv_size() const {
  return lv_.size();
}
inline void AckReqRecommendFriend::clear_lv() {
  lv_.Clear();
}
inline ::google::protobuf::int32 AckReqRecommendFriend::lv(int index) const {
  return lv_.Get(index);
}
inline void AckReqRecommendFriend::set_lv(int index, ::google::protobuf::int32 value) {
  lv_.Set(index, value);
}
inline void AckReqRecommendFriend::add_lv(::google::protobuf::int32 value) {
  lv_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckReqRecommendFriend::lv() const {
  return lv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckReqRecommendFriend::mutable_lv() {
  return &lv_;
}

// -------------------------------------------------------------------

// WSsendGMGainExp

// repeated int64 playerID = 1;
inline int WSsendGMGainExp::playerid_size() const {
  return playerid_.size();
}
inline void WSsendGMGainExp::clear_playerid() {
  playerid_.Clear();
}
inline ::google::protobuf::int64 WSsendGMGainExp::playerid(int index) const {
  return playerid_.Get(index);
}
inline void WSsendGMGainExp::set_playerid(int index, ::google::protobuf::int64 value) {
  playerid_.Set(index, value);
}
inline void WSsendGMGainExp::add_playerid(::google::protobuf::int64 value) {
  playerid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
WSsendGMGainExp::playerid() const {
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
WSsendGMGainExp::mutable_playerid() {
  return &playerid_;
}

// repeated int32 level = 2;
inline int WSsendGMGainExp::level_size() const {
  return level_.size();
}
inline void WSsendGMGainExp::clear_level() {
  level_.Clear();
}
inline ::google::protobuf::int32 WSsendGMGainExp::level(int index) const {
  return level_.Get(index);
}
inline void WSsendGMGainExp::set_level(int index, ::google::protobuf::int32 value) {
  level_.Set(index, value);
}
inline void WSsendGMGainExp::add_level(::google::protobuf::int32 value) {
  level_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WSsendGMGainExp::level() const {
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WSsendGMGainExp::mutable_level() {
  return &level_;
}

// -------------------------------------------------------------------

// AddFriendList

// repeated .Friend.AddFriend friendList = 1;
inline int AddFriendList::friendlist_size() const {
  return friendlist_.size();
}
inline void AddFriendList::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::Friend::AddFriend& AddFriendList::friendlist(int index) const {
  return friendlist_.Get(index);
}
inline ::Friend::AddFriend* AddFriendList::mutable_friendlist(int index) {
  return friendlist_.Mutable(index);
}
inline ::Friend::AddFriend* AddFriendList::add_friendlist() {
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Friend::AddFriend >&
AddFriendList::friendlist() const {
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Friend::AddFriend >*
AddFriendList::mutable_friendlist() {
  return &friendlist_;
}

// -------------------------------------------------------------------

// AskAddFriendList

// optional int32 error = 1;
inline bool AskAddFriendList::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskAddFriendList::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskAddFriendList::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskAddFriendList::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 AskAddFriendList::error() const {
  return error_;
}
inline void AskAddFriendList::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Friend.AskAddFriend askFriendList = 2;
inline int AskAddFriendList::askfriendlist_size() const {
  return askfriendlist_.size();
}
inline void AskAddFriendList::clear_askfriendlist() {
  askfriendlist_.Clear();
}
inline const ::Friend::AskAddFriend& AskAddFriendList::askfriendlist(int index) const {
  return askfriendlist_.Get(index);
}
inline ::Friend::AskAddFriend* AskAddFriendList::mutable_askfriendlist(int index) {
  return askfriendlist_.Mutable(index);
}
inline ::Friend::AskAddFriend* AskAddFriendList::add_askfriendlist() {
  return askfriendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Friend::AskAddFriend >&
AskAddFriendList::askfriendlist() const {
  return askfriendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Friend::AskAddFriend >*
AskAddFriendList::mutable_askfriendlist() {
  return &askfriendlist_;
}

// -------------------------------------------------------------------

// FriendRecommendation

// repeated int64 playerID = 1;
inline int FriendRecommendation::playerid_size() const {
  return playerid_.size();
}
inline void FriendRecommendation::clear_playerid() {
  playerid_.Clear();
}
inline ::google::protobuf::int64 FriendRecommendation::playerid(int index) const {
  return playerid_.Get(index);
}
inline void FriendRecommendation::set_playerid(int index, ::google::protobuf::int64 value) {
  playerid_.Set(index, value);
}
inline void FriendRecommendation::add_playerid(::google::protobuf::int64 value) {
  playerid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
FriendRecommendation::playerid() const {
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
FriendRecommendation::mutable_playerid() {
  return &playerid_;
}

// repeated int32 profession = 2;
inline int FriendRecommendation::profession_size() const {
  return profession_.size();
}
inline void FriendRecommendation::clear_profession() {
  profession_.Clear();
}
inline ::google::protobuf::int32 FriendRecommendation::profession(int index) const {
  return profession_.Get(index);
}
inline void FriendRecommendation::set_profession(int index, ::google::protobuf::int32 value) {
  profession_.Set(index, value);
}
inline void FriendRecommendation::add_profession(::google::protobuf::int32 value) {
  profession_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FriendRecommendation::profession() const {
  return profession_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FriendRecommendation::mutable_profession() {
  return &profession_;
}

// repeated int32 gender = 3;
inline int FriendRecommendation::gender_size() const {
  return gender_.size();
}
inline void FriendRecommendation::clear_gender() {
  gender_.Clear();
}
inline ::google::protobuf::int32 FriendRecommendation::gender(int index) const {
  return gender_.Get(index);
}
inline void FriendRecommendation::set_gender(int index, ::google::protobuf::int32 value) {
  gender_.Set(index, value);
}
inline void FriendRecommendation::add_gender(::google::protobuf::int32 value) {
  gender_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FriendRecommendation::gender() const {
  return gender_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FriendRecommendation::mutable_gender() {
  return &gender_;
}

// repeated string name = 4;
inline int FriendRecommendation::name_size() const {
  return name_.size();
}
inline void FriendRecommendation::clear_name() {
  name_.Clear();
}
inline const ::std::string& FriendRecommendation::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* FriendRecommendation::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void FriendRecommendation::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void FriendRecommendation::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void FriendRecommendation::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendRecommendation::add_name() {
  return name_.Add();
}
inline void FriendRecommendation::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void FriendRecommendation::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void FriendRecommendation::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FriendRecommendation::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FriendRecommendation::mutable_name() {
  return &name_;
}

// -------------------------------------------------------------------

// PlayerReturnInfo

// optional int64 playerID = 1;
inline bool PlayerReturnInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReturnInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReturnInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReturnInfo::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 PlayerReturnInfo::playerid() const {
  return playerid_;
}
inline void PlayerReturnInfo::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional int32 error = 2;
inline bool PlayerReturnInfo::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerReturnInfo::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerReturnInfo::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerReturnInfo::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 PlayerReturnInfo::error() const {
  return error_;
}
inline void PlayerReturnInfo::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// FriendReturnError

// optional int32 error = 1;
inline bool FriendReturnError::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendReturnError::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendReturnError::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendReturnError::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 FriendReturnError::error() const {
  return error_;
}
inline void FriendReturnError::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Friend.PlayerReturnInfo playerInfo = 2;
inline int FriendReturnError::playerinfo_size() const {
  return playerinfo_.size();
}
inline void FriendReturnError::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::Friend::PlayerReturnInfo& FriendReturnError::playerinfo(int index) const {
  return playerinfo_.Get(index);
}
inline ::Friend::PlayerReturnInfo* FriendReturnError::mutable_playerinfo(int index) {
  return playerinfo_.Mutable(index);
}
inline ::Friend::PlayerReturnInfo* FriendReturnError::add_playerinfo() {
  return playerinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Friend::PlayerReturnInfo >&
FriendReturnError::playerinfo() const {
  return playerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Friend::PlayerReturnInfo >*
FriendReturnError::mutable_playerinfo() {
  return &playerinfo_;
}

// optional int32 SurplusCounts = 3;
inline bool FriendReturnError::has_surpluscounts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendReturnError::set_has_surpluscounts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendReturnError::clear_has_surpluscounts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendReturnError::clear_surpluscounts() {
  surpluscounts_ = 0;
  clear_has_surpluscounts();
}
inline ::google::protobuf::int32 FriendReturnError::surpluscounts() const {
  return surpluscounts_;
}
inline void FriendReturnError::set_surpluscounts(::google::protobuf::int32 value) {
  set_has_surpluscounts();
  surpluscounts_ = value;
}

// -------------------------------------------------------------------

// ReqReplyAddFriend

// required int32 flag = 1;
inline bool ReqReplyAddFriend::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqReplyAddFriend::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqReplyAddFriend::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqReplyAddFriend::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 ReqReplyAddFriend::flag() const {
  return flag_;
}
inline void ReqReplyAddFriend::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// repeated int64 targetid = 2;
inline int ReqReplyAddFriend::targetid_size() const {
  return targetid_.size();
}
inline void ReqReplyAddFriend::clear_targetid() {
  targetid_.Clear();
}
inline ::google::protobuf::int64 ReqReplyAddFriend::targetid(int index) const {
  return targetid_.Get(index);
}
inline void ReqReplyAddFriend::set_targetid(int index, ::google::protobuf::int64 value) {
  targetid_.Set(index, value);
}
inline void ReqReplyAddFriend::add_targetid(::google::protobuf::int64 value) {
  targetid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ReqReplyAddFriend::targetid() const {
  return targetid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ReqReplyAddFriend::mutable_targetid() {
  return &targetid_;
}

// -------------------------------------------------------------------

// AckReqReplyAddFriend

// required int32 code = 1;
inline bool AckReqReplyAddFriend::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqReplyAddFriend::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqReplyAddFriend::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqReplyAddFriend::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckReqReplyAddFriend::code() const {
  return code_;
}
inline void AckReqReplyAddFriend::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int32 flag = 2;
inline bool AckReqReplyAddFriend::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqReplyAddFriend::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqReplyAddFriend::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqReplyAddFriend::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 AckReqReplyAddFriend::flag() const {
  return flag_;
}
inline void AckReqReplyAddFriend::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// repeated int64 targetid = 3;
inline int AckReqReplyAddFriend::targetid_size() const {
  return targetid_.size();
}
inline void AckReqReplyAddFriend::clear_targetid() {
  targetid_.Clear();
}
inline ::google::protobuf::int64 AckReqReplyAddFriend::targetid(int index) const {
  return targetid_.Get(index);
}
inline void AckReqReplyAddFriend::set_targetid(int index, ::google::protobuf::int64 value) {
  targetid_.Set(index, value);
}
inline void AckReqReplyAddFriend::add_targetid(::google::protobuf::int64 value) {
  targetid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AckReqReplyAddFriend::targetid() const {
  return targetid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AckReqReplyAddFriend::mutable_targetid() {
  return &targetid_;
}

// -------------------------------------------------------------------

// NoticeAddFriend

// repeated .Friend.FriendInfo info = 1;
inline int NoticeAddFriend::info_size() const {
  return info_.size();
}
inline void NoticeAddFriend::clear_info() {
  info_.Clear();
}
inline const ::Friend::FriendInfo& NoticeAddFriend::info(int index) const {
  return info_.Get(index);
}
inline ::Friend::FriendInfo* NoticeAddFriend::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::Friend::FriendInfo* NoticeAddFriend::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >&
NoticeAddFriend::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Friend::FriendInfo >*
NoticeAddFriend::mutable_info() {
  return &info_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Friend

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Friend_2fFriendMessage_2eproto__INCLUDED
