// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_ExchangeGift.proto

#ifndef PROTOBUF_MSProtoc_2fMS_5fExchangeGift_2eproto__INCLUDED
#define PROTOBUF_MSProtoc_2fMS_5fExchangeGift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MSProtoc/MS_Mail.pb.h"
// @@protoc_insertion_point(includes)

namespace MS_ExchangeGift {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
void protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
void protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto();

class Admin_ExchangeGift;
class Admin_GiftCode;
class Admin_ExchangeGiftRet;
class Admin_ExchangeGiftInfo;

// ===================================================================

class Admin_ExchangeGift : public ::google::protobuf::Message {
 public:
  Admin_ExchangeGift();
  virtual ~Admin_ExchangeGift();

  Admin_ExchangeGift(const Admin_ExchangeGift& from);

  inline Admin_ExchangeGift& operator=(const Admin_ExchangeGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_ExchangeGift& default_instance();

  void Swap(Admin_ExchangeGift* other);

  // implements Message ----------------------------------------------

  Admin_ExchangeGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_ExchangeGift& from);
  void MergeFrom(const Admin_ExchangeGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required int64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional .MS_MailInfo.MSSimDBSendMail mail = 3;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 3;
  inline const ::MS_MailInfo::MSSimDBSendMail& mail() const;
  inline ::MS_MailInfo::MSSimDBSendMail* mutable_mail();
  inline ::MS_MailInfo::MSSimDBSendMail* release_mail();
  inline void set_allocated_mail(::MS_MailInfo::MSSimDBSendMail* mail);

  // optional string code = 4;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:MS_ExchangeGift.Admin_ExchangeGift)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::MS_MailInfo::MSSimDBSendMail* mail_;
  ::std::string* code_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto();

  void InitAsDefaultInstance();
  static Admin_ExchangeGift* default_instance_;
};
// -------------------------------------------------------------------

class Admin_GiftCode : public ::google::protobuf::Message {
 public:
  Admin_GiftCode();
  virtual ~Admin_GiftCode();

  Admin_GiftCode(const Admin_GiftCode& from);

  inline Admin_GiftCode& operator=(const Admin_GiftCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_GiftCode& default_instance();

  void Swap(Admin_GiftCode* other);

  // implements Message ----------------------------------------------

  Admin_GiftCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_GiftCode& from);
  void MergeFrom(const Admin_GiftCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:MS_ExchangeGift.Admin_GiftCode)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* code_;
  ::google::protobuf::int64 charid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto();

  void InitAsDefaultInstance();
  static Admin_GiftCode* default_instance_;
};
// -------------------------------------------------------------------

class Admin_ExchangeGiftRet : public ::google::protobuf::Message {
 public:
  Admin_ExchangeGiftRet();
  virtual ~Admin_ExchangeGiftRet();

  Admin_ExchangeGiftRet(const Admin_ExchangeGiftRet& from);

  inline Admin_ExchangeGiftRet& operator=(const Admin_ExchangeGiftRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_ExchangeGiftRet& default_instance();

  void Swap(Admin_ExchangeGiftRet* other);

  // implements Message ----------------------------------------------

  Admin_ExchangeGiftRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_ExchangeGiftRet& from);
  void MergeFrom(const Admin_ExchangeGiftRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional string code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional int32 serverID = 4;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 4;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_ExchangeGift.Admin_ExchangeGiftRet)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 serverid_;
  ::std::string* code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto();

  void InitAsDefaultInstance();
  static Admin_ExchangeGiftRet* default_instance_;
};
// -------------------------------------------------------------------

class Admin_ExchangeGiftInfo : public ::google::protobuf::Message {
 public:
  Admin_ExchangeGiftInfo();
  virtual ~Admin_ExchangeGiftInfo();

  Admin_ExchangeGiftInfo(const Admin_ExchangeGiftInfo& from);

  inline Admin_ExchangeGiftInfo& operator=(const Admin_ExchangeGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_ExchangeGiftInfo& default_instance();

  void Swap(Admin_ExchangeGiftInfo* other);

  // implements Message ----------------------------------------------

  Admin_ExchangeGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_ExchangeGiftInfo& from);
  void MergeFrom(const Admin_ExchangeGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MS_MailInfo.MSSimDBSendMail mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::MS_MailInfo::MSSimDBSendMail& mail() const;
  inline ::MS_MailInfo::MSSimDBSendMail* mutable_mail();
  inline ::MS_MailInfo::MSSimDBSendMail* release_mail();
  inline void set_allocated_mail(::MS_MailInfo::MSSimDBSendMail* mail);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 charID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MS_ExchangeGift.Admin_ExchangeGiftInfo)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MS_MailInfo::MSSimDBSendMail* mail_;
  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fExchangeGift_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fExchangeGift_2eproto();

  void InitAsDefaultInstance();
  static Admin_ExchangeGiftInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// Admin_ExchangeGift

// required int32 ret = 1;
inline bool Admin_ExchangeGift::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_ExchangeGift::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_ExchangeGift::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_ExchangeGift::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Admin_ExchangeGift::ret() const {
  return ret_;
}
inline void Admin_ExchangeGift::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required int64 charID = 2;
inline bool Admin_ExchangeGift::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_ExchangeGift::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_ExchangeGift::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_ExchangeGift::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 Admin_ExchangeGift::charid() const {
  return charid_;
}
inline void Admin_ExchangeGift::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional .MS_MailInfo.MSSimDBSendMail mail = 3;
inline bool Admin_ExchangeGift::has_mail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_ExchangeGift::set_has_mail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_ExchangeGift::clear_has_mail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_ExchangeGift::clear_mail() {
  if (mail_ != NULL) mail_->::MS_MailInfo::MSSimDBSendMail::Clear();
  clear_has_mail();
}
inline const ::MS_MailInfo::MSSimDBSendMail& Admin_ExchangeGift::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MS_MailInfo::MSSimDBSendMail* Admin_ExchangeGift::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MS_MailInfo::MSSimDBSendMail;
  return mail_;
}
inline ::MS_MailInfo::MSSimDBSendMail* Admin_ExchangeGift::release_mail() {
  clear_has_mail();
  ::MS_MailInfo::MSSimDBSendMail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void Admin_ExchangeGift::set_allocated_mail(::MS_MailInfo::MSSimDBSendMail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// optional string code = 4;
inline bool Admin_ExchangeGift::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_ExchangeGift::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_ExchangeGift::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_ExchangeGift::clear_code() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& Admin_ExchangeGift::code() const {
  return *code_;
}
inline void Admin_ExchangeGift::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Admin_ExchangeGift::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Admin_ExchangeGift::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Admin_ExchangeGift::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  return code_;
}
inline ::std::string* Admin_ExchangeGift::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Admin_ExchangeGift::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Admin_GiftCode

// required string code = 1;
inline bool Admin_GiftCode::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_GiftCode::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_GiftCode::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_GiftCode::clear_code() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& Admin_GiftCode::code() const {
  return *code_;
}
inline void Admin_GiftCode::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Admin_GiftCode::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Admin_GiftCode::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Admin_GiftCode::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  return code_;
}
inline ::std::string* Admin_GiftCode::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Admin_GiftCode::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 charid = 2;
inline bool Admin_GiftCode::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_GiftCode::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_GiftCode::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_GiftCode::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 Admin_GiftCode::charid() const {
  return charid_;
}
inline void Admin_GiftCode::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string name = 3;
inline bool Admin_GiftCode::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_GiftCode::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_GiftCode::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_GiftCode::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Admin_GiftCode::name() const {
  return *name_;
}
inline void Admin_GiftCode::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Admin_GiftCode::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Admin_GiftCode::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Admin_GiftCode::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Admin_GiftCode::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Admin_GiftCode::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Admin_ExchangeGiftRet

// required int32 ret = 1;
inline bool Admin_ExchangeGiftRet::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_ExchangeGiftRet::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_ExchangeGiftRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_ExchangeGiftRet::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Admin_ExchangeGiftRet::ret() const {
  return ret_;
}
inline void Admin_ExchangeGiftRet::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 charID = 2;
inline bool Admin_ExchangeGiftRet::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_ExchangeGiftRet::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_ExchangeGiftRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_ExchangeGiftRet::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 Admin_ExchangeGiftRet::charid() const {
  return charid_;
}
inline void Admin_ExchangeGiftRet::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional string code = 3;
inline bool Admin_ExchangeGiftRet::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_ExchangeGiftRet::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_ExchangeGiftRet::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_ExchangeGiftRet::clear_code() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& Admin_ExchangeGiftRet::code() const {
  return *code_;
}
inline void Admin_ExchangeGiftRet::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Admin_ExchangeGiftRet::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void Admin_ExchangeGiftRet::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Admin_ExchangeGiftRet::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  return code_;
}
inline ::std::string* Admin_ExchangeGiftRet::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Admin_ExchangeGiftRet::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 serverID = 4;
inline bool Admin_ExchangeGiftRet::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_ExchangeGiftRet::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_ExchangeGiftRet::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_ExchangeGiftRet::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 Admin_ExchangeGiftRet::serverid() const {
  return serverid_;
}
inline void Admin_ExchangeGiftRet::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// -------------------------------------------------------------------

// Admin_ExchangeGiftInfo

// optional .MS_MailInfo.MSSimDBSendMail mail = 1;
inline bool Admin_ExchangeGiftInfo::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_ExchangeGiftInfo::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_ExchangeGiftInfo::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_ExchangeGiftInfo::clear_mail() {
  if (mail_ != NULL) mail_->::MS_MailInfo::MSSimDBSendMail::Clear();
  clear_has_mail();
}
inline const ::MS_MailInfo::MSSimDBSendMail& Admin_ExchangeGiftInfo::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MS_MailInfo::MSSimDBSendMail* Admin_ExchangeGiftInfo::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MS_MailInfo::MSSimDBSendMail;
  return mail_;
}
inline ::MS_MailInfo::MSSimDBSendMail* Admin_ExchangeGiftInfo::release_mail() {
  clear_has_mail();
  ::MS_MailInfo::MSSimDBSendMail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void Admin_ExchangeGiftInfo::set_allocated_mail(::MS_MailInfo::MSSimDBSendMail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// optional int32 ret = 2;
inline bool Admin_ExchangeGiftInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_ExchangeGiftInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_ExchangeGiftInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_ExchangeGiftInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Admin_ExchangeGiftInfo::ret() const {
  return ret_;
}
inline void Admin_ExchangeGiftInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 charID = 3;
inline bool Admin_ExchangeGiftInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_ExchangeGiftInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_ExchangeGiftInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_ExchangeGiftInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 Admin_ExchangeGiftInfo::charid() const {
  return charid_;
}
inline void Admin_ExchangeGiftInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MS_ExchangeGift

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSProtoc_2fMS_5fExchangeGift_2eproto__INCLUDED
