// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatisticInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "StatisticInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace StatisticInfo {

namespace {

const ::google::protobuf::Descriptor* BehaviorOtherData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BehaviorOtherData_reflection_ = NULL;
const ::google::protobuf::Descriptor* BehaviorOtherList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BehaviorOtherList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerBehavior_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerBehavior_reflection_ = NULL;
const ::google::protobuf::Descriptor* BehaviorMonitor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BehaviorMonitor_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalOtherData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalOtherData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalOtherList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalOtherList_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalStatist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalStatist_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalMonitor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalMonitor_reflection_ = NULL;
const ::google::protobuf::Descriptor* StatisticData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StatisticData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_StatisticInfo_2eproto() {
  protobuf_AddDesc_StatisticInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "StatisticInfo.proto");
  GOOGLE_CHECK(file != NULL);
  BehaviorOtherData_descriptor_ = file->message_type(0);
  static const int BehaviorOtherData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherData, len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherData, handletype_),
  };
  BehaviorOtherData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BehaviorOtherData_descriptor_,
      BehaviorOtherData::default_instance_,
      BehaviorOtherData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BehaviorOtherData));
  BehaviorOtherList_descriptor_ = file->message_type(1);
  static const int BehaviorOtherList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherList, list_),
  };
  BehaviorOtherList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BehaviorOtherList_descriptor_,
      BehaviorOtherList::default_instance_,
      BehaviorOtherList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorOtherList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BehaviorOtherList));
  PlayerBehavior_descriptor_ = file->message_type(2);
  static const int PlayerBehavior_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, maintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, minortype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, othdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, beforemoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, aftermoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, beforegolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, aftergolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, beforeforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, afterforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, beforebindgolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, afterbindgolden_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, time_),
  };
  PlayerBehavior_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerBehavior_descriptor_,
      PlayerBehavior::default_instance_,
      PlayerBehavior_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBehavior, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerBehavior));
  BehaviorMonitor_descriptor_ = file->message_type(3);
  static const int BehaviorMonitor_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorMonitor, list_),
  };
  BehaviorMonitor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BehaviorMonitor_descriptor_,
      BehaviorMonitor::default_instance_,
      BehaviorMonitor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorMonitor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorMonitor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BehaviorMonitor));
  GlobalOtherData_descriptor_ = file->message_type(4);
  static const int GlobalOtherData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherData, len_),
  };
  GlobalOtherData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalOtherData_descriptor_,
      GlobalOtherData::default_instance_,
      GlobalOtherData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalOtherData));
  GlobalOtherList_descriptor_ = file->message_type(5);
  static const int GlobalOtherList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherList, list_),
  };
  GlobalOtherList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalOtherList_descriptor_,
      GlobalOtherList::default_instance_,
      GlobalOtherList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalOtherList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalOtherList));
  GlobalStatist_descriptor_ = file->message_type(6);
  static const int GlobalStatist_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalStatist, maintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalStatist, minortype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalStatist, savetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalStatist, othdata_),
  };
  GlobalStatist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalStatist_descriptor_,
      GlobalStatist::default_instance_,
      GlobalStatist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalStatist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalStatist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalStatist));
  GlobalMonitor_descriptor_ = file->message_type(7);
  static const int GlobalMonitor_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMonitor, list_),
  };
  GlobalMonitor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalMonitor_descriptor_,
      GlobalMonitor::default_instance_,
      GlobalMonitor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMonitor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMonitor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalMonitor));
  StatisticData_descriptor_ = file->message_type(8);
  static const int StatisticData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatisticData, behavior_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatisticData, global_),
  };
  StatisticData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StatisticData_descriptor_,
      StatisticData::default_instance_,
      StatisticData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatisticData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatisticData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StatisticData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_StatisticInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BehaviorOtherData_descriptor_, &BehaviorOtherData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BehaviorOtherList_descriptor_, &BehaviorOtherList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerBehavior_descriptor_, &PlayerBehavior::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BehaviorMonitor_descriptor_, &BehaviorMonitor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalOtherData_descriptor_, &GlobalOtherData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalOtherList_descriptor_, &GlobalOtherList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalStatist_descriptor_, &GlobalStatist::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalMonitor_descriptor_, &GlobalMonitor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StatisticData_descriptor_, &StatisticData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_StatisticInfo_2eproto() {
  delete BehaviorOtherData::default_instance_;
  delete BehaviorOtherData_reflection_;
  delete BehaviorOtherList::default_instance_;
  delete BehaviorOtherList_reflection_;
  delete PlayerBehavior::default_instance_;
  delete PlayerBehavior_reflection_;
  delete BehaviorMonitor::default_instance_;
  delete BehaviorMonitor_reflection_;
  delete GlobalOtherData::default_instance_;
  delete GlobalOtherData_reflection_;
  delete GlobalOtherList::default_instance_;
  delete GlobalOtherList_reflection_;
  delete GlobalStatist::default_instance_;
  delete GlobalStatist_reflection_;
  delete GlobalMonitor::default_instance_;
  delete GlobalMonitor_reflection_;
  delete StatisticData::default_instance_;
  delete StatisticData_reflection_;
}

void protobuf_AddDesc_StatisticInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023StatisticInfo.proto\022\rStatisticInfo\"B\n\021"
    "BehaviorOtherData\022\014\n\004data\030\001 \001(\014\022\013\n\003len\030\002"
    " \001(\005\022\022\n\nhandleType\030\003 \001(\005\"C\n\021BehaviorOthe"
    "rList\022.\n\004list\030\001 \003(\0132 .StatisticInfo.Beha"
    "viorOtherData\"\266\002\n\016PlayerBehavior\022\020\n\010main"
    "Type\030\001 \002(\005\022\021\n\tminorType\030\002 \002(\005\022\016\n\006charID\030"
    "\003 \001(\003\0221\n\007othData\030\004 \001(\0132 .StatisticInfo.B"
    "ehaviorOtherList\022\023\n\013beforeMoney\030\005 \001(\003\022\022\n"
    "\nafterMoney\030\006 \001(\003\022\024\n\014beforeGolden\030\007 \001(\003\022"
    "\023\n\013afterGolden\030\010 \001(\003\022\023\n\013beforeForce\030\t \001("
    "\003\022\022\n\nafterForce\030\n \001(\003\022\030\n\020beforeBindGolde"
    "n\030\013 \001(\003\022\027\n\017afterBindGolden\030\014 \001(\003\022\014\n\004time"
    "\030\r \001(\003\">\n\017BehaviorMonitor\022+\n\004list\030\001 \003(\0132"
    "\035.StatisticInfo.PlayerBehavior\",\n\017Global"
    "OtherData\022\014\n\004data\030\001 \001(\014\022\013\n\003len\030\002 \001(\005\"\?\n\017"
    "GlobalOtherList\022,\n\004list\030\001 \003(\0132\036.Statisti"
    "cInfo.GlobalOtherData\"w\n\rGlobalStatist\022\020"
    "\n\010mainType\030\001 \002(\005\022\021\n\tminorType\030\002 \002(\005\022\020\n\010s"
    "aveType\030\003 \001(\005\022/\n\007othData\030\004 \001(\0132\036.Statist"
    "icInfo.GlobalOtherList\";\n\rGlobalMonitor\022"
    "*\n\004list\030\001 \003(\0132\034.StatisticInfo.GlobalStat"
    "ist\"o\n\rStatisticData\0220\n\010behavior\030\001 \001(\0132\036"
    ".StatisticInfo.BehaviorMonitor\022,\n\006global"
    "\030\002 \001(\0132\034.StatisticInfo.GlobalMonitor", 956);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StatisticInfo.proto", &protobuf_RegisterTypes);
  BehaviorOtherData::default_instance_ = new BehaviorOtherData();
  BehaviorOtherList::default_instance_ = new BehaviorOtherList();
  PlayerBehavior::default_instance_ = new PlayerBehavior();
  BehaviorMonitor::default_instance_ = new BehaviorMonitor();
  GlobalOtherData::default_instance_ = new GlobalOtherData();
  GlobalOtherList::default_instance_ = new GlobalOtherList();
  GlobalStatist::default_instance_ = new GlobalStatist();
  GlobalMonitor::default_instance_ = new GlobalMonitor();
  StatisticData::default_instance_ = new StatisticData();
  BehaviorOtherData::default_instance_->InitAsDefaultInstance();
  BehaviorOtherList::default_instance_->InitAsDefaultInstance();
  PlayerBehavior::default_instance_->InitAsDefaultInstance();
  BehaviorMonitor::default_instance_->InitAsDefaultInstance();
  GlobalOtherData::default_instance_->InitAsDefaultInstance();
  GlobalOtherList::default_instance_->InitAsDefaultInstance();
  GlobalStatist::default_instance_->InitAsDefaultInstance();
  GlobalMonitor::default_instance_->InitAsDefaultInstance();
  StatisticData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_StatisticInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_StatisticInfo_2eproto {
  StaticDescriptorInitializer_StatisticInfo_2eproto() {
    protobuf_AddDesc_StatisticInfo_2eproto();
  }
} static_descriptor_initializer_StatisticInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BehaviorOtherData::kDataFieldNumber;
const int BehaviorOtherData::kLenFieldNumber;
const int BehaviorOtherData::kHandleTypeFieldNumber;
#endif  // !_MSC_VER

BehaviorOtherData::BehaviorOtherData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BehaviorOtherData::InitAsDefaultInstance() {
}

BehaviorOtherData::BehaviorOtherData(const BehaviorOtherData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BehaviorOtherData::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  len_ = 0;
  handletype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BehaviorOtherData::~BehaviorOtherData() {
  SharedDtor();
}

void BehaviorOtherData::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void BehaviorOtherData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorOtherData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BehaviorOtherData_descriptor_;
}

const BehaviorOtherData& BehaviorOtherData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

BehaviorOtherData* BehaviorOtherData::default_instance_ = NULL;

BehaviorOtherData* BehaviorOtherData::New() const {
  return new BehaviorOtherData;
}

void BehaviorOtherData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
    len_ = 0;
    handletype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BehaviorOtherData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_len;
        break;
      }

      // optional int32 len = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
          set_has_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_handleType;
        break;
      }

      // optional int32 handleType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_handleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handletype_)));
          set_has_handletype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BehaviorOtherData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(), output);
  }

  // optional int32 len = 2;
  if (has_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->len(), output);
  }

  // optional int32 handleType = 3;
  if (has_handletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->handletype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BehaviorOtherData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // optional int32 len = 2;
  if (has_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->len(), target);
  }

  // optional int32 handleType = 3;
  if (has_handletype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->handletype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BehaviorOtherData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 len = 2;
    if (has_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->len());
    }

    // optional int32 handleType = 3;
    if (has_handletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handletype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorOtherData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BehaviorOtherData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BehaviorOtherData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BehaviorOtherData::MergeFrom(const BehaviorOtherData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_len()) {
      set_len(from.len());
    }
    if (from.has_handletype()) {
      set_handletype(from.handletype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BehaviorOtherData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorOtherData::CopyFrom(const BehaviorOtherData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorOtherData::IsInitialized() const {

  return true;
}

void BehaviorOtherData::Swap(BehaviorOtherData* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(len_, other->len_);
    std::swap(handletype_, other->handletype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BehaviorOtherData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BehaviorOtherData_descriptor_;
  metadata.reflection = BehaviorOtherData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BehaviorOtherList::kListFieldNumber;
#endif  // !_MSC_VER

BehaviorOtherList::BehaviorOtherList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BehaviorOtherList::InitAsDefaultInstance() {
}

BehaviorOtherList::BehaviorOtherList(const BehaviorOtherList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BehaviorOtherList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BehaviorOtherList::~BehaviorOtherList() {
  SharedDtor();
}

void BehaviorOtherList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BehaviorOtherList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorOtherList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BehaviorOtherList_descriptor_;
}

const BehaviorOtherList& BehaviorOtherList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

BehaviorOtherList* BehaviorOtherList::default_instance_ = NULL;

BehaviorOtherList* BehaviorOtherList::New() const {
  return new BehaviorOtherList;
}

void BehaviorOtherList::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BehaviorOtherList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StatisticInfo.BehaviorOtherData list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BehaviorOtherList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .StatisticInfo.BehaviorOtherData list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BehaviorOtherList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .StatisticInfo.BehaviorOtherData list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BehaviorOtherList::ByteSize() const {
  int total_size = 0;

  // repeated .StatisticInfo.BehaviorOtherData list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorOtherList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BehaviorOtherList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BehaviorOtherList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BehaviorOtherList::MergeFrom(const BehaviorOtherList& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BehaviorOtherList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorOtherList::CopyFrom(const BehaviorOtherList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorOtherList::IsInitialized() const {

  return true;
}

void BehaviorOtherList::Swap(BehaviorOtherList* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BehaviorOtherList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BehaviorOtherList_descriptor_;
  metadata.reflection = BehaviorOtherList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerBehavior::kMainTypeFieldNumber;
const int PlayerBehavior::kMinorTypeFieldNumber;
const int PlayerBehavior::kCharIDFieldNumber;
const int PlayerBehavior::kOthDataFieldNumber;
const int PlayerBehavior::kBeforeMoneyFieldNumber;
const int PlayerBehavior::kAfterMoneyFieldNumber;
const int PlayerBehavior::kBeforeGoldenFieldNumber;
const int PlayerBehavior::kAfterGoldenFieldNumber;
const int PlayerBehavior::kBeforeForceFieldNumber;
const int PlayerBehavior::kAfterForceFieldNumber;
const int PlayerBehavior::kBeforeBindGoldenFieldNumber;
const int PlayerBehavior::kAfterBindGoldenFieldNumber;
const int PlayerBehavior::kTimeFieldNumber;
#endif  // !_MSC_VER

PlayerBehavior::PlayerBehavior()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PlayerBehavior::InitAsDefaultInstance() {
  othdata_ = const_cast< ::StatisticInfo::BehaviorOtherList*>(&::StatisticInfo::BehaviorOtherList::default_instance());
}

PlayerBehavior::PlayerBehavior(const PlayerBehavior& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PlayerBehavior::SharedCtor() {
  _cached_size_ = 0;
  maintype_ = 0;
  minortype_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  othdata_ = NULL;
  beforemoney_ = GOOGLE_LONGLONG(0);
  aftermoney_ = GOOGLE_LONGLONG(0);
  beforegolden_ = GOOGLE_LONGLONG(0);
  aftergolden_ = GOOGLE_LONGLONG(0);
  beforeforce_ = GOOGLE_LONGLONG(0);
  afterforce_ = GOOGLE_LONGLONG(0);
  beforebindgolden_ = GOOGLE_LONGLONG(0);
  afterbindgolden_ = GOOGLE_LONGLONG(0);
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerBehavior::~PlayerBehavior() {
  SharedDtor();
}

void PlayerBehavior::SharedDtor() {
  if (this != default_instance_) {
    delete othdata_;
  }
}

void PlayerBehavior::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerBehavior::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerBehavior_descriptor_;
}

const PlayerBehavior& PlayerBehavior::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

PlayerBehavior* PlayerBehavior::default_instance_ = NULL;

PlayerBehavior* PlayerBehavior::New() const {
  return new PlayerBehavior;
}

void PlayerBehavior::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    maintype_ = 0;
    minortype_ = 0;
    charid_ = GOOGLE_LONGLONG(0);
    if (has_othdata()) {
      if (othdata_ != NULL) othdata_->::StatisticInfo::BehaviorOtherList::Clear();
    }
    beforemoney_ = GOOGLE_LONGLONG(0);
    aftermoney_ = GOOGLE_LONGLONG(0);
    beforegolden_ = GOOGLE_LONGLONG(0);
    aftergolden_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    beforeforce_ = GOOGLE_LONGLONG(0);
    afterforce_ = GOOGLE_LONGLONG(0);
    beforebindgolden_ = GOOGLE_LONGLONG(0);
    afterbindgolden_ = GOOGLE_LONGLONG(0);
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerBehavior::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 mainType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maintype_)));
          set_has_maintype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_minorType;
        break;
      }

      // required int32 minorType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minorType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minortype_)));
          set_has_minortype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_charID;
        break;
      }

      // optional int64 charID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_othData;
        break;
      }

      // optional .StatisticInfo.BehaviorOtherList othData = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_othData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_othdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_beforeMoney;
        break;
      }

      // optional int64 beforeMoney = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beforeMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beforemoney_)));
          set_has_beforemoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_afterMoney;
        break;
      }

      // optional int64 afterMoney = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_afterMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &aftermoney_)));
          set_has_aftermoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_beforeGolden;
        break;
      }

      // optional int64 beforeGolden = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beforeGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beforegolden_)));
          set_has_beforegolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_afterGolden;
        break;
      }

      // optional int64 afterGolden = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_afterGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &aftergolden_)));
          set_has_aftergolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_beforeForce;
        break;
      }

      // optional int64 beforeForce = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beforeForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beforeforce_)));
          set_has_beforeforce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_afterForce;
        break;
      }

      // optional int64 afterForce = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_afterForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &afterforce_)));
          set_has_afterforce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_beforeBindGolden;
        break;
      }

      // optional int64 beforeBindGolden = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beforeBindGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beforebindgolden_)));
          set_has_beforebindgolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_afterBindGolden;
        break;
      }

      // optional int64 afterBindGolden = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_afterBindGolden:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &afterbindgolden_)));
          set_has_afterbindgolden();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_time;
        break;
      }

      // optional int64 time = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PlayerBehavior::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 mainType = 1;
  if (has_maintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maintype(), output);
  }

  // required int32 minorType = 2;
  if (has_minortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minortype(), output);
  }

  // optional int64 charID = 3;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->charid(), output);
  }

  // optional .StatisticInfo.BehaviorOtherList othData = 4;
  if (has_othdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->othdata(), output);
  }

  // optional int64 beforeMoney = 5;
  if (has_beforemoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->beforemoney(), output);
  }

  // optional int64 afterMoney = 6;
  if (has_aftermoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->aftermoney(), output);
  }

  // optional int64 beforeGolden = 7;
  if (has_beforegolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->beforegolden(), output);
  }

  // optional int64 afterGolden = 8;
  if (has_aftergolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->aftergolden(), output);
  }

  // optional int64 beforeForce = 9;
  if (has_beforeforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->beforeforce(), output);
  }

  // optional int64 afterForce = 10;
  if (has_afterforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->afterforce(), output);
  }

  // optional int64 beforeBindGolden = 11;
  if (has_beforebindgolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->beforebindgolden(), output);
  }

  // optional int64 afterBindGolden = 12;
  if (has_afterbindgolden()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->afterbindgolden(), output);
  }

  // optional int64 time = 13;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PlayerBehavior::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 mainType = 1;
  if (has_maintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maintype(), target);
  }

  // required int32 minorType = 2;
  if (has_minortype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minortype(), target);
  }

  // optional int64 charID = 3;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->charid(), target);
  }

  // optional .StatisticInfo.BehaviorOtherList othData = 4;
  if (has_othdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->othdata(), target);
  }

  // optional int64 beforeMoney = 5;
  if (has_beforemoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->beforemoney(), target);
  }

  // optional int64 afterMoney = 6;
  if (has_aftermoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->aftermoney(), target);
  }

  // optional int64 beforeGolden = 7;
  if (has_beforegolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->beforegolden(), target);
  }

  // optional int64 afterGolden = 8;
  if (has_aftergolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->aftergolden(), target);
  }

  // optional int64 beforeForce = 9;
  if (has_beforeforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->beforeforce(), target);
  }

  // optional int64 afterForce = 10;
  if (has_afterforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->afterforce(), target);
  }

  // optional int64 beforeBindGolden = 11;
  if (has_beforebindgolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->beforebindgolden(), target);
  }

  // optional int64 afterBindGolden = 12;
  if (has_afterbindgolden()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->afterbindgolden(), target);
  }

  // optional int64 time = 13;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PlayerBehavior::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 mainType = 1;
    if (has_maintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maintype());
    }

    // required int32 minorType = 2;
    if (has_minortype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minortype());
    }

    // optional int64 charID = 3;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // optional .StatisticInfo.BehaviorOtherList othData = 4;
    if (has_othdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->othdata());
    }

    // optional int64 beforeMoney = 5;
    if (has_beforemoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beforemoney());
    }

    // optional int64 afterMoney = 6;
    if (has_aftermoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->aftermoney());
    }

    // optional int64 beforeGolden = 7;
    if (has_beforegolden()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beforegolden());
    }

    // optional int64 afterGolden = 8;
    if (has_aftergolden()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->aftergolden());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 beforeForce = 9;
    if (has_beforeforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beforeforce());
    }

    // optional int64 afterForce = 10;
    if (has_afterforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->afterforce());
    }

    // optional int64 beforeBindGolden = 11;
    if (has_beforebindgolden()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beforebindgolden());
    }

    // optional int64 afterBindGolden = 12;
    if (has_afterbindgolden()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->afterbindgolden());
    }

    // optional int64 time = 13;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerBehavior::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerBehavior* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerBehavior*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerBehavior::MergeFrom(const PlayerBehavior& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maintype()) {
      set_maintype(from.maintype());
    }
    if (from.has_minortype()) {
      set_minortype(from.minortype());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_othdata()) {
      mutable_othdata()->::StatisticInfo::BehaviorOtherList::MergeFrom(from.othdata());
    }
    if (from.has_beforemoney()) {
      set_beforemoney(from.beforemoney());
    }
    if (from.has_aftermoney()) {
      set_aftermoney(from.aftermoney());
    }
    if (from.has_beforegolden()) {
      set_beforegolden(from.beforegolden());
    }
    if (from.has_aftergolden()) {
      set_aftergolden(from.aftergolden());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_beforeforce()) {
      set_beforeforce(from.beforeforce());
    }
    if (from.has_afterforce()) {
      set_afterforce(from.afterforce());
    }
    if (from.has_beforebindgolden()) {
      set_beforebindgolden(from.beforebindgolden());
    }
    if (from.has_afterbindgolden()) {
      set_afterbindgolden(from.afterbindgolden());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerBehavior::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBehavior::CopyFrom(const PlayerBehavior& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBehavior::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PlayerBehavior::Swap(PlayerBehavior* other) {
  if (other != this) {
    std::swap(maintype_, other->maintype_);
    std::swap(minortype_, other->minortype_);
    std::swap(charid_, other->charid_);
    std::swap(othdata_, other->othdata_);
    std::swap(beforemoney_, other->beforemoney_);
    std::swap(aftermoney_, other->aftermoney_);
    std::swap(beforegolden_, other->beforegolden_);
    std::swap(aftergolden_, other->aftergolden_);
    std::swap(beforeforce_, other->beforeforce_);
    std::swap(afterforce_, other->afterforce_);
    std::swap(beforebindgolden_, other->beforebindgolden_);
    std::swap(afterbindgolden_, other->afterbindgolden_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerBehavior::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerBehavior_descriptor_;
  metadata.reflection = PlayerBehavior_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BehaviorMonitor::kListFieldNumber;
#endif  // !_MSC_VER

BehaviorMonitor::BehaviorMonitor()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BehaviorMonitor::InitAsDefaultInstance() {
}

BehaviorMonitor::BehaviorMonitor(const BehaviorMonitor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BehaviorMonitor::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BehaviorMonitor::~BehaviorMonitor() {
  SharedDtor();
}

void BehaviorMonitor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BehaviorMonitor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorMonitor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BehaviorMonitor_descriptor_;
}

const BehaviorMonitor& BehaviorMonitor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

BehaviorMonitor* BehaviorMonitor::default_instance_ = NULL;

BehaviorMonitor* BehaviorMonitor::New() const {
  return new BehaviorMonitor;
}

void BehaviorMonitor::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BehaviorMonitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StatisticInfo.PlayerBehavior list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BehaviorMonitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .StatisticInfo.PlayerBehavior list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BehaviorMonitor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .StatisticInfo.PlayerBehavior list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BehaviorMonitor::ByteSize() const {
  int total_size = 0;

  // repeated .StatisticInfo.PlayerBehavior list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorMonitor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BehaviorMonitor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BehaviorMonitor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BehaviorMonitor::MergeFrom(const BehaviorMonitor& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BehaviorMonitor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorMonitor::CopyFrom(const BehaviorMonitor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorMonitor::IsInitialized() const {

  for (int i = 0; i < list_size(); i++) {
    if (!this->list(i).IsInitialized()) return false;
  }
  return true;
}

void BehaviorMonitor::Swap(BehaviorMonitor* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BehaviorMonitor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BehaviorMonitor_descriptor_;
  metadata.reflection = BehaviorMonitor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalOtherData::kDataFieldNumber;
const int GlobalOtherData::kLenFieldNumber;
#endif  // !_MSC_VER

GlobalOtherData::GlobalOtherData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalOtherData::InitAsDefaultInstance() {
}

GlobalOtherData::GlobalOtherData(const GlobalOtherData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalOtherData::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  len_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalOtherData::~GlobalOtherData() {
  SharedDtor();
}

void GlobalOtherData::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void GlobalOtherData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalOtherData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalOtherData_descriptor_;
}

const GlobalOtherData& GlobalOtherData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

GlobalOtherData* GlobalOtherData::default_instance_ = NULL;

GlobalOtherData* GlobalOtherData::New() const {
  return new GlobalOtherData;
}

void GlobalOtherData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
    len_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalOtherData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_len;
        break;
      }

      // optional int32 len = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
          set_has_len();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalOtherData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(), output);
  }

  // optional int32 len = 2;
  if (has_len()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->len(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalOtherData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // optional int32 len = 2;
  if (has_len()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->len(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalOtherData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 len = 2;
    if (has_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->len());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalOtherData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalOtherData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalOtherData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalOtherData::MergeFrom(const GlobalOtherData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_len()) {
      set_len(from.len());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalOtherData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalOtherData::CopyFrom(const GlobalOtherData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalOtherData::IsInitialized() const {

  return true;
}

void GlobalOtherData::Swap(GlobalOtherData* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(len_, other->len_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalOtherData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalOtherData_descriptor_;
  metadata.reflection = GlobalOtherData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalOtherList::kListFieldNumber;
#endif  // !_MSC_VER

GlobalOtherList::GlobalOtherList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalOtherList::InitAsDefaultInstance() {
}

GlobalOtherList::GlobalOtherList(const GlobalOtherList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalOtherList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalOtherList::~GlobalOtherList() {
  SharedDtor();
}

void GlobalOtherList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalOtherList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalOtherList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalOtherList_descriptor_;
}

const GlobalOtherList& GlobalOtherList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

GlobalOtherList* GlobalOtherList::default_instance_ = NULL;

GlobalOtherList* GlobalOtherList::New() const {
  return new GlobalOtherList;
}

void GlobalOtherList::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalOtherList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StatisticInfo.GlobalOtherData list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalOtherList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .StatisticInfo.GlobalOtherData list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalOtherList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .StatisticInfo.GlobalOtherData list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalOtherList::ByteSize() const {
  int total_size = 0;

  // repeated .StatisticInfo.GlobalOtherData list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalOtherList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalOtherList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalOtherList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalOtherList::MergeFrom(const GlobalOtherList& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalOtherList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalOtherList::CopyFrom(const GlobalOtherList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalOtherList::IsInitialized() const {

  return true;
}

void GlobalOtherList::Swap(GlobalOtherList* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalOtherList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalOtherList_descriptor_;
  metadata.reflection = GlobalOtherList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalStatist::kMainTypeFieldNumber;
const int GlobalStatist::kMinorTypeFieldNumber;
const int GlobalStatist::kSaveTypeFieldNumber;
const int GlobalStatist::kOthDataFieldNumber;
#endif  // !_MSC_VER

GlobalStatist::GlobalStatist()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalStatist::InitAsDefaultInstance() {
  othdata_ = const_cast< ::StatisticInfo::GlobalOtherList*>(&::StatisticInfo::GlobalOtherList::default_instance());
}

GlobalStatist::GlobalStatist(const GlobalStatist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalStatist::SharedCtor() {
  _cached_size_ = 0;
  maintype_ = 0;
  minortype_ = 0;
  savetype_ = 0;
  othdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalStatist::~GlobalStatist() {
  SharedDtor();
}

void GlobalStatist::SharedDtor() {
  if (this != default_instance_) {
    delete othdata_;
  }
}

void GlobalStatist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalStatist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalStatist_descriptor_;
}

const GlobalStatist& GlobalStatist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

GlobalStatist* GlobalStatist::default_instance_ = NULL;

GlobalStatist* GlobalStatist::New() const {
  return new GlobalStatist;
}

void GlobalStatist::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    maintype_ = 0;
    minortype_ = 0;
    savetype_ = 0;
    if (has_othdata()) {
      if (othdata_ != NULL) othdata_->::StatisticInfo::GlobalOtherList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalStatist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 mainType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maintype_)));
          set_has_maintype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_minorType;
        break;
      }

      // required int32 minorType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minorType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minortype_)));
          set_has_minortype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_saveType;
        break;
      }

      // optional int32 saveType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_saveType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &savetype_)));
          set_has_savetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_othData;
        break;
      }

      // optional .StatisticInfo.GlobalOtherList othData = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_othData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_othdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalStatist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 mainType = 1;
  if (has_maintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maintype(), output);
  }

  // required int32 minorType = 2;
  if (has_minortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minortype(), output);
  }

  // optional int32 saveType = 3;
  if (has_savetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->savetype(), output);
  }

  // optional .StatisticInfo.GlobalOtherList othData = 4;
  if (has_othdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->othdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalStatist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 mainType = 1;
  if (has_maintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maintype(), target);
  }

  // required int32 minorType = 2;
  if (has_minortype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minortype(), target);
  }

  // optional int32 saveType = 3;
  if (has_savetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->savetype(), target);
  }

  // optional .StatisticInfo.GlobalOtherList othData = 4;
  if (has_othdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->othdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalStatist::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 mainType = 1;
    if (has_maintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maintype());
    }

    // required int32 minorType = 2;
    if (has_minortype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minortype());
    }

    // optional int32 saveType = 3;
    if (has_savetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->savetype());
    }

    // optional .StatisticInfo.GlobalOtherList othData = 4;
    if (has_othdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->othdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalStatist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalStatist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalStatist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalStatist::MergeFrom(const GlobalStatist& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maintype()) {
      set_maintype(from.maintype());
    }
    if (from.has_minortype()) {
      set_minortype(from.minortype());
    }
    if (from.has_savetype()) {
      set_savetype(from.savetype());
    }
    if (from.has_othdata()) {
      mutable_othdata()->::StatisticInfo::GlobalOtherList::MergeFrom(from.othdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalStatist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalStatist::CopyFrom(const GlobalStatist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalStatist::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GlobalStatist::Swap(GlobalStatist* other) {
  if (other != this) {
    std::swap(maintype_, other->maintype_);
    std::swap(minortype_, other->minortype_);
    std::swap(savetype_, other->savetype_);
    std::swap(othdata_, other->othdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalStatist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalStatist_descriptor_;
  metadata.reflection = GlobalStatist_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalMonitor::kListFieldNumber;
#endif  // !_MSC_VER

GlobalMonitor::GlobalMonitor()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalMonitor::InitAsDefaultInstance() {
}

GlobalMonitor::GlobalMonitor(const GlobalMonitor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalMonitor::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalMonitor::~GlobalMonitor() {
  SharedDtor();
}

void GlobalMonitor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalMonitor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalMonitor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalMonitor_descriptor_;
}

const GlobalMonitor& GlobalMonitor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

GlobalMonitor* GlobalMonitor::default_instance_ = NULL;

GlobalMonitor* GlobalMonitor::New() const {
  return new GlobalMonitor;
}

void GlobalMonitor::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalMonitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StatisticInfo.GlobalStatist list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalMonitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .StatisticInfo.GlobalStatist list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalMonitor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .StatisticInfo.GlobalStatist list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalMonitor::ByteSize() const {
  int total_size = 0;

  // repeated .StatisticInfo.GlobalStatist list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalMonitor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalMonitor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalMonitor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalMonitor::MergeFrom(const GlobalMonitor& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalMonitor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMonitor::CopyFrom(const GlobalMonitor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMonitor::IsInitialized() const {

  for (int i = 0; i < list_size(); i++) {
    if (!this->list(i).IsInitialized()) return false;
  }
  return true;
}

void GlobalMonitor::Swap(GlobalMonitor* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalMonitor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalMonitor_descriptor_;
  metadata.reflection = GlobalMonitor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StatisticData::kBehaviorFieldNumber;
const int StatisticData::kGlobalFieldNumber;
#endif  // !_MSC_VER

StatisticData::StatisticData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StatisticData::InitAsDefaultInstance() {
  behavior_ = const_cast< ::StatisticInfo::BehaviorMonitor*>(&::StatisticInfo::BehaviorMonitor::default_instance());
  global_ = const_cast< ::StatisticInfo::GlobalMonitor*>(&::StatisticInfo::GlobalMonitor::default_instance());
}

StatisticData::StatisticData(const StatisticData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StatisticData::SharedCtor() {
  _cached_size_ = 0;
  behavior_ = NULL;
  global_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StatisticData::~StatisticData() {
  SharedDtor();
}

void StatisticData::SharedDtor() {
  if (this != default_instance_) {
    delete behavior_;
    delete global_;
  }
}

void StatisticData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatisticData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatisticData_descriptor_;
}

const StatisticData& StatisticData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_StatisticInfo_2eproto();
  return *default_instance_;
}

StatisticData* StatisticData::default_instance_ = NULL;

StatisticData* StatisticData::New() const {
  return new StatisticData;
}

void StatisticData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_behavior()) {
      if (behavior_ != NULL) behavior_->::StatisticInfo::BehaviorMonitor::Clear();
    }
    if (has_global()) {
      if (global_ != NULL) global_->::StatisticInfo::GlobalMonitor::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StatisticData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .StatisticInfo.BehaviorMonitor behavior = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_behavior()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_global;
        break;
      }

      // optional .StatisticInfo.GlobalMonitor global = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_global:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_global()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StatisticData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .StatisticInfo.BehaviorMonitor behavior = 1;
  if (has_behavior()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->behavior(), output);
  }

  // optional .StatisticInfo.GlobalMonitor global = 2;
  if (has_global()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->global(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StatisticData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .StatisticInfo.BehaviorMonitor behavior = 1;
  if (has_behavior()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->behavior(), target);
  }

  // optional .StatisticInfo.GlobalMonitor global = 2;
  if (has_global()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->global(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StatisticData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .StatisticInfo.BehaviorMonitor behavior = 1;
    if (has_behavior()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->behavior());
    }

    // optional .StatisticInfo.GlobalMonitor global = 2;
    if (has_global()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->global());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatisticData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StatisticData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StatisticData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StatisticData::MergeFrom(const StatisticData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_behavior()) {
      mutable_behavior()->::StatisticInfo::BehaviorMonitor::MergeFrom(from.behavior());
    }
    if (from.has_global()) {
      mutable_global()->::StatisticInfo::GlobalMonitor::MergeFrom(from.global());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StatisticData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticData::CopyFrom(const StatisticData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticData::IsInitialized() const {

  if (has_behavior()) {
    if (!this->behavior().IsInitialized()) return false;
  }
  if (has_global()) {
    if (!this->global().IsInitialized()) return false;
  }
  return true;
}

void StatisticData::Swap(StatisticData* other) {
  if (other != this) {
    std::swap(behavior_, other->behavior_);
    std::swap(global_, other->global_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StatisticData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StatisticData_descriptor_;
  metadata.reflection = StatisticData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace StatisticInfo

// @@protoc_insertion_point(global_scope)
