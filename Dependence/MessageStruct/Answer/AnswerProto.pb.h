// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Answer/AnswerProto.proto

#ifndef PROTOBUF_Answer_2fAnswerProto_2eproto__INCLUDED
#define PROTOBUF_Answer_2fAnswerProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace AnswerProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

class ReqEnterScence;
class RetEnterScence;
class ReqLeaveScence;
class RetLeaveScence;
class SimSyncAnswerInfo;
class SimPublishAnswer;
class SimNextQuestionStart;
class SimSyncRank;
class ReqGenQuestion;
class RetGenQuestion;
class QuestionAnswerInfo;
class ReqActivityEnd;
class SyncRank;
class AnswerRankInfo;
class AckReqAnswerInfo;
class ReqChoiceAnswer;

// ===================================================================

class ReqEnterScence : public ::google::protobuf::Message {
 public:
  ReqEnterScence();
  virtual ~ReqEnterScence();

  ReqEnterScence(const ReqEnterScence& from);

  inline ReqEnterScence& operator=(const ReqEnterScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnterScence& default_instance();

  void Swap(ReqEnterScence* other);

  // implements Message ----------------------------------------------

  ReqEnterScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnterScence& from);
  void MergeFrom(const ReqEnterScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AnswerProto.ReqEnterScence)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static ReqEnterScence* default_instance_;
};
// -------------------------------------------------------------------

class RetEnterScence : public ::google::protobuf::Message {
 public:
  RetEnterScence();
  virtual ~RetEnterScence();

  RetEnterScence(const RetEnterScence& from);

  inline RetEnterScence& operator=(const RetEnterScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetEnterScence& default_instance();

  void Swap(RetEnterScence* other);

  // implements Message ----------------------------------------------

  RetEnterScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetEnterScence& from);
  void MergeFrom(const RetEnterScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.RetEnterScence)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static RetEnterScence* default_instance_;
};
// -------------------------------------------------------------------

class ReqLeaveScence : public ::google::protobuf::Message {
 public:
  ReqLeaveScence();
  virtual ~ReqLeaveScence();

  ReqLeaveScence(const ReqLeaveScence& from);

  inline ReqLeaveScence& operator=(const ReqLeaveScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLeaveScence& default_instance();

  void Swap(ReqLeaveScence* other);

  // implements Message ----------------------------------------------

  ReqLeaveScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLeaveScence& from);
  void MergeFrom(const ReqLeaveScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AnswerProto.ReqLeaveScence)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static ReqLeaveScence* default_instance_;
};
// -------------------------------------------------------------------

class RetLeaveScence : public ::google::protobuf::Message {
 public:
  RetLeaveScence();
  virtual ~RetLeaveScence();

  RetLeaveScence(const RetLeaveScence& from);

  inline RetLeaveScence& operator=(const RetLeaveScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetLeaveScence& default_instance();

  void Swap(RetLeaveScence* other);

  // implements Message ----------------------------------------------

  RetLeaveScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetLeaveScence& from);
  void MergeFrom(const RetLeaveScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int64 scenceId = 2;
  inline bool has_scenceid() const;
  inline void clear_scenceid();
  static const int kScenceIdFieldNumber = 2;
  inline ::google::protobuf::int64 scenceid() const;
  inline void set_scenceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.RetLeaveScence)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_scenceid();
  inline void clear_has_scenceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 scenceid_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static RetLeaveScence* default_instance_;
};
// -------------------------------------------------------------------

class SimSyncAnswerInfo : public ::google::protobuf::Message {
 public:
  SimSyncAnswerInfo();
  virtual ~SimSyncAnswerInfo();

  SimSyncAnswerInfo(const SimSyncAnswerInfo& from);

  inline SimSyncAnswerInfo& operator=(const SimSyncAnswerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimSyncAnswerInfo& default_instance();

  void Swap(SimSyncAnswerInfo* other);

  // implements Message ----------------------------------------------

  SimSyncAnswerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimSyncAnswerInfo& from);
  void MergeFrom(const SimSyncAnswerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 answer = 3;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 3;
  inline ::google::protobuf::int32 answer() const;
  inline void set_answer(::google::protobuf::int32 value);

  // optional int32 lefttime = 4;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLefttimeFieldNumber = 4;
  inline ::google::protobuf::int32 lefttime() const;
  inline void set_lefttime(::google::protobuf::int32 value);

  // required int32 rightCount = 5;
  inline bool has_rightcount() const;
  inline void clear_rightcount();
  static const int kRightCountFieldNumber = 5;
  inline ::google::protobuf::int32 rightcount() const;
  inline void set_rightcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.SimSyncAnswerInfo)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_answer();
  inline void clear_has_answer();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  inline void set_has_rightcount();
  inline void clear_has_rightcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 answer_;
  ::google::protobuf::int32 lefttime_;
  ::google::protobuf::int32 rightcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static SimSyncAnswerInfo* default_instance_;
};
// -------------------------------------------------------------------

class SimPublishAnswer : public ::google::protobuf::Message {
 public:
  SimPublishAnswer();
  virtual ~SimPublishAnswer();

  SimPublishAnswer(const SimPublishAnswer& from);

  inline SimPublishAnswer& operator=(const SimPublishAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimPublishAnswer& default_instance();

  void Swap(SimPublishAnswer* other);

  // implements Message ----------------------------------------------

  SimPublishAnswer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimPublishAnswer& from);
  void MergeFrom(const SimPublishAnswer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 answer = 1;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 1;
  inline ::google::protobuf::int32 answer() const;
  inline void set_answer(::google::protobuf::int32 value);

  // required int32 rightCount = 2;
  inline bool has_rightcount() const;
  inline void clear_rightcount();
  static const int kRightCountFieldNumber = 2;
  inline ::google::protobuf::int32 rightcount() const;
  inline void set_rightcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.SimPublishAnswer)
 private:
  inline void set_has_answer();
  inline void clear_has_answer();
  inline void set_has_rightcount();
  inline void clear_has_rightcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 answer_;
  ::google::protobuf::int32 rightcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static SimPublishAnswer* default_instance_;
};
// -------------------------------------------------------------------

class SimNextQuestionStart : public ::google::protobuf::Message {
 public:
  SimNextQuestionStart();
  virtual ~SimNextQuestionStart();

  SimNextQuestionStart(const SimNextQuestionStart& from);

  inline SimNextQuestionStart& operator=(const SimNextQuestionStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimNextQuestionStart& default_instance();

  void Swap(SimNextQuestionStart* other);

  // implements Message ----------------------------------------------

  SimNextQuestionStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimNextQuestionStart& from);
  void MergeFrom(const SimNextQuestionStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 answer = 3;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 3;
  inline ::google::protobuf::int32 answer() const;
  inline void set_answer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.SimNextQuestionStart)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 answer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static SimNextQuestionStart* default_instance_;
};
// -------------------------------------------------------------------

class SimSyncRank : public ::google::protobuf::Message {
 public:
  SimSyncRank();
  virtual ~SimSyncRank();

  SimSyncRank(const SimSyncRank& from);

  inline SimSyncRank& operator=(const SimSyncRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimSyncRank& default_instance();

  void Swap(SimSyncRank* other);

  // implements Message ----------------------------------------------

  SimSyncRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimSyncRank& from);
  void MergeFrom(const SimSyncRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AnswerProto.AnswerRankInfo rankinfo = 1;
  inline int rankinfo_size() const;
  inline void clear_rankinfo();
  static const int kRankinfoFieldNumber = 1;
  inline const ::AnswerProto::AnswerRankInfo& rankinfo(int index) const;
  inline ::AnswerProto::AnswerRankInfo* mutable_rankinfo(int index);
  inline ::AnswerProto::AnswerRankInfo* add_rankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >&
      rankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >*
      mutable_rankinfo();

  // @@protoc_insertion_point(class_scope:AnswerProto.SimSyncRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo > rankinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static SimSyncRank* default_instance_;
};
// -------------------------------------------------------------------

class ReqGenQuestion : public ::google::protobuf::Message {
 public:
  ReqGenQuestion();
  virtual ~ReqGenQuestion();

  ReqGenQuestion(const ReqGenQuestion& from);

  inline ReqGenQuestion& operator=(const ReqGenQuestion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGenQuestion& default_instance();

  void Swap(ReqGenQuestion* other);

  // implements Message ----------------------------------------------

  ReqGenQuestion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGenQuestion& from);
  void MergeFrom(const ReqGenQuestion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AnswerProto.ReqGenQuestion)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static ReqGenQuestion* default_instance_;
};
// -------------------------------------------------------------------

class RetGenQuestion : public ::google::protobuf::Message {
 public:
  RetGenQuestion();
  virtual ~RetGenQuestion();

  RetGenQuestion(const RetGenQuestion& from);

  inline RetGenQuestion& operator=(const RetGenQuestion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGenQuestion& default_instance();

  void Swap(RetGenQuestion* other);

  // implements Message ----------------------------------------------

  RetGenQuestion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGenQuestion& from);
  void MergeFrom(const RetGenQuestion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .AnswerProto.QuestionAnswerInfo infos = 1;
  inline bool has_infos() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::AnswerProto::QuestionAnswerInfo& infos() const;
  inline ::AnswerProto::QuestionAnswerInfo* mutable_infos();
  inline ::AnswerProto::QuestionAnswerInfo* release_infos();
  inline void set_allocated_infos(::AnswerProto::QuestionAnswerInfo* infos);

  // @@protoc_insertion_point(class_scope:AnswerProto.RetGenQuestion)
 private:
  inline void set_has_infos();
  inline void clear_has_infos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::AnswerProto::QuestionAnswerInfo* infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static RetGenQuestion* default_instance_;
};
// -------------------------------------------------------------------

class QuestionAnswerInfo : public ::google::protobuf::Message {
 public:
  QuestionAnswerInfo();
  virtual ~QuestionAnswerInfo();

  QuestionAnswerInfo(const QuestionAnswerInfo& from);

  inline QuestionAnswerInfo& operator=(const QuestionAnswerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionAnswerInfo& default_instance();

  void Swap(QuestionAnswerInfo* other);

  // implements Message ----------------------------------------------

  QuestionAnswerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestionAnswerInfo& from);
  void MergeFrom(const QuestionAnswerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 questions = 1;
  inline int questions_size() const;
  inline void clear_questions();
  static const int kQuestionsFieldNumber = 1;
  inline ::google::protobuf::int32 questions(int index) const;
  inline void set_questions(int index, ::google::protobuf::int32 value);
  inline void add_questions(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      questions() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_questions();

  // repeated int32 answers = 2;
  inline int answers_size() const;
  inline void clear_answers();
  static const int kAnswersFieldNumber = 2;
  inline ::google::protobuf::int32 answers(int index) const;
  inline void set_answers(int index, ::google::protobuf::int32 value);
  inline void add_answers(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      answers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_answers();

  // @@protoc_insertion_point(class_scope:AnswerProto.QuestionAnswerInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > questions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > answers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static QuestionAnswerInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqActivityEnd : public ::google::protobuf::Message {
 public:
  ReqActivityEnd();
  virtual ~ReqActivityEnd();

  ReqActivityEnd(const ReqActivityEnd& from);

  inline ReqActivityEnd& operator=(const ReqActivityEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqActivityEnd& default_instance();

  void Swap(ReqActivityEnd* other);

  // implements Message ----------------------------------------------

  ReqActivityEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqActivityEnd& from);
  void MergeFrom(const ReqActivityEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AnswerProto.ReqActivityEnd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static ReqActivityEnd* default_instance_;
};
// -------------------------------------------------------------------

class SyncRank : public ::google::protobuf::Message {
 public:
  SyncRank();
  virtual ~SyncRank();

  SyncRank(const SyncRank& from);

  inline SyncRank& operator=(const SyncRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncRank& default_instance();

  void Swap(SyncRank* other);

  // implements Message ----------------------------------------------

  SyncRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncRank& from);
  void MergeFrom(const SyncRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AnswerProto.AnswerRankInfo rankinfo = 1;
  inline int rankinfo_size() const;
  inline void clear_rankinfo();
  static const int kRankinfoFieldNumber = 1;
  inline const ::AnswerProto::AnswerRankInfo& rankinfo(int index) const;
  inline ::AnswerProto::AnswerRankInfo* mutable_rankinfo(int index);
  inline ::AnswerProto::AnswerRankInfo* add_rankinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >&
      rankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >*
      mutable_rankinfo();

  // @@protoc_insertion_point(class_scope:AnswerProto.SyncRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo > rankinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static SyncRank* default_instance_;
};
// -------------------------------------------------------------------

class AnswerRankInfo : public ::google::protobuf::Message {
 public:
  AnswerRankInfo();
  virtual ~AnswerRankInfo();

  AnswerRankInfo(const AnswerRankInfo& from);

  inline AnswerRankInfo& operator=(const AnswerRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerRankInfo& default_instance();

  void Swap(AnswerRankInfo* other);

  // implements Message ----------------------------------------------

  AnswerRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerRankInfo& from);
  void MergeFrom(const AnswerRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // required int32 continueright = 3;
  inline bool has_continueright() const;
  inline void clear_continueright();
  static const int kContinuerightFieldNumber = 3;
  inline ::google::protobuf::int32 continueright() const;
  inline void set_continueright(::google::protobuf::int32 value);

  // optional int64 scenceid = 4;
  inline bool has_scenceid() const;
  inline void clear_scenceid();
  static const int kScenceidFieldNumber = 4;
  inline ::google::protobuf::int64 scenceid() const;
  inline void set_scenceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.AnswerRankInfo)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_continueright();
  inline void clear_has_continueright();
  inline void set_has_scenceid();
  inline void clear_has_scenceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* playername_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 continueright_;
  ::google::protobuf::int64 scenceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static AnswerRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckReqAnswerInfo : public ::google::protobuf::Message {
 public:
  AckReqAnswerInfo();
  virtual ~AckReqAnswerInfo();

  AckReqAnswerInfo(const AckReqAnswerInfo& from);

  inline AckReqAnswerInfo& operator=(const AckReqAnswerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqAnswerInfo& default_instance();

  void Swap(AckReqAnswerInfo* other);

  // implements Message ----------------------------------------------

  AckReqAnswerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqAnswerInfo& from);
  void MergeFrom(const AckReqAnswerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 currentIndex = 2;
  inline bool has_currentindex() const;
  inline void clear_currentindex();
  static const int kCurrentIndexFieldNumber = 2;
  inline ::google::protobuf::int32 currentindex() const;
  inline void set_currentindex(::google::protobuf::int32 value);

  // optional int32 currentTitleID = 3;
  inline bool has_currenttitleid() const;
  inline void clear_currenttitleid();
  static const int kCurrentTitleIDFieldNumber = 3;
  inline ::google::protobuf::int32 currenttitleid() const;
  inline void set_currenttitleid(::google::protobuf::int32 value);

  // optional int32 rightCounts = 4;
  inline bool has_rightcounts() const;
  inline void clear_rightcounts();
  static const int kRightCountsFieldNumber = 4;
  inline ::google::protobuf::int32 rightcounts() const;
  inline void set_rightcounts(::google::protobuf::int32 value);

  // optional int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.AckReqAnswerInfo)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_currentindex();
  inline void clear_has_currentindex();
  inline void set_has_currenttitleid();
  inline void clear_has_currenttitleid();
  inline void set_has_rightcounts();
  inline void clear_has_rightcounts();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 currentindex_;
  ::google::protobuf::int32 currenttitleid_;
  ::google::protobuf::int32 rightcounts_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static AckReqAnswerInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoiceAnswer : public ::google::protobuf::Message {
 public:
  ReqChoiceAnswer();
  virtual ~ReqChoiceAnswer();

  ReqChoiceAnswer(const ReqChoiceAnswer& from);

  inline ReqChoiceAnswer& operator=(const ReqChoiceAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoiceAnswer& default_instance();

  void Swap(ReqChoiceAnswer* other);

  // implements Message ----------------------------------------------

  ReqChoiceAnswer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoiceAnswer& from);
  void MergeFrom(const ReqChoiceAnswer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AnswerProto.ReqChoiceAnswer)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_AssignDesc_Answer_2fAnswerProto_2eproto();
  friend void protobuf_ShutdownFile_Answer_2fAnswerProto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoiceAnswer* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqEnterScence

// -------------------------------------------------------------------

// RetEnterScence

// required int32 error = 1;
inline bool RetEnterScence::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetEnterScence::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetEnterScence::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetEnterScence::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RetEnterScence::error() const {
  return error_;
}
inline void RetEnterScence::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// ReqLeaveScence

// -------------------------------------------------------------------

// RetLeaveScence

// required int32 error = 1;
inline bool RetLeaveScence::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetLeaveScence::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetLeaveScence::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetLeaveScence::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RetLeaveScence::error() const {
  return error_;
}
inline void RetLeaveScence::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int64 scenceId = 2;
inline bool RetLeaveScence::has_scenceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetLeaveScence::set_has_scenceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetLeaveScence::clear_has_scenceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetLeaveScence::clear_scenceid() {
  scenceid_ = GOOGLE_LONGLONG(0);
  clear_has_scenceid();
}
inline ::google::protobuf::int64 RetLeaveScence::scenceid() const {
  return scenceid_;
}
inline void RetLeaveScence::set_scenceid(::google::protobuf::int64 value) {
  set_has_scenceid();
  scenceid_ = value;
}

// -------------------------------------------------------------------

// SimSyncAnswerInfo

// required int32 number = 1;
inline bool SimSyncAnswerInfo::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimSyncAnswerInfo::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimSyncAnswerInfo::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimSyncAnswerInfo::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 SimSyncAnswerInfo::number() const {
  return number_;
}
inline void SimSyncAnswerInfo::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// required int32 index = 2;
inline bool SimSyncAnswerInfo::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimSyncAnswerInfo::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimSyncAnswerInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimSyncAnswerInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SimSyncAnswerInfo::index() const {
  return index_;
}
inline void SimSyncAnswerInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 answer = 3;
inline bool SimSyncAnswerInfo::has_answer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimSyncAnswerInfo::set_has_answer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimSyncAnswerInfo::clear_has_answer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimSyncAnswerInfo::clear_answer() {
  answer_ = 0;
  clear_has_answer();
}
inline ::google::protobuf::int32 SimSyncAnswerInfo::answer() const {
  return answer_;
}
inline void SimSyncAnswerInfo::set_answer(::google::protobuf::int32 value) {
  set_has_answer();
  answer_ = value;
}

// optional int32 lefttime = 4;
inline bool SimSyncAnswerInfo::has_lefttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SimSyncAnswerInfo::set_has_lefttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SimSyncAnswerInfo::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SimSyncAnswerInfo::clear_lefttime() {
  lefttime_ = 0;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 SimSyncAnswerInfo::lefttime() const {
  return lefttime_;
}
inline void SimSyncAnswerInfo::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// required int32 rightCount = 5;
inline bool SimSyncAnswerInfo::has_rightcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SimSyncAnswerInfo::set_has_rightcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SimSyncAnswerInfo::clear_has_rightcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SimSyncAnswerInfo::clear_rightcount() {
  rightcount_ = 0;
  clear_has_rightcount();
}
inline ::google::protobuf::int32 SimSyncAnswerInfo::rightcount() const {
  return rightcount_;
}
inline void SimSyncAnswerInfo::set_rightcount(::google::protobuf::int32 value) {
  set_has_rightcount();
  rightcount_ = value;
}

// -------------------------------------------------------------------

// SimPublishAnswer

// required int32 answer = 1;
inline bool SimPublishAnswer::has_answer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimPublishAnswer::set_has_answer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimPublishAnswer::clear_has_answer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimPublishAnswer::clear_answer() {
  answer_ = 0;
  clear_has_answer();
}
inline ::google::protobuf::int32 SimPublishAnswer::answer() const {
  return answer_;
}
inline void SimPublishAnswer::set_answer(::google::protobuf::int32 value) {
  set_has_answer();
  answer_ = value;
}

// required int32 rightCount = 2;
inline bool SimPublishAnswer::has_rightcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimPublishAnswer::set_has_rightcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimPublishAnswer::clear_has_rightcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimPublishAnswer::clear_rightcount() {
  rightcount_ = 0;
  clear_has_rightcount();
}
inline ::google::protobuf::int32 SimPublishAnswer::rightcount() const {
  return rightcount_;
}
inline void SimPublishAnswer::set_rightcount(::google::protobuf::int32 value) {
  set_has_rightcount();
  rightcount_ = value;
}

// -------------------------------------------------------------------

// SimNextQuestionStart

// required int32 number = 1;
inline bool SimNextQuestionStart::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimNextQuestionStart::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimNextQuestionStart::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimNextQuestionStart::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 SimNextQuestionStart::number() const {
  return number_;
}
inline void SimNextQuestionStart::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// required int32 index = 2;
inline bool SimNextQuestionStart::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimNextQuestionStart::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimNextQuestionStart::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimNextQuestionStart::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SimNextQuestionStart::index() const {
  return index_;
}
inline void SimNextQuestionStart::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 answer = 3;
inline bool SimNextQuestionStart::has_answer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimNextQuestionStart::set_has_answer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimNextQuestionStart::clear_has_answer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimNextQuestionStart::clear_answer() {
  answer_ = 0;
  clear_has_answer();
}
inline ::google::protobuf::int32 SimNextQuestionStart::answer() const {
  return answer_;
}
inline void SimNextQuestionStart::set_answer(::google::protobuf::int32 value) {
  set_has_answer();
  answer_ = value;
}

// -------------------------------------------------------------------

// SimSyncRank

// repeated .AnswerProto.AnswerRankInfo rankinfo = 1;
inline int SimSyncRank::rankinfo_size() const {
  return rankinfo_.size();
}
inline void SimSyncRank::clear_rankinfo() {
  rankinfo_.Clear();
}
inline const ::AnswerProto::AnswerRankInfo& SimSyncRank::rankinfo(int index) const {
  return rankinfo_.Get(index);
}
inline ::AnswerProto::AnswerRankInfo* SimSyncRank::mutable_rankinfo(int index) {
  return rankinfo_.Mutable(index);
}
inline ::AnswerProto::AnswerRankInfo* SimSyncRank::add_rankinfo() {
  return rankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >&
SimSyncRank::rankinfo() const {
  return rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >*
SimSyncRank::mutable_rankinfo() {
  return &rankinfo_;
}

// -------------------------------------------------------------------

// ReqGenQuestion

// -------------------------------------------------------------------

// RetGenQuestion

// required .AnswerProto.QuestionAnswerInfo infos = 1;
inline bool RetGenQuestion::has_infos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGenQuestion::set_has_infos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGenQuestion::clear_has_infos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGenQuestion::clear_infos() {
  if (infos_ != NULL) infos_->::AnswerProto::QuestionAnswerInfo::Clear();
  clear_has_infos();
}
inline const ::AnswerProto::QuestionAnswerInfo& RetGenQuestion::infos() const {
  return infos_ != NULL ? *infos_ : *default_instance_->infos_;
}
inline ::AnswerProto::QuestionAnswerInfo* RetGenQuestion::mutable_infos() {
  set_has_infos();
  if (infos_ == NULL) infos_ = new ::AnswerProto::QuestionAnswerInfo;
  return infos_;
}
inline ::AnswerProto::QuestionAnswerInfo* RetGenQuestion::release_infos() {
  clear_has_infos();
  ::AnswerProto::QuestionAnswerInfo* temp = infos_;
  infos_ = NULL;
  return temp;
}
inline void RetGenQuestion::set_allocated_infos(::AnswerProto::QuestionAnswerInfo* infos) {
  delete infos_;
  infos_ = infos;
  if (infos) {
    set_has_infos();
  } else {
    clear_has_infos();
  }
}

// -------------------------------------------------------------------

// QuestionAnswerInfo

// repeated int32 questions = 1;
inline int QuestionAnswerInfo::questions_size() const {
  return questions_.size();
}
inline void QuestionAnswerInfo::clear_questions() {
  questions_.Clear();
}
inline ::google::protobuf::int32 QuestionAnswerInfo::questions(int index) const {
  return questions_.Get(index);
}
inline void QuestionAnswerInfo::set_questions(int index, ::google::protobuf::int32 value) {
  questions_.Set(index, value);
}
inline void QuestionAnswerInfo::add_questions(::google::protobuf::int32 value) {
  questions_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestionAnswerInfo::questions() const {
  return questions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestionAnswerInfo::mutable_questions() {
  return &questions_;
}

// repeated int32 answers = 2;
inline int QuestionAnswerInfo::answers_size() const {
  return answers_.size();
}
inline void QuestionAnswerInfo::clear_answers() {
  answers_.Clear();
}
inline ::google::protobuf::int32 QuestionAnswerInfo::answers(int index) const {
  return answers_.Get(index);
}
inline void QuestionAnswerInfo::set_answers(int index, ::google::protobuf::int32 value) {
  answers_.Set(index, value);
}
inline void QuestionAnswerInfo::add_answers(::google::protobuf::int32 value) {
  answers_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestionAnswerInfo::answers() const {
  return answers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestionAnswerInfo::mutable_answers() {
  return &answers_;
}

// -------------------------------------------------------------------

// ReqActivityEnd

// -------------------------------------------------------------------

// SyncRank

// repeated .AnswerProto.AnswerRankInfo rankinfo = 1;
inline int SyncRank::rankinfo_size() const {
  return rankinfo_.size();
}
inline void SyncRank::clear_rankinfo() {
  rankinfo_.Clear();
}
inline const ::AnswerProto::AnswerRankInfo& SyncRank::rankinfo(int index) const {
  return rankinfo_.Get(index);
}
inline ::AnswerProto::AnswerRankInfo* SyncRank::mutable_rankinfo(int index) {
  return rankinfo_.Mutable(index);
}
inline ::AnswerProto::AnswerRankInfo* SyncRank::add_rankinfo() {
  return rankinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >&
SyncRank::rankinfo() const {
  return rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::AnswerProto::AnswerRankInfo >*
SyncRank::mutable_rankinfo() {
  return &rankinfo_;
}

// -------------------------------------------------------------------

// AnswerRankInfo

// required string playername = 1;
inline bool AnswerRankInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerRankInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerRankInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerRankInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& AnswerRankInfo::playername() const {
  return *playername_;
}
inline void AnswerRankInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void AnswerRankInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void AnswerRankInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AnswerRankInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* AnswerRankInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AnswerRankInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 score = 2;
inline bool AnswerRankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnswerRankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnswerRankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnswerRankInfo::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 AnswerRankInfo::score() const {
  return score_;
}
inline void AnswerRankInfo::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// required int32 continueright = 3;
inline bool AnswerRankInfo::has_continueright() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnswerRankInfo::set_has_continueright() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnswerRankInfo::clear_has_continueright() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnswerRankInfo::clear_continueright() {
  continueright_ = 0;
  clear_has_continueright();
}
inline ::google::protobuf::int32 AnswerRankInfo::continueright() const {
  return continueright_;
}
inline void AnswerRankInfo::set_continueright(::google::protobuf::int32 value) {
  set_has_continueright();
  continueright_ = value;
}

// optional int64 scenceid = 4;
inline bool AnswerRankInfo::has_scenceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnswerRankInfo::set_has_scenceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnswerRankInfo::clear_has_scenceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnswerRankInfo::clear_scenceid() {
  scenceid_ = GOOGLE_LONGLONG(0);
  clear_has_scenceid();
}
inline ::google::protobuf::int64 AnswerRankInfo::scenceid() const {
  return scenceid_;
}
inline void AnswerRankInfo::set_scenceid(::google::protobuf::int64 value) {
  set_has_scenceid();
  scenceid_ = value;
}

// -------------------------------------------------------------------

// AckReqAnswerInfo

// required int32 ret = 1;
inline bool AckReqAnswerInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqAnswerInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqAnswerInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqAnswerInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 AckReqAnswerInfo::ret() const {
  return ret_;
}
inline void AckReqAnswerInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 currentIndex = 2;
inline bool AckReqAnswerInfo::has_currentindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqAnswerInfo::set_has_currentindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqAnswerInfo::clear_has_currentindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqAnswerInfo::clear_currentindex() {
  currentindex_ = 0;
  clear_has_currentindex();
}
inline ::google::protobuf::int32 AckReqAnswerInfo::currentindex() const {
  return currentindex_;
}
inline void AckReqAnswerInfo::set_currentindex(::google::protobuf::int32 value) {
  set_has_currentindex();
  currentindex_ = value;
}

// optional int32 currentTitleID = 3;
inline bool AckReqAnswerInfo::has_currenttitleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckReqAnswerInfo::set_has_currenttitleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckReqAnswerInfo::clear_has_currenttitleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckReqAnswerInfo::clear_currenttitleid() {
  currenttitleid_ = 0;
  clear_has_currenttitleid();
}
inline ::google::protobuf::int32 AckReqAnswerInfo::currenttitleid() const {
  return currenttitleid_;
}
inline void AckReqAnswerInfo::set_currenttitleid(::google::protobuf::int32 value) {
  set_has_currenttitleid();
  currenttitleid_ = value;
}

// optional int32 rightCounts = 4;
inline bool AckReqAnswerInfo::has_rightcounts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckReqAnswerInfo::set_has_rightcounts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckReqAnswerInfo::clear_has_rightcounts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckReqAnswerInfo::clear_rightcounts() {
  rightcounts_ = 0;
  clear_has_rightcounts();
}
inline ::google::protobuf::int32 AckReqAnswerInfo::rightcounts() const {
  return rightcounts_;
}
inline void AckReqAnswerInfo::set_rightcounts(::google::protobuf::int32 value) {
  set_has_rightcounts();
  rightcounts_ = value;
}

// optional int32 state = 5;
inline bool AckReqAnswerInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckReqAnswerInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckReqAnswerInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckReqAnswerInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AckReqAnswerInfo::state() const {
  return state_;
}
inline void AckReqAnswerInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ReqChoiceAnswer

// required int32 ret = 1;
inline bool ReqChoiceAnswer::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoiceAnswer::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoiceAnswer::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoiceAnswer::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ReqChoiceAnswer::ret() const {
  return ret_;
}
inline void ReqChoiceAnswer::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AnswerProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Answer_2fAnswerProto_2eproto__INCLUDED
