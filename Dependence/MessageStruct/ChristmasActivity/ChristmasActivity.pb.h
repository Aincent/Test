// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChristmasActivity/ChristmasActivity.proto

#ifndef PROTOBUF_ChristmasActivity_2fChristmasActivity_2eproto__INCLUDED
#define PROTOBUF_ChristmasActivity_2fChristmasActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ChristmasActivity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

class BreakEggMsg;
class OneItemData;
class BreakEggReturn;
class ChristmasLoginMsg;
class SingleLimitData;
class ChristmasLimitBuyInfo;
class LimitBuyReturn;

// ===================================================================

class BreakEggMsg : public ::google::protobuf::Message {
 public:
  BreakEggMsg();
  virtual ~BreakEggMsg();

  BreakEggMsg(const BreakEggMsg& from);

  inline BreakEggMsg& operator=(const BreakEggMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakEggMsg& default_instance();

  void Swap(BreakEggMsg* other);

  // implements Message ----------------------------------------------

  BreakEggMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BreakEggMsg& from);
  void MergeFrom(const BreakEggMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 reflushTime = 1;
  inline bool has_reflushtime() const;
  inline void clear_reflushtime();
  static const int kReflushTimeFieldNumber = 1;
  inline ::google::protobuf::int64 reflushtime() const;
  inline void set_reflushtime(::google::protobuf::int64 value);

  // optional int32 breakInfo = 2;
  inline bool has_breakinfo() const;
  inline void clear_breakinfo();
  static const int kBreakInfoFieldNumber = 2;
  inline ::google::protobuf::int32 breakinfo() const;
  inline void set_breakinfo(::google::protobuf::int32 value);

  // optional int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ChristmasActivity.BreakEggMsg)
 private:
  inline void set_has_reflushtime();
  inline void clear_has_reflushtime();
  inline void set_has_breakinfo();
  inline void clear_has_breakinfo();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 reflushtime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 breakinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static BreakEggMsg* default_instance_;
};
// -------------------------------------------------------------------

class OneItemData : public ::google::protobuf::Message {
 public:
  OneItemData();
  virtual ~OneItemData();

  OneItemData(const OneItemData& from);

  inline OneItemData& operator=(const OneItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneItemData& default_instance();

  void Swap(OneItemData* other);

  // implements Message ----------------------------------------------

  OneItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneItemData& from);
  void MergeFrom(const OneItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 bindType = 2;
  inline bool has_bindtype() const;
  inline void clear_bindtype();
  static const int kBindTypeFieldNumber = 2;
  inline ::google::protobuf::int32 bindtype() const;
  inline void set_bindtype(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChristmasActivity.OneItemData)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_bindtype();
  inline void clear_has_bindtype();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 bindtype_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static OneItemData* default_instance_;
};
// -------------------------------------------------------------------

class BreakEggReturn : public ::google::protobuf::Message {
 public:
  BreakEggReturn();
  virtual ~BreakEggReturn();

  BreakEggReturn(const BreakEggReturn& from);

  inline BreakEggReturn& operator=(const BreakEggReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BreakEggReturn& default_instance();

  void Swap(BreakEggReturn* other);

  // implements Message ----------------------------------------------

  BreakEggReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BreakEggReturn& from);
  void MergeFrom(const BreakEggReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // repeated .ChristmasActivity.OneItemData itemList = 3;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 3;
  inline const ::ChristmasActivity::OneItemData& itemlist(int index) const;
  inline ::ChristmasActivity::OneItemData* mutable_itemlist(int index);
  inline ::ChristmasActivity::OneItemData* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::OneItemData >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::OneItemData >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:ChristmasActivity.BreakEggReturn)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::OneItemData > itemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static BreakEggReturn* default_instance_;
};
// -------------------------------------------------------------------

class ChristmasLoginMsg : public ::google::protobuf::Message {
 public:
  ChristmasLoginMsg();
  virtual ~ChristmasLoginMsg();

  ChristmasLoginMsg(const ChristmasLoginMsg& from);

  inline ChristmasLoginMsg& operator=(const ChristmasLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChristmasLoginMsg& default_instance();

  void Swap(ChristmasLoginMsg* other);

  // implements Message ----------------------------------------------

  ChristmasLoginMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChristmasLoginMsg& from);
  void MergeFrom(const ChristmasLoginMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 loginDay = 1;
  inline bool has_loginday() const;
  inline void clear_loginday();
  static const int kLoginDayFieldNumber = 1;
  inline ::google::protobuf::int32 loginday() const;
  inline void set_loginday(::google::protobuf::int32 value);

  // optional int32 rewardInfo = 2;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 2;
  inline ::google::protobuf::int32 rewardinfo() const;
  inline void set_rewardinfo(::google::protobuf::int32 value);

  // optional int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ChristmasActivity.ChristmasLoginMsg)
 private:
  inline void set_has_loginday();
  inline void clear_has_loginday();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 loginday_;
  ::google::protobuf::int32 rewardinfo_;
  ::google::protobuf::int64 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static ChristmasLoginMsg* default_instance_;
};
// -------------------------------------------------------------------

class SingleLimitData : public ::google::protobuf::Message {
 public:
  SingleLimitData();
  virtual ~SingleLimitData();

  SingleLimitData(const SingleLimitData& from);

  inline SingleLimitData& operator=(const SingleLimitData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleLimitData& default_instance();

  void Swap(SingleLimitData* other);

  // implements Message ----------------------------------------------

  SingleLimitData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleLimitData& from);
  void MergeFrom(const SingleLimitData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::int32 counts() const;
  inline void set_counts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChristmasActivity.SingleLimitData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static SingleLimitData* default_instance_;
};
// -------------------------------------------------------------------

class ChristmasLimitBuyInfo : public ::google::protobuf::Message {
 public:
  ChristmasLimitBuyInfo();
  virtual ~ChristmasLimitBuyInfo();

  ChristmasLimitBuyInfo(const ChristmasLimitBuyInfo& from);

  inline ChristmasLimitBuyInfo& operator=(const ChristmasLimitBuyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChristmasLimitBuyInfo& default_instance();

  void Swap(ChristmasLimitBuyInfo* other);

  // implements Message ----------------------------------------------

  ChristmasLimitBuyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChristmasLimitBuyInfo& from);
  void MergeFrom(const ChristmasLimitBuyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 reflushTime = 1;
  inline bool has_reflushtime() const;
  inline void clear_reflushtime();
  static const int kReflushTimeFieldNumber = 1;
  inline ::google::protobuf::int64 reflushtime() const;
  inline void set_reflushtime(::google::protobuf::int64 value);

  // repeated .ChristmasActivity.SingleLimitData dataList = 2;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDataListFieldNumber = 2;
  inline const ::ChristmasActivity::SingleLimitData& datalist(int index) const;
  inline ::ChristmasActivity::SingleLimitData* mutable_datalist(int index);
  inline ::ChristmasActivity::SingleLimitData* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >*
      mutable_datalist();

  // optional int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ChristmasActivity.ChristmasLimitBuyInfo)
 private:
  inline void set_has_reflushtime();
  inline void clear_has_reflushtime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 reflushtime_;
  ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData > datalist_;
  ::google::protobuf::int64 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static ChristmasLimitBuyInfo* default_instance_;
};
// -------------------------------------------------------------------

class LimitBuyReturn : public ::google::protobuf::Message {
 public:
  LimitBuyReturn();
  virtual ~LimitBuyReturn();

  LimitBuyReturn(const LimitBuyReturn& from);

  inline LimitBuyReturn& operator=(const LimitBuyReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitBuyReturn& default_instance();

  void Swap(LimitBuyReturn* other);

  // implements Message ----------------------------------------------

  LimitBuyReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitBuyReturn& from);
  void MergeFrom(const LimitBuyReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .ChristmasActivity.SingleLimitData dataList = 2;
  inline int datalist_size() const;
  inline void clear_datalist();
  static const int kDataListFieldNumber = 2;
  inline const ::ChristmasActivity::SingleLimitData& datalist(int index) const;
  inline ::ChristmasActivity::SingleLimitData* mutable_datalist(int index);
  inline ::ChristmasActivity::SingleLimitData* add_datalist();
  inline const ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >&
      datalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >*
      mutable_datalist();

  // @@protoc_insertion_point(class_scope:ChristmasActivity.LimitBuyReturn)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData > datalist_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_AssignDesc_ChristmasActivity_2fChristmasActivity_2eproto();
  friend void protobuf_ShutdownFile_ChristmasActivity_2fChristmasActivity_2eproto();

  void InitAsDefaultInstance();
  static LimitBuyReturn* default_instance_;
};
// ===================================================================


// ===================================================================

// BreakEggMsg

// optional int64 reflushTime = 1;
inline bool BreakEggMsg::has_reflushtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BreakEggMsg::set_has_reflushtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BreakEggMsg::clear_has_reflushtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BreakEggMsg::clear_reflushtime() {
  reflushtime_ = GOOGLE_LONGLONG(0);
  clear_has_reflushtime();
}
inline ::google::protobuf::int64 BreakEggMsg::reflushtime() const {
  return reflushtime_;
}
inline void BreakEggMsg::set_reflushtime(::google::protobuf::int64 value) {
  set_has_reflushtime();
  reflushtime_ = value;
}

// optional int32 breakInfo = 2;
inline bool BreakEggMsg::has_breakinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BreakEggMsg::set_has_breakinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BreakEggMsg::clear_has_breakinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BreakEggMsg::clear_breakinfo() {
  breakinfo_ = 0;
  clear_has_breakinfo();
}
inline ::google::protobuf::int32 BreakEggMsg::breakinfo() const {
  return breakinfo_;
}
inline void BreakEggMsg::set_breakinfo(::google::protobuf::int32 value) {
  set_has_breakinfo();
  breakinfo_ = value;
}

// optional int64 endTime = 3;
inline bool BreakEggMsg::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BreakEggMsg::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BreakEggMsg::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BreakEggMsg::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 BreakEggMsg::endtime() const {
  return endtime_;
}
inline void BreakEggMsg::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// OneItemData

// optional int32 itemID = 1;
inline bool OneItemData::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneItemData::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneItemData::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneItemData::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 OneItemData::itemid() const {
  return itemid_;
}
inline void OneItemData::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 bindType = 2;
inline bool OneItemData::has_bindtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneItemData::set_has_bindtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneItemData::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneItemData::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 OneItemData::bindtype() const {
  return bindtype_;
}
inline void OneItemData::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
}

// optional int32 num = 3;
inline bool OneItemData::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneItemData::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneItemData::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneItemData::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 OneItemData::num() const {
  return num_;
}
inline void OneItemData::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// BreakEggReturn

// optional int32 error = 1;
inline bool BreakEggReturn::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BreakEggReturn::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BreakEggReturn::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BreakEggReturn::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 BreakEggReturn::error() const {
  return error_;
}
inline void BreakEggReturn::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 index = 2;
inline bool BreakEggReturn::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BreakEggReturn::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BreakEggReturn::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BreakEggReturn::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BreakEggReturn::index() const {
  return index_;
}
inline void BreakEggReturn::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// repeated .ChristmasActivity.OneItemData itemList = 3;
inline int BreakEggReturn::itemlist_size() const {
  return itemlist_.size();
}
inline void BreakEggReturn::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::ChristmasActivity::OneItemData& BreakEggReturn::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::ChristmasActivity::OneItemData* BreakEggReturn::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::ChristmasActivity::OneItemData* BreakEggReturn::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::OneItemData >&
BreakEggReturn::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::OneItemData >*
BreakEggReturn::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// ChristmasLoginMsg

// optional int32 loginDay = 1;
inline bool ChristmasLoginMsg::has_loginday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChristmasLoginMsg::set_has_loginday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChristmasLoginMsg::clear_has_loginday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChristmasLoginMsg::clear_loginday() {
  loginday_ = 0;
  clear_has_loginday();
}
inline ::google::protobuf::int32 ChristmasLoginMsg::loginday() const {
  return loginday_;
}
inline void ChristmasLoginMsg::set_loginday(::google::protobuf::int32 value) {
  set_has_loginday();
  loginday_ = value;
}

// optional int32 rewardInfo = 2;
inline bool ChristmasLoginMsg::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChristmasLoginMsg::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChristmasLoginMsg::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChristmasLoginMsg::clear_rewardinfo() {
  rewardinfo_ = 0;
  clear_has_rewardinfo();
}
inline ::google::protobuf::int32 ChristmasLoginMsg::rewardinfo() const {
  return rewardinfo_;
}
inline void ChristmasLoginMsg::set_rewardinfo(::google::protobuf::int32 value) {
  set_has_rewardinfo();
  rewardinfo_ = value;
}

// optional int64 endTime = 3;
inline bool ChristmasLoginMsg::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChristmasLoginMsg::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChristmasLoginMsg::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChristmasLoginMsg::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 ChristmasLoginMsg::endtime() const {
  return endtime_;
}
inline void ChristmasLoginMsg::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// SingleLimitData

// optional int32 id = 1;
inline bool SingleLimitData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleLimitData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleLimitData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleLimitData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SingleLimitData::id() const {
  return id_;
}
inline void SingleLimitData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 counts = 2;
inline bool SingleLimitData::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleLimitData::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleLimitData::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleLimitData::clear_counts() {
  counts_ = 0;
  clear_has_counts();
}
inline ::google::protobuf::int32 SingleLimitData::counts() const {
  return counts_;
}
inline void SingleLimitData::set_counts(::google::protobuf::int32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// ChristmasLimitBuyInfo

// optional int64 reflushTime = 1;
inline bool ChristmasLimitBuyInfo::has_reflushtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChristmasLimitBuyInfo::set_has_reflushtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChristmasLimitBuyInfo::clear_has_reflushtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChristmasLimitBuyInfo::clear_reflushtime() {
  reflushtime_ = GOOGLE_LONGLONG(0);
  clear_has_reflushtime();
}
inline ::google::protobuf::int64 ChristmasLimitBuyInfo::reflushtime() const {
  return reflushtime_;
}
inline void ChristmasLimitBuyInfo::set_reflushtime(::google::protobuf::int64 value) {
  set_has_reflushtime();
  reflushtime_ = value;
}

// repeated .ChristmasActivity.SingleLimitData dataList = 2;
inline int ChristmasLimitBuyInfo::datalist_size() const {
  return datalist_.size();
}
inline void ChristmasLimitBuyInfo::clear_datalist() {
  datalist_.Clear();
}
inline const ::ChristmasActivity::SingleLimitData& ChristmasLimitBuyInfo::datalist(int index) const {
  return datalist_.Get(index);
}
inline ::ChristmasActivity::SingleLimitData* ChristmasLimitBuyInfo::mutable_datalist(int index) {
  return datalist_.Mutable(index);
}
inline ::ChristmasActivity::SingleLimitData* ChristmasLimitBuyInfo::add_datalist() {
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >&
ChristmasLimitBuyInfo::datalist() const {
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >*
ChristmasLimitBuyInfo::mutable_datalist() {
  return &datalist_;
}

// optional int64 endTime = 3;
inline bool ChristmasLimitBuyInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChristmasLimitBuyInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChristmasLimitBuyInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChristmasLimitBuyInfo::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 ChristmasLimitBuyInfo::endtime() const {
  return endtime_;
}
inline void ChristmasLimitBuyInfo::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// LimitBuyReturn

// optional int32 error = 1;
inline bool LimitBuyReturn::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitBuyReturn::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitBuyReturn::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitBuyReturn::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 LimitBuyReturn::error() const {
  return error_;
}
inline void LimitBuyReturn::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .ChristmasActivity.SingleLimitData dataList = 2;
inline int LimitBuyReturn::datalist_size() const {
  return datalist_.size();
}
inline void LimitBuyReturn::clear_datalist() {
  datalist_.Clear();
}
inline const ::ChristmasActivity::SingleLimitData& LimitBuyReturn::datalist(int index) const {
  return datalist_.Get(index);
}
inline ::ChristmasActivity::SingleLimitData* LimitBuyReturn::mutable_datalist(int index) {
  return datalist_.Mutable(index);
}
inline ::ChristmasActivity::SingleLimitData* LimitBuyReturn::add_datalist() {
  return datalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >&
LimitBuyReturn::datalist() const {
  return datalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChristmasActivity::SingleLimitData >*
LimitBuyReturn::mutable_datalist() {
  return &datalist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ChristmasActivity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChristmasActivity_2fChristmasActivity_2eproto__INCLUDED
