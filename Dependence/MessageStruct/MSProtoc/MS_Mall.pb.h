// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_Mall.proto

#ifndef PROTOBUF_MSProtoc_2fMS_5fMall_2eproto__INCLUDED
#define PROTOBUF_MSProtoc_2fMS_5fMall_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MS_Mall {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

class LimitGood;
class Admin_ReqMallOp;
class Admin_RetMallOp;
class PlayerMallInfo;
class ReqMallInfo;
class RetMallInfo;
class ReqBuyLimitGoods;
class RetBuyLimitGoods;
class ReqMallInfoByType;
class RetMallInfoByType;
class MallLimitInfo;
class MallPlayerLimit;
class MallPlayerLimitInfo;

// ===================================================================

class LimitGood : public ::google::protobuf::Message {
 public:
  LimitGood();
  virtual ~LimitGood();

  LimitGood(const LimitGood& from);

  inline LimitGood& operator=(const LimitGood& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LimitGood& default_instance();

  void Swap(LimitGood* other);

  // implements Message ----------------------------------------------

  LimitGood* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LimitGood& from);
  void MergeFrom(const LimitGood& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);

  // optional int32 bindType = 3;
  inline bool has_bindtype() const;
  inline void clear_bindtype();
  static const int kBindTypeFieldNumber = 3;
  inline ::google::protobuf::int32 bindtype() const;
  inline void set_bindtype(::google::protobuf::int32 value);

  // optional int32 formerPrice = 4;
  inline bool has_formerprice() const;
  inline void clear_formerprice();
  static const int kFormerPriceFieldNumber = 4;
  inline ::google::protobuf::int32 formerprice() const;
  inline void set_formerprice(::google::protobuf::int32 value);

  // optional int32 currentPrice = 5;
  inline bool has_currentprice() const;
  inline void clear_currentprice();
  static const int kCurrentPriceFieldNumber = 5;
  inline ::google::protobuf::int32 currentprice() const;
  inline void set_currentprice(::google::protobuf::int32 value);

  // optional int32 moneyType = 6;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 6;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.LimitGood)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_bindtype();
  inline void clear_has_bindtype();
  inline void set_has_formerprice();
  inline void clear_has_formerprice();
  inline void set_has_currentprice();
  inline void clear_has_currentprice();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 bindtype_;
  ::google::protobuf::int32 formerprice_;
  ::google::protobuf::int32 currentprice_;
  ::google::protobuf::int32 moneytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static LimitGood* default_instance_;
};
// -------------------------------------------------------------------

class Admin_ReqMallOp : public ::google::protobuf::Message {
 public:
  Admin_ReqMallOp();
  virtual ~Admin_ReqMallOp();

  Admin_ReqMallOp(const Admin_ReqMallOp& from);

  inline Admin_ReqMallOp& operator=(const Admin_ReqMallOp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_ReqMallOp& default_instance();

  void Swap(Admin_ReqMallOp* other);

  // implements Message ----------------------------------------------

  Admin_ReqMallOp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_ReqMallOp& from);
  void MergeFrom(const Admin_ReqMallOp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 op = 1;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 1;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);

  // optional int64 beginTime = 2;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .MS_Mall.LimitGood itemList = 4;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 4;
  inline const ::MS_Mall::LimitGood& itemlist(int index) const;
  inline ::MS_Mall::LimitGood* mutable_itemlist(int index);
  inline ::MS_Mall::LimitGood* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >*
      mutable_itemlist();

  // optional int32 beginIndex = 5;
  inline bool has_beginindex() const;
  inline void clear_beginindex();
  static const int kBeginIndexFieldNumber = 5;
  inline ::google::protobuf::int32 beginindex() const;
  inline void set_beginindex(::google::protobuf::int32 value);

  // optional int32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.Admin_ReqMallOp)
 private:
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_beginindex();
  inline void clear_has_beginindex();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 op_;
  ::google::protobuf::int32 beginindex_;
  ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood > itemlist_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static Admin_ReqMallOp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_RetMallOp : public ::google::protobuf::Message {
 public:
  Admin_RetMallOp();
  virtual ~Admin_RetMallOp();

  Admin_RetMallOp(const Admin_RetMallOp& from);

  inline Admin_RetMallOp& operator=(const Admin_RetMallOp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_RetMallOp& default_instance();

  void Swap(Admin_RetMallOp* other);

  // implements Message ----------------------------------------------

  Admin_RetMallOp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_RetMallOp& from);
  void MergeFrom(const Admin_RetMallOp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 op = 2;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 2;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .MS_Mall.LimitGood itemList = 5;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 5;
  inline const ::MS_Mall::LimitGood& itemlist(int index) const;
  inline ::MS_Mall::LimitGood* mutable_itemlist(int index);
  inline ::MS_Mall::LimitGood* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >*
      mutable_itemlist();

  // optional int32 totalNumber = 6;
  inline bool has_totalnumber() const;
  inline void clear_totalnumber();
  static const int kTotalNumberFieldNumber = 6;
  inline ::google::protobuf::int32 totalnumber() const;
  inline void set_totalnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.Admin_RetMallOp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_totalnumber();
  inline void clear_has_totalnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 op_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood > itemlist_;
  ::google::protobuf::int32 totalnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static Admin_RetMallOp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerMallInfo : public ::google::protobuf::Message {
 public:
  PlayerMallInfo();
  virtual ~PlayerMallInfo();

  PlayerMallInfo(const PlayerMallInfo& from);

  inline PlayerMallInfo& operator=(const PlayerMallInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMallInfo& default_instance();

  void Swap(PlayerMallInfo* other);

  // implements Message ----------------------------------------------

  PlayerMallInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerMallInfo& from);
  void MergeFrom(const PlayerMallInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 haveBuyCount = 1;
  inline bool has_havebuycount() const;
  inline void clear_havebuycount();
  static const int kHaveBuyCountFieldNumber = 1;
  inline ::google::protobuf::int32 havebuycount() const;
  inline void set_havebuycount(::google::protobuf::int32 value);

  // required .MS_Mall.LimitGood itemInfo = 2;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 2;
  inline const ::MS_Mall::LimitGood& iteminfo() const;
  inline ::MS_Mall::LimitGood* mutable_iteminfo();
  inline ::MS_Mall::LimitGood* release_iteminfo();
  inline void set_allocated_iteminfo(::MS_Mall::LimitGood* iteminfo);

  // @@protoc_insertion_point(class_scope:MS_Mall.PlayerMallInfo)
 private:
  inline void set_has_havebuycount();
  inline void clear_has_havebuycount();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MS_Mall::LimitGood* iteminfo_;
  ::google::protobuf::int32 havebuycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static PlayerMallInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqMallInfo : public ::google::protobuf::Message {
 public:
  ReqMallInfo();
  virtual ~ReqMallInfo();

  ReqMallInfo(const ReqMallInfo& from);

  inline ReqMallInfo& operator=(const ReqMallInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMallInfo& default_instance();

  void Swap(ReqMallInfo* other);

  // implements Message ----------------------------------------------

  ReqMallInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMallInfo& from);
  void MergeFrom(const ReqMallInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 beginIndex = 1;
  inline bool has_beginindex() const;
  inline void clear_beginindex();
  static const int kBeginIndexFieldNumber = 1;
  inline ::google::protobuf::int32 beginindex() const;
  inline void set_beginindex(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.ReqMallInfo)
 private:
  inline void set_has_beginindex();
  inline void clear_has_beginindex();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 beginindex_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static ReqMallInfo* default_instance_;
};
// -------------------------------------------------------------------

class RetMallInfo : public ::google::protobuf::Message {
 public:
  RetMallInfo();
  virtual ~RetMallInfo();

  RetMallInfo(const RetMallInfo& from);

  inline RetMallInfo& operator=(const RetMallInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetMallInfo& default_instance();

  void Swap(RetMallInfo* other);

  // implements Message ----------------------------------------------

  RetMallInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetMallInfo& from);
  void MergeFrom(const RetMallInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 beginTime = 2;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .MS_Mall.PlayerMallInfo itemList = 4;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 4;
  inline const ::MS_Mall::PlayerMallInfo& itemlist(int index) const;
  inline ::MS_Mall::PlayerMallInfo* mutable_itemlist(int index);
  inline ::MS_Mall::PlayerMallInfo* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::PlayerMallInfo >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::PlayerMallInfo >*
      mutable_itemlist();

  // optional int32 totalCount = 5;
  inline bool has_totalcount() const;
  inline void clear_totalcount();
  static const int kTotalCountFieldNumber = 5;
  inline ::google::protobuf::int32 totalcount() const;
  inline void set_totalcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.RetMallInfo)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_totalcount();
  inline void clear_has_totalcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 totalcount_;
  ::google::protobuf::RepeatedPtrField< ::MS_Mall::PlayerMallInfo > itemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static RetMallInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuyLimitGoods : public ::google::protobuf::Message {
 public:
  ReqBuyLimitGoods();
  virtual ~ReqBuyLimitGoods();

  ReqBuyLimitGoods(const ReqBuyLimitGoods& from);

  inline ReqBuyLimitGoods& operator=(const ReqBuyLimitGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuyLimitGoods& default_instance();

  void Swap(ReqBuyLimitGoods* other);

  // implements Message ----------------------------------------------

  ReqBuyLimitGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuyLimitGoods& from);
  void MergeFrom(const ReqBuyLimitGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 buyType = 3;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuyTypeFieldNumber = 3;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // optional int32 currentPrice = 4;
  inline bool has_currentprice() const;
  inline void clear_currentprice();
  static const int kCurrentPriceFieldNumber = 4;
  inline ::google::protobuf::int32 currentprice() const;
  inline void set_currentprice(::google::protobuf::int32 value);

  // optional int32 bindType = 5;
  inline bool has_bindtype() const;
  inline void clear_bindtype();
  static const int kBindTypeFieldNumber = 5;
  inline ::google::protobuf::int32 bindtype() const;
  inline void set_bindtype(::google::protobuf::int32 value);

  // optional int64 charID = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 6;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 moneyType = 7;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 7;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.ReqBuyLimitGoods)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_buytype();
  inline void clear_has_buytype();
  inline void set_has_currentprice();
  inline void clear_has_currentprice();
  inline void set_has_bindtype();
  inline void clear_has_bindtype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 buytype_;
  ::google::protobuf::int32 currentprice_;
  ::google::protobuf::int32 bindtype_;
  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 moneytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static ReqBuyLimitGoods* default_instance_;
};
// -------------------------------------------------------------------

class RetBuyLimitGoods : public ::google::protobuf::Message {
 public:
  RetBuyLimitGoods();
  virtual ~RetBuyLimitGoods();

  RetBuyLimitGoods(const RetBuyLimitGoods& from);

  inline RetBuyLimitGoods& operator=(const RetBuyLimitGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetBuyLimitGoods& default_instance();

  void Swap(RetBuyLimitGoods* other);

  // implements Message ----------------------------------------------

  RetBuyLimitGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetBuyLimitGoods& from);
  void MergeFrom(const RetBuyLimitGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int64 charID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 buyType = 5;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuyTypeFieldNumber = 5;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.RetBuyLimitGoods)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_buytype();
  inline void clear_has_buytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 buytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static RetBuyLimitGoods* default_instance_;
};
// -------------------------------------------------------------------

class ReqMallInfoByType : public ::google::protobuf::Message {
 public:
  ReqMallInfoByType();
  virtual ~ReqMallInfoByType();

  ReqMallInfoByType(const ReqMallInfoByType& from);

  inline ReqMallInfoByType& operator=(const ReqMallInfoByType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMallInfoByType& default_instance();

  void Swap(ReqMallInfoByType* other);

  // implements Message ----------------------------------------------

  ReqMallInfoByType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMallInfoByType& from);
  void MergeFrom(const ReqMallInfoByType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buytype = 1;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuytypeFieldNumber = 1;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.ReqMallInfoByType)
 private:
  inline void set_has_buytype();
  inline void clear_has_buytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static ReqMallInfoByType* default_instance_;
};
// -------------------------------------------------------------------

class RetMallInfoByType : public ::google::protobuf::Message {
 public:
  RetMallInfoByType();
  virtual ~RetMallInfoByType();

  RetMallInfoByType(const RetMallInfoByType& from);

  inline RetMallInfoByType& operator=(const RetMallInfoByType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetMallInfoByType& default_instance();

  void Swap(RetMallInfoByType* other);

  // implements Message ----------------------------------------------

  RetMallInfoByType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetMallInfoByType& from);
  void MergeFrom(const RetMallInfoByType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated .MS_Mall.MallPlayerLimit limitList = 2;
  inline int limitlist_size() const;
  inline void clear_limitlist();
  static const int kLimitListFieldNumber = 2;
  inline const ::MS_Mall::MallPlayerLimit& limitlist(int index) const;
  inline ::MS_Mall::MallPlayerLimit* mutable_limitlist(int index);
  inline ::MS_Mall::MallPlayerLimit* add_limitlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >&
      limitlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >*
      mutable_limitlist();

  // required int32 buytype = 3;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuytypeFieldNumber = 3;
  inline ::google::protobuf::int32 buytype() const;
  inline void set_buytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.RetMallInfoByType)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_buytype();
  inline void clear_has_buytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit > limitlist_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 buytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static RetMallInfoByType* default_instance_;
};
// -------------------------------------------------------------------

class MallLimitInfo : public ::google::protobuf::Message {
 public:
  MallLimitInfo();
  virtual ~MallLimitInfo();

  MallLimitInfo(const MallLimitInfo& from);

  inline MallLimitInfo& operator=(const MallLimitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallLimitInfo& default_instance();

  void Swap(MallLimitInfo* other);

  // implements Message ----------------------------------------------

  MallLimitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallLimitInfo& from);
  void MergeFrom(const MallLimitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 beginTime = 1;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 1;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // required int64 endTime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .MS_Mall.LimitGood itemList = 3;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 3;
  inline const ::MS_Mall::LimitGood& itemlist(int index) const;
  inline ::MS_Mall::LimitGood* mutable_itemlist(int index);
  inline ::MS_Mall::LimitGood* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:MS_Mall.MallLimitInfo)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood > itemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static MallLimitInfo* default_instance_;
};
// -------------------------------------------------------------------

class MallPlayerLimit : public ::google::protobuf::Message {
 public:
  MallPlayerLimit();
  virtual ~MallPlayerLimit();

  MallPlayerLimit(const MallPlayerLimit& from);

  inline MallPlayerLimit& operator=(const MallPlayerLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallPlayerLimit& default_instance();

  void Swap(MallPlayerLimit* other);

  // implements Message ----------------------------------------------

  MallPlayerLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallPlayerLimit& from);
  void MergeFrom(const MallPlayerLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // required int32 buyCount = 2;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuyCountFieldNumber = 2;
  inline ::google::protobuf::int32 buycount() const;
  inline void set_buycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MS_Mall.MallPlayerLimit)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_buycount();
  inline void clear_has_buycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 buycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static MallPlayerLimit* default_instance_;
};
// -------------------------------------------------------------------

class MallPlayerLimitInfo : public ::google::protobuf::Message {
 public:
  MallPlayerLimitInfo();
  virtual ~MallPlayerLimitInfo();

  MallPlayerLimitInfo(const MallPlayerLimitInfo& from);

  inline MallPlayerLimitInfo& operator=(const MallPlayerLimitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MallPlayerLimitInfo& default_instance();

  void Swap(MallPlayerLimitInfo* other);

  // implements Message ----------------------------------------------

  MallPlayerLimitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MallPlayerLimitInfo& from);
  void MergeFrom(const MallPlayerLimitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MS_Mall.MallPlayerLimit limitList = 2;
  inline int limitlist_size() const;
  inline void clear_limitlist();
  static const int kLimitListFieldNumber = 2;
  inline const ::MS_Mall::MallPlayerLimit& limitlist(int index) const;
  inline ::MS_Mall::MallPlayerLimit* mutable_limitlist(int index);
  inline ::MS_Mall::MallPlayerLimit* add_limitlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >&
      limitlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >*
      mutable_limitlist();

  // @@protoc_insertion_point(class_scope:MS_Mall.MallPlayerLimitInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit > limitlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fMall_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fMall_2eproto();

  void InitAsDefaultInstance();
  static MallPlayerLimitInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// LimitGood

// required int64 itemId = 1;
inline bool LimitGood::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitGood::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LimitGood::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LimitGood::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 LimitGood::itemid() const {
  return itemid_;
}
inline void LimitGood::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 limit = 2;
inline bool LimitGood::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitGood::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LimitGood::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LimitGood::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 LimitGood::limit() const {
  return limit_;
}
inline void LimitGood::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
}

// optional int32 bindType = 3;
inline bool LimitGood::has_bindtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LimitGood::set_has_bindtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LimitGood::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LimitGood::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 LimitGood::bindtype() const {
  return bindtype_;
}
inline void LimitGood::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
}

// optional int32 formerPrice = 4;
inline bool LimitGood::has_formerprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LimitGood::set_has_formerprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LimitGood::clear_has_formerprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LimitGood::clear_formerprice() {
  formerprice_ = 0;
  clear_has_formerprice();
}
inline ::google::protobuf::int32 LimitGood::formerprice() const {
  return formerprice_;
}
inline void LimitGood::set_formerprice(::google::protobuf::int32 value) {
  set_has_formerprice();
  formerprice_ = value;
}

// optional int32 currentPrice = 5;
inline bool LimitGood::has_currentprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LimitGood::set_has_currentprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LimitGood::clear_has_currentprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LimitGood::clear_currentprice() {
  currentprice_ = 0;
  clear_has_currentprice();
}
inline ::google::protobuf::int32 LimitGood::currentprice() const {
  return currentprice_;
}
inline void LimitGood::set_currentprice(::google::protobuf::int32 value) {
  set_has_currentprice();
  currentprice_ = value;
}

// optional int32 moneyType = 6;
inline bool LimitGood::has_moneytype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LimitGood::set_has_moneytype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LimitGood::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LimitGood::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 LimitGood::moneytype() const {
  return moneytype_;
}
inline void LimitGood::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// -------------------------------------------------------------------

// Admin_ReqMallOp

// required int32 op = 1;
inline bool Admin_ReqMallOp::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_ReqMallOp::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_ReqMallOp::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_ReqMallOp::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 Admin_ReqMallOp::op() const {
  return op_;
}
inline void Admin_ReqMallOp::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// optional int64 beginTime = 2;
inline bool Admin_ReqMallOp::has_begintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_ReqMallOp::set_has_begintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_ReqMallOp::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_ReqMallOp::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 Admin_ReqMallOp::begintime() const {
  return begintime_;
}
inline void Admin_ReqMallOp::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 3;
inline bool Admin_ReqMallOp::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_ReqMallOp::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_ReqMallOp::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_ReqMallOp::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 Admin_ReqMallOp::endtime() const {
  return endtime_;
}
inline void Admin_ReqMallOp::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .MS_Mall.LimitGood itemList = 4;
inline int Admin_ReqMallOp::itemlist_size() const {
  return itemlist_.size();
}
inline void Admin_ReqMallOp::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::MS_Mall::LimitGood& Admin_ReqMallOp::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::MS_Mall::LimitGood* Admin_ReqMallOp::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::MS_Mall::LimitGood* Admin_ReqMallOp::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >&
Admin_ReqMallOp::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >*
Admin_ReqMallOp::mutable_itemlist() {
  return &itemlist_;
}

// optional int32 beginIndex = 5;
inline bool Admin_ReqMallOp::has_beginindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_ReqMallOp::set_has_beginindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_ReqMallOp::clear_has_beginindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_ReqMallOp::clear_beginindex() {
  beginindex_ = 0;
  clear_has_beginindex();
}
inline ::google::protobuf::int32 Admin_ReqMallOp::beginindex() const {
  return beginindex_;
}
inline void Admin_ReqMallOp::set_beginindex(::google::protobuf::int32 value) {
  set_has_beginindex();
  beginindex_ = value;
}

// optional int32 count = 6;
inline bool Admin_ReqMallOp::has_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_ReqMallOp::set_has_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_ReqMallOp::clear_has_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_ReqMallOp::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Admin_ReqMallOp::count() const {
  return count_;
}
inline void Admin_ReqMallOp::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// Admin_RetMallOp

// required int32 ret = 1;
inline bool Admin_RetMallOp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_RetMallOp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_RetMallOp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_RetMallOp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Admin_RetMallOp::ret() const {
  return ret_;
}
inline void Admin_RetMallOp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 op = 2;
inline bool Admin_RetMallOp::has_op() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_RetMallOp::set_has_op() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_RetMallOp::clear_has_op() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_RetMallOp::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 Admin_RetMallOp::op() const {
  return op_;
}
inline void Admin_RetMallOp::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// optional int64 beginTime = 3;
inline bool Admin_RetMallOp::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_RetMallOp::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_RetMallOp::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_RetMallOp::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 Admin_RetMallOp::begintime() const {
  return begintime_;
}
inline void Admin_RetMallOp::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool Admin_RetMallOp::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_RetMallOp::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_RetMallOp::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_RetMallOp::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 Admin_RetMallOp::endtime() const {
  return endtime_;
}
inline void Admin_RetMallOp::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .MS_Mall.LimitGood itemList = 5;
inline int Admin_RetMallOp::itemlist_size() const {
  return itemlist_.size();
}
inline void Admin_RetMallOp::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::MS_Mall::LimitGood& Admin_RetMallOp::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::MS_Mall::LimitGood* Admin_RetMallOp::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::MS_Mall::LimitGood* Admin_RetMallOp::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >&
Admin_RetMallOp::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >*
Admin_RetMallOp::mutable_itemlist() {
  return &itemlist_;
}

// optional int32 totalNumber = 6;
inline bool Admin_RetMallOp::has_totalnumber() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_RetMallOp::set_has_totalnumber() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_RetMallOp::clear_has_totalnumber() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_RetMallOp::clear_totalnumber() {
  totalnumber_ = 0;
  clear_has_totalnumber();
}
inline ::google::protobuf::int32 Admin_RetMallOp::totalnumber() const {
  return totalnumber_;
}
inline void Admin_RetMallOp::set_totalnumber(::google::protobuf::int32 value) {
  set_has_totalnumber();
  totalnumber_ = value;
}

// -------------------------------------------------------------------

// PlayerMallInfo

// required int32 haveBuyCount = 1;
inline bool PlayerMallInfo::has_havebuycount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerMallInfo::set_has_havebuycount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerMallInfo::clear_has_havebuycount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerMallInfo::clear_havebuycount() {
  havebuycount_ = 0;
  clear_has_havebuycount();
}
inline ::google::protobuf::int32 PlayerMallInfo::havebuycount() const {
  return havebuycount_;
}
inline void PlayerMallInfo::set_havebuycount(::google::protobuf::int32 value) {
  set_has_havebuycount();
  havebuycount_ = value;
}

// required .MS_Mall.LimitGood itemInfo = 2;
inline bool PlayerMallInfo::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerMallInfo::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerMallInfo::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerMallInfo::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::MS_Mall::LimitGood::Clear();
  clear_has_iteminfo();
}
inline const ::MS_Mall::LimitGood& PlayerMallInfo::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::MS_Mall::LimitGood* PlayerMallInfo::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::MS_Mall::LimitGood;
  return iteminfo_;
}
inline ::MS_Mall::LimitGood* PlayerMallInfo::release_iteminfo() {
  clear_has_iteminfo();
  ::MS_Mall::LimitGood* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void PlayerMallInfo::set_allocated_iteminfo(::MS_Mall::LimitGood* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// -------------------------------------------------------------------

// ReqMallInfo

// required int32 beginIndex = 1;
inline bool ReqMallInfo::has_beginindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMallInfo::set_has_beginindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMallInfo::clear_has_beginindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMallInfo::clear_beginindex() {
  beginindex_ = 0;
  clear_has_beginindex();
}
inline ::google::protobuf::int32 ReqMallInfo::beginindex() const {
  return beginindex_;
}
inline void ReqMallInfo::set_beginindex(::google::protobuf::int32 value) {
  set_has_beginindex();
  beginindex_ = value;
}

// required int32 count = 2;
inline bool ReqMallInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMallInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMallInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMallInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ReqMallInfo::count() const {
  return count_;
}
inline void ReqMallInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// RetMallInfo

// required int32 ret = 1;
inline bool RetMallInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetMallInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetMallInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetMallInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetMallInfo::ret() const {
  return ret_;
}
inline void RetMallInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 beginTime = 2;
inline bool RetMallInfo::has_begintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetMallInfo::set_has_begintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetMallInfo::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetMallInfo::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 RetMallInfo::begintime() const {
  return begintime_;
}
inline void RetMallInfo::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 3;
inline bool RetMallInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetMallInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetMallInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetMallInfo::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 RetMallInfo::endtime() const {
  return endtime_;
}
inline void RetMallInfo::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .MS_Mall.PlayerMallInfo itemList = 4;
inline int RetMallInfo::itemlist_size() const {
  return itemlist_.size();
}
inline void RetMallInfo::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::MS_Mall::PlayerMallInfo& RetMallInfo::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::MS_Mall::PlayerMallInfo* RetMallInfo::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::MS_Mall::PlayerMallInfo* RetMallInfo::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::PlayerMallInfo >&
RetMallInfo::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::PlayerMallInfo >*
RetMallInfo::mutable_itemlist() {
  return &itemlist_;
}

// optional int32 totalCount = 5;
inline bool RetMallInfo::has_totalcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RetMallInfo::set_has_totalcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RetMallInfo::clear_has_totalcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RetMallInfo::clear_totalcount() {
  totalcount_ = 0;
  clear_has_totalcount();
}
inline ::google::protobuf::int32 RetMallInfo::totalcount() const {
  return totalcount_;
}
inline void RetMallInfo::set_totalcount(::google::protobuf::int32 value) {
  set_has_totalcount();
  totalcount_ = value;
}

// -------------------------------------------------------------------

// ReqBuyLimitGoods

// required int64 itemId = 1;
inline bool ReqBuyLimitGoods::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuyLimitGoods::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuyLimitGoods::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuyLimitGoods::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 ReqBuyLimitGoods::itemid() const {
  return itemid_;
}
inline void ReqBuyLimitGoods::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 count = 2;
inline bool ReqBuyLimitGoods::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBuyLimitGoods::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBuyLimitGoods::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBuyLimitGoods::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ReqBuyLimitGoods::count() const {
  return count_;
}
inline void ReqBuyLimitGoods::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// required int32 buyType = 3;
inline bool ReqBuyLimitGoods::has_buytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBuyLimitGoods::set_has_buytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBuyLimitGoods::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBuyLimitGoods::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 ReqBuyLimitGoods::buytype() const {
  return buytype_;
}
inline void ReqBuyLimitGoods::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
}

// optional int32 currentPrice = 4;
inline bool ReqBuyLimitGoods::has_currentprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqBuyLimitGoods::set_has_currentprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqBuyLimitGoods::clear_has_currentprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqBuyLimitGoods::clear_currentprice() {
  currentprice_ = 0;
  clear_has_currentprice();
}
inline ::google::protobuf::int32 ReqBuyLimitGoods::currentprice() const {
  return currentprice_;
}
inline void ReqBuyLimitGoods::set_currentprice(::google::protobuf::int32 value) {
  set_has_currentprice();
  currentprice_ = value;
}

// optional int32 bindType = 5;
inline bool ReqBuyLimitGoods::has_bindtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqBuyLimitGoods::set_has_bindtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqBuyLimitGoods::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqBuyLimitGoods::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 ReqBuyLimitGoods::bindtype() const {
  return bindtype_;
}
inline void ReqBuyLimitGoods::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
}

// optional int64 charID = 6;
inline bool ReqBuyLimitGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqBuyLimitGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqBuyLimitGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqBuyLimitGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqBuyLimitGoods::charid() const {
  return charid_;
}
inline void ReqBuyLimitGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 moneyType = 7;
inline bool ReqBuyLimitGoods::has_moneytype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqBuyLimitGoods::set_has_moneytype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqBuyLimitGoods::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqBuyLimitGoods::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 ReqBuyLimitGoods::moneytype() const {
  return moneytype_;
}
inline void ReqBuyLimitGoods::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// -------------------------------------------------------------------

// RetBuyLimitGoods

// required int32 ret = 1;
inline bool RetBuyLimitGoods::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetBuyLimitGoods::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetBuyLimitGoods::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetBuyLimitGoods::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetBuyLimitGoods::ret() const {
  return ret_;
}
inline void RetBuyLimitGoods::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int64 itemId = 2;
inline bool RetBuyLimitGoods::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetBuyLimitGoods::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetBuyLimitGoods::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetBuyLimitGoods::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 RetBuyLimitGoods::itemid() const {
  return itemid_;
}
inline void RetBuyLimitGoods::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 count = 3;
inline bool RetBuyLimitGoods::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetBuyLimitGoods::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetBuyLimitGoods::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetBuyLimitGoods::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 RetBuyLimitGoods::count() const {
  return count_;
}
inline void RetBuyLimitGoods::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int64 charID = 4;
inline bool RetBuyLimitGoods::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetBuyLimitGoods::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetBuyLimitGoods::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetBuyLimitGoods::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 RetBuyLimitGoods::charid() const {
  return charid_;
}
inline void RetBuyLimitGoods::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 buyType = 5;
inline bool RetBuyLimitGoods::has_buytype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RetBuyLimitGoods::set_has_buytype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RetBuyLimitGoods::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RetBuyLimitGoods::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 RetBuyLimitGoods::buytype() const {
  return buytype_;
}
inline void RetBuyLimitGoods::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
}

// -------------------------------------------------------------------

// ReqMallInfoByType

// required int32 buytype = 1;
inline bool ReqMallInfoByType::has_buytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMallInfoByType::set_has_buytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMallInfoByType::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMallInfoByType::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 ReqMallInfoByType::buytype() const {
  return buytype_;
}
inline void ReqMallInfoByType::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
}

// -------------------------------------------------------------------

// RetMallInfoByType

// required int32 ret = 1;
inline bool RetMallInfoByType::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetMallInfoByType::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetMallInfoByType::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetMallInfoByType::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetMallInfoByType::ret() const {
  return ret_;
}
inline void RetMallInfoByType::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .MS_Mall.MallPlayerLimit limitList = 2;
inline int RetMallInfoByType::limitlist_size() const {
  return limitlist_.size();
}
inline void RetMallInfoByType::clear_limitlist() {
  limitlist_.Clear();
}
inline const ::MS_Mall::MallPlayerLimit& RetMallInfoByType::limitlist(int index) const {
  return limitlist_.Get(index);
}
inline ::MS_Mall::MallPlayerLimit* RetMallInfoByType::mutable_limitlist(int index) {
  return limitlist_.Mutable(index);
}
inline ::MS_Mall::MallPlayerLimit* RetMallInfoByType::add_limitlist() {
  return limitlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >&
RetMallInfoByType::limitlist() const {
  return limitlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >*
RetMallInfoByType::mutable_limitlist() {
  return &limitlist_;
}

// required int32 buytype = 3;
inline bool RetMallInfoByType::has_buytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetMallInfoByType::set_has_buytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetMallInfoByType::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetMallInfoByType::clear_buytype() {
  buytype_ = 0;
  clear_has_buytype();
}
inline ::google::protobuf::int32 RetMallInfoByType::buytype() const {
  return buytype_;
}
inline void RetMallInfoByType::set_buytype(::google::protobuf::int32 value) {
  set_has_buytype();
  buytype_ = value;
}

// -------------------------------------------------------------------

// MallLimitInfo

// required int64 beginTime = 1;
inline bool MallLimitInfo::has_begintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallLimitInfo::set_has_begintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallLimitInfo::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallLimitInfo::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 MallLimitInfo::begintime() const {
  return begintime_;
}
inline void MallLimitInfo::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// required int64 endTime = 2;
inline bool MallLimitInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MallLimitInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MallLimitInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MallLimitInfo::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 MallLimitInfo::endtime() const {
  return endtime_;
}
inline void MallLimitInfo::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .MS_Mall.LimitGood itemList = 3;
inline int MallLimitInfo::itemlist_size() const {
  return itemlist_.size();
}
inline void MallLimitInfo::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::MS_Mall::LimitGood& MallLimitInfo::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::MS_Mall::LimitGood* MallLimitInfo::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::MS_Mall::LimitGood* MallLimitInfo::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >&
MallLimitInfo::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::LimitGood >*
MallLimitInfo::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// MallPlayerLimit

// required int64 itemID = 1;
inline bool MallPlayerLimit::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MallPlayerLimit::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MallPlayerLimit::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MallPlayerLimit::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 MallPlayerLimit::itemid() const {
  return itemid_;
}
inline void MallPlayerLimit::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 buyCount = 2;
inline bool MallPlayerLimit::has_buycount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MallPlayerLimit::set_has_buycount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MallPlayerLimit::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MallPlayerLimit::clear_buycount() {
  buycount_ = 0;
  clear_has_buycount();
}
inline ::google::protobuf::int32 MallPlayerLimit::buycount() const {
  return buycount_;
}
inline void MallPlayerLimit::set_buycount(::google::protobuf::int32 value) {
  set_has_buycount();
  buycount_ = value;
}

// -------------------------------------------------------------------

// MallPlayerLimitInfo

// repeated .MS_Mall.MallPlayerLimit limitList = 2;
inline int MallPlayerLimitInfo::limitlist_size() const {
  return limitlist_.size();
}
inline void MallPlayerLimitInfo::clear_limitlist() {
  limitlist_.Clear();
}
inline const ::MS_Mall::MallPlayerLimit& MallPlayerLimitInfo::limitlist(int index) const {
  return limitlist_.Get(index);
}
inline ::MS_Mall::MallPlayerLimit* MallPlayerLimitInfo::mutable_limitlist(int index) {
  return limitlist_.Mutable(index);
}
inline ::MS_Mall::MallPlayerLimit* MallPlayerLimitInfo::add_limitlist() {
  return limitlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >&
MallPlayerLimitInfo::limitlist() const {
  return limitlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MS_Mall::MallPlayerLimit >*
MallPlayerLimitInfo::mutable_limitlist() {
  return &limitlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MS_Mall

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSProtoc_2fMS_5fMall_2eproto__INCLUDED
