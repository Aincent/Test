// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/EquipMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CharLogin/EquipMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Equip {

namespace {

const ::google::protobuf::Descriptor* ClientReqWearEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqWearEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientReqRecoverEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientReqRecoverEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* GTReqGMWearEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GTReqGMWearEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* GTReqCMRecoverEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GTReqCMRecoverEquip_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CharLogin_2fEquipMessage_2eproto() {
  protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CharLogin/EquipMessage.proto");
  GOOGLE_CHECK(file != NULL);
  ClientReqWearEquip_descriptor_ = file->message_type(0);
  static const int ClientReqWearEquip_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqWearEquip, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqWearEquip, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqWearEquip, goodsid_),
  };
  ClientReqWearEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqWearEquip_descriptor_,
      ClientReqWearEquip::default_instance_,
      ClientReqWearEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqWearEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqWearEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqWearEquip));
  ClientReqRecoverEquip_descriptor_ = file->message_type(1);
  static const int ClientReqRecoverEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRecoverEquip, pos_),
  };
  ClientReqRecoverEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientReqRecoverEquip_descriptor_,
      ClientReqRecoverEquip::default_instance_,
      ClientReqRecoverEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRecoverEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReqRecoverEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientReqRecoverEquip));
  GTReqGMWearEquip_descriptor_ = file->message_type(2);
  static const int GTReqGMWearEquip_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMWearEquip, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMWearEquip, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMWearEquip, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMWearEquip, goodsid_),
  };
  GTReqGMWearEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GTReqGMWearEquip_descriptor_,
      GTReqGMWearEquip::default_instance_,
      GTReqGMWearEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMWearEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqGMWearEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GTReqGMWearEquip));
  GTReqCMRecoverEquip_descriptor_ = file->message_type(3);
  static const int GTReqCMRecoverEquip_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqCMRecoverEquip, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqCMRecoverEquip, pos_),
  };
  GTReqCMRecoverEquip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GTReqCMRecoverEquip_descriptor_,
      GTReqCMRecoverEquip::default_instance_,
      GTReqCMRecoverEquip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqCMRecoverEquip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GTReqCMRecoverEquip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GTReqCMRecoverEquip));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CharLogin_2fEquipMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqWearEquip_descriptor_, &ClientReqWearEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientReqRecoverEquip_descriptor_, &ClientReqRecoverEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GTReqGMWearEquip_descriptor_, &GTReqGMWearEquip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GTReqCMRecoverEquip_descriptor_, &GTReqCMRecoverEquip::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CharLogin_2fEquipMessage_2eproto() {
  delete ClientReqWearEquip::default_instance_;
  delete ClientReqWearEquip_reflection_;
  delete ClientReqRecoverEquip::default_instance_;
  delete ClientReqRecoverEquip_reflection_;
  delete GTReqGMWearEquip::default_instance_;
  delete GTReqGMWearEquip_reflection_;
  delete GTReqCMRecoverEquip::default_instance_;
  delete GTReqCMRecoverEquip_reflection_;
}

void protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::CharLogin::protobuf_AddDesc_CharLogin_2fCharBaseInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034CharLogin/EquipMessage.proto\022\005Equip\032\034C"
    "harLogin/CharBaseInfo.proto\"@\n\022ClientReq"
    "WearEquip\022\014\n\004type\030\001 \002(\005\022\013\n\003pos\030\002 \002(\005\022\017\n\007"
    "goodsid\030\003 \002(\005\"$\n\025ClientReqRecoverEquip\022\013"
    "\n\003pos\030\001 \002(\005\"N\n\020GTReqGMWearEquip\022\016\n\006chari"
    "d\030\001 \002(\003\022\014\n\004type\030\002 \002(\005\022\013\n\003pos\030\003 \002(\005\022\017\n\007go"
    "odsid\030\004 \002(\005\"2\n\023GTReqCMRecoverEquip\022\016\n\006ch"
    "arid\030\001 \002(\003\022\013\n\003pos\030\002 \002(\005", 303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CharLogin/EquipMessage.proto", &protobuf_RegisterTypes);
  ClientReqWearEquip::default_instance_ = new ClientReqWearEquip();
  ClientReqRecoverEquip::default_instance_ = new ClientReqRecoverEquip();
  GTReqGMWearEquip::default_instance_ = new GTReqGMWearEquip();
  GTReqCMRecoverEquip::default_instance_ = new GTReqCMRecoverEquip();
  ClientReqWearEquip::default_instance_->InitAsDefaultInstance();
  ClientReqRecoverEquip::default_instance_->InitAsDefaultInstance();
  GTReqGMWearEquip::default_instance_->InitAsDefaultInstance();
  GTReqCMRecoverEquip::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CharLogin_2fEquipMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CharLogin_2fEquipMessage_2eproto {
  StaticDescriptorInitializer_CharLogin_2fEquipMessage_2eproto() {
    protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto();
  }
} static_descriptor_initializer_CharLogin_2fEquipMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ClientReqWearEquip::kTypeFieldNumber;
const int ClientReqWearEquip::kPosFieldNumber;
const int ClientReqWearEquip::kGoodsidFieldNumber;
#endif  // !_MSC_VER

ClientReqWearEquip::ClientReqWearEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqWearEquip::InitAsDefaultInstance() {
}

ClientReqWearEquip::ClientReqWearEquip(const ClientReqWearEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqWearEquip::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  pos_ = 0;
  goodsid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqWearEquip::~ClientReqWearEquip() {
  SharedDtor();
}

void ClientReqWearEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqWearEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqWearEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqWearEquip_descriptor_;
}

const ClientReqWearEquip& ClientReqWearEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto();
  return *default_instance_;
}

ClientReqWearEquip* ClientReqWearEquip::default_instance_ = NULL;

ClientReqWearEquip* ClientReqWearEquip::New() const {
  return new ClientReqWearEquip;
}

void ClientReqWearEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    pos_ = 0;
    goodsid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqWearEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_goodsid;
        break;
      }

      // required int32 goodsid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqWearEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // required int32 goodsid = 3;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->goodsid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqWearEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // required int32 goodsid = 3;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->goodsid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqWearEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required int32 goodsid = 3;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqWearEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqWearEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqWearEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqWearEquip::MergeFrom(const ClientReqWearEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqWearEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqWearEquip::CopyFrom(const ClientReqWearEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqWearEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ClientReqWearEquip::Swap(ClientReqWearEquip* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(pos_, other->pos_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqWearEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqWearEquip_descriptor_;
  metadata.reflection = ClientReqWearEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientReqRecoverEquip::kPosFieldNumber;
#endif  // !_MSC_VER

ClientReqRecoverEquip::ClientReqRecoverEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientReqRecoverEquip::InitAsDefaultInstance() {
}

ClientReqRecoverEquip::ClientReqRecoverEquip(const ClientReqRecoverEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientReqRecoverEquip::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientReqRecoverEquip::~ClientReqRecoverEquip() {
  SharedDtor();
}

void ClientReqRecoverEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientReqRecoverEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReqRecoverEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientReqRecoverEquip_descriptor_;
}

const ClientReqRecoverEquip& ClientReqRecoverEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto();
  return *default_instance_;
}

ClientReqRecoverEquip* ClientReqRecoverEquip::default_instance_ = NULL;

ClientReqRecoverEquip* ClientReqRecoverEquip::New() const {
  return new ClientReqRecoverEquip;
}

void ClientReqRecoverEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientReqRecoverEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 pos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientReqRecoverEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientReqRecoverEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientReqRecoverEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReqRecoverEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientReqRecoverEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientReqRecoverEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientReqRecoverEquip::MergeFrom(const ClientReqRecoverEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientReqRecoverEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReqRecoverEquip::CopyFrom(const ClientReqRecoverEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReqRecoverEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ClientReqRecoverEquip::Swap(ClientReqRecoverEquip* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientReqRecoverEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientReqRecoverEquip_descriptor_;
  metadata.reflection = ClientReqRecoverEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GTReqGMWearEquip::kCharidFieldNumber;
const int GTReqGMWearEquip::kTypeFieldNumber;
const int GTReqGMWearEquip::kPosFieldNumber;
const int GTReqGMWearEquip::kGoodsidFieldNumber;
#endif  // !_MSC_VER

GTReqGMWearEquip::GTReqGMWearEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GTReqGMWearEquip::InitAsDefaultInstance() {
}

GTReqGMWearEquip::GTReqGMWearEquip(const GTReqGMWearEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GTReqGMWearEquip::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  pos_ = 0;
  goodsid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GTReqGMWearEquip::~GTReqGMWearEquip() {
  SharedDtor();
}

void GTReqGMWearEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GTReqGMWearEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GTReqGMWearEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GTReqGMWearEquip_descriptor_;
}

const GTReqGMWearEquip& GTReqGMWearEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto();
  return *default_instance_;
}

GTReqGMWearEquip* GTReqGMWearEquip::default_instance_ = NULL;

GTReqGMWearEquip* GTReqGMWearEquip::New() const {
  return new GTReqGMWearEquip;
}

void GTReqGMWearEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    pos_ = 0;
    goodsid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GTReqGMWearEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // required int32 pos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_goodsid;
        break;
      }

      // required int32 goodsid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GTReqGMWearEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required int32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  // required int32 goodsid = 4;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->goodsid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GTReqGMWearEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required int32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  // required int32 goodsid = 4;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->goodsid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GTReqGMWearEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required int32 goodsid = 4;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GTReqGMWearEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GTReqGMWearEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GTReqGMWearEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GTReqGMWearEquip::MergeFrom(const GTReqGMWearEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GTReqGMWearEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GTReqGMWearEquip::CopyFrom(const GTReqGMWearEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GTReqGMWearEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void GTReqGMWearEquip::Swap(GTReqGMWearEquip* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(type_, other->type_);
    std::swap(pos_, other->pos_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GTReqGMWearEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GTReqGMWearEquip_descriptor_;
  metadata.reflection = GTReqGMWearEquip_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GTReqCMRecoverEquip::kCharidFieldNumber;
const int GTReqCMRecoverEquip::kPosFieldNumber;
#endif  // !_MSC_VER

GTReqCMRecoverEquip::GTReqCMRecoverEquip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GTReqCMRecoverEquip::InitAsDefaultInstance() {
}

GTReqCMRecoverEquip::GTReqCMRecoverEquip(const GTReqCMRecoverEquip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GTReqCMRecoverEquip::SharedCtor() {
  _cached_size_ = 0;
  charid_ = GOOGLE_LONGLONG(0);
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GTReqCMRecoverEquip::~GTReqCMRecoverEquip() {
  SharedDtor();
}

void GTReqCMRecoverEquip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GTReqCMRecoverEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GTReqCMRecoverEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GTReqCMRecoverEquip_descriptor_;
}

const GTReqCMRecoverEquip& GTReqCMRecoverEquip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CharLogin_2fEquipMessage_2eproto();
  return *default_instance_;
}

GTReqCMRecoverEquip* GTReqCMRecoverEquip::default_instance_ = NULL;

GTReqCMRecoverEquip* GTReqCMRecoverEquip::New() const {
  return new GTReqCMRecoverEquip;
}

void GTReqCMRecoverEquip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    charid_ = GOOGLE_LONGLONG(0);
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GTReqCMRecoverEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 charid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GTReqCMRecoverEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 charid = 1;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->charid(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GTReqCMRecoverEquip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 charid = 1;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->charid(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GTReqCMRecoverEquip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 charid = 1;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->charid());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GTReqCMRecoverEquip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GTReqCMRecoverEquip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GTReqCMRecoverEquip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GTReqCMRecoverEquip::MergeFrom(const GTReqCMRecoverEquip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_charid()) {
      set_charid(from.charid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GTReqCMRecoverEquip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GTReqCMRecoverEquip::CopyFrom(const GTReqCMRecoverEquip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GTReqCMRecoverEquip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GTReqCMRecoverEquip::Swap(GTReqCMRecoverEquip* other) {
  if (other != this) {
    std::swap(charid_, other->charid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GTReqCMRecoverEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GTReqCMRecoverEquip_descriptor_;
  metadata.reflection = GTReqCMRecoverEquip_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Equip

// @@protoc_insertion_point(global_scope)
