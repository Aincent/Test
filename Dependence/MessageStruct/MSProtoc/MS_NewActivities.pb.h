// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSProtoc/MS_NewActivities.proto

#ifndef PROTOBUF_MSProtoc_2fMS_5fNewActivities_2eproto__INCLUDED
#define PROTOBUF_MSProtoc_2fMS_5fNewActivities_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ActivitiesExProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

class Activity;
class FirstRecharge;
class Ranking;
class RankingTypes;
class RankingInfo;
class Invist;
class InvistInfo;
class DailyRecharge;
class DailyRechargeInfo;
class SingleRecharge;
class SingleRechargeInfo;
class AccRecharge;
class AccRechargeInfo;
class AccDayRecharge;
class AccDayRechargeInfo;
class DailyFirstRecharge;
class DailyFirstRechargeInfo;
class MagicWeaponAdvance;
class MagicWeaponAdvanceInfo;
class HorseAdvance;
class HorseAdvanceInfo;
class RelayRecharge;
class RelayRechargeInfo;
class Compensate;
class AccConsume;
class AccConsumeInfo;
class ReqAcivityInfo;
class RetAcivityInfo;
class ReqGetActivityReward;
class RetGetActivityReward;
class ReqActivityInvest;
class RetGetActivityInvest;
class AskActivityInestCost;
class RetActivityInestCost;
class ReqActiveActivities;
class RetActiveActivities;
class ToClienActiveActivities;
class SysActivityReward;
class RetSysActivityReward;
class ActivityReward;
class ActivityRewardList;
class ActivityRewardTinyList;
class RewardList;

// ===================================================================

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();

  Activity(const Activity& from);

  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();

  void Swap(Activity* other);

  // implements Message ----------------------------------------------

  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.Activity)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* content_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// -------------------------------------------------------------------

class FirstRecharge : public ::google::protobuf::Message {
 public:
  FirstRecharge();
  virtual ~FirstRecharge();

  FirstRecharge(const FirstRecharge& from);

  inline FirstRecharge& operator=(const FirstRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FirstRecharge& default_instance();

  void Swap(FirstRecharge* other);

  // implements Message ----------------------------------------------

  FirstRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FirstRecharge& from);
  void MergeFrom(const FirstRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // optional int32 state = 7;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 rate = 8;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 8;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 backGolden = 9;
  inline bool has_backgolden() const;
  inline void clear_backgolden();
  static const int kBackGoldenFieldNumber = 9;
  inline ::google::protobuf::int32 backgolden() const;
  inline void set_backgolden(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.FirstRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_backgolden();
  inline void clear_has_backgolden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 backgolden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static FirstRecharge* default_instance_;
};
// -------------------------------------------------------------------

class Ranking : public ::google::protobuf::Message {
 public:
  Ranking();
  virtual ~Ranking();

  Ranking(const Ranking& from);

  inline Ranking& operator=(const Ranking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ranking& default_instance();

  void Swap(Ranking* other);

  // implements Message ----------------------------------------------

  Ranking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ranking& from);
  void MergeFrom(const Ranking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // repeated .ActivitiesExProto.RankingTypes rankingTypes = 6;
  inline int rankingtypes_size() const;
  inline void clear_rankingtypes();
  static const int kRankingTypesFieldNumber = 6;
  inline const ::ActivitiesExProto::RankingTypes& rankingtypes(int index) const;
  inline ::ActivitiesExProto::RankingTypes* mutable_rankingtypes(int index);
  inline ::ActivitiesExProto::RankingTypes* add_rankingtypes();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingTypes >&
      rankingtypes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingTypes >*
      mutable_rankingtypes();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.Ranking)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingTypes > rankingtypes_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static Ranking* default_instance_;
};
// -------------------------------------------------------------------

class RankingTypes : public ::google::protobuf::Message {
 public:
  RankingTypes();
  virtual ~RankingTypes();

  RankingTypes(const RankingTypes& from);

  inline RankingTypes& operator=(const RankingTypes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankingTypes& default_instance();

  void Swap(RankingTypes* other);

  // implements Message ----------------------------------------------

  RankingTypes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankingTypes& from);
  void MergeFrom(const RankingTypes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tinytype = 1;
  inline bool has_tinytype() const;
  inline void clear_tinytype();
  static const int kTinytypeFieldNumber = 1;
  inline ::google::protobuf::int32 tinytype() const;
  inline void set_tinytype(::google::protobuf::int32 value);

  // optional string des = 2;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 2;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.RankingInfo rankinginfo = 3;
  inline int rankinginfo_size() const;
  inline void clear_rankinginfo();
  static const int kRankinginfoFieldNumber = 3;
  inline const ::ActivitiesExProto::RankingInfo& rankinginfo(int index) const;
  inline ::ActivitiesExProto::RankingInfo* mutable_rankinginfo(int index);
  inline ::ActivitiesExProto::RankingInfo* add_rankinginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingInfo >&
      rankinginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingInfo >*
      mutable_rankinginfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RankingTypes)
 private:
  inline void set_has_tinytype();
  inline void clear_has_tinytype();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingInfo > rankinginfo_;
  ::google::protobuf::int32 tinytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RankingTypes* default_instance_;
};
// -------------------------------------------------------------------

class RankingInfo : public ::google::protobuf::Message {
 public:
  RankingInfo();
  virtual ~RankingInfo();

  RankingInfo(const RankingInfo& from);

  inline RankingInfo& operator=(const RankingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankingInfo& default_instance();

  void Swap(RankingInfo* other);

  // implements Message ----------------------------------------------

  RankingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankingInfo& from);
  void MergeFrom(const RankingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RankingInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RankingInfo* default_instance_;
};
// -------------------------------------------------------------------

class Invist : public ::google::protobuf::Message {
 public:
  Invist();
  virtual ~Invist();

  Invist(const Invist& from);

  inline Invist& operator=(const Invist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Invist& default_instance();

  void Swap(Invist* other);

  // implements Message ----------------------------------------------

  Invist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Invist& from);
  void MergeFrom(const Invist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string des = 2;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 2;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // optional int32 curGolden = 3;
  inline bool has_curgolden() const;
  inline void clear_curgolden();
  static const int kCurGoldenFieldNumber = 3;
  inline ::google::protobuf::int32 curgolden() const;
  inline void set_curgolden(::google::protobuf::int32 value);

  // optional int32 maxGolden = 4;
  inline bool has_maxgolden() const;
  inline void clear_maxgolden();
  static const int kMaxGoldenFieldNumber = 4;
  inline ::google::protobuf::int32 maxgolden() const;
  inline void set_maxgolden(::google::protobuf::int32 value);

  // optional int64 beginTime = 5;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 5;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .ActivitiesExProto.InvistInfo invistinfo = 7;
  inline int invistinfo_size() const;
  inline void clear_invistinfo();
  static const int kInvistinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::InvistInfo& invistinfo(int index) const;
  inline ::ActivitiesExProto::InvistInfo* mutable_invistinfo(int index);
  inline ::ActivitiesExProto::InvistInfo* add_invistinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::InvistInfo >&
      invistinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::InvistInfo >*
      mutable_invistinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.Invist)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_curgolden();
  inline void clear_has_curgolden();
  inline void set_has_maxgolden();
  inline void clear_has_maxgolden();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 curgolden_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::InvistInfo > invistinfo_;
  ::google::protobuf::int32 maxgolden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static Invist* default_instance_;
};
// -------------------------------------------------------------------

class InvistInfo : public ::google::protobuf::Message {
 public:
  InvistInfo();
  virtual ~InvistInfo();

  InvistInfo(const InvistInfo& from);

  inline InvistInfo& operator=(const InvistInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvistInfo& default_instance();

  void Swap(InvistInfo* other);

  // implements Message ----------------------------------------------

  InvistInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvistInfo& from);
  void MergeFrom(const InvistInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 con = 1;
  inline bool has_con() const;
  inline void clear_con();
  static const int kConFieldNumber = 1;
  inline ::google::protobuf::int32 con() const;
  inline void set_con(::google::protobuf::int32 value);

  // optional int32 golden = 2;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 2;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // optional int32 bgolden = 3;
  inline bool has_bgolden() const;
  inline void clear_bgolden();
  static const int kBgoldenFieldNumber = 3;
  inline ::google::protobuf::int32 bgolden() const;
  inline void set_bgolden(::google::protobuf::int32 value);

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.InvistInfo)
 private:
  inline void set_has_con();
  inline void clear_has_con();
  inline void set_has_golden();
  inline void clear_has_golden();
  inline void set_has_bgolden();
  inline void clear_has_bgolden();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 con_;
  ::google::protobuf::int32 golden_;
  ::google::protobuf::int32 bgolden_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static InvistInfo* default_instance_;
};
// -------------------------------------------------------------------

class DailyRecharge : public ::google::protobuf::Message {
 public:
  DailyRecharge();
  virtual ~DailyRecharge();

  DailyRecharge(const DailyRecharge& from);

  inline DailyRecharge& operator=(const DailyRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyRecharge& default_instance();

  void Swap(DailyRecharge* other);

  // implements Message ----------------------------------------------

  DailyRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyRecharge& from);
  void MergeFrom(const DailyRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.DailyRechargeInfo dailyrechargeinfo = 7;
  inline int dailyrechargeinfo_size() const;
  inline void clear_dailyrechargeinfo();
  static const int kDailyrechargeinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::DailyRechargeInfo& dailyrechargeinfo(int index) const;
  inline ::ActivitiesExProto::DailyRechargeInfo* mutable_dailyrechargeinfo(int index);
  inline ::ActivitiesExProto::DailyRechargeInfo* add_dailyrechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyRechargeInfo >&
      dailyrechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyRechargeInfo >*
      mutable_dailyrechargeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.DailyRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyRechargeInfo > dailyrechargeinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static DailyRecharge* default_instance_;
};
// -------------------------------------------------------------------

class DailyRechargeInfo : public ::google::protobuf::Message {
 public:
  DailyRechargeInfo();
  virtual ~DailyRechargeInfo();

  DailyRechargeInfo(const DailyRechargeInfo& from);

  inline DailyRechargeInfo& operator=(const DailyRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyRechargeInfo& default_instance();

  void Swap(DailyRechargeInfo* other);

  // implements Message ----------------------------------------------

  DailyRechargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyRechargeInfo& from);
  void MergeFrom(const DailyRechargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.DailyRechargeInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static DailyRechargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class SingleRecharge : public ::google::protobuf::Message {
 public:
  SingleRecharge();
  virtual ~SingleRecharge();

  SingleRecharge(const SingleRecharge& from);

  inline SingleRecharge& operator=(const SingleRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleRecharge& default_instance();

  void Swap(SingleRecharge* other);

  // implements Message ----------------------------------------------

  SingleRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleRecharge& from);
  void MergeFrom(const SingleRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.SingleRechargeInfo singlerechargeinfo = 7;
  inline int singlerechargeinfo_size() const;
  inline void clear_singlerechargeinfo();
  static const int kSinglerechargeinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::SingleRechargeInfo& singlerechargeinfo(int index) const;
  inline ::ActivitiesExProto::SingleRechargeInfo* mutable_singlerechargeinfo(int index);
  inline ::ActivitiesExProto::SingleRechargeInfo* add_singlerechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::SingleRechargeInfo >&
      singlerechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::SingleRechargeInfo >*
      mutable_singlerechargeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.SingleRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::SingleRechargeInfo > singlerechargeinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static SingleRecharge* default_instance_;
};
// -------------------------------------------------------------------

class SingleRechargeInfo : public ::google::protobuf::Message {
 public:
  SingleRechargeInfo();
  virtual ~SingleRechargeInfo();

  SingleRechargeInfo(const SingleRechargeInfo& from);

  inline SingleRechargeInfo& operator=(const SingleRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleRechargeInfo& default_instance();

  void Swap(SingleRechargeInfo* other);

  // implements Message ----------------------------------------------

  SingleRechargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleRechargeInfo& from);
  void MergeFrom(const SingleRechargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.SingleRechargeInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static SingleRechargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class AccRecharge : public ::google::protobuf::Message {
 public:
  AccRecharge();
  virtual ~AccRecharge();

  AccRecharge(const AccRecharge& from);

  inline AccRecharge& operator=(const AccRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccRecharge& default_instance();

  void Swap(AccRecharge* other);

  // implements Message ----------------------------------------------

  AccRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccRecharge& from);
  void MergeFrom(const AccRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.AccRechargeInfo accrechargeinfo = 7;
  inline int accrechargeinfo_size() const;
  inline void clear_accrechargeinfo();
  static const int kAccrechargeinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::AccRechargeInfo& accrechargeinfo(int index) const;
  inline ::ActivitiesExProto::AccRechargeInfo* mutable_accrechargeinfo(int index);
  inline ::ActivitiesExProto::AccRechargeInfo* add_accrechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccRechargeInfo >&
      accrechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccRechargeInfo >*
      mutable_accrechargeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AccRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccRechargeInfo > accrechargeinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AccRecharge* default_instance_;
};
// -------------------------------------------------------------------

class AccRechargeInfo : public ::google::protobuf::Message {
 public:
  AccRechargeInfo();
  virtual ~AccRechargeInfo();

  AccRechargeInfo(const AccRechargeInfo& from);

  inline AccRechargeInfo& operator=(const AccRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccRechargeInfo& default_instance();

  void Swap(AccRechargeInfo* other);

  // implements Message ----------------------------------------------

  AccRechargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccRechargeInfo& from);
  void MergeFrom(const AccRechargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AccRechargeInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AccRechargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class AccDayRecharge : public ::google::protobuf::Message {
 public:
  AccDayRecharge();
  virtual ~AccDayRecharge();

  AccDayRecharge(const AccDayRecharge& from);

  inline AccDayRecharge& operator=(const AccDayRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccDayRecharge& default_instance();

  void Swap(AccDayRecharge* other);

  // implements Message ----------------------------------------------

  AccDayRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccDayRecharge& from);
  void MergeFrom(const AccDayRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional int32 currentCount = 6;
  inline bool has_currentcount() const;
  inline void clear_currentcount();
  static const int kCurrentCountFieldNumber = 6;
  inline ::google::protobuf::int32 currentcount() const;
  inline void set_currentcount(::google::protobuf::int32 value);

  // optional int32 maxCount = 7;
  inline bool has_maxcount() const;
  inline void clear_maxcount();
  static const int kMaxCountFieldNumber = 7;
  inline ::google::protobuf::int32 maxcount() const;
  inline void set_maxcount(::google::protobuf::int32 value);

  // optional string des = 8;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 8;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.AccDayRechargeInfo accdayrechargeinfo = 9;
  inline int accdayrechargeinfo_size() const;
  inline void clear_accdayrechargeinfo();
  static const int kAccdayrechargeinfoFieldNumber = 9;
  inline const ::ActivitiesExProto::AccDayRechargeInfo& accdayrechargeinfo(int index) const;
  inline ::ActivitiesExProto::AccDayRechargeInfo* mutable_accdayrechargeinfo(int index);
  inline ::ActivitiesExProto::AccDayRechargeInfo* add_accdayrechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccDayRechargeInfo >&
      accdayrechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccDayRechargeInfo >*
      mutable_accdayrechargeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AccDayRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_currentcount();
  inline void clear_has_currentcount();
  inline void set_has_maxcount();
  inline void clear_has_maxcount();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 currentcount_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccDayRechargeInfo > accdayrechargeinfo_;
  ::google::protobuf::int32 maxcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AccDayRecharge* default_instance_;
};
// -------------------------------------------------------------------

class AccDayRechargeInfo : public ::google::protobuf::Message {
 public:
  AccDayRechargeInfo();
  virtual ~AccDayRechargeInfo();

  AccDayRechargeInfo(const AccDayRechargeInfo& from);

  inline AccDayRechargeInfo& operator=(const AccDayRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccDayRechargeInfo& default_instance();

  void Swap(AccDayRechargeInfo* other);

  // implements Message ----------------------------------------------

  AccDayRechargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccDayRechargeInfo& from);
  void MergeFrom(const AccDayRechargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AccDayRechargeInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AccDayRechargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class DailyFirstRecharge : public ::google::protobuf::Message {
 public:
  DailyFirstRecharge();
  virtual ~DailyFirstRecharge();

  DailyFirstRecharge(const DailyFirstRecharge& from);

  inline DailyFirstRecharge& operator=(const DailyFirstRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyFirstRecharge& default_instance();

  void Swap(DailyFirstRecharge* other);

  // implements Message ----------------------------------------------

  DailyFirstRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyFirstRecharge& from);
  void MergeFrom(const DailyFirstRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.DailyFirstRechargeInfo dailyfristrechargeinfo = 7;
  inline int dailyfristrechargeinfo_size() const;
  inline void clear_dailyfristrechargeinfo();
  static const int kDailyfristrechargeinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::DailyFirstRechargeInfo& dailyfristrechargeinfo(int index) const;
  inline ::ActivitiesExProto::DailyFirstRechargeInfo* mutable_dailyfristrechargeinfo(int index);
  inline ::ActivitiesExProto::DailyFirstRechargeInfo* add_dailyfristrechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyFirstRechargeInfo >&
      dailyfristrechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyFirstRechargeInfo >*
      mutable_dailyfristrechargeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.DailyFirstRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyFirstRechargeInfo > dailyfristrechargeinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static DailyFirstRecharge* default_instance_;
};
// -------------------------------------------------------------------

class DailyFirstRechargeInfo : public ::google::protobuf::Message {
 public:
  DailyFirstRechargeInfo();
  virtual ~DailyFirstRechargeInfo();

  DailyFirstRechargeInfo(const DailyFirstRechargeInfo& from);

  inline DailyFirstRechargeInfo& operator=(const DailyFirstRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyFirstRechargeInfo& default_instance();

  void Swap(DailyFirstRechargeInfo* other);

  // implements Message ----------------------------------------------

  DailyFirstRechargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyFirstRechargeInfo& from);
  void MergeFrom(const DailyFirstRechargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.DailyFirstRechargeInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static DailyFirstRechargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class MagicWeaponAdvance : public ::google::protobuf::Message {
 public:
  MagicWeaponAdvance();
  virtual ~MagicWeaponAdvance();

  MagicWeaponAdvance(const MagicWeaponAdvance& from);

  inline MagicWeaponAdvance& operator=(const MagicWeaponAdvance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicWeaponAdvance& default_instance();

  void Swap(MagicWeaponAdvance* other);

  // implements Message ----------------------------------------------

  MagicWeaponAdvance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicWeaponAdvance& from);
  void MergeFrom(const MagicWeaponAdvance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.MagicWeaponAdvanceInfo magicweaponadvanceinfo = 7;
  inline int magicweaponadvanceinfo_size() const;
  inline void clear_magicweaponadvanceinfo();
  static const int kMagicweaponadvanceinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::MagicWeaponAdvanceInfo& magicweaponadvanceinfo(int index) const;
  inline ::ActivitiesExProto::MagicWeaponAdvanceInfo* mutable_magicweaponadvanceinfo(int index);
  inline ::ActivitiesExProto::MagicWeaponAdvanceInfo* add_magicweaponadvanceinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::MagicWeaponAdvanceInfo >&
      magicweaponadvanceinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::MagicWeaponAdvanceInfo >*
      mutable_magicweaponadvanceinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.MagicWeaponAdvance)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::MagicWeaponAdvanceInfo > magicweaponadvanceinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static MagicWeaponAdvance* default_instance_;
};
// -------------------------------------------------------------------

class MagicWeaponAdvanceInfo : public ::google::protobuf::Message {
 public:
  MagicWeaponAdvanceInfo();
  virtual ~MagicWeaponAdvanceInfo();

  MagicWeaponAdvanceInfo(const MagicWeaponAdvanceInfo& from);

  inline MagicWeaponAdvanceInfo& operator=(const MagicWeaponAdvanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicWeaponAdvanceInfo& default_instance();

  void Swap(MagicWeaponAdvanceInfo* other);

  // implements Message ----------------------------------------------

  MagicWeaponAdvanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicWeaponAdvanceInfo& from);
  void MergeFrom(const MagicWeaponAdvanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.MagicWeaponAdvanceInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static MagicWeaponAdvanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class HorseAdvance : public ::google::protobuf::Message {
 public:
  HorseAdvance();
  virtual ~HorseAdvance();

  HorseAdvance(const HorseAdvance& from);

  inline HorseAdvance& operator=(const HorseAdvance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseAdvance& default_instance();

  void Swap(HorseAdvance* other);

  // implements Message ----------------------------------------------

  HorseAdvance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseAdvance& from);
  void MergeFrom(const HorseAdvance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.HorseAdvanceInfo horseadvanceinfo = 7;
  inline int horseadvanceinfo_size() const;
  inline void clear_horseadvanceinfo();
  static const int kHorseadvanceinfoFieldNumber = 7;
  inline const ::ActivitiesExProto::HorseAdvanceInfo& horseadvanceinfo(int index) const;
  inline ::ActivitiesExProto::HorseAdvanceInfo* mutable_horseadvanceinfo(int index);
  inline ::ActivitiesExProto::HorseAdvanceInfo* add_horseadvanceinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::HorseAdvanceInfo >&
      horseadvanceinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::HorseAdvanceInfo >*
      mutable_horseadvanceinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.HorseAdvance)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::HorseAdvanceInfo > horseadvanceinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static HorseAdvance* default_instance_;
};
// -------------------------------------------------------------------

class HorseAdvanceInfo : public ::google::protobuf::Message {
 public:
  HorseAdvanceInfo();
  virtual ~HorseAdvanceInfo();

  HorseAdvanceInfo(const HorseAdvanceInfo& from);

  inline HorseAdvanceInfo& operator=(const HorseAdvanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorseAdvanceInfo& default_instance();

  void Swap(HorseAdvanceInfo* other);

  // implements Message ----------------------------------------------

  HorseAdvanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HorseAdvanceInfo& from);
  void MergeFrom(const HorseAdvanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.HorseAdvanceInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static HorseAdvanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class RelayRecharge : public ::google::protobuf::Message {
 public:
  RelayRecharge();
  virtual ~RelayRecharge();

  RelayRecharge(const RelayRecharge& from);

  inline RelayRecharge& operator=(const RelayRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelayRecharge& default_instance();

  void Swap(RelayRecharge* other);

  // implements Message ----------------------------------------------

  RelayRecharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelayRecharge& from);
  void MergeFrom(const RelayRecharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional int32 curgolden = 6;
  inline bool has_curgolden() const;
  inline void clear_curgolden();
  static const int kCurgoldenFieldNumber = 6;
  inline ::google::protobuf::int32 curgolden() const;
  inline void set_curgolden(::google::protobuf::int32 value);

  // optional int32 curpeople = 7;
  inline bool has_curpeople() const;
  inline void clear_curpeople();
  static const int kCurpeopleFieldNumber = 7;
  inline ::google::protobuf::int32 curpeople() const;
  inline void set_curpeople(::google::protobuf::int32 value);

  // optional string des = 8;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 8;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated .ActivitiesExProto.RelayRechargeInfo relayrechargeinfo = 9;
  inline int relayrechargeinfo_size() const;
  inline void clear_relayrechargeinfo();
  static const int kRelayrechargeinfoFieldNumber = 9;
  inline const ::ActivitiesExProto::RelayRechargeInfo& relayrechargeinfo(int index) const;
  inline ::ActivitiesExProto::RelayRechargeInfo* mutable_relayrechargeinfo(int index);
  inline ::ActivitiesExProto::RelayRechargeInfo* add_relayrechargeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RelayRechargeInfo >&
      relayrechargeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RelayRechargeInfo >*
      mutable_relayrechargeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RelayRecharge)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_curgolden();
  inline void clear_has_curgolden();
  inline void set_has_curpeople();
  inline void clear_has_curpeople();
  inline void set_has_des();
  inline void clear_has_des();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 curgolden_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RelayRechargeInfo > relayrechargeinfo_;
  ::google::protobuf::int32 curpeople_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RelayRecharge* default_instance_;
};
// -------------------------------------------------------------------

class RelayRechargeInfo : public ::google::protobuf::Message {
 public:
  RelayRechargeInfo();
  virtual ~RelayRechargeInfo();

  RelayRechargeInfo(const RelayRechargeInfo& from);

  inline RelayRechargeInfo& operator=(const RelayRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelayRechargeInfo& default_instance();

  void Swap(RelayRechargeInfo* other);

  // implements Message ----------------------------------------------

  RelayRechargeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelayRechargeInfo& from);
  void MergeFrom(const RelayRechargeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 itemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 2;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 rechargegolden = 5;
  inline bool has_rechargegolden() const;
  inline void clear_rechargegolden();
  static const int kRechargegoldenFieldNumber = 5;
  inline ::google::protobuf::int32 rechargegolden() const;
  inline void set_rechargegolden(::google::protobuf::int32 value);

  // optional int32 rechargepeople = 6;
  inline bool has_rechargepeople() const;
  inline void clear_rechargepeople();
  static const int kRechargepeopleFieldNumber = 6;
  inline ::google::protobuf::int32 rechargepeople() const;
  inline void set_rechargepeople(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RelayRechargeInfo)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_rechargegolden();
  inline void clear_has_rechargegolden();
  inline void set_has_rechargepeople();
  inline void clear_has_rechargepeople();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 rechargegolden_;
  ::google::protobuf::int32 rechargepeople_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RelayRechargeInfo* default_instance_;
};
// -------------------------------------------------------------------

class Compensate : public ::google::protobuf::Message {
 public:
  Compensate();
  virtual ~Compensate();

  Compensate(const Compensate& from);

  inline Compensate& operator=(const Compensate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Compensate& default_instance();

  void Swap(Compensate* other);

  // implements Message ----------------------------------------------

  Compensate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Compensate& from);
  void MergeFrom(const Compensate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string activityName = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivityNameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 AnnounceTime = 5;
  inline bool has_announcetime() const;
  inline void clear_announcetime();
  static const int kAnnounceTimeFieldNumber = 5;
  inline ::google::protobuf::int64 announcetime() const;
  inline void set_announcetime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 7;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 7;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 8;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 8;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 9;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 9;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.Compensate)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_announcetime();
  inline void clear_has_announcetime();
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int64 announcetime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 state_;
  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static Compensate* default_instance_;
};
// -------------------------------------------------------------------

class AccConsume : public ::google::protobuf::Message {
 public:
  AccConsume();
  virtual ~AccConsume();

  AccConsume(const AccConsume& from);

  inline AccConsume& operator=(const AccConsume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccConsume& default_instance();

  void Swap(AccConsume* other);

  // implements Message ----------------------------------------------

  AccConsume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccConsume& from);
  void MergeFrom(const AccConsume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string activityname = 2;
  inline bool has_activityname() const;
  inline void clear_activityname();
  static const int kActivitynameFieldNumber = 2;
  inline const ::std::string& activityname() const;
  inline void set_activityname(const ::std::string& value);
  inline void set_activityname(const char* value);
  inline void set_activityname(const char* value, size_t size);
  inline ::std::string* mutable_activityname();
  inline ::std::string* release_activityname();
  inline void set_allocated_activityname(::std::string* activityname);

  // optional int64 beginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int64 begintime() const;
  inline void set_begintime(::google::protobuf::int64 value);

  // optional int64 endTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional int64 rewardTime = 5;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 5;
  inline ::google::protobuf::int64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::int64 value);

  // optional string des = 6;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 6;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // optional int32 currentConsume = 7;
  inline bool has_currentconsume() const;
  inline void clear_currentconsume();
  static const int kCurrentConsumeFieldNumber = 7;
  inline ::google::protobuf::int32 currentconsume() const;
  inline void set_currentconsume(::google::protobuf::int32 value);

  // repeated .ActivitiesExProto.AccConsumeInfo accconsumeinfo = 8;
  inline int accconsumeinfo_size() const;
  inline void clear_accconsumeinfo();
  static const int kAccconsumeinfoFieldNumber = 8;
  inline const ::ActivitiesExProto::AccConsumeInfo& accconsumeinfo(int index) const;
  inline ::ActivitiesExProto::AccConsumeInfo* mutable_accconsumeinfo(int index);
  inline ::ActivitiesExProto::AccConsumeInfo* add_accconsumeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccConsumeInfo >&
      accconsumeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccConsumeInfo >*
      mutable_accconsumeinfo();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AccConsume)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_activityname();
  inline void clear_has_activityname();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_currentconsume();
  inline void clear_has_currentconsume();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* activityname_;
  ::google::protobuf::int64 begintime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 currentconsume_;
  ::google::protobuf::int64 rewardtime_;
  ::std::string* des_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccConsumeInfo > accconsumeinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AccConsume* default_instance_;
};
// -------------------------------------------------------------------

class AccConsumeInfo : public ::google::protobuf::Message {
 public:
  AccConsumeInfo();
  virtual ~AccConsumeInfo();

  AccConsumeInfo(const AccConsumeInfo& from);

  inline AccConsumeInfo& operator=(const AccConsumeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccConsumeInfo& default_instance();

  void Swap(AccConsumeInfo* other);

  // implements Message ----------------------------------------------

  AccConsumeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccConsumeInfo& from);
  void MergeFrom(const AccConsumeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // repeated int32 itemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 3;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AccConsumeInfo)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* des_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AccConsumeInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqAcivityInfo : public ::google::protobuf::Message {
 public:
  ReqAcivityInfo();
  virtual ~ReqAcivityInfo();

  ReqAcivityInfo(const ReqAcivityInfo& from);

  inline ReqAcivityInfo& operator=(const ReqAcivityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAcivityInfo& default_instance();

  void Swap(ReqAcivityInfo* other);

  // implements Message ----------------------------------------------

  ReqAcivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAcivityInfo& from);
  void MergeFrom(const ReqAcivityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activityId = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ReqAcivityInfo)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 activityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ReqAcivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class RetAcivityInfo : public ::google::protobuf::Message {
 public:
  RetAcivityInfo();
  virtual ~RetAcivityInfo();

  RetAcivityInfo(const RetAcivityInfo& from);

  inline RetAcivityInfo& operator=(const RetAcivityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAcivityInfo& default_instance();

  void Swap(RetAcivityInfo* other);

  // implements Message ----------------------------------------------

  RetAcivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAcivityInfo& from);
  void MergeFrom(const RetAcivityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional .ActivitiesExProto.Activity activity = 2;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 2;
  inline const ::ActivitiesExProto::Activity& activity() const;
  inline ::ActivitiesExProto::Activity* mutable_activity();
  inline ::ActivitiesExProto::Activity* release_activity();
  inline void set_allocated_activity(::ActivitiesExProto::Activity* activity);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RetAcivityInfo)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_activity();
  inline void clear_has_activity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ActivitiesExProto::Activity* activity_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RetAcivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetActivityReward : public ::google::protobuf::Message {
 public:
  ReqGetActivityReward();
  virtual ~ReqGetActivityReward();

  ReqGetActivityReward(const ReqGetActivityReward& from);

  inline ReqGetActivityReward& operator=(const ReqGetActivityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetActivityReward& default_instance();

  void Swap(ReqGetActivityReward* other);

  // implements Message ----------------------------------------------

  ReqGetActivityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetActivityReward& from);
  void MergeFrom(const ReqGetActivityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activityId = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // required int32 activityType = 2;
  inline bool has_activitytype() const;
  inline void clear_activitytype();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::int32 activitytype() const;
  inline void set_activitytype(::google::protobuf::int32 value);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ReqGetActivityReward)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_activitytype();
  inline void clear_has_activitytype();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitytype_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ReqGetActivityReward* default_instance_;
};
// -------------------------------------------------------------------

class RetGetActivityReward : public ::google::protobuf::Message {
 public:
  RetGetActivityReward();
  virtual ~RetGetActivityReward();

  RetGetActivityReward(const RetGetActivityReward& from);

  inline RetGetActivityReward& operator=(const RetGetActivityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGetActivityReward& default_instance();

  void Swap(RetGetActivityReward* other);

  // implements Message ----------------------------------------------

  RetGetActivityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGetActivityReward& from);
  void MergeFrom(const RetGetActivityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RetGetActivityReward)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RetGetActivityReward* default_instance_;
};
// -------------------------------------------------------------------

class ReqActivityInvest : public ::google::protobuf::Message {
 public:
  ReqActivityInvest();
  virtual ~ReqActivityInvest();

  ReqActivityInvest(const ReqActivityInvest& from);

  inline ReqActivityInvest& operator=(const ReqActivityInvest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqActivityInvest& default_instance();

  void Swap(ReqActivityInvest* other);

  // implements Message ----------------------------------------------

  ReqActivityInvest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqActivityInvest& from);
  void MergeFrom(const ReqActivityInvest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activityId = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // required int32 activityType = 2;
  inline bool has_activitytype() const;
  inline void clear_activitytype();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::int32 activitytype() const;
  inline void set_activitytype(::google::protobuf::int32 value);

  // required int32 golden = 3;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 3;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ReqActivityInvest)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_activitytype();
  inline void clear_has_activitytype();
  inline void set_has_golden();
  inline void clear_has_golden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitytype_;
  ::google::protobuf::int32 golden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ReqActivityInvest* default_instance_;
};
// -------------------------------------------------------------------

class RetGetActivityInvest : public ::google::protobuf::Message {
 public:
  RetGetActivityInvest();
  virtual ~RetGetActivityInvest();

  RetGetActivityInvest(const RetGetActivityInvest& from);

  inline RetGetActivityInvest& operator=(const RetGetActivityInvest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGetActivityInvest& default_instance();

  void Swap(RetGetActivityInvest* other);

  // implements Message ----------------------------------------------

  RetGetActivityInvest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGetActivityInvest& from);
  void MergeFrom(const RetGetActivityInvest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RetGetActivityInvest)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RetGetActivityInvest* default_instance_;
};
// -------------------------------------------------------------------

class AskActivityInestCost : public ::google::protobuf::Message {
 public:
  AskActivityInestCost();
  virtual ~AskActivityInestCost();

  AskActivityInestCost(const AskActivityInestCost& from);

  inline AskActivityInestCost& operator=(const AskActivityInestCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskActivityInestCost& default_instance();

  void Swap(AskActivityInestCost* other);

  // implements Message ----------------------------------------------

  AskActivityInestCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskActivityInestCost& from);
  void MergeFrom(const AskActivityInestCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 activityId = 2;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 2;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // optional int32 activityType = 3;
  inline bool has_activitytype() const;
  inline void clear_activitytype();
  static const int kActivityTypeFieldNumber = 3;
  inline ::google::protobuf::int32 activitytype() const;
  inline void set_activitytype(::google::protobuf::int32 value);

  // optional int32 golden = 4;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 4;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.AskActivityInestCost)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_activitytype();
  inline void clear_has_activitytype();
  inline void set_has_golden();
  inline void clear_has_golden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitytype_;
  ::google::protobuf::int32 golden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static AskActivityInestCost* default_instance_;
};
// -------------------------------------------------------------------

class RetActivityInestCost : public ::google::protobuf::Message {
 public:
  RetActivityInestCost();
  virtual ~RetActivityInestCost();

  RetActivityInestCost(const RetActivityInestCost& from);

  inline RetActivityInestCost& operator=(const RetActivityInestCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetActivityInestCost& default_instance();

  void Swap(RetActivityInestCost* other);

  // implements Message ----------------------------------------------

  RetActivityInestCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetActivityInestCost& from);
  void MergeFrom(const RetActivityInestCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 activityId = 2;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 2;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // optional int32 activityType = 3;
  inline bool has_activitytype() const;
  inline void clear_activitytype();
  static const int kActivityTypeFieldNumber = 3;
  inline ::google::protobuf::int32 activitytype() const;
  inline void set_activitytype(::google::protobuf::int32 value);

  // optional int32 golden = 4;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 4;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RetActivityInestCost)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_activitytype();
  inline void clear_has_activitytype();
  inline void set_has_golden();
  inline void clear_has_golden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitytype_;
  ::google::protobuf::int32 golden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RetActivityInestCost* default_instance_;
};
// -------------------------------------------------------------------

class ReqActiveActivities : public ::google::protobuf::Message {
 public:
  ReqActiveActivities();
  virtual ~ReqActiveActivities();

  ReqActiveActivities(const ReqActiveActivities& from);

  inline ReqActiveActivities& operator=(const ReqActiveActivities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqActiveActivities& default_instance();

  void Swap(ReqActiveActivities* other);

  // implements Message ----------------------------------------------

  ReqActiveActivities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqActiveActivities& from);
  void MergeFrom(const ReqActiveActivities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ReqActiveActivities)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ReqActiveActivities* default_instance_;
};
// -------------------------------------------------------------------

class RetActiveActivities : public ::google::protobuf::Message {
 public:
  RetActiveActivities();
  virtual ~RetActiveActivities();

  RetActiveActivities(const RetActiveActivities& from);

  inline RetActiveActivities& operator=(const RetActiveActivities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetActiveActivities& default_instance();

  void Swap(RetActiveActivities* other);

  // implements Message ----------------------------------------------

  RetActiveActivities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetActiveActivities& from);
  void MergeFrom(const RetActiveActivities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // repeated int32 activetyIdList = 2;
  inline int activetyidlist_size() const;
  inline void clear_activetyidlist();
  static const int kActivetyIdListFieldNumber = 2;
  inline ::google::protobuf::int32 activetyidlist(int index) const;
  inline void set_activetyidlist(int index, ::google::protobuf::int32 value);
  inline void add_activetyidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      activetyidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_activetyidlist();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RetActiveActivities)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > activetyidlist_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RetActiveActivities* default_instance_;
};
// -------------------------------------------------------------------

class ToClienActiveActivities : public ::google::protobuf::Message {
 public:
  ToClienActiveActivities();
  virtual ~ToClienActiveActivities();

  ToClienActiveActivities(const ToClienActiveActivities& from);

  inline ToClienActiveActivities& operator=(const ToClienActiveActivities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToClienActiveActivities& default_instance();

  void Swap(ToClienActiveActivities* other);

  // implements Message ----------------------------------------------

  ToClienActiveActivities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToClienActiveActivities& from);
  void MergeFrom(const ToClienActiveActivities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 activetyIdList = 1;
  inline int activetyidlist_size() const;
  inline void clear_activetyidlist();
  static const int kActivetyIdListFieldNumber = 1;
  inline ::google::protobuf::int32 activetyidlist(int index) const;
  inline void set_activetyidlist(int index, ::google::protobuf::int32 value);
  inline void add_activetyidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      activetyidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_activetyidlist();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ToClienActiveActivities)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > activetyidlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ToClienActiveActivities* default_instance_;
};
// -------------------------------------------------------------------

class SysActivityReward : public ::google::protobuf::Message {
 public:
  SysActivityReward();
  virtual ~SysActivityReward();

  SysActivityReward(const SysActivityReward& from);

  inline SysActivityReward& operator=(const SysActivityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysActivityReward& default_instance();

  void Swap(SysActivityReward* other);

  // implements Message ----------------------------------------------

  SysActivityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysActivityReward& from);
  void MergeFrom(const SysActivityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 activityId = 2;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 2;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // required int32 activityType = 3;
  inline bool has_activitytype() const;
  inline void clear_activitytype();
  static const int kActivityTypeFieldNumber = 3;
  inline ::google::protobuf::int32 activitytype() const;
  inline void set_activitytype(::google::protobuf::int32 value);

  // required int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 golden = 5;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 5;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // optional int32 bgolden = 6;
  inline bool has_bgolden() const;
  inline void clear_bgolden();
  static const int kBgoldenFieldNumber = 6;
  inline ::google::protobuf::int32 bgolden() const;
  inline void set_bgolden(::google::protobuf::int32 value);

  // repeated int32 itemId = 7;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 7;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemNum = 8;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 8;
  inline ::google::protobuf::int32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::int32 value);
  inline void add_itemnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemnum();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.SysActivityReward)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_activitytype();
  inline void clear_has_activitytype();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_golden();
  inline void clear_has_golden();
  inline void set_has_bgolden();
  inline void clear_has_bgolden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitytype_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 golden_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemnum_;
  ::google::protobuf::int32 bgolden_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static SysActivityReward* default_instance_;
};
// -------------------------------------------------------------------

class RetSysActivityReward : public ::google::protobuf::Message {
 public:
  RetSysActivityReward();
  virtual ~RetSysActivityReward();

  RetSysActivityReward(const RetSysActivityReward& from);

  inline RetSysActivityReward& operator=(const RetSysActivityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetSysActivityReward& default_instance();

  void Swap(RetSysActivityReward* other);

  // implements Message ----------------------------------------------

  RetSysActivityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetSysActivityReward& from);
  void MergeFrom(const RetSysActivityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activityId = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // required int32 activityType = 2;
  inline bool has_activitytype() const;
  inline void clear_activitytype();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::int32 activitytype() const;
  inline void set_activitytype(::google::protobuf::int32 value);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RetSysActivityReward)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_activitytype();
  inline void clear_has_activitytype();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitytype_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RetSysActivityReward* default_instance_;
};
// -------------------------------------------------------------------

class ActivityReward : public ::google::protobuf::Message {
 public:
  ActivityReward();
  virtual ~ActivityReward();

  ActivityReward(const ActivityReward& from);

  inline ActivityReward& operator=(const ActivityReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityReward& default_instance();

  void Swap(ActivityReward* other);

  // implements Message ----------------------------------------------

  ActivityReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityReward& from);
  void MergeFrom(const ActivityReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // repeated .ActivitiesExProto.ActivityRewardList activity = 2;
  inline int activity_size() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 2;
  inline const ::ActivitiesExProto::ActivityRewardList& activity(int index) const;
  inline ::ActivitiesExProto::ActivityRewardList* mutable_activity(int index);
  inline ::ActivitiesExProto::ActivityRewardList* add_activity();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardList >&
      activity() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardList >*
      mutable_activity();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ActivityReward)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardList > activity_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ActivityReward* default_instance_;
};
// -------------------------------------------------------------------

class ActivityRewardList : public ::google::protobuf::Message {
 public:
  ActivityRewardList();
  virtual ~ActivityRewardList();

  ActivityRewardList(const ActivityRewardList& from);

  inline ActivityRewardList& operator=(const ActivityRewardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityRewardList& default_instance();

  void Swap(ActivityRewardList* other);

  // implements Message ----------------------------------------------

  ActivityRewardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityRewardList& from);
  void MergeFrom(const ActivityRewardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activityId = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);

  // repeated .ActivitiesExProto.ActivityRewardTinyList tinyList = 2;
  inline int tinylist_size() const;
  inline void clear_tinylist();
  static const int kTinyListFieldNumber = 2;
  inline const ::ActivitiesExProto::ActivityRewardTinyList& tinylist(int index) const;
  inline ::ActivitiesExProto::ActivityRewardTinyList* mutable_tinylist(int index);
  inline ::ActivitiesExProto::ActivityRewardTinyList* add_tinylist();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardTinyList >&
      tinylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardTinyList >*
      mutable_tinylist();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ActivityRewardList)
 private:
  inline void set_has_activityid();
  inline void clear_has_activityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardTinyList > tinylist_;
  ::google::protobuf::int32 activityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ActivityRewardList* default_instance_;
};
// -------------------------------------------------------------------

class ActivityRewardTinyList : public ::google::protobuf::Message {
 public:
  ActivityRewardTinyList();
  virtual ~ActivityRewardTinyList();

  ActivityRewardTinyList(const ActivityRewardTinyList& from);

  inline ActivityRewardTinyList& operator=(const ActivityRewardTinyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityRewardTinyList& default_instance();

  void Swap(ActivityRewardTinyList* other);

  // implements Message ----------------------------------------------

  ActivityRewardTinyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivityRewardTinyList& from);
  void MergeFrom(const ActivityRewardTinyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tinyType = 1;
  inline bool has_tinytype() const;
  inline void clear_tinytype();
  static const int kTinyTypeFieldNumber = 1;
  inline ::google::protobuf::int32 tinytype() const;
  inline void set_tinytype(::google::protobuf::int32 value);

  // optional int32 golden = 2;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 2;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // optional int64 ntime = 3;
  inline bool has_ntime() const;
  inline void clear_ntime();
  static const int kNtimeFieldNumber = 3;
  inline ::google::protobuf::int64 ntime() const;
  inline void set_ntime(::google::protobuf::int64 value);

  // repeated .ActivitiesExProto.RewardList rewardList = 4;
  inline int rewardlist_size() const;
  inline void clear_rewardlist();
  static const int kRewardListFieldNumber = 4;
  inline const ::ActivitiesExProto::RewardList& rewardlist(int index) const;
  inline ::ActivitiesExProto::RewardList* mutable_rewardlist(int index);
  inline ::ActivitiesExProto::RewardList* add_rewardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RewardList >&
      rewardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RewardList >*
      mutable_rewardlist();

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.ActivityRewardTinyList)
 private:
  inline void set_has_tinytype();
  inline void clear_has_tinytype();
  inline void set_has_golden();
  inline void clear_has_golden();
  inline void set_has_ntime();
  inline void clear_has_ntime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tinytype_;
  ::google::protobuf::int32 golden_;
  ::google::protobuf::int64 ntime_;
  ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RewardList > rewardlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static ActivityRewardTinyList* default_instance_;
};
// -------------------------------------------------------------------

class RewardList : public ::google::protobuf::Message {
 public:
  RewardList();
  virtual ~RewardList();

  RewardList(const RewardList& from);

  inline RewardList& operator=(const RewardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardList& default_instance();

  void Swap(RewardList* other);

  // implements Message ----------------------------------------------

  RewardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardList& from);
  void MergeFrom(const RewardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 statue = 2;
  inline bool has_statue() const;
  inline void clear_statue();
  static const int kStatueFieldNumber = 2;
  inline ::google::protobuf::int32 statue() const;
  inline void set_statue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivitiesExProto.RewardList)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_statue();
  inline void clear_has_statue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 statue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_AssignDesc_MSProtoc_2fMS_5fNewActivities_2eproto();
  friend void protobuf_ShutdownFile_MSProtoc_2fMS_5fNewActivities_2eproto();

  void InitAsDefaultInstance();
  static RewardList* default_instance_;
};
// ===================================================================


// ===================================================================

// Activity

// required int32 type = 1;
inline bool Activity::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Activity::type() const {
  return type_;
}
inline void Activity::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes content = 2;
inline bool Activity::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Activity::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Activity::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Activity::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Activity::content() const {
  return *content_;
}
inline void Activity::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Activity::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Activity::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Activity::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* Activity::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Activity::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FirstRecharge

// required int32 type = 1;
inline bool FirstRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FirstRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FirstRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FirstRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FirstRecharge::type() const {
  return type_;
}
inline void FirstRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool FirstRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FirstRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FirstRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FirstRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& FirstRecharge::activityname() const {
  return *activityname_;
}
inline void FirstRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void FirstRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void FirstRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FirstRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* FirstRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FirstRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool FirstRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FirstRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FirstRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FirstRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 FirstRecharge::begintime() const {
  return begintime_;
}
inline void FirstRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool FirstRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FirstRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FirstRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FirstRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 FirstRecharge::endtime() const {
  return endtime_;
}
inline void FirstRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool FirstRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FirstRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FirstRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FirstRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 FirstRecharge::rewardtime() const {
  return rewardtime_;
}
inline void FirstRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool FirstRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FirstRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FirstRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FirstRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& FirstRecharge::des() const {
  return *des_;
}
inline void FirstRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void FirstRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void FirstRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FirstRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* FirstRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FirstRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 state = 7;
inline bool FirstRecharge::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FirstRecharge::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FirstRecharge::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FirstRecharge::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FirstRecharge::state() const {
  return state_;
}
inline void FirstRecharge::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 rate = 8;
inline bool FirstRecharge::has_rate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FirstRecharge::set_has_rate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FirstRecharge::clear_has_rate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FirstRecharge::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 FirstRecharge::rate() const {
  return rate_;
}
inline void FirstRecharge::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 backGolden = 9;
inline bool FirstRecharge::has_backgolden() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FirstRecharge::set_has_backgolden() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FirstRecharge::clear_has_backgolden() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FirstRecharge::clear_backgolden() {
  backgolden_ = 0;
  clear_has_backgolden();
}
inline ::google::protobuf::int32 FirstRecharge::backgolden() const {
  return backgolden_;
}
inline void FirstRecharge::set_backgolden(::google::protobuf::int32 value) {
  set_has_backgolden();
  backgolden_ = value;
}

// -------------------------------------------------------------------

// Ranking

// required int32 type = 1;
inline bool Ranking::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ranking::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ranking::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ranking::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Ranking::type() const {
  return type_;
}
inline void Ranking::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool Ranking::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ranking::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ranking::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ranking::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& Ranking::activityname() const {
  return *activityname_;
}
inline void Ranking::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void Ranking::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void Ranking::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Ranking::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* Ranking::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Ranking::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool Ranking::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ranking::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ranking::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ranking::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 Ranking::begintime() const {
  return begintime_;
}
inline void Ranking::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool Ranking::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Ranking::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Ranking::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Ranking::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 Ranking::endtime() const {
  return endtime_;
}
inline void Ranking::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool Ranking::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Ranking::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Ranking::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Ranking::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 Ranking::rewardtime() const {
  return rewardtime_;
}
inline void Ranking::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// repeated .ActivitiesExProto.RankingTypes rankingTypes = 6;
inline int Ranking::rankingtypes_size() const {
  return rankingtypes_.size();
}
inline void Ranking::clear_rankingtypes() {
  rankingtypes_.Clear();
}
inline const ::ActivitiesExProto::RankingTypes& Ranking::rankingtypes(int index) const {
  return rankingtypes_.Get(index);
}
inline ::ActivitiesExProto::RankingTypes* Ranking::mutable_rankingtypes(int index) {
  return rankingtypes_.Mutable(index);
}
inline ::ActivitiesExProto::RankingTypes* Ranking::add_rankingtypes() {
  return rankingtypes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingTypes >&
Ranking::rankingtypes() const {
  return rankingtypes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingTypes >*
Ranking::mutable_rankingtypes() {
  return &rankingtypes_;
}

// -------------------------------------------------------------------

// RankingTypes

// required int32 tinytype = 1;
inline bool RankingTypes::has_tinytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankingTypes::set_has_tinytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankingTypes::clear_has_tinytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankingTypes::clear_tinytype() {
  tinytype_ = 0;
  clear_has_tinytype();
}
inline ::google::protobuf::int32 RankingTypes::tinytype() const {
  return tinytype_;
}
inline void RankingTypes::set_tinytype(::google::protobuf::int32 value) {
  set_has_tinytype();
  tinytype_ = value;
}

// optional string des = 2;
inline bool RankingTypes::has_des() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankingTypes::set_has_des() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankingTypes::clear_has_des() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankingTypes::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& RankingTypes::des() const {
  return *des_;
}
inline void RankingTypes::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void RankingTypes::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void RankingTypes::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankingTypes::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* RankingTypes::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RankingTypes::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.RankingInfo rankinginfo = 3;
inline int RankingTypes::rankinginfo_size() const {
  return rankinginfo_.size();
}
inline void RankingTypes::clear_rankinginfo() {
  rankinginfo_.Clear();
}
inline const ::ActivitiesExProto::RankingInfo& RankingTypes::rankinginfo(int index) const {
  return rankinginfo_.Get(index);
}
inline ::ActivitiesExProto::RankingInfo* RankingTypes::mutable_rankinginfo(int index) {
  return rankinginfo_.Mutable(index);
}
inline ::ActivitiesExProto::RankingInfo* RankingTypes::add_rankinginfo() {
  return rankinginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingInfo >&
RankingTypes::rankinginfo() const {
  return rankinginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RankingInfo >*
RankingTypes::mutable_rankinginfo() {
  return &rankinginfo_;
}

// -------------------------------------------------------------------

// RankingInfo

// optional string des = 1;
inline bool RankingInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankingInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankingInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankingInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& RankingInfo::des() const {
  return *des_;
}
inline void RankingInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void RankingInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void RankingInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankingInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* RankingInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RankingInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int RankingInfo::itemid_size() const {
  return itemid_.size();
}
inline void RankingInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 RankingInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void RankingInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void RankingInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RankingInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RankingInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int RankingInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void RankingInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 RankingInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void RankingInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void RankingInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RankingInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RankingInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool RankingInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankingInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankingInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankingInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 RankingInfo::state() const {
  return state_;
}
inline void RankingInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool RankingInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankingInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankingInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankingInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 RankingInfo::index() const {
  return index_;
}
inline void RankingInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Invist

// required int32 type = 1;
inline bool Invist::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Invist::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Invist::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Invist::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Invist::type() const {
  return type_;
}
inline void Invist::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string des = 2;
inline bool Invist::has_des() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Invist::set_has_des() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Invist::clear_has_des() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Invist::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& Invist::des() const {
  return *des_;
}
inline void Invist::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void Invist::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void Invist::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Invist::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* Invist::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Invist::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 curGolden = 3;
inline bool Invist::has_curgolden() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Invist::set_has_curgolden() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Invist::clear_has_curgolden() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Invist::clear_curgolden() {
  curgolden_ = 0;
  clear_has_curgolden();
}
inline ::google::protobuf::int32 Invist::curgolden() const {
  return curgolden_;
}
inline void Invist::set_curgolden(::google::protobuf::int32 value) {
  set_has_curgolden();
  curgolden_ = value;
}

// optional int32 maxGolden = 4;
inline bool Invist::has_maxgolden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Invist::set_has_maxgolden() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Invist::clear_has_maxgolden() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Invist::clear_maxgolden() {
  maxgolden_ = 0;
  clear_has_maxgolden();
}
inline ::google::protobuf::int32 Invist::maxgolden() const {
  return maxgolden_;
}
inline void Invist::set_maxgolden(::google::protobuf::int32 value) {
  set_has_maxgolden();
  maxgolden_ = value;
}

// optional int64 beginTime = 5;
inline bool Invist::has_begintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Invist::set_has_begintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Invist::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Invist::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 Invist::begintime() const {
  return begintime_;
}
inline void Invist::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 6;
inline bool Invist::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Invist::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Invist::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Invist::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 Invist::endtime() const {
  return endtime_;
}
inline void Invist::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated .ActivitiesExProto.InvistInfo invistinfo = 7;
inline int Invist::invistinfo_size() const {
  return invistinfo_.size();
}
inline void Invist::clear_invistinfo() {
  invistinfo_.Clear();
}
inline const ::ActivitiesExProto::InvistInfo& Invist::invistinfo(int index) const {
  return invistinfo_.Get(index);
}
inline ::ActivitiesExProto::InvistInfo* Invist::mutable_invistinfo(int index) {
  return invistinfo_.Mutable(index);
}
inline ::ActivitiesExProto::InvistInfo* Invist::add_invistinfo() {
  return invistinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::InvistInfo >&
Invist::invistinfo() const {
  return invistinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::InvistInfo >*
Invist::mutable_invistinfo() {
  return &invistinfo_;
}

// -------------------------------------------------------------------

// InvistInfo

// required int32 con = 1;
inline bool InvistInfo::has_con() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvistInfo::set_has_con() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvistInfo::clear_has_con() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvistInfo::clear_con() {
  con_ = 0;
  clear_has_con();
}
inline ::google::protobuf::int32 InvistInfo::con() const {
  return con_;
}
inline void InvistInfo::set_con(::google::protobuf::int32 value) {
  set_has_con();
  con_ = value;
}

// optional int32 golden = 2;
inline bool InvistInfo::has_golden() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvistInfo::set_has_golden() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvistInfo::clear_has_golden() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvistInfo::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 InvistInfo::golden() const {
  return golden_;
}
inline void InvistInfo::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// optional int32 bgolden = 3;
inline bool InvistInfo::has_bgolden() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InvistInfo::set_has_bgolden() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InvistInfo::clear_has_bgolden() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InvistInfo::clear_bgolden() {
  bgolden_ = 0;
  clear_has_bgolden();
}
inline ::google::protobuf::int32 InvistInfo::bgolden() const {
  return bgolden_;
}
inline void InvistInfo::set_bgolden(::google::protobuf::int32 value) {
  set_has_bgolden();
  bgolden_ = value;
}

// optional int32 state = 4;
inline bool InvistInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InvistInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InvistInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InvistInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 InvistInfo::state() const {
  return state_;
}
inline void InvistInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool InvistInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InvistInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InvistInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InvistInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 InvistInfo::index() const {
  return index_;
}
inline void InvistInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// DailyRecharge

// required int32 type = 1;
inline bool DailyRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DailyRecharge::type() const {
  return type_;
}
inline void DailyRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool DailyRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& DailyRecharge::activityname() const {
  return *activityname_;
}
inline void DailyRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void DailyRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void DailyRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* DailyRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool DailyRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 DailyRecharge::begintime() const {
  return begintime_;
}
inline void DailyRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool DailyRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 DailyRecharge::endtime() const {
  return endtime_;
}
inline void DailyRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool DailyRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 DailyRecharge::rewardtime() const {
  return rewardtime_;
}
inline void DailyRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool DailyRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& DailyRecharge::des() const {
  return *des_;
}
inline void DailyRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* DailyRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.DailyRechargeInfo dailyrechargeinfo = 7;
inline int DailyRecharge::dailyrechargeinfo_size() const {
  return dailyrechargeinfo_.size();
}
inline void DailyRecharge::clear_dailyrechargeinfo() {
  dailyrechargeinfo_.Clear();
}
inline const ::ActivitiesExProto::DailyRechargeInfo& DailyRecharge::dailyrechargeinfo(int index) const {
  return dailyrechargeinfo_.Get(index);
}
inline ::ActivitiesExProto::DailyRechargeInfo* DailyRecharge::mutable_dailyrechargeinfo(int index) {
  return dailyrechargeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::DailyRechargeInfo* DailyRecharge::add_dailyrechargeinfo() {
  return dailyrechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyRechargeInfo >&
DailyRecharge::dailyrechargeinfo() const {
  return dailyrechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyRechargeInfo >*
DailyRecharge::mutable_dailyrechargeinfo() {
  return &dailyrechargeinfo_;
}

// -------------------------------------------------------------------

// DailyRechargeInfo

// optional string des = 1;
inline bool DailyRechargeInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyRechargeInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyRechargeInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyRechargeInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& DailyRechargeInfo::des() const {
  return *des_;
}
inline void DailyRechargeInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyRechargeInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyRechargeInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyRechargeInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* DailyRechargeInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyRechargeInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int DailyRechargeInfo::itemid_size() const {
  return itemid_.size();
}
inline void DailyRechargeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 DailyRechargeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void DailyRechargeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void DailyRechargeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DailyRechargeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DailyRechargeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int DailyRechargeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void DailyRechargeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 DailyRechargeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void DailyRechargeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void DailyRechargeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DailyRechargeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DailyRechargeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool DailyRechargeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyRechargeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyRechargeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyRechargeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyRechargeInfo::state() const {
  return state_;
}
inline void DailyRechargeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool DailyRechargeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyRechargeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyRechargeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyRechargeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 DailyRechargeInfo::index() const {
  return index_;
}
inline void DailyRechargeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// SingleRecharge

// required int32 type = 1;
inline bool SingleRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SingleRecharge::type() const {
  return type_;
}
inline void SingleRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool SingleRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& SingleRecharge::activityname() const {
  return *activityname_;
}
inline void SingleRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void SingleRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void SingleRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SingleRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* SingleRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SingleRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool SingleRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 SingleRecharge::begintime() const {
  return begintime_;
}
inline void SingleRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool SingleRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SingleRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SingleRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SingleRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 SingleRecharge::endtime() const {
  return endtime_;
}
inline void SingleRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool SingleRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SingleRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SingleRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SingleRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 SingleRecharge::rewardtime() const {
  return rewardtime_;
}
inline void SingleRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool SingleRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SingleRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SingleRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SingleRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& SingleRecharge::des() const {
  return *des_;
}
inline void SingleRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void SingleRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void SingleRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SingleRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* SingleRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SingleRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.SingleRechargeInfo singlerechargeinfo = 7;
inline int SingleRecharge::singlerechargeinfo_size() const {
  return singlerechargeinfo_.size();
}
inline void SingleRecharge::clear_singlerechargeinfo() {
  singlerechargeinfo_.Clear();
}
inline const ::ActivitiesExProto::SingleRechargeInfo& SingleRecharge::singlerechargeinfo(int index) const {
  return singlerechargeinfo_.Get(index);
}
inline ::ActivitiesExProto::SingleRechargeInfo* SingleRecharge::mutable_singlerechargeinfo(int index) {
  return singlerechargeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::SingleRechargeInfo* SingleRecharge::add_singlerechargeinfo() {
  return singlerechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::SingleRechargeInfo >&
SingleRecharge::singlerechargeinfo() const {
  return singlerechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::SingleRechargeInfo >*
SingleRecharge::mutable_singlerechargeinfo() {
  return &singlerechargeinfo_;
}

// -------------------------------------------------------------------

// SingleRechargeInfo

// optional string des = 1;
inline bool SingleRechargeInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleRechargeInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleRechargeInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleRechargeInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& SingleRechargeInfo::des() const {
  return *des_;
}
inline void SingleRechargeInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void SingleRechargeInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void SingleRechargeInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SingleRechargeInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* SingleRechargeInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SingleRechargeInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int SingleRechargeInfo::itemid_size() const {
  return itemid_.size();
}
inline void SingleRechargeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 SingleRechargeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void SingleRechargeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void SingleRechargeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleRechargeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleRechargeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int SingleRechargeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void SingleRechargeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 SingleRechargeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void SingleRechargeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void SingleRechargeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SingleRechargeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SingleRechargeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool SingleRechargeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SingleRechargeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SingleRechargeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SingleRechargeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 SingleRechargeInfo::state() const {
  return state_;
}
inline void SingleRechargeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool SingleRechargeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SingleRechargeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SingleRechargeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SingleRechargeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SingleRechargeInfo::index() const {
  return index_;
}
inline void SingleRechargeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// AccRecharge

// required int32 type = 1;
inline bool AccRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AccRecharge::type() const {
  return type_;
}
inline void AccRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool AccRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& AccRecharge::activityname() const {
  return *activityname_;
}
inline void AccRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void AccRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void AccRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* AccRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool AccRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 AccRecharge::begintime() const {
  return begintime_;
}
inline void AccRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool AccRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 AccRecharge::endtime() const {
  return endtime_;
}
inline void AccRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool AccRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 AccRecharge::rewardtime() const {
  return rewardtime_;
}
inline void AccRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool AccRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AccRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AccRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AccRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& AccRecharge::des() const {
  return *des_;
}
inline void AccRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* AccRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.AccRechargeInfo accrechargeinfo = 7;
inline int AccRecharge::accrechargeinfo_size() const {
  return accrechargeinfo_.size();
}
inline void AccRecharge::clear_accrechargeinfo() {
  accrechargeinfo_.Clear();
}
inline const ::ActivitiesExProto::AccRechargeInfo& AccRecharge::accrechargeinfo(int index) const {
  return accrechargeinfo_.Get(index);
}
inline ::ActivitiesExProto::AccRechargeInfo* AccRecharge::mutable_accrechargeinfo(int index) {
  return accrechargeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::AccRechargeInfo* AccRecharge::add_accrechargeinfo() {
  return accrechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccRechargeInfo >&
AccRecharge::accrechargeinfo() const {
  return accrechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccRechargeInfo >*
AccRecharge::mutable_accrechargeinfo() {
  return &accrechargeinfo_;
}

// -------------------------------------------------------------------

// AccRechargeInfo

// optional string des = 1;
inline bool AccRechargeInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccRechargeInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccRechargeInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccRechargeInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& AccRechargeInfo::des() const {
  return *des_;
}
inline void AccRechargeInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccRechargeInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccRechargeInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccRechargeInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* AccRechargeInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccRechargeInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int AccRechargeInfo::itemid_size() const {
  return itemid_.size();
}
inline void AccRechargeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 AccRechargeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void AccRechargeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void AccRechargeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AccRechargeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AccRechargeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int AccRechargeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void AccRechargeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 AccRechargeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void AccRechargeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void AccRechargeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AccRechargeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AccRechargeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool AccRechargeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccRechargeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccRechargeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccRechargeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AccRechargeInfo::state() const {
  return state_;
}
inline void AccRechargeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool AccRechargeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccRechargeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccRechargeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccRechargeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 AccRechargeInfo::index() const {
  return index_;
}
inline void AccRechargeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// AccDayRecharge

// required int32 type = 1;
inline bool AccDayRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccDayRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccDayRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccDayRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AccDayRecharge::type() const {
  return type_;
}
inline void AccDayRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool AccDayRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccDayRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccDayRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccDayRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& AccDayRecharge::activityname() const {
  return *activityname_;
}
inline void AccDayRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void AccDayRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void AccDayRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccDayRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* AccDayRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccDayRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool AccDayRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccDayRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccDayRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccDayRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 AccDayRecharge::begintime() const {
  return begintime_;
}
inline void AccDayRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool AccDayRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccDayRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccDayRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccDayRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 AccDayRecharge::endtime() const {
  return endtime_;
}
inline void AccDayRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool AccDayRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccDayRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccDayRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccDayRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 AccDayRecharge::rewardtime() const {
  return rewardtime_;
}
inline void AccDayRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional int32 currentCount = 6;
inline bool AccDayRecharge::has_currentcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AccDayRecharge::set_has_currentcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AccDayRecharge::clear_has_currentcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AccDayRecharge::clear_currentcount() {
  currentcount_ = 0;
  clear_has_currentcount();
}
inline ::google::protobuf::int32 AccDayRecharge::currentcount() const {
  return currentcount_;
}
inline void AccDayRecharge::set_currentcount(::google::protobuf::int32 value) {
  set_has_currentcount();
  currentcount_ = value;
}

// optional int32 maxCount = 7;
inline bool AccDayRecharge::has_maxcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AccDayRecharge::set_has_maxcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AccDayRecharge::clear_has_maxcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AccDayRecharge::clear_maxcount() {
  maxcount_ = 0;
  clear_has_maxcount();
}
inline ::google::protobuf::int32 AccDayRecharge::maxcount() const {
  return maxcount_;
}
inline void AccDayRecharge::set_maxcount(::google::protobuf::int32 value) {
  set_has_maxcount();
  maxcount_ = value;
}

// optional string des = 8;
inline bool AccDayRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AccDayRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AccDayRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AccDayRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& AccDayRecharge::des() const {
  return *des_;
}
inline void AccDayRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccDayRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccDayRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccDayRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* AccDayRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccDayRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.AccDayRechargeInfo accdayrechargeinfo = 9;
inline int AccDayRecharge::accdayrechargeinfo_size() const {
  return accdayrechargeinfo_.size();
}
inline void AccDayRecharge::clear_accdayrechargeinfo() {
  accdayrechargeinfo_.Clear();
}
inline const ::ActivitiesExProto::AccDayRechargeInfo& AccDayRecharge::accdayrechargeinfo(int index) const {
  return accdayrechargeinfo_.Get(index);
}
inline ::ActivitiesExProto::AccDayRechargeInfo* AccDayRecharge::mutable_accdayrechargeinfo(int index) {
  return accdayrechargeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::AccDayRechargeInfo* AccDayRecharge::add_accdayrechargeinfo() {
  return accdayrechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccDayRechargeInfo >&
AccDayRecharge::accdayrechargeinfo() const {
  return accdayrechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccDayRechargeInfo >*
AccDayRecharge::mutable_accdayrechargeinfo() {
  return &accdayrechargeinfo_;
}

// -------------------------------------------------------------------

// AccDayRechargeInfo

// optional string des = 1;
inline bool AccDayRechargeInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccDayRechargeInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccDayRechargeInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccDayRechargeInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& AccDayRechargeInfo::des() const {
  return *des_;
}
inline void AccDayRechargeInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccDayRechargeInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccDayRechargeInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccDayRechargeInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* AccDayRechargeInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccDayRechargeInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int AccDayRechargeInfo::itemid_size() const {
  return itemid_.size();
}
inline void AccDayRechargeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 AccDayRechargeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void AccDayRechargeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void AccDayRechargeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AccDayRechargeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AccDayRechargeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int AccDayRechargeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void AccDayRechargeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 AccDayRechargeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void AccDayRechargeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void AccDayRechargeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AccDayRechargeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AccDayRechargeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool AccDayRechargeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccDayRechargeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccDayRechargeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccDayRechargeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AccDayRechargeInfo::state() const {
  return state_;
}
inline void AccDayRechargeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool AccDayRechargeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccDayRechargeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccDayRechargeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccDayRechargeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 AccDayRechargeInfo::index() const {
  return index_;
}
inline void AccDayRechargeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// DailyFirstRecharge

// required int32 type = 1;
inline bool DailyFirstRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyFirstRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyFirstRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyFirstRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DailyFirstRecharge::type() const {
  return type_;
}
inline void DailyFirstRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool DailyFirstRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyFirstRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyFirstRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyFirstRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& DailyFirstRecharge::activityname() const {
  return *activityname_;
}
inline void DailyFirstRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void DailyFirstRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void DailyFirstRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyFirstRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* DailyFirstRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyFirstRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool DailyFirstRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyFirstRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyFirstRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyFirstRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 DailyFirstRecharge::begintime() const {
  return begintime_;
}
inline void DailyFirstRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool DailyFirstRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyFirstRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyFirstRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyFirstRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 DailyFirstRecharge::endtime() const {
  return endtime_;
}
inline void DailyFirstRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool DailyFirstRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyFirstRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyFirstRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyFirstRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 DailyFirstRecharge::rewardtime() const {
  return rewardtime_;
}
inline void DailyFirstRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool DailyFirstRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyFirstRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyFirstRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyFirstRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& DailyFirstRecharge::des() const {
  return *des_;
}
inline void DailyFirstRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyFirstRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyFirstRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyFirstRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* DailyFirstRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyFirstRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.DailyFirstRechargeInfo dailyfristrechargeinfo = 7;
inline int DailyFirstRecharge::dailyfristrechargeinfo_size() const {
  return dailyfristrechargeinfo_.size();
}
inline void DailyFirstRecharge::clear_dailyfristrechargeinfo() {
  dailyfristrechargeinfo_.Clear();
}
inline const ::ActivitiesExProto::DailyFirstRechargeInfo& DailyFirstRecharge::dailyfristrechargeinfo(int index) const {
  return dailyfristrechargeinfo_.Get(index);
}
inline ::ActivitiesExProto::DailyFirstRechargeInfo* DailyFirstRecharge::mutable_dailyfristrechargeinfo(int index) {
  return dailyfristrechargeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::DailyFirstRechargeInfo* DailyFirstRecharge::add_dailyfristrechargeinfo() {
  return dailyfristrechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyFirstRechargeInfo >&
DailyFirstRecharge::dailyfristrechargeinfo() const {
  return dailyfristrechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::DailyFirstRechargeInfo >*
DailyFirstRecharge::mutable_dailyfristrechargeinfo() {
  return &dailyfristrechargeinfo_;
}

// -------------------------------------------------------------------

// DailyFirstRechargeInfo

// optional string des = 1;
inline bool DailyFirstRechargeInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyFirstRechargeInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyFirstRechargeInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyFirstRechargeInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& DailyFirstRechargeInfo::des() const {
  return *des_;
}
inline void DailyFirstRechargeInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyFirstRechargeInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void DailyFirstRechargeInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DailyFirstRechargeInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* DailyFirstRechargeInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DailyFirstRechargeInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int DailyFirstRechargeInfo::itemid_size() const {
  return itemid_.size();
}
inline void DailyFirstRechargeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 DailyFirstRechargeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void DailyFirstRechargeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void DailyFirstRechargeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DailyFirstRechargeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DailyFirstRechargeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int DailyFirstRechargeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void DailyFirstRechargeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 DailyFirstRechargeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void DailyFirstRechargeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void DailyFirstRechargeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DailyFirstRechargeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DailyFirstRechargeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool DailyFirstRechargeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyFirstRechargeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyFirstRechargeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyFirstRechargeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DailyFirstRechargeInfo::state() const {
  return state_;
}
inline void DailyFirstRechargeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool DailyFirstRechargeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyFirstRechargeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyFirstRechargeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyFirstRechargeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 DailyFirstRechargeInfo::index() const {
  return index_;
}
inline void DailyFirstRechargeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// MagicWeaponAdvance

// required int32 type = 1;
inline bool MagicWeaponAdvance::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicWeaponAdvance::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicWeaponAdvance::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicWeaponAdvance::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MagicWeaponAdvance::type() const {
  return type_;
}
inline void MagicWeaponAdvance::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool MagicWeaponAdvance::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicWeaponAdvance::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicWeaponAdvance::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicWeaponAdvance::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& MagicWeaponAdvance::activityname() const {
  return *activityname_;
}
inline void MagicWeaponAdvance::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void MagicWeaponAdvance::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void MagicWeaponAdvance::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MagicWeaponAdvance::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* MagicWeaponAdvance::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MagicWeaponAdvance::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool MagicWeaponAdvance::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MagicWeaponAdvance::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MagicWeaponAdvance::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MagicWeaponAdvance::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 MagicWeaponAdvance::begintime() const {
  return begintime_;
}
inline void MagicWeaponAdvance::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool MagicWeaponAdvance::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MagicWeaponAdvance::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MagicWeaponAdvance::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MagicWeaponAdvance::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 MagicWeaponAdvance::endtime() const {
  return endtime_;
}
inline void MagicWeaponAdvance::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool MagicWeaponAdvance::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MagicWeaponAdvance::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MagicWeaponAdvance::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MagicWeaponAdvance::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 MagicWeaponAdvance::rewardtime() const {
  return rewardtime_;
}
inline void MagicWeaponAdvance::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool MagicWeaponAdvance::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MagicWeaponAdvance::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MagicWeaponAdvance::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MagicWeaponAdvance::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& MagicWeaponAdvance::des() const {
  return *des_;
}
inline void MagicWeaponAdvance::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void MagicWeaponAdvance::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void MagicWeaponAdvance::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MagicWeaponAdvance::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* MagicWeaponAdvance::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MagicWeaponAdvance::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.MagicWeaponAdvanceInfo magicweaponadvanceinfo = 7;
inline int MagicWeaponAdvance::magicweaponadvanceinfo_size() const {
  return magicweaponadvanceinfo_.size();
}
inline void MagicWeaponAdvance::clear_magicweaponadvanceinfo() {
  magicweaponadvanceinfo_.Clear();
}
inline const ::ActivitiesExProto::MagicWeaponAdvanceInfo& MagicWeaponAdvance::magicweaponadvanceinfo(int index) const {
  return magicweaponadvanceinfo_.Get(index);
}
inline ::ActivitiesExProto::MagicWeaponAdvanceInfo* MagicWeaponAdvance::mutable_magicweaponadvanceinfo(int index) {
  return magicweaponadvanceinfo_.Mutable(index);
}
inline ::ActivitiesExProto::MagicWeaponAdvanceInfo* MagicWeaponAdvance::add_magicweaponadvanceinfo() {
  return magicweaponadvanceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::MagicWeaponAdvanceInfo >&
MagicWeaponAdvance::magicweaponadvanceinfo() const {
  return magicweaponadvanceinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::MagicWeaponAdvanceInfo >*
MagicWeaponAdvance::mutable_magicweaponadvanceinfo() {
  return &magicweaponadvanceinfo_;
}

// -------------------------------------------------------------------

// MagicWeaponAdvanceInfo

// optional string des = 1;
inline bool MagicWeaponAdvanceInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicWeaponAdvanceInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicWeaponAdvanceInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicWeaponAdvanceInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& MagicWeaponAdvanceInfo::des() const {
  return *des_;
}
inline void MagicWeaponAdvanceInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void MagicWeaponAdvanceInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void MagicWeaponAdvanceInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MagicWeaponAdvanceInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* MagicWeaponAdvanceInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MagicWeaponAdvanceInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int MagicWeaponAdvanceInfo::itemid_size() const {
  return itemid_.size();
}
inline void MagicWeaponAdvanceInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 MagicWeaponAdvanceInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void MagicWeaponAdvanceInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void MagicWeaponAdvanceInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MagicWeaponAdvanceInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MagicWeaponAdvanceInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int MagicWeaponAdvanceInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void MagicWeaponAdvanceInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 MagicWeaponAdvanceInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void MagicWeaponAdvanceInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void MagicWeaponAdvanceInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MagicWeaponAdvanceInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MagicWeaponAdvanceInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool MagicWeaponAdvanceInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MagicWeaponAdvanceInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MagicWeaponAdvanceInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MagicWeaponAdvanceInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 MagicWeaponAdvanceInfo::state() const {
  return state_;
}
inline void MagicWeaponAdvanceInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool MagicWeaponAdvanceInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MagicWeaponAdvanceInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MagicWeaponAdvanceInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MagicWeaponAdvanceInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MagicWeaponAdvanceInfo::index() const {
  return index_;
}
inline void MagicWeaponAdvanceInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// HorseAdvance

// required int32 type = 1;
inline bool HorseAdvance::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseAdvance::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseAdvance::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseAdvance::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HorseAdvance::type() const {
  return type_;
}
inline void HorseAdvance::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool HorseAdvance::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorseAdvance::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorseAdvance::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorseAdvance::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& HorseAdvance::activityname() const {
  return *activityname_;
}
inline void HorseAdvance::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void HorseAdvance::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void HorseAdvance::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HorseAdvance::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* HorseAdvance::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HorseAdvance::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool HorseAdvance::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorseAdvance::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorseAdvance::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorseAdvance::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 HorseAdvance::begintime() const {
  return begintime_;
}
inline void HorseAdvance::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool HorseAdvance::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HorseAdvance::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HorseAdvance::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HorseAdvance::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 HorseAdvance::endtime() const {
  return endtime_;
}
inline void HorseAdvance::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool HorseAdvance::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HorseAdvance::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HorseAdvance::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HorseAdvance::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 HorseAdvance::rewardtime() const {
  return rewardtime_;
}
inline void HorseAdvance::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool HorseAdvance::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HorseAdvance::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HorseAdvance::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HorseAdvance::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& HorseAdvance::des() const {
  return *des_;
}
inline void HorseAdvance::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void HorseAdvance::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void HorseAdvance::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HorseAdvance::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* HorseAdvance::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HorseAdvance::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.HorseAdvanceInfo horseadvanceinfo = 7;
inline int HorseAdvance::horseadvanceinfo_size() const {
  return horseadvanceinfo_.size();
}
inline void HorseAdvance::clear_horseadvanceinfo() {
  horseadvanceinfo_.Clear();
}
inline const ::ActivitiesExProto::HorseAdvanceInfo& HorseAdvance::horseadvanceinfo(int index) const {
  return horseadvanceinfo_.Get(index);
}
inline ::ActivitiesExProto::HorseAdvanceInfo* HorseAdvance::mutable_horseadvanceinfo(int index) {
  return horseadvanceinfo_.Mutable(index);
}
inline ::ActivitiesExProto::HorseAdvanceInfo* HorseAdvance::add_horseadvanceinfo() {
  return horseadvanceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::HorseAdvanceInfo >&
HorseAdvance::horseadvanceinfo() const {
  return horseadvanceinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::HorseAdvanceInfo >*
HorseAdvance::mutable_horseadvanceinfo() {
  return &horseadvanceinfo_;
}

// -------------------------------------------------------------------

// HorseAdvanceInfo

// optional string des = 1;
inline bool HorseAdvanceInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorseAdvanceInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorseAdvanceInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorseAdvanceInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& HorseAdvanceInfo::des() const {
  return *des_;
}
inline void HorseAdvanceInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void HorseAdvanceInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void HorseAdvanceInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HorseAdvanceInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* HorseAdvanceInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HorseAdvanceInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int HorseAdvanceInfo::itemid_size() const {
  return itemid_.size();
}
inline void HorseAdvanceInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 HorseAdvanceInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void HorseAdvanceInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void HorseAdvanceInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HorseAdvanceInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HorseAdvanceInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int HorseAdvanceInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void HorseAdvanceInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 HorseAdvanceInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void HorseAdvanceInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void HorseAdvanceInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HorseAdvanceInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HorseAdvanceInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool HorseAdvanceInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HorseAdvanceInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HorseAdvanceInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HorseAdvanceInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 HorseAdvanceInfo::state() const {
  return state_;
}
inline void HorseAdvanceInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool HorseAdvanceInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HorseAdvanceInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HorseAdvanceInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HorseAdvanceInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 HorseAdvanceInfo::index() const {
  return index_;
}
inline void HorseAdvanceInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// RelayRecharge

// required int32 type = 1;
inline bool RelayRecharge::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelayRecharge::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelayRecharge::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelayRecharge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RelayRecharge::type() const {
  return type_;
}
inline void RelayRecharge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool RelayRecharge::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelayRecharge::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelayRecharge::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelayRecharge::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& RelayRecharge::activityname() const {
  return *activityname_;
}
inline void RelayRecharge::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void RelayRecharge::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void RelayRecharge::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RelayRecharge::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* RelayRecharge::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RelayRecharge::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool RelayRecharge::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelayRecharge::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelayRecharge::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelayRecharge::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 RelayRecharge::begintime() const {
  return begintime_;
}
inline void RelayRecharge::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool RelayRecharge::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RelayRecharge::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RelayRecharge::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RelayRecharge::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 RelayRecharge::endtime() const {
  return endtime_;
}
inline void RelayRecharge::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool RelayRecharge::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RelayRecharge::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RelayRecharge::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RelayRecharge::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 RelayRecharge::rewardtime() const {
  return rewardtime_;
}
inline void RelayRecharge::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional int32 curgolden = 6;
inline bool RelayRecharge::has_curgolden() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RelayRecharge::set_has_curgolden() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RelayRecharge::clear_has_curgolden() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RelayRecharge::clear_curgolden() {
  curgolden_ = 0;
  clear_has_curgolden();
}
inline ::google::protobuf::int32 RelayRecharge::curgolden() const {
  return curgolden_;
}
inline void RelayRecharge::set_curgolden(::google::protobuf::int32 value) {
  set_has_curgolden();
  curgolden_ = value;
}

// optional int32 curpeople = 7;
inline bool RelayRecharge::has_curpeople() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RelayRecharge::set_has_curpeople() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RelayRecharge::clear_has_curpeople() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RelayRecharge::clear_curpeople() {
  curpeople_ = 0;
  clear_has_curpeople();
}
inline ::google::protobuf::int32 RelayRecharge::curpeople() const {
  return curpeople_;
}
inline void RelayRecharge::set_curpeople(::google::protobuf::int32 value) {
  set_has_curpeople();
  curpeople_ = value;
}

// optional string des = 8;
inline bool RelayRecharge::has_des() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RelayRecharge::set_has_des() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RelayRecharge::clear_has_des() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RelayRecharge::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& RelayRecharge::des() const {
  return *des_;
}
inline void RelayRecharge::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void RelayRecharge::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void RelayRecharge::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RelayRecharge::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* RelayRecharge::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RelayRecharge::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ActivitiesExProto.RelayRechargeInfo relayrechargeinfo = 9;
inline int RelayRecharge::relayrechargeinfo_size() const {
  return relayrechargeinfo_.size();
}
inline void RelayRecharge::clear_relayrechargeinfo() {
  relayrechargeinfo_.Clear();
}
inline const ::ActivitiesExProto::RelayRechargeInfo& RelayRecharge::relayrechargeinfo(int index) const {
  return relayrechargeinfo_.Get(index);
}
inline ::ActivitiesExProto::RelayRechargeInfo* RelayRecharge::mutable_relayrechargeinfo(int index) {
  return relayrechargeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::RelayRechargeInfo* RelayRecharge::add_relayrechargeinfo() {
  return relayrechargeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RelayRechargeInfo >&
RelayRecharge::relayrechargeinfo() const {
  return relayrechargeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RelayRechargeInfo >*
RelayRecharge::mutable_relayrechargeinfo() {
  return &relayrechargeinfo_;
}

// -------------------------------------------------------------------

// RelayRechargeInfo

// repeated int32 itemId = 1;
inline int RelayRechargeInfo::itemid_size() const {
  return itemid_.size();
}
inline void RelayRechargeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 RelayRechargeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void RelayRechargeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void RelayRechargeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RelayRechargeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RelayRechargeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 2;
inline int RelayRechargeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void RelayRechargeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 RelayRechargeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void RelayRechargeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void RelayRechargeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RelayRechargeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RelayRechargeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 3;
inline bool RelayRechargeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelayRechargeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelayRechargeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelayRechargeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 RelayRechargeInfo::state() const {
  return state_;
}
inline void RelayRechargeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 4;
inline bool RelayRechargeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RelayRechargeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RelayRechargeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RelayRechargeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 RelayRechargeInfo::index() const {
  return index_;
}
inline void RelayRechargeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 rechargegolden = 5;
inline bool RelayRechargeInfo::has_rechargegolden() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RelayRechargeInfo::set_has_rechargegolden() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RelayRechargeInfo::clear_has_rechargegolden() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RelayRechargeInfo::clear_rechargegolden() {
  rechargegolden_ = 0;
  clear_has_rechargegolden();
}
inline ::google::protobuf::int32 RelayRechargeInfo::rechargegolden() const {
  return rechargegolden_;
}
inline void RelayRechargeInfo::set_rechargegolden(::google::protobuf::int32 value) {
  set_has_rechargegolden();
  rechargegolden_ = value;
}

// optional int32 rechargepeople = 6;
inline bool RelayRechargeInfo::has_rechargepeople() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RelayRechargeInfo::set_has_rechargepeople() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RelayRechargeInfo::clear_has_rechargepeople() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RelayRechargeInfo::clear_rechargepeople() {
  rechargepeople_ = 0;
  clear_has_rechargepeople();
}
inline ::google::protobuf::int32 RelayRechargeInfo::rechargepeople() const {
  return rechargepeople_;
}
inline void RelayRechargeInfo::set_rechargepeople(::google::protobuf::int32 value) {
  set_has_rechargepeople();
  rechargepeople_ = value;
}

// -------------------------------------------------------------------

// Compensate

// required int32 type = 1;
inline bool Compensate::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Compensate::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Compensate::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Compensate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Compensate::type() const {
  return type_;
}
inline void Compensate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required string activityName = 2;
inline bool Compensate::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Compensate::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Compensate::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Compensate::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& Compensate::activityname() const {
  return *activityname_;
}
inline void Compensate::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void Compensate::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void Compensate::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Compensate::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* Compensate::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Compensate::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool Compensate::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Compensate::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Compensate::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Compensate::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 Compensate::begintime() const {
  return begintime_;
}
inline void Compensate::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool Compensate::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Compensate::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Compensate::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Compensate::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 Compensate::endtime() const {
  return endtime_;
}
inline void Compensate::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 AnnounceTime = 5;
inline bool Compensate::has_announcetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Compensate::set_has_announcetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Compensate::clear_has_announcetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Compensate::clear_announcetime() {
  announcetime_ = GOOGLE_LONGLONG(0);
  clear_has_announcetime();
}
inline ::google::protobuf::int64 Compensate::announcetime() const {
  return announcetime_;
}
inline void Compensate::set_announcetime(::google::protobuf::int64 value) {
  set_has_announcetime();
  announcetime_ = value;
}

// optional string des = 6;
inline bool Compensate::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Compensate::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Compensate::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Compensate::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& Compensate::des() const {
  return *des_;
}
inline void Compensate::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void Compensate::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void Compensate::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Compensate::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* Compensate::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Compensate::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 7;
inline int Compensate::itemid_size() const {
  return itemid_.size();
}
inline void Compensate::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 Compensate::itemid(int index) const {
  return itemid_.Get(index);
}
inline void Compensate::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void Compensate::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Compensate::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Compensate::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 8;
inline int Compensate::itemnum_size() const {
  return itemnum_.size();
}
inline void Compensate::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 Compensate::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void Compensate::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void Compensate::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Compensate::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Compensate::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 9;
inline bool Compensate::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Compensate::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Compensate::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Compensate::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Compensate::state() const {
  return state_;
}
inline void Compensate::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// AccConsume

// required int32 type = 1;
inline bool AccConsume::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccConsume::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccConsume::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccConsume::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AccConsume::type() const {
  return type_;
}
inline void AccConsume::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string activityname = 2;
inline bool AccConsume::has_activityname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccConsume::set_has_activityname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccConsume::clear_has_activityname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccConsume::clear_activityname() {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    activityname_->clear();
  }
  clear_has_activityname();
}
inline const ::std::string& AccConsume::activityname() const {
  return *activityname_;
}
inline void AccConsume::set_activityname(const ::std::string& value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void AccConsume::set_activityname(const char* value) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(value);
}
inline void AccConsume::set_activityname(const char* value, size_t size) {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  activityname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccConsume::mutable_activityname() {
  set_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    activityname_ = new ::std::string;
  }
  return activityname_;
}
inline ::std::string* AccConsume::release_activityname() {
  clear_has_activityname();
  if (activityname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = activityname_;
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccConsume::set_allocated_activityname(::std::string* activityname) {
  if (activityname_ != &::google::protobuf::internal::kEmptyString) {
    delete activityname_;
  }
  if (activityname) {
    set_has_activityname();
    activityname_ = activityname;
  } else {
    clear_has_activityname();
    activityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 beginTime = 3;
inline bool AccConsume::has_begintime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccConsume::set_has_begintime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccConsume::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccConsume::clear_begintime() {
  begintime_ = GOOGLE_LONGLONG(0);
  clear_has_begintime();
}
inline ::google::protobuf::int64 AccConsume::begintime() const {
  return begintime_;
}
inline void AccConsume::set_begintime(::google::protobuf::int64 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int64 endTime = 4;
inline bool AccConsume::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccConsume::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccConsume::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccConsume::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 AccConsume::endtime() const {
  return endtime_;
}
inline void AccConsume::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int64 rewardTime = 5;
inline bool AccConsume::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccConsume::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccConsume::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccConsume::clear_rewardtime() {
  rewardtime_ = GOOGLE_LONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::int64 AccConsume::rewardtime() const {
  return rewardtime_;
}
inline void AccConsume::set_rewardtime(::google::protobuf::int64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
}

// optional string des = 6;
inline bool AccConsume::has_des() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AccConsume::set_has_des() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AccConsume::clear_has_des() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AccConsume::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& AccConsume::des() const {
  return *des_;
}
inline void AccConsume::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccConsume::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccConsume::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccConsume::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* AccConsume::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccConsume::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 currentConsume = 7;
inline bool AccConsume::has_currentconsume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AccConsume::set_has_currentconsume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AccConsume::clear_has_currentconsume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AccConsume::clear_currentconsume() {
  currentconsume_ = 0;
  clear_has_currentconsume();
}
inline ::google::protobuf::int32 AccConsume::currentconsume() const {
  return currentconsume_;
}
inline void AccConsume::set_currentconsume(::google::protobuf::int32 value) {
  set_has_currentconsume();
  currentconsume_ = value;
}

// repeated .ActivitiesExProto.AccConsumeInfo accconsumeinfo = 8;
inline int AccConsume::accconsumeinfo_size() const {
  return accconsumeinfo_.size();
}
inline void AccConsume::clear_accconsumeinfo() {
  accconsumeinfo_.Clear();
}
inline const ::ActivitiesExProto::AccConsumeInfo& AccConsume::accconsumeinfo(int index) const {
  return accconsumeinfo_.Get(index);
}
inline ::ActivitiesExProto::AccConsumeInfo* AccConsume::mutable_accconsumeinfo(int index) {
  return accconsumeinfo_.Mutable(index);
}
inline ::ActivitiesExProto::AccConsumeInfo* AccConsume::add_accconsumeinfo() {
  return accconsumeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccConsumeInfo >&
AccConsume::accconsumeinfo() const {
  return accconsumeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::AccConsumeInfo >*
AccConsume::mutable_accconsumeinfo() {
  return &accconsumeinfo_;
}

// -------------------------------------------------------------------

// AccConsumeInfo

// optional string des = 1;
inline bool AccConsumeInfo::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccConsumeInfo::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccConsumeInfo::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccConsumeInfo::clear_des() {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& AccConsumeInfo::des() const {
  return *des_;
}
inline void AccConsumeInfo::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccConsumeInfo::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(value);
}
inline void AccConsumeInfo::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccConsumeInfo::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    des_ = new ::std::string;
  }
  return des_;
}
inline ::std::string* AccConsumeInfo::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccConsumeInfo::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::kEmptyString) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 itemId = 2;
inline int AccConsumeInfo::itemid_size() const {
  return itemid_.size();
}
inline void AccConsumeInfo::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 AccConsumeInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void AccConsumeInfo::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void AccConsumeInfo::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AccConsumeInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AccConsumeInfo::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 3;
inline int AccConsumeInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void AccConsumeInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 AccConsumeInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void AccConsumeInfo::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void AccConsumeInfo::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AccConsumeInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AccConsumeInfo::mutable_itemnum() {
  return &itemnum_;
}

// optional int32 state = 4;
inline bool AccConsumeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccConsumeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccConsumeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccConsumeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AccConsumeInfo::state() const {
  return state_;
}
inline void AccConsumeInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 index = 5;
inline bool AccConsumeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccConsumeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccConsumeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccConsumeInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 AccConsumeInfo::index() const {
  return index_;
}
inline void AccConsumeInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// ReqAcivityInfo

// required int32 activityId = 1;
inline bool ReqAcivityInfo::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAcivityInfo::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAcivityInfo::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAcivityInfo::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 ReqAcivityInfo::activityid() const {
  return activityid_;
}
inline void ReqAcivityInfo::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// -------------------------------------------------------------------

// RetAcivityInfo

// required int32 ret = 1;
inline bool RetAcivityInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAcivityInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAcivityInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAcivityInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetAcivityInfo::ret() const {
  return ret_;
}
inline void RetAcivityInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional .ActivitiesExProto.Activity activity = 2;
inline bool RetAcivityInfo::has_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetAcivityInfo::set_has_activity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetAcivityInfo::clear_has_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetAcivityInfo::clear_activity() {
  if (activity_ != NULL) activity_->::ActivitiesExProto::Activity::Clear();
  clear_has_activity();
}
inline const ::ActivitiesExProto::Activity& RetAcivityInfo::activity() const {
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::ActivitiesExProto::Activity* RetAcivityInfo::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::ActivitiesExProto::Activity;
  return activity_;
}
inline ::ActivitiesExProto::Activity* RetAcivityInfo::release_activity() {
  clear_has_activity();
  ::ActivitiesExProto::Activity* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void RetAcivityInfo::set_allocated_activity(::ActivitiesExProto::Activity* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
}

// -------------------------------------------------------------------

// ReqGetActivityReward

// required int32 activityId = 1;
inline bool ReqGetActivityReward::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetActivityReward::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetActivityReward::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetActivityReward::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 ReqGetActivityReward::activityid() const {
  return activityid_;
}
inline void ReqGetActivityReward::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// required int32 activityType = 2;
inline bool ReqGetActivityReward::has_activitytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGetActivityReward::set_has_activitytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGetActivityReward::clear_has_activitytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGetActivityReward::clear_activitytype() {
  activitytype_ = 0;
  clear_has_activitytype();
}
inline ::google::protobuf::int32 ReqGetActivityReward::activitytype() const {
  return activitytype_;
}
inline void ReqGetActivityReward::set_activitytype(::google::protobuf::int32 value) {
  set_has_activitytype();
  activitytype_ = value;
}

// required int32 index = 3;
inline bool ReqGetActivityReward::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqGetActivityReward::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqGetActivityReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqGetActivityReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ReqGetActivityReward::index() const {
  return index_;
}
inline void ReqGetActivityReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// RetGetActivityReward

// required int32 ret = 1;
inline bool RetGetActivityReward::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGetActivityReward::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGetActivityReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGetActivityReward::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGetActivityReward::ret() const {
  return ret_;
}
inline void RetGetActivityReward::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ReqActivityInvest

// required int32 activityId = 1;
inline bool ReqActivityInvest::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqActivityInvest::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqActivityInvest::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqActivityInvest::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 ReqActivityInvest::activityid() const {
  return activityid_;
}
inline void ReqActivityInvest::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// required int32 activityType = 2;
inline bool ReqActivityInvest::has_activitytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqActivityInvest::set_has_activitytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqActivityInvest::clear_has_activitytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqActivityInvest::clear_activitytype() {
  activitytype_ = 0;
  clear_has_activitytype();
}
inline ::google::protobuf::int32 ReqActivityInvest::activitytype() const {
  return activitytype_;
}
inline void ReqActivityInvest::set_activitytype(::google::protobuf::int32 value) {
  set_has_activitytype();
  activitytype_ = value;
}

// required int32 golden = 3;
inline bool ReqActivityInvest::has_golden() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqActivityInvest::set_has_golden() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqActivityInvest::clear_has_golden() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqActivityInvest::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 ReqActivityInvest::golden() const {
  return golden_;
}
inline void ReqActivityInvest::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// -------------------------------------------------------------------

// RetGetActivityInvest

// required int32 ret = 1;
inline bool RetGetActivityInvest::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGetActivityInvest::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGetActivityInvest::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGetActivityInvest::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetGetActivityInvest::ret() const {
  return ret_;
}
inline void RetGetActivityInvest::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// AskActivityInestCost

// required int64 charid = 1;
inline bool AskActivityInestCost::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskActivityInestCost::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskActivityInestCost::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskActivityInestCost::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 AskActivityInestCost::charid() const {
  return charid_;
}
inline void AskActivityInestCost::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 activityId = 2;
inline bool AskActivityInestCost::has_activityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskActivityInestCost::set_has_activityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskActivityInestCost::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskActivityInestCost::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 AskActivityInestCost::activityid() const {
  return activityid_;
}
inline void AskActivityInestCost::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// optional int32 activityType = 3;
inline bool AskActivityInestCost::has_activitytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskActivityInestCost::set_has_activitytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskActivityInestCost::clear_has_activitytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskActivityInestCost::clear_activitytype() {
  activitytype_ = 0;
  clear_has_activitytype();
}
inline ::google::protobuf::int32 AskActivityInestCost::activitytype() const {
  return activitytype_;
}
inline void AskActivityInestCost::set_activitytype(::google::protobuf::int32 value) {
  set_has_activitytype();
  activitytype_ = value;
}

// optional int32 golden = 4;
inline bool AskActivityInestCost::has_golden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskActivityInestCost::set_has_golden() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskActivityInestCost::clear_has_golden() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskActivityInestCost::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 AskActivityInestCost::golden() const {
  return golden_;
}
inline void AskActivityInestCost::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// -------------------------------------------------------------------

// RetActivityInestCost

// required int32 ret = 1;
inline bool RetActivityInestCost::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetActivityInestCost::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetActivityInestCost::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetActivityInestCost::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetActivityInestCost::ret() const {
  return ret_;
}
inline void RetActivityInestCost::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 activityId = 2;
inline bool RetActivityInestCost::has_activityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetActivityInestCost::set_has_activityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetActivityInestCost::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetActivityInestCost::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 RetActivityInestCost::activityid() const {
  return activityid_;
}
inline void RetActivityInestCost::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// optional int32 activityType = 3;
inline bool RetActivityInestCost::has_activitytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetActivityInestCost::set_has_activitytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetActivityInestCost::clear_has_activitytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetActivityInestCost::clear_activitytype() {
  activitytype_ = 0;
  clear_has_activitytype();
}
inline ::google::protobuf::int32 RetActivityInestCost::activitytype() const {
  return activitytype_;
}
inline void RetActivityInestCost::set_activitytype(::google::protobuf::int32 value) {
  set_has_activitytype();
  activitytype_ = value;
}

// optional int32 golden = 4;
inline bool RetActivityInestCost::has_golden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetActivityInestCost::set_has_golden() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetActivityInestCost::clear_has_golden() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetActivityInestCost::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 RetActivityInestCost::golden() const {
  return golden_;
}
inline void RetActivityInestCost::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// -------------------------------------------------------------------

// ReqActiveActivities

// -------------------------------------------------------------------

// RetActiveActivities

// required int32 ret = 1;
inline bool RetActiveActivities::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetActiveActivities::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetActiveActivities::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetActiveActivities::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetActiveActivities::ret() const {
  return ret_;
}
inline void RetActiveActivities::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated int32 activetyIdList = 2;
inline int RetActiveActivities::activetyidlist_size() const {
  return activetyidlist_.size();
}
inline void RetActiveActivities::clear_activetyidlist() {
  activetyidlist_.Clear();
}
inline ::google::protobuf::int32 RetActiveActivities::activetyidlist(int index) const {
  return activetyidlist_.Get(index);
}
inline void RetActiveActivities::set_activetyidlist(int index, ::google::protobuf::int32 value) {
  activetyidlist_.Set(index, value);
}
inline void RetActiveActivities::add_activetyidlist(::google::protobuf::int32 value) {
  activetyidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RetActiveActivities::activetyidlist() const {
  return activetyidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RetActiveActivities::mutable_activetyidlist() {
  return &activetyidlist_;
}

// -------------------------------------------------------------------

// ToClienActiveActivities

// repeated int32 activetyIdList = 1;
inline int ToClienActiveActivities::activetyidlist_size() const {
  return activetyidlist_.size();
}
inline void ToClienActiveActivities::clear_activetyidlist() {
  activetyidlist_.Clear();
}
inline ::google::protobuf::int32 ToClienActiveActivities::activetyidlist(int index) const {
  return activetyidlist_.Get(index);
}
inline void ToClienActiveActivities::set_activetyidlist(int index, ::google::protobuf::int32 value) {
  activetyidlist_.Set(index, value);
}
inline void ToClienActiveActivities::add_activetyidlist(::google::protobuf::int32 value) {
  activetyidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ToClienActiveActivities::activetyidlist() const {
  return activetyidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ToClienActiveActivities::mutable_activetyidlist() {
  return &activetyidlist_;
}

// -------------------------------------------------------------------

// SysActivityReward

// required int64 charid = 1;
inline bool SysActivityReward::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysActivityReward::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysActivityReward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysActivityReward::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SysActivityReward::charid() const {
  return charid_;
}
inline void SysActivityReward::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 activityId = 2;
inline bool SysActivityReward::has_activityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SysActivityReward::set_has_activityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SysActivityReward::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SysActivityReward::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 SysActivityReward::activityid() const {
  return activityid_;
}
inline void SysActivityReward::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// required int32 activityType = 3;
inline bool SysActivityReward::has_activitytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SysActivityReward::set_has_activitytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SysActivityReward::clear_has_activitytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SysActivityReward::clear_activitytype() {
  activitytype_ = 0;
  clear_has_activitytype();
}
inline ::google::protobuf::int32 SysActivityReward::activitytype() const {
  return activitytype_;
}
inline void SysActivityReward::set_activitytype(::google::protobuf::int32 value) {
  set_has_activitytype();
  activitytype_ = value;
}

// required int32 index = 4;
inline bool SysActivityReward::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SysActivityReward::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SysActivityReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SysActivityReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SysActivityReward::index() const {
  return index_;
}
inline void SysActivityReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 golden = 5;
inline bool SysActivityReward::has_golden() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SysActivityReward::set_has_golden() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SysActivityReward::clear_has_golden() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SysActivityReward::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 SysActivityReward::golden() const {
  return golden_;
}
inline void SysActivityReward::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// optional int32 bgolden = 6;
inline bool SysActivityReward::has_bgolden() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SysActivityReward::set_has_bgolden() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SysActivityReward::clear_has_bgolden() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SysActivityReward::clear_bgolden() {
  bgolden_ = 0;
  clear_has_bgolden();
}
inline ::google::protobuf::int32 SysActivityReward::bgolden() const {
  return bgolden_;
}
inline void SysActivityReward::set_bgolden(::google::protobuf::int32 value) {
  set_has_bgolden();
  bgolden_ = value;
}

// repeated int32 itemId = 7;
inline int SysActivityReward::itemid_size() const {
  return itemid_.size();
}
inline void SysActivityReward::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 SysActivityReward::itemid(int index) const {
  return itemid_.Get(index);
}
inline void SysActivityReward::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void SysActivityReward::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SysActivityReward::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SysActivityReward::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemNum = 8;
inline int SysActivityReward::itemnum_size() const {
  return itemnum_.size();
}
inline void SysActivityReward::clear_itemnum() {
  itemnum_.Clear();
}
inline ::google::protobuf::int32 SysActivityReward::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void SysActivityReward::set_itemnum(int index, ::google::protobuf::int32 value) {
  itemnum_.Set(index, value);
}
inline void SysActivityReward::add_itemnum(::google::protobuf::int32 value) {
  itemnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SysActivityReward::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SysActivityReward::mutable_itemnum() {
  return &itemnum_;
}

// -------------------------------------------------------------------

// RetSysActivityReward

// required int32 activityId = 1;
inline bool RetSysActivityReward::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetSysActivityReward::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetSysActivityReward::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetSysActivityReward::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 RetSysActivityReward::activityid() const {
  return activityid_;
}
inline void RetSysActivityReward::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// required int32 activityType = 2;
inline bool RetSysActivityReward::has_activitytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetSysActivityReward::set_has_activitytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetSysActivityReward::clear_has_activitytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetSysActivityReward::clear_activitytype() {
  activitytype_ = 0;
  clear_has_activitytype();
}
inline ::google::protobuf::int32 RetSysActivityReward::activitytype() const {
  return activitytype_;
}
inline void RetSysActivityReward::set_activitytype(::google::protobuf::int32 value) {
  set_has_activitytype();
  activitytype_ = value;
}

// required int32 index = 3;
inline bool RetSysActivityReward::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetSysActivityReward::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetSysActivityReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetSysActivityReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 RetSysActivityReward::index() const {
  return index_;
}
inline void RetSysActivityReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 ret = 4;
inline bool RetSysActivityReward::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetSysActivityReward::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetSysActivityReward::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetSysActivityReward::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 RetSysActivityReward::ret() const {
  return ret_;
}
inline void RetSysActivityReward::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ActivityReward

// required int64 charid = 1;
inline bool ActivityReward::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityReward::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityReward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityReward::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ActivityReward::charid() const {
  return charid_;
}
inline void ActivityReward::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// repeated .ActivitiesExProto.ActivityRewardList activity = 2;
inline int ActivityReward::activity_size() const {
  return activity_.size();
}
inline void ActivityReward::clear_activity() {
  activity_.Clear();
}
inline const ::ActivitiesExProto::ActivityRewardList& ActivityReward::activity(int index) const {
  return activity_.Get(index);
}
inline ::ActivitiesExProto::ActivityRewardList* ActivityReward::mutable_activity(int index) {
  return activity_.Mutable(index);
}
inline ::ActivitiesExProto::ActivityRewardList* ActivityReward::add_activity() {
  return activity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardList >&
ActivityReward::activity() const {
  return activity_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardList >*
ActivityReward::mutable_activity() {
  return &activity_;
}

// -------------------------------------------------------------------

// ActivityRewardList

// required int32 activityId = 1;
inline bool ActivityRewardList::has_activityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityRewardList::set_has_activityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityRewardList::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityRewardList::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 ActivityRewardList::activityid() const {
  return activityid_;
}
inline void ActivityRewardList::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
}

// repeated .ActivitiesExProto.ActivityRewardTinyList tinyList = 2;
inline int ActivityRewardList::tinylist_size() const {
  return tinylist_.size();
}
inline void ActivityRewardList::clear_tinylist() {
  tinylist_.Clear();
}
inline const ::ActivitiesExProto::ActivityRewardTinyList& ActivityRewardList::tinylist(int index) const {
  return tinylist_.Get(index);
}
inline ::ActivitiesExProto::ActivityRewardTinyList* ActivityRewardList::mutable_tinylist(int index) {
  return tinylist_.Mutable(index);
}
inline ::ActivitiesExProto::ActivityRewardTinyList* ActivityRewardList::add_tinylist() {
  return tinylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardTinyList >&
ActivityRewardList::tinylist() const {
  return tinylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::ActivityRewardTinyList >*
ActivityRewardList::mutable_tinylist() {
  return &tinylist_;
}

// -------------------------------------------------------------------

// ActivityRewardTinyList

// required int32 tinyType = 1;
inline bool ActivityRewardTinyList::has_tinytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityRewardTinyList::set_has_tinytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityRewardTinyList::clear_has_tinytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityRewardTinyList::clear_tinytype() {
  tinytype_ = 0;
  clear_has_tinytype();
}
inline ::google::protobuf::int32 ActivityRewardTinyList::tinytype() const {
  return tinytype_;
}
inline void ActivityRewardTinyList::set_tinytype(::google::protobuf::int32 value) {
  set_has_tinytype();
  tinytype_ = value;
}

// optional int32 golden = 2;
inline bool ActivityRewardTinyList::has_golden() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityRewardTinyList::set_has_golden() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityRewardTinyList::clear_has_golden() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityRewardTinyList::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 ActivityRewardTinyList::golden() const {
  return golden_;
}
inline void ActivityRewardTinyList::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// optional int64 ntime = 3;
inline bool ActivityRewardTinyList::has_ntime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityRewardTinyList::set_has_ntime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityRewardTinyList::clear_has_ntime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityRewardTinyList::clear_ntime() {
  ntime_ = GOOGLE_LONGLONG(0);
  clear_has_ntime();
}
inline ::google::protobuf::int64 ActivityRewardTinyList::ntime() const {
  return ntime_;
}
inline void ActivityRewardTinyList::set_ntime(::google::protobuf::int64 value) {
  set_has_ntime();
  ntime_ = value;
}

// repeated .ActivitiesExProto.RewardList rewardList = 4;
inline int ActivityRewardTinyList::rewardlist_size() const {
  return rewardlist_.size();
}
inline void ActivityRewardTinyList::clear_rewardlist() {
  rewardlist_.Clear();
}
inline const ::ActivitiesExProto::RewardList& ActivityRewardTinyList::rewardlist(int index) const {
  return rewardlist_.Get(index);
}
inline ::ActivitiesExProto::RewardList* ActivityRewardTinyList::mutable_rewardlist(int index) {
  return rewardlist_.Mutable(index);
}
inline ::ActivitiesExProto::RewardList* ActivityRewardTinyList::add_rewardlist() {
  return rewardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RewardList >&
ActivityRewardTinyList::rewardlist() const {
  return rewardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActivitiesExProto::RewardList >*
ActivityRewardTinyList::mutable_rewardlist() {
  return &rewardlist_;
}

// -------------------------------------------------------------------

// RewardList

// required int32 index = 1;
inline bool RewardList::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardList::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardList::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardList::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 RewardList::index() const {
  return index_;
}
inline void RewardList::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 statue = 2;
inline bool RewardList::has_statue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardList::set_has_statue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardList::clear_has_statue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardList::clear_statue() {
  statue_ = 0;
  clear_has_statue();
}
inline ::google::protobuf::int32 RewardList::statue() const {
  return statue_;
}
inline void RewardList::set_statue(::google::protobuf::int32 value) {
  set_has_statue();
  statue_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ActivitiesExProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSProtoc_2fMS_5fNewActivities_2eproto__INCLUDED
