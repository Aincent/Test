// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharLogin/MagicWeapon.proto

#ifndef PROTOBUF_CharLogin_2fMagicWeapon_2eproto__INCLUDED
#define PROTOBUF_CharLogin_2fMagicWeapon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MagicWeapon {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

class PassiveTempSkill;
class ClientMagicWeapon;
class MagicStatistics;
class RequestAdvanceMagic;
class MagicItemList;
class RetAdvanceMagic;

// ===================================================================

class PassiveTempSkill : public ::google::protobuf::Message {
 public:
  PassiveTempSkill();
  virtual ~PassiveTempSkill();

  PassiveTempSkill(const PassiveTempSkill& from);

  inline PassiveTempSkill& operator=(const PassiveTempSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassiveTempSkill& default_instance();

  void Swap(PassiveTempSkill* other);

  // implements Message ----------------------------------------------

  PassiveTempSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassiveTempSkill& from);
  void MergeFrom(const PassiveTempSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 skillid = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MagicWeapon.PassiveTempSkill)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

  void InitAsDefaultInstance();
  static PassiveTempSkill* default_instance_;
};
// -------------------------------------------------------------------

class ClientMagicWeapon : public ::google::protobuf::Message {
 public:
  ClientMagicWeapon();
  virtual ~ClientMagicWeapon();

  ClientMagicWeapon(const ClientMagicWeapon& from);

  inline ClientMagicWeapon& operator=(const ClientMagicWeapon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMagicWeapon& default_instance();

  void Swap(ClientMagicWeapon* other);

  // implements Message ----------------------------------------------

  ClientMagicWeapon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientMagicWeapon& from);
  void MergeFrom(const ClientMagicWeapon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 skillid = 3;
  inline int skillid_size() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 3;
  inline ::google::protobuf::int32 skillid(int index) const;
  inline void set_skillid(int index, ::google::protobuf::int32 value);
  inline void add_skillid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      skillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_skillid();

  // optional int64 advancetime = 4;
  inline bool has_advancetime() const;
  inline void clear_advancetime();
  static const int kAdvancetimeFieldNumber = 4;
  inline ::google::protobuf::int64 advancetime() const;
  inline void set_advancetime(::google::protobuf::int64 value);

  // optional int32 beginTime = 5;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 5;
  inline ::google::protobuf::int32 begintime() const;
  inline void set_begintime(::google::protobuf::int32 value);

  // optional int32 tempID = 6;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 6;
  inline ::google::protobuf::int32 tempid() const;
  inline void set_tempid(::google::protobuf::int32 value);

  // repeated .MagicWeapon.PassiveTempSkill passiveSkillList = 7;
  inline int passiveskilllist_size() const;
  inline void clear_passiveskilllist();
  static const int kPassiveSkillListFieldNumber = 7;
  inline const ::MagicWeapon::PassiveTempSkill& passiveskilllist(int index) const;
  inline ::MagicWeapon::PassiveTempSkill* mutable_passiveskilllist(int index);
  inline ::MagicWeapon::PassiveTempSkill* add_passiveskilllist();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicWeapon::PassiveTempSkill >&
      passiveskilllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicWeapon::PassiveTempSkill >*
      mutable_passiveskilllist();

  // @@protoc_insertion_point(class_scope:MagicWeapon.ClientMagicWeapon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_advancetime();
  inline void clear_has_advancetime();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skillid_;
  ::google::protobuf::int64 advancetime_;
  ::google::protobuf::int32 begintime_;
  ::google::protobuf::int32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::MagicWeapon::PassiveTempSkill > passiveskilllist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

  void InitAsDefaultInstance();
  static ClientMagicWeapon* default_instance_;
};
// -------------------------------------------------------------------

class MagicStatistics : public ::google::protobuf::Message {
 public:
  MagicStatistics();
  virtual ~MagicStatistics();

  MagicStatistics(const MagicStatistics& from);

  inline MagicStatistics& operator=(const MagicStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicStatistics& default_instance();

  void Swap(MagicStatistics* other);

  // implements Message ----------------------------------------------

  MagicStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicStatistics& from);
  void MergeFrom(const MagicStatistics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 multiple = 1;
  inline bool has_multiple() const;
  inline void clear_multiple();
  static const int kMultipleFieldNumber = 1;
  inline ::google::protobuf::int32 multiple() const;
  inline void set_multiple(::google::protobuf::int32 value);

  // optional int32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::int32 counts() const;
  inline void set_counts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MagicWeapon.MagicStatistics)
 private:
  inline void set_has_multiple();
  inline void clear_has_multiple();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 multiple_;
  ::google::protobuf::int32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

  void InitAsDefaultInstance();
  static MagicStatistics* default_instance_;
};
// -------------------------------------------------------------------

class RequestAdvanceMagic : public ::google::protobuf::Message {
 public:
  RequestAdvanceMagic();
  virtual ~RequestAdvanceMagic();

  RequestAdvanceMagic(const RequestAdvanceMagic& from);

  inline RequestAdvanceMagic& operator=(const RequestAdvanceMagic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAdvanceMagic& default_instance();

  void Swap(RequestAdvanceMagic* other);

  // implements Message ----------------------------------------------

  RequestAdvanceMagic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAdvanceMagic& from);
  void MergeFrom(const RequestAdvanceMagic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bool isAutoBuy = 2;
  inline bool has_isautobuy() const;
  inline void clear_isautobuy();
  static const int kIsAutoBuyFieldNumber = 2;
  inline bool isautobuy() const;
  inline void set_isautobuy(bool value);

  // optional int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MagicWeapon.RequestAdvanceMagic)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isautobuy();
  inline void clear_has_isautobuy();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  bool isautobuy_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

  void InitAsDefaultInstance();
  static RequestAdvanceMagic* default_instance_;
};
// -------------------------------------------------------------------

class MagicItemList : public ::google::protobuf::Message {
 public:
  MagicItemList();
  virtual ~MagicItemList();

  MagicItemList(const MagicItemList& from);

  inline MagicItemList& operator=(const MagicItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicItemList& default_instance();

  void Swap(MagicItemList* other);

  // implements Message ----------------------------------------------

  MagicItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicItemList& from);
  void MergeFrom(const MagicItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 counts = 2;
  inline bool has_counts() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 2;
  inline ::google::protobuf::int32 counts() const;
  inline void set_counts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MagicWeapon.MagicItemList)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_counts();
  inline void clear_has_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

  void InitAsDefaultInstance();
  static MagicItemList* default_instance_;
};
// -------------------------------------------------------------------

class RetAdvanceMagic : public ::google::protobuf::Message {
 public:
  RetAdvanceMagic();
  virtual ~RetAdvanceMagic();

  RetAdvanceMagic(const RetAdvanceMagic& from);

  inline RetAdvanceMagic& operator=(const RetAdvanceMagic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetAdvanceMagic& default_instance();

  void Swap(RetAdvanceMagic* other);

  // implements Message ----------------------------------------------

  RetAdvanceMagic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetAdvanceMagic& from);
  void MergeFrom(const RetAdvanceMagic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 skillidList = 3;
  inline int skillidlist_size() const;
  inline void clear_skillidlist();
  static const int kSkillidListFieldNumber = 3;
  inline ::google::protobuf::int32 skillidlist(int index) const;
  inline void set_skillidlist(int index, ::google::protobuf::int32 value);
  inline void add_skillidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      skillidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_skillidlist();

  // repeated .MagicWeapon.MagicStatistics multipList = 4;
  inline int multiplist_size() const;
  inline void clear_multiplist();
  static const int kMultipListFieldNumber = 4;
  inline const ::MagicWeapon::MagicStatistics& multiplist(int index) const;
  inline ::MagicWeapon::MagicStatistics* mutable_multiplist(int index);
  inline ::MagicWeapon::MagicStatistics* add_multiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicStatistics >&
      multiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicStatistics >*
      mutable_multiplist();

  // optional int32 addAllExp = 5;
  inline bool has_addallexp() const;
  inline void clear_addallexp();
  static const int kAddAllExpFieldNumber = 5;
  inline ::google::protobuf::int32 addallexp() const;
  inline void set_addallexp(::google::protobuf::int32 value);

  // repeated .MagicWeapon.MagicItemList itemList = 6;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 6;
  inline const ::MagicWeapon::MagicItemList& itemlist(int index) const;
  inline ::MagicWeapon::MagicItemList* mutable_itemlist(int index);
  inline ::MagicWeapon::MagicItemList* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicItemList >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicItemList >*
      mutable_itemlist();

  // optional int32 golden = 7;
  inline bool has_golden() const;
  inline void clear_golden();
  static const int kGoldenFieldNumber = 7;
  inline ::google::protobuf::int32 golden() const;
  inline void set_golden(::google::protobuf::int32 value);

  // optional int32 money = 8;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 8;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 error = 9;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 9;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 stopError = 10;
  inline bool has_stoperror() const;
  inline void clear_stoperror();
  static const int kStopErrorFieldNumber = 10;
  inline ::google::protobuf::int32 stoperror() const;
  inline void set_stoperror(::google::protobuf::int32 value);

  // optional int32 type = 11;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 11;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MagicWeapon.RetAdvanceMagic)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_addallexp();
  inline void clear_has_addallexp();
  inline void set_has_golden();
  inline void clear_has_golden();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_stoperror();
  inline void clear_has_stoperror();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skillidlist_;
  ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicStatistics > multiplist_;
  ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicItemList > itemlist_;
  ::google::protobuf::int32 addallexp_;
  ::google::protobuf::int32 golden_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 stoperror_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_AssignDesc_CharLogin_2fMagicWeapon_2eproto();
  friend void protobuf_ShutdownFile_CharLogin_2fMagicWeapon_2eproto();

  void InitAsDefaultInstance();
  static RetAdvanceMagic* default_instance_;
};
// ===================================================================


// ===================================================================

// PassiveTempSkill

// optional int32 index = 1;
inline bool PassiveTempSkill::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassiveTempSkill::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassiveTempSkill::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassiveTempSkill::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 PassiveTempSkill::index() const {
  return index_;
}
inline void PassiveTempSkill::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 skillid = 2;
inline bool PassiveTempSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassiveTempSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassiveTempSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassiveTempSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 PassiveTempSkill::skillid() const {
  return skillid_;
}
inline void PassiveTempSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// ClientMagicWeapon

// required int32 id = 1;
inline bool ClientMagicWeapon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMagicWeapon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMagicWeapon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMagicWeapon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ClientMagicWeapon::id() const {
  return id_;
}
inline void ClientMagicWeapon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 exp = 2;
inline bool ClientMagicWeapon::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMagicWeapon::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMagicWeapon::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMagicWeapon::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 ClientMagicWeapon::exp() const {
  return exp_;
}
inline void ClientMagicWeapon::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 skillid = 3;
inline int ClientMagicWeapon::skillid_size() const {
  return skillid_.size();
}
inline void ClientMagicWeapon::clear_skillid() {
  skillid_.Clear();
}
inline ::google::protobuf::int32 ClientMagicWeapon::skillid(int index) const {
  return skillid_.Get(index);
}
inline void ClientMagicWeapon::set_skillid(int index, ::google::protobuf::int32 value) {
  skillid_.Set(index, value);
}
inline void ClientMagicWeapon::add_skillid(::google::protobuf::int32 value) {
  skillid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientMagicWeapon::skillid() const {
  return skillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientMagicWeapon::mutable_skillid() {
  return &skillid_;
}

// optional int64 advancetime = 4;
inline bool ClientMagicWeapon::has_advancetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientMagicWeapon::set_has_advancetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientMagicWeapon::clear_has_advancetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientMagicWeapon::clear_advancetime() {
  advancetime_ = GOOGLE_LONGLONG(0);
  clear_has_advancetime();
}
inline ::google::protobuf::int64 ClientMagicWeapon::advancetime() const {
  return advancetime_;
}
inline void ClientMagicWeapon::set_advancetime(::google::protobuf::int64 value) {
  set_has_advancetime();
  advancetime_ = value;
}

// optional int32 beginTime = 5;
inline bool ClientMagicWeapon::has_begintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientMagicWeapon::set_has_begintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientMagicWeapon::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientMagicWeapon::clear_begintime() {
  begintime_ = 0;
  clear_has_begintime();
}
inline ::google::protobuf::int32 ClientMagicWeapon::begintime() const {
  return begintime_;
}
inline void ClientMagicWeapon::set_begintime(::google::protobuf::int32 value) {
  set_has_begintime();
  begintime_ = value;
}

// optional int32 tempID = 6;
inline bool ClientMagicWeapon::has_tempid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientMagicWeapon::set_has_tempid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientMagicWeapon::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientMagicWeapon::clear_tempid() {
  tempid_ = 0;
  clear_has_tempid();
}
inline ::google::protobuf::int32 ClientMagicWeapon::tempid() const {
  return tempid_;
}
inline void ClientMagicWeapon::set_tempid(::google::protobuf::int32 value) {
  set_has_tempid();
  tempid_ = value;
}

// repeated .MagicWeapon.PassiveTempSkill passiveSkillList = 7;
inline int ClientMagicWeapon::passiveskilllist_size() const {
  return passiveskilllist_.size();
}
inline void ClientMagicWeapon::clear_passiveskilllist() {
  passiveskilllist_.Clear();
}
inline const ::MagicWeapon::PassiveTempSkill& ClientMagicWeapon::passiveskilllist(int index) const {
  return passiveskilllist_.Get(index);
}
inline ::MagicWeapon::PassiveTempSkill* ClientMagicWeapon::mutable_passiveskilllist(int index) {
  return passiveskilllist_.Mutable(index);
}
inline ::MagicWeapon::PassiveTempSkill* ClientMagicWeapon::add_passiveskilllist() {
  return passiveskilllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicWeapon::PassiveTempSkill >&
ClientMagicWeapon::passiveskilllist() const {
  return passiveskilllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicWeapon::PassiveTempSkill >*
ClientMagicWeapon::mutable_passiveskilllist() {
  return &passiveskilllist_;
}

// -------------------------------------------------------------------

// MagicStatistics

// optional int32 multiple = 1;
inline bool MagicStatistics::has_multiple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicStatistics::set_has_multiple() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicStatistics::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicStatistics::clear_multiple() {
  multiple_ = 0;
  clear_has_multiple();
}
inline ::google::protobuf::int32 MagicStatistics::multiple() const {
  return multiple_;
}
inline void MagicStatistics::set_multiple(::google::protobuf::int32 value) {
  set_has_multiple();
  multiple_ = value;
}

// optional int32 counts = 2;
inline bool MagicStatistics::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicStatistics::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicStatistics::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicStatistics::clear_counts() {
  counts_ = 0;
  clear_has_counts();
}
inline ::google::protobuf::int32 MagicStatistics::counts() const {
  return counts_;
}
inline void MagicStatistics::set_counts(::google::protobuf::int32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// RequestAdvanceMagic

// optional int32 type = 1;
inline bool RequestAdvanceMagic::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAdvanceMagic::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAdvanceMagic::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAdvanceMagic::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RequestAdvanceMagic::type() const {
  return type_;
}
inline void RequestAdvanceMagic::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional bool isAutoBuy = 2;
inline bool RequestAdvanceMagic::has_isautobuy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestAdvanceMagic::set_has_isautobuy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestAdvanceMagic::clear_has_isautobuy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestAdvanceMagic::clear_isautobuy() {
  isautobuy_ = false;
  clear_has_isautobuy();
}
inline bool RequestAdvanceMagic::isautobuy() const {
  return isautobuy_;
}
inline void RequestAdvanceMagic::set_isautobuy(bool value) {
  set_has_isautobuy();
  isautobuy_ = value;
}

// optional int32 id = 3;
inline bool RequestAdvanceMagic::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAdvanceMagic::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAdvanceMagic::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAdvanceMagic::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RequestAdvanceMagic::id() const {
  return id_;
}
inline void RequestAdvanceMagic::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MagicItemList

// optional int32 itemID = 1;
inline bool MagicItemList::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicItemList::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicItemList::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicItemList::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 MagicItemList::itemid() const {
  return itemid_;
}
inline void MagicItemList::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 counts = 2;
inline bool MagicItemList::has_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicItemList::set_has_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicItemList::clear_has_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicItemList::clear_counts() {
  counts_ = 0;
  clear_has_counts();
}
inline ::google::protobuf::int32 MagicItemList::counts() const {
  return counts_;
}
inline void MagicItemList::set_counts(::google::protobuf::int32 value) {
  set_has_counts();
  counts_ = value;
}

// -------------------------------------------------------------------

// RetAdvanceMagic

// required int32 id = 1;
inline bool RetAdvanceMagic::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetAdvanceMagic::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetAdvanceMagic::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetAdvanceMagic::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RetAdvanceMagic::id() const {
  return id_;
}
inline void RetAdvanceMagic::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 exp = 2;
inline bool RetAdvanceMagic::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetAdvanceMagic::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetAdvanceMagic::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetAdvanceMagic::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 RetAdvanceMagic::exp() const {
  return exp_;
}
inline void RetAdvanceMagic::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 skillidList = 3;
inline int RetAdvanceMagic::skillidlist_size() const {
  return skillidlist_.size();
}
inline void RetAdvanceMagic::clear_skillidlist() {
  skillidlist_.Clear();
}
inline ::google::protobuf::int32 RetAdvanceMagic::skillidlist(int index) const {
  return skillidlist_.Get(index);
}
inline void RetAdvanceMagic::set_skillidlist(int index, ::google::protobuf::int32 value) {
  skillidlist_.Set(index, value);
}
inline void RetAdvanceMagic::add_skillidlist(::google::protobuf::int32 value) {
  skillidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RetAdvanceMagic::skillidlist() const {
  return skillidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RetAdvanceMagic::mutable_skillidlist() {
  return &skillidlist_;
}

// repeated .MagicWeapon.MagicStatistics multipList = 4;
inline int RetAdvanceMagic::multiplist_size() const {
  return multiplist_.size();
}
inline void RetAdvanceMagic::clear_multiplist() {
  multiplist_.Clear();
}
inline const ::MagicWeapon::MagicStatistics& RetAdvanceMagic::multiplist(int index) const {
  return multiplist_.Get(index);
}
inline ::MagicWeapon::MagicStatistics* RetAdvanceMagic::mutable_multiplist(int index) {
  return multiplist_.Mutable(index);
}
inline ::MagicWeapon::MagicStatistics* RetAdvanceMagic::add_multiplist() {
  return multiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicStatistics >&
RetAdvanceMagic::multiplist() const {
  return multiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicStatistics >*
RetAdvanceMagic::mutable_multiplist() {
  return &multiplist_;
}

// optional int32 addAllExp = 5;
inline bool RetAdvanceMagic::has_addallexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RetAdvanceMagic::set_has_addallexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RetAdvanceMagic::clear_has_addallexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RetAdvanceMagic::clear_addallexp() {
  addallexp_ = 0;
  clear_has_addallexp();
}
inline ::google::protobuf::int32 RetAdvanceMagic::addallexp() const {
  return addallexp_;
}
inline void RetAdvanceMagic::set_addallexp(::google::protobuf::int32 value) {
  set_has_addallexp();
  addallexp_ = value;
}

// repeated .MagicWeapon.MagicItemList itemList = 6;
inline int RetAdvanceMagic::itemlist_size() const {
  return itemlist_.size();
}
inline void RetAdvanceMagic::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::MagicWeapon::MagicItemList& RetAdvanceMagic::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::MagicWeapon::MagicItemList* RetAdvanceMagic::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::MagicWeapon::MagicItemList* RetAdvanceMagic::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicItemList >&
RetAdvanceMagic::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicWeapon::MagicItemList >*
RetAdvanceMagic::mutable_itemlist() {
  return &itemlist_;
}

// optional int32 golden = 7;
inline bool RetAdvanceMagic::has_golden() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RetAdvanceMagic::set_has_golden() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RetAdvanceMagic::clear_has_golden() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RetAdvanceMagic::clear_golden() {
  golden_ = 0;
  clear_has_golden();
}
inline ::google::protobuf::int32 RetAdvanceMagic::golden() const {
  return golden_;
}
inline void RetAdvanceMagic::set_golden(::google::protobuf::int32 value) {
  set_has_golden();
  golden_ = value;
}

// optional int32 money = 8;
inline bool RetAdvanceMagic::has_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RetAdvanceMagic::set_has_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RetAdvanceMagic::clear_has_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RetAdvanceMagic::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 RetAdvanceMagic::money() const {
  return money_;
}
inline void RetAdvanceMagic::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 error = 9;
inline bool RetAdvanceMagic::has_error() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RetAdvanceMagic::set_has_error() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RetAdvanceMagic::clear_has_error() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RetAdvanceMagic::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RetAdvanceMagic::error() const {
  return error_;
}
inline void RetAdvanceMagic::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 stopError = 10;
inline bool RetAdvanceMagic::has_stoperror() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RetAdvanceMagic::set_has_stoperror() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RetAdvanceMagic::clear_has_stoperror() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RetAdvanceMagic::clear_stoperror() {
  stoperror_ = 0;
  clear_has_stoperror();
}
inline ::google::protobuf::int32 RetAdvanceMagic::stoperror() const {
  return stoperror_;
}
inline void RetAdvanceMagic::set_stoperror(::google::protobuf::int32 value) {
  set_has_stoperror();
  stoperror_ = value;
}

// optional int32 type = 11;
inline bool RetAdvanceMagic::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RetAdvanceMagic::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RetAdvanceMagic::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RetAdvanceMagic::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RetAdvanceMagic::type() const {
  return type_;
}
inline void RetAdvanceMagic::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MagicWeapon

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharLogin_2fMagicWeapon_2eproto__INCLUDED
