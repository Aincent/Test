// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharBattle/Battle.proto

#ifndef PROTOBUF_CharBattle_2fBattle_2eproto__INCLUDED
#define PROTOBUF_CharBattle_2fBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CharBattle {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

class ClientReqAttack;
class ClientReqUpgradeSkill;
class TOGMReqUpgradeSkill;
class GateReqAttack;
class SynClientAttack;
class BuffOperate;
class ToGTBuffOperate;
class SynToGateAttack;
class SynchObjAttackToGT;
class AttackAttChange;
class ObjectState;
class ClientReqRevival;
class GateReqRevival;
class RevivalData;
class ToGTRevival;
class ChangePkType;
class ReqGather;
class RetGather;
class DeadInfo;

// ===================================================================

class ClientReqAttack : public ::google::protobuf::Message {
 public:
  ClientReqAttack();
  virtual ~ClientReqAttack();

  ClientReqAttack(const ClientReqAttack& from);

  inline ClientReqAttack& operator=(const ClientReqAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqAttack& default_instance();

  void Swap(ClientReqAttack* other);

  // implements Message ----------------------------------------------

  ClientReqAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqAttack& from);
  void MergeFrom(const ClientReqAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional uint32 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // optional int32 xpos = 3;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 3;
  inline ::google::protobuf::int32 xpos() const;
  inline void set_xpos(::google::protobuf::int32 value);

  // optional int32 ypos = 4;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 4;
  inline ::google::protobuf::int32 ypos() const;
  inline void set_ypos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.ClientReqAttack)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::int32 xpos_;
  ::google::protobuf::int32 ypos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ClientReqAttack* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqUpgradeSkill : public ::google::protobuf::Message {
 public:
  ClientReqUpgradeSkill();
  virtual ~ClientReqUpgradeSkill();

  ClientReqUpgradeSkill(const ClientReqUpgradeSkill& from);

  inline ClientReqUpgradeSkill& operator=(const ClientReqUpgradeSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqUpgradeSkill& default_instance();

  void Swap(ClientReqUpgradeSkill* other);

  // implements Message ----------------------------------------------

  ClientReqUpgradeSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqUpgradeSkill& from);
  void MergeFrom(const ClientReqUpgradeSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.ClientReqUpgradeSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ClientReqUpgradeSkill* default_instance_;
};
// -------------------------------------------------------------------

class TOGMReqUpgradeSkill : public ::google::protobuf::Message {
 public:
  TOGMReqUpgradeSkill();
  virtual ~TOGMReqUpgradeSkill();

  TOGMReqUpgradeSkill(const TOGMReqUpgradeSkill& from);

  inline TOGMReqUpgradeSkill& operator=(const TOGMReqUpgradeSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOGMReqUpgradeSkill& default_instance();

  void Swap(TOGMReqUpgradeSkill* other);

  // implements Message ----------------------------------------------

  TOGMReqUpgradeSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOGMReqUpgradeSkill& from);
  void MergeFrom(const TOGMReqUpgradeSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 skillid = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.TOGMReqUpgradeSkill)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_skillid();
  inline void clear_has_skillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 skillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static TOGMReqUpgradeSkill* default_instance_;
};
// -------------------------------------------------------------------

class GateReqAttack : public ::google::protobuf::Message {
 public:
  GateReqAttack();
  virtual ~GateReqAttack();

  GateReqAttack(const GateReqAttack& from);

  inline GateReqAttack& operator=(const GateReqAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GateReqAttack& default_instance();

  void Swap(GateReqAttack* other);

  // implements Message ----------------------------------------------

  GateReqAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GateReqAttack& from);
  void MergeFrom(const GateReqAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBattle.ClientReqAttack req = 2;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 2;
  inline const ::CharBattle::ClientReqAttack& req() const;
  inline ::CharBattle::ClientReqAttack* mutable_req();
  inline ::CharBattle::ClientReqAttack* release_req();
  inline void set_allocated_req(::CharBattle::ClientReqAttack* req);

  // @@protoc_insertion_point(class_scope:CharBattle.GateReqAttack)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBattle::ClientReqAttack* req_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static GateReqAttack* default_instance_;
};
// -------------------------------------------------------------------

class SynClientAttack : public ::google::protobuf::Message {
 public:
  SynClientAttack();
  virtual ~SynClientAttack();

  SynClientAttack(const SynClientAttack& from);

  inline SynClientAttack& operator=(const SynClientAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynClientAttack& default_instance();

  void Swap(SynClientAttack* other);

  // implements Message ----------------------------------------------

  SynClientAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynClientAttack& from);
  void MergeFrom(const SynClientAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // required int32 begin = 2;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 2;
  inline ::google::protobuf::int32 begin() const;
  inline void set_begin(::google::protobuf::int32 value);

  // optional int32 target = 3;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 3;
  inline ::google::protobuf::int32 target() const;
  inline void set_target(::google::protobuf::int32 value);

  // optional int32 xpos = 4;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 4;
  inline ::google::protobuf::int32 xpos() const;
  inline void set_xpos(::google::protobuf::int32 value);

  // optional int32 ypos = 5;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 5;
  inline ::google::protobuf::int32 ypos() const;
  inline void set_ypos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.SynClientAttack)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 begin_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 xpos_;
  ::google::protobuf::int32 ypos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static SynClientAttack* default_instance_;
};
// -------------------------------------------------------------------

class BuffOperate : public ::google::protobuf::Message {
 public:
  BuffOperate();
  virtual ~BuffOperate();

  BuffOperate(const BuffOperate& from);

  inline BuffOperate& operator=(const BuffOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffOperate& default_instance();

  void Swap(BuffOperate* other);

  // implements Message ----------------------------------------------

  BuffOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffOperate& from);
  void MergeFrom(const BuffOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 onlyID = 1;
  inline bool has_onlyid() const;
  inline void clear_onlyid();
  static const int kOnlyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 onlyid() const;
  inline void set_onlyid(::google::protobuf::uint32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 targetid = 3;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::int32 targetid() const;
  inline void set_targetid(::google::protobuf::int32 value);

  // required bool type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline bool type() const;
  inline void set_type(bool value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.BuffOperate)
 private:
  inline void set_has_onlyid();
  inline void clear_has_onlyid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 onlyid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 targetid_;
  bool type_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static BuffOperate* default_instance_;
};
// -------------------------------------------------------------------

class ToGTBuffOperate : public ::google::protobuf::Message {
 public:
  ToGTBuffOperate();
  virtual ~ToGTBuffOperate();

  ToGTBuffOperate(const ToGTBuffOperate& from);

  inline ToGTBuffOperate& operator=(const ToGTBuffOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTBuffOperate& default_instance();

  void Swap(ToGTBuffOperate* other);

  // implements Message ----------------------------------------------

  ToGTBuffOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTBuffOperate& from);
  void MergeFrom(const ToGTBuffOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBattle.BuffOperate buf = 2;
  inline bool has_buf() const;
  inline void clear_buf();
  static const int kBufFieldNumber = 2;
  inline const ::CharBattle::BuffOperate& buf() const;
  inline ::CharBattle::BuffOperate* mutable_buf();
  inline ::CharBattle::BuffOperate* release_buf();
  inline void set_allocated_buf(::CharBattle::BuffOperate* buf);

  // @@protoc_insertion_point(class_scope:CharBattle.ToGTBuffOperate)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_buf();
  inline void clear_has_buf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBattle::BuffOperate* buf_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ToGTBuffOperate* default_instance_;
};
// -------------------------------------------------------------------

class SynToGateAttack : public ::google::protobuf::Message {
 public:
  SynToGateAttack();
  virtual ~SynToGateAttack();

  SynToGateAttack(const SynToGateAttack& from);

  inline SynToGateAttack& operator=(const SynToGateAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynToGateAttack& default_instance();

  void Swap(SynToGateAttack* other);

  // implements Message ----------------------------------------------

  SynToGateAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynToGateAttack& from);
  void MergeFrom(const SynToGateAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBattle.SynClientAttack content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::CharBattle::SynClientAttack& content() const;
  inline ::CharBattle::SynClientAttack* mutable_content();
  inline ::CharBattle::SynClientAttack* release_content();
  inline void set_allocated_content(::CharBattle::SynClientAttack* content);

  // @@protoc_insertion_point(class_scope:CharBattle.SynToGateAttack)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBattle::SynClientAttack* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static SynToGateAttack* default_instance_;
};
// -------------------------------------------------------------------

class SynchObjAttackToGT : public ::google::protobuf::Message {
 public:
  SynchObjAttackToGT();
  virtual ~SynchObjAttackToGT();

  SynchObjAttackToGT(const SynchObjAttackToGT& from);

  inline SynchObjAttackToGT& operator=(const SynchObjAttackToGT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynchObjAttackToGT& default_instance();

  void Swap(SynchObjAttackToGT* other);

  // implements Message ----------------------------------------------

  SynchObjAttackToGT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynchObjAttackToGT& from);
  void MergeFrom(const SynchObjAttackToGT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBattle.ObjectState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::CharBattle::ObjectState& state() const;
  inline ::CharBattle::ObjectState* mutable_state();
  inline ::CharBattle::ObjectState* release_state();
  inline void set_allocated_state(::CharBattle::ObjectState* state);

  // @@protoc_insertion_point(class_scope:CharBattle.SynchObjAttackToGT)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBattle::ObjectState* state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static SynchObjAttackToGT* default_instance_;
};
// -------------------------------------------------------------------

class AttackAttChange : public ::google::protobuf::Message {
 public:
  AttackAttChange();
  virtual ~AttackAttChange();

  AttackAttChange(const AttackAttChange& from);

  inline AttackAttChange& operator=(const AttackAttChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackAttChange& default_instance();

  void Swap(AttackAttChange* other);

  // implements Message ----------------------------------------------

  AttackAttChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttackAttChange& from);
  void MergeFrom(const AttackAttChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 type = 1;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type(int index) const;
  inline void set_type(int index, ::google::protobuf::int32 value);
  inline void add_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type();

  // repeated int64 value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value(int index) const;
  inline void set_value(int index, ::google::protobuf::int64 value);
  inline void add_value(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_value();

  // repeated int32 state = 3;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int32 value);
  inline void add_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_state();

  // @@protoc_insertion_point(class_scope:CharBattle.AttackAttChange)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static AttackAttChange* default_instance_;
};
// -------------------------------------------------------------------

class ObjectState : public ::google::protobuf::Message {
 public:
  ObjectState();
  virtual ~ObjectState();

  ObjectState(const ObjectState& from);

  inline ObjectState& operator=(const ObjectState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectState& default_instance();

  void Swap(ObjectState* other);

  // implements Message ----------------------------------------------

  ObjectState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectState& from);
  void MergeFrom(const ObjectState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // optional .CharBattle.AttackAttChange attr = 3;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 3;
  inline const ::CharBattle::AttackAttChange& attr() const;
  inline ::CharBattle::AttackAttChange* mutable_attr();
  inline ::CharBattle::AttackAttChange* release_attr();
  inline void set_allocated_attr(::CharBattle::AttackAttChange* attr);

  // @@protoc_insertion_point(class_scope:CharBattle.ObjectState)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CharBattle::AttackAttChange* attr_;
  ::google::protobuf::int32 key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ObjectState* default_instance_;
};
// -------------------------------------------------------------------

class ClientReqRevival : public ::google::protobuf::Message {
 public:
  ClientReqRevival();
  virtual ~ClientReqRevival();

  ClientReqRevival(const ClientReqRevival& from);

  inline ClientReqRevival& operator=(const ClientReqRevival& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientReqRevival& default_instance();

  void Swap(ClientReqRevival* other);

  // implements Message ----------------------------------------------

  ClientReqRevival* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientReqRevival& from);
  void MergeFrom(const ClientReqRevival& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.ClientReqRevival)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ClientReqRevival* default_instance_;
};
// -------------------------------------------------------------------

class GateReqRevival : public ::google::protobuf::Message {
 public:
  GateReqRevival();
  virtual ~GateReqRevival();

  GateReqRevival(const GateReqRevival& from);

  inline GateReqRevival& operator=(const GateReqRevival& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GateReqRevival& default_instance();

  void Swap(GateReqRevival* other);

  // implements Message ----------------------------------------------

  GateReqRevival* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GateReqRevival& from);
  void MergeFrom(const GateReqRevival& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.GateReqRevival)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static GateReqRevival* default_instance_;
};
// -------------------------------------------------------------------

class RevivalData : public ::google::protobuf::Message {
 public:
  RevivalData();
  virtual ~RevivalData();

  RevivalData(const RevivalData& from);

  inline RevivalData& operator=(const RevivalData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RevivalData& default_instance();

  void Swap(RevivalData* other);

  // implements Message ----------------------------------------------

  RevivalData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RevivalData& from);
  void MergeFrom(const RevivalData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);

  // optional int32 xpos = 2;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 2;
  inline ::google::protobuf::int32 xpos() const;
  inline void set_xpos(::google::protobuf::int32 value);

  // optional int32 ypos = 3;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 3;
  inline ::google::protobuf::int32 ypos() const;
  inline void set_ypos(::google::protobuf::int32 value);

  // required int32 key = 4;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 4;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // required int32 hp = 5;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 5;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // required int32 mp = 6;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 6;
  inline ::google::protobuf::int32 mp() const;
  inline void set_mp(::google::protobuf::int32 value);

  // optional int32 pkType = 7;
  inline bool has_pktype() const;
  inline void clear_pktype();
  static const int kPkTypeFieldNumber = 7;
  inline ::google::protobuf::int32 pktype() const;
  inline void set_pktype(::google::protobuf::int32 value);

  // optional bool consumeflag = 8;
  inline bool has_consumeflag() const;
  inline void clear_consumeflag();
  static const int kConsumeflagFieldNumber = 8;
  inline bool consumeflag() const;
  inline void set_consumeflag(bool value);

  // @@protoc_insertion_point(class_scope:CharBattle.RevivalData)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_pktype();
  inline void clear_has_pktype();
  inline void set_has_consumeflag();
  inline void clear_has_consumeflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 mapid_;
  ::google::protobuf::int32 xpos_;
  ::google::protobuf::int32 ypos_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 mp_;
  ::google::protobuf::int32 pktype_;
  bool consumeflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static RevivalData* default_instance_;
};
// -------------------------------------------------------------------

class ToGTRevival : public ::google::protobuf::Message {
 public:
  ToGTRevival();
  virtual ~ToGTRevival();

  ToGTRevival(const ToGTRevival& from);

  inline ToGTRevival& operator=(const ToGTRevival& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToGTRevival& default_instance();

  void Swap(ToGTRevival* other);

  // implements Message ----------------------------------------------

  ToGTRevival* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToGTRevival& from);
  void MergeFrom(const ToGTRevival& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // required .CharBattle.RevivalData req = 2;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 2;
  inline const ::CharBattle::RevivalData& req() const;
  inline ::CharBattle::RevivalData* mutable_req();
  inline ::CharBattle::RevivalData* release_req();
  inline void set_allocated_req(::CharBattle::RevivalData* req);

  // @@protoc_insertion_point(class_scope:CharBattle.ToGTRevival)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::CharBattle::RevivalData* req_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ToGTRevival* default_instance_;
};
// -------------------------------------------------------------------

class ChangePkType : public ::google::protobuf::Message {
 public:
  ChangePkType();
  virtual ~ChangePkType();

  ChangePkType(const ChangePkType& from);

  inline ChangePkType& operator=(const ChangePkType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangePkType& default_instance();

  void Swap(ChangePkType* other);

  // implements Message ----------------------------------------------

  ChangePkType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangePkType& from);
  void MergeFrom(const ChangePkType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.ChangePkType)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ChangePkType* default_instance_;
};
// -------------------------------------------------------------------

class ReqGather : public ::google::protobuf::Message {
 public:
  ReqGather();
  virtual ~ReqGather();

  ReqGather(const ReqGather& from);

  inline ReqGather& operator=(const ReqGather& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGather& default_instance();

  void Swap(ReqGather* other);

  // implements Message ----------------------------------------------

  ReqGather* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGather& from);
  void MergeFrom(const ReqGather& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 monsterid = 1;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsteridFieldNumber = 1;
  inline ::google::protobuf::int32 monsterid() const;
  inline void set_monsterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.ReqGather)
 private:
  inline void set_has_monsterid();
  inline void clear_has_monsterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 monsterid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static ReqGather* default_instance_;
};
// -------------------------------------------------------------------

class RetGather : public ::google::protobuf::Message {
 public:
  RetGather();
  virtual ~RetGather();

  RetGather(const RetGather& from);

  inline RetGather& operator=(const RetGather& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetGather& default_instance();

  void Swap(RetGather* other);

  // implements Message ----------------------------------------------

  RetGather* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetGather& from);
  void MergeFrom(const RetGather& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwerror = 1;
  inline bool has_dwerror() const;
  inline void clear_dwerror();
  static const int kDwerrorFieldNumber = 1;
  inline ::google::protobuf::int32 dwerror() const;
  inline void set_dwerror(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CharBattle.RetGather)
 private:
  inline void set_has_dwerror();
  inline void clear_has_dwerror();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwerror_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static RetGather* default_instance_;
};
// -------------------------------------------------------------------

class DeadInfo : public ::google::protobuf::Message {
 public:
  DeadInfo();
  virtual ~DeadInfo();

  DeadInfo(const DeadInfo& from);

  inline DeadInfo& operator=(const DeadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeadInfo& default_instance();

  void Swap(DeadInfo* other);

  // implements Message ----------------------------------------------

  DeadInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeadInfo& from);
  void MergeFrom(const DeadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CharBattle.DeadInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_AssignDesc_CharBattle_2fBattle_2eproto();
  friend void protobuf_ShutdownFile_CharBattle_2fBattle_2eproto();

  void InitAsDefaultInstance();
  static DeadInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientReqAttack

// required int32 skillid = 1;
inline bool ClientReqAttack::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqAttack::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqAttack::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqAttack::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 ClientReqAttack::skillid() const {
  return skillid_;
}
inline void ClientReqAttack::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 key = 2;
inline bool ClientReqAttack::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqAttack::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqAttack::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqAttack::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ClientReqAttack::key() const {
  return key_;
}
inline void ClientReqAttack::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// optional int32 xpos = 3;
inline bool ClientReqAttack::has_xpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientReqAttack::set_has_xpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientReqAttack::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientReqAttack::clear_xpos() {
  xpos_ = 0;
  clear_has_xpos();
}
inline ::google::protobuf::int32 ClientReqAttack::xpos() const {
  return xpos_;
}
inline void ClientReqAttack::set_xpos(::google::protobuf::int32 value) {
  set_has_xpos();
  xpos_ = value;
}

// optional int32 ypos = 4;
inline bool ClientReqAttack::has_ypos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientReqAttack::set_has_ypos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientReqAttack::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientReqAttack::clear_ypos() {
  ypos_ = 0;
  clear_has_ypos();
}
inline ::google::protobuf::int32 ClientReqAttack::ypos() const {
  return ypos_;
}
inline void ClientReqAttack::set_ypos(::google::protobuf::int32 value) {
  set_has_ypos();
  ypos_ = value;
}

// -------------------------------------------------------------------

// ClientReqUpgradeSkill

// required int32 skillid = 1;
inline bool ClientReqUpgradeSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqUpgradeSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqUpgradeSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqUpgradeSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 ClientReqUpgradeSkill::skillid() const {
  return skillid_;
}
inline void ClientReqUpgradeSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 type = 2;
inline bool ClientReqUpgradeSkill::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientReqUpgradeSkill::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientReqUpgradeSkill::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientReqUpgradeSkill::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ClientReqUpgradeSkill::type() const {
  return type_;
}
inline void ClientReqUpgradeSkill::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// TOGMReqUpgradeSkill

// required int64 charid = 1;
inline bool TOGMReqUpgradeSkill::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOGMReqUpgradeSkill::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOGMReqUpgradeSkill::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOGMReqUpgradeSkill::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 TOGMReqUpgradeSkill::charid() const {
  return charid_;
}
inline void TOGMReqUpgradeSkill::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 skillid = 2;
inline bool TOGMReqUpgradeSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOGMReqUpgradeSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOGMReqUpgradeSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOGMReqUpgradeSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 TOGMReqUpgradeSkill::skillid() const {
  return skillid_;
}
inline void TOGMReqUpgradeSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// -------------------------------------------------------------------

// GateReqAttack

// required int64 charid = 1;
inline bool GateReqAttack::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateReqAttack::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateReqAttack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateReqAttack::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GateReqAttack::charid() const {
  return charid_;
}
inline void GateReqAttack::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBattle.ClientReqAttack req = 2;
inline bool GateReqAttack::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateReqAttack::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateReqAttack::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateReqAttack::clear_req() {
  if (req_ != NULL) req_->::CharBattle::ClientReqAttack::Clear();
  clear_has_req();
}
inline const ::CharBattle::ClientReqAttack& GateReqAttack::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::CharBattle::ClientReqAttack* GateReqAttack::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::CharBattle::ClientReqAttack;
  return req_;
}
inline ::CharBattle::ClientReqAttack* GateReqAttack::release_req() {
  clear_has_req();
  ::CharBattle::ClientReqAttack* temp = req_;
  req_ = NULL;
  return temp;
}
inline void GateReqAttack::set_allocated_req(::CharBattle::ClientReqAttack* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// -------------------------------------------------------------------

// SynClientAttack

// required int32 skillid = 1;
inline bool SynClientAttack::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynClientAttack::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynClientAttack::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynClientAttack::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 SynClientAttack::skillid() const {
  return skillid_;
}
inline void SynClientAttack::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 begin = 2;
inline bool SynClientAttack::has_begin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynClientAttack::set_has_begin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynClientAttack::clear_has_begin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynClientAttack::clear_begin() {
  begin_ = 0;
  clear_has_begin();
}
inline ::google::protobuf::int32 SynClientAttack::begin() const {
  return begin_;
}
inline void SynClientAttack::set_begin(::google::protobuf::int32 value) {
  set_has_begin();
  begin_ = value;
}

// optional int32 target = 3;
inline bool SynClientAttack::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SynClientAttack::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SynClientAttack::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SynClientAttack::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 SynClientAttack::target() const {
  return target_;
}
inline void SynClientAttack::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
}

// optional int32 xpos = 4;
inline bool SynClientAttack::has_xpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SynClientAttack::set_has_xpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SynClientAttack::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SynClientAttack::clear_xpos() {
  xpos_ = 0;
  clear_has_xpos();
}
inline ::google::protobuf::int32 SynClientAttack::xpos() const {
  return xpos_;
}
inline void SynClientAttack::set_xpos(::google::protobuf::int32 value) {
  set_has_xpos();
  xpos_ = value;
}

// optional int32 ypos = 5;
inline bool SynClientAttack::has_ypos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SynClientAttack::set_has_ypos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SynClientAttack::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SynClientAttack::clear_ypos() {
  ypos_ = 0;
  clear_has_ypos();
}
inline ::google::protobuf::int32 SynClientAttack::ypos() const {
  return ypos_;
}
inline void SynClientAttack::set_ypos(::google::protobuf::int32 value) {
  set_has_ypos();
  ypos_ = value;
}

// -------------------------------------------------------------------

// BuffOperate

// required uint32 onlyID = 1;
inline bool BuffOperate::has_onlyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffOperate::set_has_onlyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffOperate::clear_has_onlyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffOperate::clear_onlyid() {
  onlyid_ = 0u;
  clear_has_onlyid();
}
inline ::google::protobuf::uint32 BuffOperate::onlyid() const {
  return onlyid_;
}
inline void BuffOperate::set_onlyid(::google::protobuf::uint32 value) {
  set_has_onlyid();
  onlyid_ = value;
}

// required int32 id = 2;
inline bool BuffOperate::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffOperate::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffOperate::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffOperate::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BuffOperate::id() const {
  return id_;
}
inline void BuffOperate::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 targetid = 3;
inline bool BuffOperate::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffOperate::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffOperate::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffOperate::clear_targetid() {
  targetid_ = 0;
  clear_has_targetid();
}
inline ::google::protobuf::int32 BuffOperate::targetid() const {
  return targetid_;
}
inline void BuffOperate::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
}

// required bool type = 4;
inline bool BuffOperate::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffOperate::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffOperate::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffOperate::clear_type() {
  type_ = false;
  clear_has_type();
}
inline bool BuffOperate::type() const {
  return type_;
}
inline void BuffOperate::set_type(bool value) {
  set_has_type();
  type_ = value;
}

// optional int32 time = 5;
inline bool BuffOperate::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffOperate::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffOperate::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffOperate::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 BuffOperate::time() const {
  return time_;
}
inline void BuffOperate::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ToGTBuffOperate

// required int64 charid = 1;
inline bool ToGTBuffOperate::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTBuffOperate::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTBuffOperate::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTBuffOperate::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTBuffOperate::charid() const {
  return charid_;
}
inline void ToGTBuffOperate::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBattle.BuffOperate buf = 2;
inline bool ToGTBuffOperate::has_buf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTBuffOperate::set_has_buf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTBuffOperate::clear_has_buf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTBuffOperate::clear_buf() {
  if (buf_ != NULL) buf_->::CharBattle::BuffOperate::Clear();
  clear_has_buf();
}
inline const ::CharBattle::BuffOperate& ToGTBuffOperate::buf() const {
  return buf_ != NULL ? *buf_ : *default_instance_->buf_;
}
inline ::CharBattle::BuffOperate* ToGTBuffOperate::mutable_buf() {
  set_has_buf();
  if (buf_ == NULL) buf_ = new ::CharBattle::BuffOperate;
  return buf_;
}
inline ::CharBattle::BuffOperate* ToGTBuffOperate::release_buf() {
  clear_has_buf();
  ::CharBattle::BuffOperate* temp = buf_;
  buf_ = NULL;
  return temp;
}
inline void ToGTBuffOperate::set_allocated_buf(::CharBattle::BuffOperate* buf) {
  delete buf_;
  buf_ = buf;
  if (buf) {
    set_has_buf();
  } else {
    clear_has_buf();
  }
}

// -------------------------------------------------------------------

// SynToGateAttack

// required int64 charid = 1;
inline bool SynToGateAttack::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynToGateAttack::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynToGateAttack::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynToGateAttack::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SynToGateAttack::charid() const {
  return charid_;
}
inline void SynToGateAttack::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBattle.SynClientAttack content = 2;
inline bool SynToGateAttack::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynToGateAttack::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynToGateAttack::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynToGateAttack::clear_content() {
  if (content_ != NULL) content_->::CharBattle::SynClientAttack::Clear();
  clear_has_content();
}
inline const ::CharBattle::SynClientAttack& SynToGateAttack::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::CharBattle::SynClientAttack* SynToGateAttack::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::CharBattle::SynClientAttack;
  return content_;
}
inline ::CharBattle::SynClientAttack* SynToGateAttack::release_content() {
  clear_has_content();
  ::CharBattle::SynClientAttack* temp = content_;
  content_ = NULL;
  return temp;
}
inline void SynToGateAttack::set_allocated_content(::CharBattle::SynClientAttack* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
}

// -------------------------------------------------------------------

// SynchObjAttackToGT

// required int64 charid = 1;
inline bool SynchObjAttackToGT::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynchObjAttackToGT::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynchObjAttackToGT::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynchObjAttackToGT::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SynchObjAttackToGT::charid() const {
  return charid_;
}
inline void SynchObjAttackToGT::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBattle.ObjectState state = 2;
inline bool SynchObjAttackToGT::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynchObjAttackToGT::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynchObjAttackToGT::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynchObjAttackToGT::clear_state() {
  if (state_ != NULL) state_->::CharBattle::ObjectState::Clear();
  clear_has_state();
}
inline const ::CharBattle::ObjectState& SynchObjAttackToGT::state() const {
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::CharBattle::ObjectState* SynchObjAttackToGT::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::CharBattle::ObjectState;
  return state_;
}
inline ::CharBattle::ObjectState* SynchObjAttackToGT::release_state() {
  clear_has_state();
  ::CharBattle::ObjectState* temp = state_;
  state_ = NULL;
  return temp;
}
inline void SynchObjAttackToGT::set_allocated_state(::CharBattle::ObjectState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
}

// -------------------------------------------------------------------

// AttackAttChange

// repeated int32 type = 1;
inline int AttackAttChange::type_size() const {
  return type_.size();
}
inline void AttackAttChange::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::int32 AttackAttChange::type(int index) const {
  return type_.Get(index);
}
inline void AttackAttChange::set_type(int index, ::google::protobuf::int32 value) {
  type_.Set(index, value);
}
inline void AttackAttChange::add_type(::google::protobuf::int32 value) {
  type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AttackAttChange::type() const {
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AttackAttChange::mutable_type() {
  return &type_;
}

// repeated int64 value = 2;
inline int AttackAttChange::value_size() const {
  return value_.size();
}
inline void AttackAttChange::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::int64 AttackAttChange::value(int index) const {
  return value_.Get(index);
}
inline void AttackAttChange::set_value(int index, ::google::protobuf::int64 value) {
  value_.Set(index, value);
}
inline void AttackAttChange::add_value(::google::protobuf::int64 value) {
  value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AttackAttChange::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AttackAttChange::mutable_value() {
  return &value_;
}

// repeated int32 state = 3;
inline int AttackAttChange::state_size() const {
  return state_.size();
}
inline void AttackAttChange::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int32 AttackAttChange::state(int index) const {
  return state_.Get(index);
}
inline void AttackAttChange::set_state(int index, ::google::protobuf::int32 value) {
  state_.Set(index, value);
}
inline void AttackAttChange::add_state(::google::protobuf::int32 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AttackAttChange::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AttackAttChange::mutable_state() {
  return &state_;
}

// -------------------------------------------------------------------

// ObjectState

// required int32 key = 1;
inline bool ObjectState::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectState::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectState::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectState::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 ObjectState::key() const {
  return key_;
}
inline void ObjectState::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// optional .CharBattle.AttackAttChange attr = 3;
inline bool ObjectState::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectState::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectState::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectState::clear_attr() {
  if (attr_ != NULL) attr_->::CharBattle::AttackAttChange::Clear();
  clear_has_attr();
}
inline const ::CharBattle::AttackAttChange& ObjectState::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::CharBattle::AttackAttChange* ObjectState::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::CharBattle::AttackAttChange;
  return attr_;
}
inline ::CharBattle::AttackAttChange* ObjectState::release_attr() {
  clear_has_attr();
  ::CharBattle::AttackAttChange* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void ObjectState::set_allocated_attr(::CharBattle::AttackAttChange* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// ClientReqRevival

// required int32 type = 1;
inline bool ClientReqRevival::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientReqRevival::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientReqRevival::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientReqRevival::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ClientReqRevival::type() const {
  return type_;
}
inline void ClientReqRevival::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GateReqRevival

// required int64 charid = 1;
inline bool GateReqRevival::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateReqRevival::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateReqRevival::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateReqRevival::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 GateReqRevival::charid() const {
  return charid_;
}
inline void GateReqRevival::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool GateReqRevival::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateReqRevival::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateReqRevival::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateReqRevival::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GateReqRevival::type() const {
  return type_;
}
inline void GateReqRevival::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RevivalData

// optional int64 mapid = 1;
inline bool RevivalData::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RevivalData::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RevivalData::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RevivalData::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 RevivalData::mapid() const {
  return mapid_;
}
inline void RevivalData::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 xpos = 2;
inline bool RevivalData::has_xpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RevivalData::set_has_xpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RevivalData::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RevivalData::clear_xpos() {
  xpos_ = 0;
  clear_has_xpos();
}
inline ::google::protobuf::int32 RevivalData::xpos() const {
  return xpos_;
}
inline void RevivalData::set_xpos(::google::protobuf::int32 value) {
  set_has_xpos();
  xpos_ = value;
}

// optional int32 ypos = 3;
inline bool RevivalData::has_ypos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RevivalData::set_has_ypos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RevivalData::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RevivalData::clear_ypos() {
  ypos_ = 0;
  clear_has_ypos();
}
inline ::google::protobuf::int32 RevivalData::ypos() const {
  return ypos_;
}
inline void RevivalData::set_ypos(::google::protobuf::int32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required int32 key = 4;
inline bool RevivalData::has_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RevivalData::set_has_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RevivalData::clear_has_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RevivalData::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 RevivalData::key() const {
  return key_;
}
inline void RevivalData::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// required int32 hp = 5;
inline bool RevivalData::has_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RevivalData::set_has_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RevivalData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RevivalData::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 RevivalData::hp() const {
  return hp_;
}
inline void RevivalData::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// required int32 mp = 6;
inline bool RevivalData::has_mp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RevivalData::set_has_mp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RevivalData::clear_has_mp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RevivalData::clear_mp() {
  mp_ = 0;
  clear_has_mp();
}
inline ::google::protobuf::int32 RevivalData::mp() const {
  return mp_;
}
inline void RevivalData::set_mp(::google::protobuf::int32 value) {
  set_has_mp();
  mp_ = value;
}

// optional int32 pkType = 7;
inline bool RevivalData::has_pktype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RevivalData::set_has_pktype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RevivalData::clear_has_pktype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RevivalData::clear_pktype() {
  pktype_ = 0;
  clear_has_pktype();
}
inline ::google::protobuf::int32 RevivalData::pktype() const {
  return pktype_;
}
inline void RevivalData::set_pktype(::google::protobuf::int32 value) {
  set_has_pktype();
  pktype_ = value;
}

// optional bool consumeflag = 8;
inline bool RevivalData::has_consumeflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RevivalData::set_has_consumeflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RevivalData::clear_has_consumeflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RevivalData::clear_consumeflag() {
  consumeflag_ = false;
  clear_has_consumeflag();
}
inline bool RevivalData::consumeflag() const {
  return consumeflag_;
}
inline void RevivalData::set_consumeflag(bool value) {
  set_has_consumeflag();
  consumeflag_ = value;
}

// -------------------------------------------------------------------

// ToGTRevival

// required int64 charid = 1;
inline bool ToGTRevival::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToGTRevival::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToGTRevival::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToGTRevival::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ToGTRevival::charid() const {
  return charid_;
}
inline void ToGTRevival::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// required .CharBattle.RevivalData req = 2;
inline bool ToGTRevival::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToGTRevival::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToGTRevival::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToGTRevival::clear_req() {
  if (req_ != NULL) req_->::CharBattle::RevivalData::Clear();
  clear_has_req();
}
inline const ::CharBattle::RevivalData& ToGTRevival::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::CharBattle::RevivalData* ToGTRevival::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::CharBattle::RevivalData;
  return req_;
}
inline ::CharBattle::RevivalData* ToGTRevival::release_req() {
  clear_has_req();
  ::CharBattle::RevivalData* temp = req_;
  req_ = NULL;
  return temp;
}
inline void ToGTRevival::set_allocated_req(::CharBattle::RevivalData* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// -------------------------------------------------------------------

// ChangePkType

// required int32 type = 1;
inline bool ChangePkType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangePkType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangePkType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangePkType::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ChangePkType::type() const {
  return type_;
}
inline void ChangePkType::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ReqGather

// required int32 monsterid = 1;
inline bool ReqGather::has_monsterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGather::set_has_monsterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGather::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGather::clear_monsterid() {
  monsterid_ = 0;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 ReqGather::monsterid() const {
  return monsterid_;
}
inline void ReqGather::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// -------------------------------------------------------------------

// RetGather

// required int32 dwerror = 1;
inline bool RetGather::has_dwerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetGather::set_has_dwerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetGather::clear_has_dwerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetGather::clear_dwerror() {
  dwerror_ = 0;
  clear_has_dwerror();
}
inline ::google::protobuf::int32 RetGather::dwerror() const {
  return dwerror_;
}
inline void RetGather::set_dwerror(::google::protobuf::int32 value) {
  set_has_dwerror();
  dwerror_ = value;
}

// -------------------------------------------------------------------

// DeadInfo

// required int32 type = 1;
inline bool DeadInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeadInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeadInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeadInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DeadInfo::type() const {
  return type_;
}
inline void DeadInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 id = 2;
inline bool DeadInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeadInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeadInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeadInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 DeadInfo::id() const {
  return id_;
}
inline void DeadInfo::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional bytes name = 3;
inline bool DeadInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeadInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeadInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeadInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DeadInfo::name() const {
  return *name_;
}
inline void DeadInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DeadInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DeadInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeadInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DeadInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DeadInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CharBattle

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharBattle_2fBattle_2eproto__INCLUDED
