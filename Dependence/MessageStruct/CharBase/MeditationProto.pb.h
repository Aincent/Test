// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharBase/MeditationProto.proto

#ifndef PROTOBUF_CharBase_2fMeditationProto_2eproto__INCLUDED
#define PROTOBUF_CharBase_2fMeditationProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CharBase/CharAttribute.pb.h"
// @@protoc_insertion_point(includes)

namespace MeditationProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

class ReqMeditation;
class RetMeditation;
class SingleMeditation;
class simMeditationInfo;
class ReqInvitMeditation;
class AckInvitMeditation;
class SendInvitInfo;
class ReqReplyMeditation;
class AckReplyMeditation;
class AckReqChangeMeditation;
class BroadcastMeditation;
class NexusChange;

// ===================================================================

class ReqMeditation : public ::google::protobuf::Message {
 public:
  ReqMeditation();
  virtual ~ReqMeditation();

  ReqMeditation(const ReqMeditation& from);

  inline ReqMeditation& operator=(const ReqMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMeditation& default_instance();

  void Swap(ReqMeditation* other);

  // implements Message ----------------------------------------------

  ReqMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMeditation& from);
  void MergeFrom(const ReqMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.ReqMeditation)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static ReqMeditation* default_instance_;
};
// -------------------------------------------------------------------

class RetMeditation : public ::google::protobuf::Message {
 public:
  RetMeditation();
  virtual ~RetMeditation();

  RetMeditation(const RetMeditation& from);

  inline RetMeditation& operator=(const RetMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetMeditation& default_instance();

  void Swap(RetMeditation* other);

  // implements Message ----------------------------------------------

  RetMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetMeditation& from);
  void MergeFrom(const RetMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 girlwarkey = 2;
  inline bool has_girlwarkey() const;
  inline void clear_girlwarkey();
  static const int kGirlwarkeyFieldNumber = 2;
  inline ::google::protobuf::int32 girlwarkey() const;
  inline void set_girlwarkey(::google::protobuf::int32 value);

  // optional bool flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:MeditationProto.RetMeditation)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_girlwarkey();
  inline void clear_has_girlwarkey();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 girlwarkey_;
  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static RetMeditation* default_instance_;
};
// -------------------------------------------------------------------

class SingleMeditation : public ::google::protobuf::Message {
 public:
  SingleMeditation();
  virtual ~SingleMeditation();

  SingleMeditation(const SingleMeditation& from);

  inline SingleMeditation& operator=(const SingleMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleMeditation& default_instance();

  void Swap(SingleMeditation* other);

  // implements Message ----------------------------------------------

  SingleMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleMeditation& from);
  void MergeFrom(const SingleMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 charkey = 1;
  inline bool has_charkey() const;
  inline void clear_charkey();
  static const int kCharkeyFieldNumber = 1;
  inline ::google::protobuf::int32 charkey() const;
  inline void set_charkey(::google::protobuf::int32 value);

  // optional int32 girlwarkey = 2;
  inline bool has_girlwarkey() const;
  inline void clear_girlwarkey();
  static const int kGirlwarkeyFieldNumber = 2;
  inline ::google::protobuf::int32 girlwarkey() const;
  inline void set_girlwarkey(::google::protobuf::int32 value);

  // optional bool flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline bool flag() const;
  inline void set_flag(bool value);

  // @@protoc_insertion_point(class_scope:MeditationProto.SingleMeditation)
 private:
  inline void set_has_charkey();
  inline void clear_has_charkey();
  inline void set_has_girlwarkey();
  inline void clear_has_girlwarkey();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 charkey_;
  ::google::protobuf::int32 girlwarkey_;
  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static SingleMeditation* default_instance_;
};
// -------------------------------------------------------------------

class simMeditationInfo : public ::google::protobuf::Message {
 public:
  simMeditationInfo();
  virtual ~simMeditationInfo();

  simMeditationInfo(const simMeditationInfo& from);

  inline simMeditationInfo& operator=(const simMeditationInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const simMeditationInfo& default_instance();

  void Swap(simMeditationInfo* other);

  // implements Message ----------------------------------------------

  simMeditationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const simMeditationInfo& from);
  void MergeFrom(const simMeditationInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 zhenqi = 2;
  inline bool has_zhenqi() const;
  inline void clear_zhenqi();
  static const int kZhenqiFieldNumber = 2;
  inline ::google::protobuf::int32 zhenqi() const;
  inline void set_zhenqi(::google::protobuf::int32 value);

  // optional int32 intimate = 3;
  inline bool has_intimate() const;
  inline void clear_intimate();
  static const int kIntimateFieldNumber = 3;
  inline ::google::protobuf::int32 intimate() const;
  inline void set_intimate(::google::protobuf::int32 value);

  // optional int32 rate = 4;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 4;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.simMeditationInfo)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_zhenqi();
  inline void clear_has_zhenqi();
  inline void set_has_intimate();
  inline void clear_has_intimate();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 zhenqi_;
  ::google::protobuf::int32 intimate_;
  ::google::protobuf::int32 rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static simMeditationInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqInvitMeditation : public ::google::protobuf::Message {
 public:
  ReqInvitMeditation();
  virtual ~ReqInvitMeditation();

  ReqInvitMeditation(const ReqInvitMeditation& from);

  inline ReqInvitMeditation& operator=(const ReqInvitMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqInvitMeditation& default_instance();

  void Swap(ReqInvitMeditation* other);

  // implements Message ----------------------------------------------

  ReqInvitMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqInvitMeditation& from);
  void MergeFrom(const ReqInvitMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 targetid = 1;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 1;
  inline ::google::protobuf::int64 targetid() const;
  inline void set_targetid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.ReqInvitMeditation)
 private:
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 targetid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static ReqInvitMeditation* default_instance_;
};
// -------------------------------------------------------------------

class AckInvitMeditation : public ::google::protobuf::Message {
 public:
  AckInvitMeditation();
  virtual ~AckInvitMeditation();

  AckInvitMeditation(const AckInvitMeditation& from);

  inline AckInvitMeditation& operator=(const AckInvitMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckInvitMeditation& default_instance();

  void Swap(AckInvitMeditation* other);

  // implements Message ----------------------------------------------

  AckInvitMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckInvitMeditation& from);
  void MergeFrom(const AckInvitMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int64 targetid = 2;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 2;
  inline ::google::protobuf::int64 targetid() const;
  inline void set_targetid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.AckInvitMeditation)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 targetid_;
  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static AckInvitMeditation* default_instance_;
};
// -------------------------------------------------------------------

class SendInvitInfo : public ::google::protobuf::Message {
 public:
  SendInvitInfo();
  virtual ~SendInvitInfo();

  SendInvitInfo(const SendInvitInfo& from);

  inline SendInvitInfo& operator=(const SendInvitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitInfo& default_instance();

  void Swap(SendInvitInfo* other);

  // implements Message ----------------------------------------------

  SendInvitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendInvitInfo& from);
  void MergeFrom(const SendInvitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // optional int32 viplevel = 2;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 2;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional bytes charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // @@protoc_insertion_point(class_scope:MeditationProto.SendInvitInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_charname();
  inline void clear_has_charname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  ::std::string* charname_;
  ::google::protobuf::int32 viplevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static SendInvitInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqReplyMeditation : public ::google::protobuf::Message {
 public:
  ReqReplyMeditation();
  virtual ~ReqReplyMeditation();

  ReqReplyMeditation(const ReqReplyMeditation& from);

  inline ReqReplyMeditation& operator=(const ReqReplyMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReplyMeditation& default_instance();

  void Swap(ReqReplyMeditation* other);

  // implements Message ----------------------------------------------

  ReqReplyMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReplyMeditation& from);
  void MergeFrom(const ReqReplyMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline bool flag() const;
  inline void set_flag(bool value);

  // optional int64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::int64 charid() const;
  inline void set_charid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.ReqReplyMeditation)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 charid_;
  bool flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static ReqReplyMeditation* default_instance_;
};
// -------------------------------------------------------------------

class AckReplyMeditation : public ::google::protobuf::Message {
 public:
  AckReplyMeditation();
  virtual ~AckReplyMeditation();

  AckReplyMeditation(const AckReplyMeditation& from);

  inline AckReplyMeditation& operator=(const AckReplyMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReplyMeditation& default_instance();

  void Swap(AckReplyMeditation* other);

  // implements Message ----------------------------------------------

  AckReplyMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReplyMeditation& from);
  void MergeFrom(const AckReplyMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.AckReplyMeditation)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static AckReplyMeditation* default_instance_;
};
// -------------------------------------------------------------------

class AckReqChangeMeditation : public ::google::protobuf::Message {
 public:
  AckReqChangeMeditation();
  virtual ~AckReqChangeMeditation();

  AckReqChangeMeditation(const AckReqChangeMeditation& from);

  inline AckReqChangeMeditation& operator=(const AckReqChangeMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqChangeMeditation& default_instance();

  void Swap(AckReqChangeMeditation* other);

  // implements Message ----------------------------------------------

  AckReqChangeMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqChangeMeditation& from);
  void MergeFrom(const AckReqChangeMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.AckReqChangeMeditation)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static AckReqChangeMeditation* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastMeditation : public ::google::protobuf::Message {
 public:
  BroadcastMeditation();
  virtual ~BroadcastMeditation();

  BroadcastMeditation(const BroadcastMeditation& from);

  inline BroadcastMeditation& operator=(const BroadcastMeditation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastMeditation& default_instance();

  void Swap(BroadcastMeditation* other);

  // implements Message ----------------------------------------------

  BroadcastMeditation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastMeditation& from);
  void MergeFrom(const BroadcastMeditation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 charkey = 1;
  inline bool has_charkey() const;
  inline void clear_charkey();
  static const int kCharkeyFieldNumber = 1;
  inline ::google::protobuf::int32 charkey() const;
  inline void set_charkey(::google::protobuf::int32 value);

  // optional int32 girlwarkey = 2;
  inline bool has_girlwarkey() const;
  inline void clear_girlwarkey();
  static const int kGirlwarkeyFieldNumber = 2;
  inline ::google::protobuf::int32 girlwarkey() const;
  inline void set_girlwarkey(::google::protobuf::int32 value);

  // optional int32 targetkey = 3;
  inline bool has_targetkey() const;
  inline void clear_targetkey();
  static const int kTargetkeyFieldNumber = 3;
  inline ::google::protobuf::int32 targetkey() const;
  inline void set_targetkey(::google::protobuf::int32 value);

  // optional int32 targetgirlwarkey = 4;
  inline bool has_targetgirlwarkey() const;
  inline void clear_targetgirlwarkey();
  static const int kTargetgirlwarkeyFieldNumber = 4;
  inline ::google::protobuf::int32 targetgirlwarkey() const;
  inline void set_targetgirlwarkey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.BroadcastMeditation)
 private:
  inline void set_has_charkey();
  inline void clear_has_charkey();
  inline void set_has_girlwarkey();
  inline void clear_has_girlwarkey();
  inline void set_has_targetkey();
  inline void clear_has_targetkey();
  inline void set_has_targetgirlwarkey();
  inline void clear_has_targetgirlwarkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 charkey_;
  ::google::protobuf::int32 girlwarkey_;
  ::google::protobuf::int32 targetkey_;
  ::google::protobuf::int32 targetgirlwarkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static BroadcastMeditation* default_instance_;
};
// -------------------------------------------------------------------

class NexusChange : public ::google::protobuf::Message {
 public:
  NexusChange();
  virtual ~NexusChange();

  NexusChange(const NexusChange& from);

  inline NexusChange& operator=(const NexusChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NexusChange& default_instance();

  void Swap(NexusChange* other);

  // implements Message ----------------------------------------------

  NexusChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NexusChange& from);
  void MergeFrom(const NexusChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 targetid = 1;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 1;
  inline ::google::protobuf::int64 targetid() const;
  inline void set_targetid(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MeditationProto.NexusChange)
 private:
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 targetid_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_AssignDesc_CharBase_2fMeditationProto_2eproto();
  friend void protobuf_ShutdownFile_CharBase_2fMeditationProto_2eproto();

  void InitAsDefaultInstance();
  static NexusChange* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqMeditation

// required int32 type = 1;
inline bool ReqMeditation::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMeditation::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMeditation::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMeditation::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqMeditation::type() const {
  return type_;
}
inline void ReqMeditation::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RetMeditation

// required int32 error = 1;
inline bool RetMeditation::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetMeditation::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetMeditation::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetMeditation::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 RetMeditation::error() const {
  return error_;
}
inline void RetMeditation::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 girlwarkey = 2;
inline bool RetMeditation::has_girlwarkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetMeditation::set_has_girlwarkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetMeditation::clear_has_girlwarkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetMeditation::clear_girlwarkey() {
  girlwarkey_ = 0;
  clear_has_girlwarkey();
}
inline ::google::protobuf::int32 RetMeditation::girlwarkey() const {
  return girlwarkey_;
}
inline void RetMeditation::set_girlwarkey(::google::protobuf::int32 value) {
  set_has_girlwarkey();
  girlwarkey_ = value;
}

// optional bool flag = 3;
inline bool RetMeditation::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetMeditation::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetMeditation::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetMeditation::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool RetMeditation::flag() const {
  return flag_;
}
inline void RetMeditation::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// SingleMeditation

// required int32 charkey = 1;
inline bool SingleMeditation::has_charkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleMeditation::set_has_charkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleMeditation::clear_has_charkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleMeditation::clear_charkey() {
  charkey_ = 0;
  clear_has_charkey();
}
inline ::google::protobuf::int32 SingleMeditation::charkey() const {
  return charkey_;
}
inline void SingleMeditation::set_charkey(::google::protobuf::int32 value) {
  set_has_charkey();
  charkey_ = value;
}

// optional int32 girlwarkey = 2;
inline bool SingleMeditation::has_girlwarkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleMeditation::set_has_girlwarkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleMeditation::clear_has_girlwarkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleMeditation::clear_girlwarkey() {
  girlwarkey_ = 0;
  clear_has_girlwarkey();
}
inline ::google::protobuf::int32 SingleMeditation::girlwarkey() const {
  return girlwarkey_;
}
inline void SingleMeditation::set_girlwarkey(::google::protobuf::int32 value) {
  set_has_girlwarkey();
  girlwarkey_ = value;
}

// optional bool flag = 3;
inline bool SingleMeditation::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleMeditation::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleMeditation::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleMeditation::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool SingleMeditation::flag() const {
  return flag_;
}
inline void SingleMeditation::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// simMeditationInfo

// required int32 exp = 1;
inline bool simMeditationInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void simMeditationInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void simMeditationInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void simMeditationInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 simMeditationInfo::exp() const {
  return exp_;
}
inline void simMeditationInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 zhenqi = 2;
inline bool simMeditationInfo::has_zhenqi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void simMeditationInfo::set_has_zhenqi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void simMeditationInfo::clear_has_zhenqi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void simMeditationInfo::clear_zhenqi() {
  zhenqi_ = 0;
  clear_has_zhenqi();
}
inline ::google::protobuf::int32 simMeditationInfo::zhenqi() const {
  return zhenqi_;
}
inline void simMeditationInfo::set_zhenqi(::google::protobuf::int32 value) {
  set_has_zhenqi();
  zhenqi_ = value;
}

// optional int32 intimate = 3;
inline bool simMeditationInfo::has_intimate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void simMeditationInfo::set_has_intimate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void simMeditationInfo::clear_has_intimate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void simMeditationInfo::clear_intimate() {
  intimate_ = 0;
  clear_has_intimate();
}
inline ::google::protobuf::int32 simMeditationInfo::intimate() const {
  return intimate_;
}
inline void simMeditationInfo::set_intimate(::google::protobuf::int32 value) {
  set_has_intimate();
  intimate_ = value;
}

// optional int32 rate = 4;
inline bool simMeditationInfo::has_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void simMeditationInfo::set_has_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void simMeditationInfo::clear_has_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void simMeditationInfo::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 simMeditationInfo::rate() const {
  return rate_;
}
inline void simMeditationInfo::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// -------------------------------------------------------------------

// ReqInvitMeditation

// required int64 targetid = 1;
inline bool ReqInvitMeditation::has_targetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqInvitMeditation::set_has_targetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqInvitMeditation::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqInvitMeditation::clear_targetid() {
  targetid_ = GOOGLE_LONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::int64 ReqInvitMeditation::targetid() const {
  return targetid_;
}
inline void ReqInvitMeditation::set_targetid(::google::protobuf::int64 value) {
  set_has_targetid();
  targetid_ = value;
}

// -------------------------------------------------------------------

// AckInvitMeditation

// required int32 code = 1;
inline bool AckInvitMeditation::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckInvitMeditation::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckInvitMeditation::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckInvitMeditation::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckInvitMeditation::code() const {
  return code_;
}
inline void AckInvitMeditation::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int64 targetid = 2;
inline bool AckInvitMeditation::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckInvitMeditation::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckInvitMeditation::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckInvitMeditation::clear_targetid() {
  targetid_ = GOOGLE_LONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::int64 AckInvitMeditation::targetid() const {
  return targetid_;
}
inline void AckInvitMeditation::set_targetid(::google::protobuf::int64 value) {
  set_has_targetid();
  targetid_ = value;
}

// -------------------------------------------------------------------

// SendInvitInfo

// required int64 charid = 1;
inline bool SendInvitInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendInvitInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendInvitInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendInvitInfo::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 SendInvitInfo::charid() const {
  return charid_;
}
inline void SendInvitInfo::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// optional int32 viplevel = 2;
inline bool SendInvitInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendInvitInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendInvitInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendInvitInfo::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 SendInvitInfo::viplevel() const {
  return viplevel_;
}
inline void SendInvitInfo::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional bytes charname = 3;
inline bool SendInvitInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendInvitInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendInvitInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendInvitInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& SendInvitInfo::charname() const {
  return *charname_;
}
inline void SendInvitInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void SendInvitInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void SendInvitInfo::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendInvitInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    charname_ = new ::std::string;
  }
  return charname_;
}
inline ::std::string* SendInvitInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendInvitInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::kEmptyString) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ReqReplyMeditation

// required bool flag = 1;
inline bool ReqReplyMeditation::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqReplyMeditation::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqReplyMeditation::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqReplyMeditation::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool ReqReplyMeditation::flag() const {
  return flag_;
}
inline void ReqReplyMeditation::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// optional int64 charid = 2;
inline bool ReqReplyMeditation::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqReplyMeditation::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqReplyMeditation::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqReplyMeditation::clear_charid() {
  charid_ = GOOGLE_LONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::int64 ReqReplyMeditation::charid() const {
  return charid_;
}
inline void ReqReplyMeditation::set_charid(::google::protobuf::int64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// AckReplyMeditation

// required int32 code = 1;
inline bool AckReplyMeditation::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReplyMeditation::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReplyMeditation::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReplyMeditation::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckReplyMeditation::code() const {
  return code_;
}
inline void AckReplyMeditation::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// AckReqChangeMeditation

// required int32 code = 1;
inline bool AckReqChangeMeditation::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqChangeMeditation::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqChangeMeditation::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqChangeMeditation::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 AckReqChangeMeditation::code() const {
  return code_;
}
inline void AckReqChangeMeditation::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// BroadcastMeditation

// required int32 charkey = 1;
inline bool BroadcastMeditation::has_charkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastMeditation::set_has_charkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastMeditation::clear_has_charkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastMeditation::clear_charkey() {
  charkey_ = 0;
  clear_has_charkey();
}
inline ::google::protobuf::int32 BroadcastMeditation::charkey() const {
  return charkey_;
}
inline void BroadcastMeditation::set_charkey(::google::protobuf::int32 value) {
  set_has_charkey();
  charkey_ = value;
}

// optional int32 girlwarkey = 2;
inline bool BroadcastMeditation::has_girlwarkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastMeditation::set_has_girlwarkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastMeditation::clear_has_girlwarkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastMeditation::clear_girlwarkey() {
  girlwarkey_ = 0;
  clear_has_girlwarkey();
}
inline ::google::protobuf::int32 BroadcastMeditation::girlwarkey() const {
  return girlwarkey_;
}
inline void BroadcastMeditation::set_girlwarkey(::google::protobuf::int32 value) {
  set_has_girlwarkey();
  girlwarkey_ = value;
}

// optional int32 targetkey = 3;
inline bool BroadcastMeditation::has_targetkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastMeditation::set_has_targetkey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastMeditation::clear_has_targetkey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastMeditation::clear_targetkey() {
  targetkey_ = 0;
  clear_has_targetkey();
}
inline ::google::protobuf::int32 BroadcastMeditation::targetkey() const {
  return targetkey_;
}
inline void BroadcastMeditation::set_targetkey(::google::protobuf::int32 value) {
  set_has_targetkey();
  targetkey_ = value;
}

// optional int32 targetgirlwarkey = 4;
inline bool BroadcastMeditation::has_targetgirlwarkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastMeditation::set_has_targetgirlwarkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastMeditation::clear_has_targetgirlwarkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastMeditation::clear_targetgirlwarkey() {
  targetgirlwarkey_ = 0;
  clear_has_targetgirlwarkey();
}
inline ::google::protobuf::int32 BroadcastMeditation::targetgirlwarkey() const {
  return targetgirlwarkey_;
}
inline void BroadcastMeditation::set_targetgirlwarkey(::google::protobuf::int32 value) {
  set_has_targetgirlwarkey();
  targetgirlwarkey_ = value;
}

// -------------------------------------------------------------------

// NexusChange

// required int64 targetid = 1;
inline bool NexusChange::has_targetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NexusChange::set_has_targetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NexusChange::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NexusChange::clear_targetid() {
  targetid_ = GOOGLE_LONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::int64 NexusChange::targetid() const {
  return targetid_;
}
inline void NexusChange::set_targetid(::google::protobuf::int64 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional int32 type = 2;
inline bool NexusChange::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NexusChange::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NexusChange::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NexusChange::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NexusChange::type() const {
  return type_;
}
inline void NexusChange::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MeditationProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharBase_2fMeditationProto_2eproto__INCLUDED
